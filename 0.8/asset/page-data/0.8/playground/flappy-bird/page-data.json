{"componentChunkName":"component---src-templates-playground-tsx","path":"/0.8/playground/flappy-bird","result":{"pageContext":{"node":{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@tweenjs/tween.js\", \"@oasis-engine/physics-lite\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@tweenjs/tween.js\"), require(\"@oasis-engine/physics-lite\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global.TWEEN, global[\"@oasisEngine/physicsLite\"]);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, TWEEN, _physicsLite) {\n  \"use strict\";\n\n  TWEEN = _interopRequireWildcard(TWEEN);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  var EnumBirdState;\n\n  (function (EnumBirdState) {\n    EnumBirdState[EnumBirdState[\"Alive\"] = 0] = \"Alive\";\n    EnumBirdState[EnumBirdState[\"Dead\"] = 1] = \"Dead\";\n  })(EnumBirdState || (EnumBirdState = {}));\n\n  var EnumGameState;\n  /** The y coordinate of the ground collision detection. */\n\n  (function (EnumGameState) {\n    EnumGameState[EnumGameState[\"Idel\"] = 0] = \"Idel\";\n    EnumGameState[EnumGameState[\"Start\"] = 1] = \"Start\";\n    EnumGameState[EnumGameState[\"End\"] = 2] = \"End\";\n  })(EnumGameState || (EnumGameState = {}));\n\n  var groundY = -3.1;\n  var GameEvent = {\n    fly: \"fly\",\n    stateChange: \"stateChange\",\n    showGui: \"showGui\",\n    checkHitGui: \"checkHitGui\",\n    checkHit: \"checkHit\",\n    gameOver: \"gameOver\",\n    addScore: \"addScore\",\n    reStartGame: \"reStartGame\"\n  };\n  var gameResArray; // We can customize the size of the interface that is finally presented to the player.\n\n  var designWidth = 768;\n  var designHeight = 896;\n  var aspectRatio = designWidth / designHeight;\n  var canvas = document.getElementById(\"canvas\");\n  var parentEle = canvas.parentElement;\n  var clientWidth = parentEle.clientWidth,\n      clientHeight = parentEle.clientHeight;\n\n  if (clientWidth / clientHeight > aspectRatio) {\n    clientWidth = clientHeight * aspectRatio;\n    canvas.style.width = clientWidth + \"px\";\n    canvas.style.marginLeft = (parentEle.clientWidth - clientWidth) / 2 + \"px\";\n  } else {\n    clientHeight = clientWidth / aspectRatio;\n    canvas.style.height = clientHeight + \"px\";\n    canvas.style.marginTop = (parentEle.clientHeight - clientHeight) / 2 + \"px\";\n  } // Create engine object.\n\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.physicsManager.initialize(_physicsLite.LitePhysics);\n  engine.canvas.resizeByClientSize(designHeight / clientHeight);\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // Create camera.\n\n  var cameraEntity = rootEntity.createChild(\"camera\");\n  cameraEntity.transform.setPosition(0.3, 0, 5);\n  var camera = cameraEntity.addComponent(_oasisEngine.Camera); // 2D is more suitable for orthographic cameras.\n\n  camera.isOrthographic = true;\n  camera.orthographicSize = engine.canvas.height / _oasisEngine.Engine._pixelsPerUnit / 2; // Load the resources needed by the game.\n\n  engine.resourceManager.load([{\n    // Background.\n    url: \"https://gw.alipayobjects.com/zos/OasisHub/315000157/5244/background.png\",\n    type: _oasisEngine.AssetType.Texture2D\n  }, {\n    // Pipe.\n    url: \"https://gw.alipayobjects.com/zos/OasisHub/315000157/5987/pipe.png\",\n    type: _oasisEngine.AssetType.Texture2D\n  }, {\n    // Ground.\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Sj7OS4YJHDIAAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }, {\n    // Bird.\n    url: \"https://gw.alipayobjects.com/zos/OasisHub/315000157/8356/bird.png\",\n    type: _oasisEngine.AssetType.Texture2D\n  }, {\n    // Restart.\n    url: \"https://gw.alipayobjects.com/zos/OasisHub/315000157/6695/restart.png\",\n    type: _oasisEngine.AssetType.Texture2D\n  }, {\n    // Number.\n    url: \"https://gw.alipayobjects.com/zos/OasisHub/315000157/8709/527-number.png\",\n    type: _oasisEngine.AssetType.Texture2D\n  }]).then(function (texture2DArr) {\n    // Record the resources.\n    gameResArray = texture2DArr; // Initialize location information and component information.\n    // Background.\n\n    var nodeBg = rootEntity.createChild(\"nodeBg\");\n    nodeBg.transform.setPosition(0.3, 0, -10);\n    nodeBg.addComponent(_oasisEngine.SpriteRenderer).sprite = new _oasisEngine.Sprite(engine, texture2DArr[0]); // Pipe.\n\n    var nodePipe = rootEntity.createChild(\"nodePipe\");\n    nodePipe.transform.setPosition(0, 0, -3);\n    nodePipe.addComponent(ScriptPipe); // Ground.\n\n    var nodeGround = rootEntity.createChild(\"nodeGround\");\n    nodeGround.transform.setPosition(0.3, -4.125, -2);\n    nodeGround.transform.setRotation(90, 0, 0);\n    var groundRenderer = nodeGround.addComponent(_oasisEngine.MeshRenderer);\n    groundRenderer.mesh = _oasisEngine.PrimitiveMesh.createPlane(engine, 7.68, 1.28);\n    var groundMaterial = new _oasisEngine.UnlitMaterial(engine);\n    groundRenderer.setMaterial(groundMaterial);\n    groundMaterial.baseTexture = texture2DArr[2];\n    groundMaterial.tilingOffset.set(21, 1, 0, 0);\n    nodeGround.addComponent(ScriptGround); // Bird.\n\n    var nodeBird = rootEntity.createChild(\"nodeBird\");\n    nodeBird.transform.setPosition(-1, 1.15, 0);\n    nodeBird.addComponent(_oasisEngine.SpriteRenderer).sprite = new _oasisEngine.Sprite(engine, texture2DArr[3]);\n    nodeBird.addComponent(ScriptBird); // Death Effect.\n\n    var nodeDeathEff = rootEntity.createChild(\"nodeEff\");\n    nodeDeathEff.transform.setPosition(0, 0, -1);\n    nodeDeathEff.transform.setRotation(90, 0, 0);\n    var effRenderer = nodeDeathEff.addComponent(_oasisEngine.MeshRenderer);\n    effRenderer.mesh = _oasisEngine.PrimitiveMesh.createPlane(engine, 20, 20);\n    var material = new _oasisEngine.UnlitMaterial(engine);\n    effRenderer.setMaterial(material); // Can be transparent.\n\n    material.isTransparent = true;\n    material.baseColor.set(0, 0, 0, 0);\n    nodeDeathEff.addComponent(ScriptDeathEff); // GUI.\n\n    var nodeGui = rootEntity.createChild(\"nodeGui\");\n    nodeGui.transform.setPosition(0.3, 0, 1); // Restart.\n\n    var nodeRestart = nodeGui.createChild(\"nodeRestart\");\n    nodeRestart.addComponent(_oasisEngine.SpriteRenderer).sprite = new _oasisEngine.Sprite(engine, texture2DArr[4]); // Score.\n\n    var nodeScore = nodeGui.createChild(\"nodeScore\");\n    nodeScore.transform.setPosition(0, 3.2, 0);\n    nodeScore.transform.setScale(0.3, 0.3, 0.3);\n    nodeScore.addComponent(ScriptScore);\n    nodeGui.addComponent(ScriptGUI); // GameCtrl controls the global game.\n\n    rootEntity.addComponent(GameCtrl);\n  });\n  engine.run();\n\n  var ScriptPipe = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(ScriptPipe, _Script);\n\n    function ScriptPipe() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _Script.call.apply(_Script, [this].concat(args)) || this;\n      _this._originPipe = void 0;\n      _this._nowPipeArr = [];\n      _this._pipePool = [];\n      _this._curStartTimeStamp = void 0;\n      _this._pipeHideX = 4.6;\n      _this._pipeVerticalDis = 10.8;\n      _this._pipeHorizontalDis = 4;\n      _this._pipeRandomPosY = 3.5;\n      _this._pipeDebutTime = 3000;\n      _this._pipeHorizontalV = 0.003;\n      return _this;\n    }\n\n    var _proto = ScriptPipe.prototype;\n\n    _proto.onAwake = function onAwake() {\n      var _this2 = this;\n\n      // Init originPipe.\n      var pipe = this._originPipe = new _oasisEngine.Entity(engine);\n      var node1 = pipe.createChild(\"node1\");\n      var node2 = pipe.createChild(\"node2\");\n      var verticalDis = this._pipeVerticalDis;\n      node1.transform.setPosition(0, -verticalDis / 2, 0);\n      node2.transform.setPosition(0, verticalDis / 2, 0);\n      node2.transform.setScale(1, -1, 1);\n      node1.addComponent(_oasisEngine.SpriteRenderer).sprite = new _oasisEngine.Sprite(engine, gameResArray[1]);\n      node2.addComponent(_oasisEngine.SpriteRenderer).sprite = new _oasisEngine.Sprite(engine, gameResArray[1]);\n\n      this._pipePool.push(pipe); // Control the performance of the pipe according to the change of the game state.\n\n\n      engine.on(GameEvent.stateChange, function (gameState) {\n        switch (gameState) {\n          case EnumGameState.Idel:\n            _this2.enabled = false;\n\n            _this2._destroyPipe();\n\n            break;\n\n          case EnumGameState.Start:\n            _this2.enabled = true;\n            _this2._curStartTimeStamp = engine.time.nowTime;\n            break;\n\n          case EnumGameState.End:\n            _this2.enabled = false;\n            break;\n        }\n      }); // When checkHit is monitored, check the collision between the pipe and the bird.\n\n      engine.on(GameEvent.checkHit, function (birdY) {\n        var len = _this2._nowPipeArr.length;\n\n        for (var i = 0; i < len; i++) {\n          var pipePos = _this2._nowPipeArr[i].transform.position;\n\n          if (Math.abs(pipePos.x) < 0.9) {\n            if (Math.abs(pipePos.y - birdY) > 1.2) {\n              engine.dispatch(GameEvent.gameOver);\n            }\n\n            break;\n          }\n        }\n      });\n    }\n    /**\n     * Three things will be done here every frame：\n     *    1.Adjust the generation of the pipe.\n     *    2.Adjust the position of the pipe.\n     *    3.Judge whether to get a point.\n     * @param deltaTime - The deltaTime when the script update\n     */\n    ;\n\n    _proto.onUpdate = function onUpdate(deltaTime) {\n      var debutTime = this._pipeDebutTime; // The water pipe will be displayed after the start of the game pipeDebutTime.\n\n      if (engine.time.nowTime - this._curStartTimeStamp >= debutTime) {\n        var bAddScore = false; // After deltaTime, the distance the pipe has moved.\n\n        var changeVal = deltaTime * this._pipeHorizontalV;\n        var pipeLen = this._nowPipeArr.length;\n        var horizontalDis = this._pipeHorizontalDis,\n            randomPosY = this._pipeRandomPosY,\n            hideX = this._pipeHideX; // Adjust the position of all pipes.\n\n        if (pipeLen > 0) {\n          for (var i = pipeLen - 1; i >= 0; i--) {\n            var pipe = this._nowPipeArr[i];\n            var pipeTrans = pipe.transform;\n            var pipePos = pipeTrans.position;\n\n            if (pipePos.x < -hideX) {\n              // The invisible pipe can be destroyed.\n              this._destroyPipe(i);\n            } else {\n              if (!bAddScore && pipePos.x > -1 && pipePos.x - changeVal <= -1) {\n                // Get a point.\n                engine.dispatch(GameEvent.addScore);\n                bAddScore = true;\n              }\n\n              pipeTrans.setPosition(pipePos.x - changeVal, pipePos.y, pipePos.z);\n            } // Judge whether the pipe needs to be regenerated according to the X coordinate.\n\n\n            if (i == pipeLen - 1 && pipePos.x <= hideX - horizontalDis) {\n              this._createPipe(hideX, randomPosY * Math.random() - randomPosY / 2 + 0.8, 0);\n            }\n          }\n        } else {\n          // Need to regenerate a pipe.\n          this._createPipe(hideX, randomPosY * Math.random() - randomPosY / 2 + 0.8, 0);\n        }\n      }\n    };\n\n    _proto._createPipe = function _createPipe(posX, posY, posZ) {\n      var pipePool = this._pipePool;\n      var pipe = pipePool.length > 0 ? pipePool.pop() : this._originPipe.clone();\n      pipe.transform.setPosition(posX, posY, posZ);\n      this.entity.addChild(pipe);\n\n      this._nowPipeArr.push(pipe);\n    }\n    /**\n     * It’s not really destroyed, we just put it in the pool.\n     * @param pipeIndex - If pipeIndex is less than 0, we recycle all pipes\n     */\n    ;\n\n    _proto._destroyPipe = function _destroyPipe(pipeIndex) {\n      if (pipeIndex === void 0) {\n        pipeIndex = -1;\n      }\n\n      var entity = this.entity,\n          _pipePool = this._pipePool,\n          _nowPipeArr = this._nowPipeArr;\n\n      var removePipe = function removePipe(pipe) {\n        entity.removeChild(pipe);\n\n        _pipePool.push(pipe);\n      };\n\n      if (pipeIndex >= 0) {\n        removePipe(_nowPipeArr[pipeIndex]);\n\n        _nowPipeArr.splice(pipeIndex, 1);\n      } else {\n        for (var index = _nowPipeArr.length - 1; index >= 0; index--) {\n          removePipe(_nowPipeArr[index]);\n        }\n\n        _nowPipeArr.length = 0;\n      }\n    };\n\n    return ScriptPipe;\n  }(_oasisEngine.Script);\n\n  var ScriptScore = /*#__PURE__*/function (_Script2) {\n    _inheritsLoose(ScriptScore, _Script2);\n\n    function ScriptScore() {\n      var _this3;\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this3 = _Script2.call.apply(_Script2, [this].concat(args)) || this;\n      _this3._spriteArray = [];\n      _this3._numInv = 2;\n      _this3._scoreEntitys = [];\n      _this3._scoreRenderer = [];\n      _this3._myScore = 0;\n      return _this3;\n    }\n\n    var _proto2 = ScriptScore.prototype;\n\n    _proto2.onAwake = function onAwake() {\n      var _this4 = this;\n\n      // Init spriteArray.\n      var spriteArray = this._spriteArray; // Cut digital resources into ten.\n\n      for (var i = 0; i < 10; i++) {\n        spriteArray.push(new _oasisEngine.Sprite(engine, gameResArray[5], new _oasisEngine.Rect(i * 0.1, 0, 0.1, 1)));\n      }\n\n      engine.on(GameEvent.addScore, function () {\n        ++_this4._myScore;\n\n        _this4._showScore(\"\" + _this4._myScore);\n      }); // Control the performance of the score according to the change of the game state.\n\n      engine.on(GameEvent.stateChange, function (gameState) {\n        switch (gameState) {\n          case EnumGameState.Idel:\n            _this4.entity.isActive = false;\n            break;\n\n          case EnumGameState.Start:\n            _this4.entity.isActive = true;\n            _this4._myScore = 0;\n\n            _this4._showScore(\"0\");\n\n            break;\n\n          case EnumGameState.End:\n            break;\n        }\n      });\n    };\n\n    _proto2._showScore = function _showScore(scoreNumStr) {\n      var scoreLen = scoreNumStr.length;\n      var entity = this.entity,\n          inv = this._numInv,\n          scoreEntitys = this._scoreEntitys,\n          spriteArray = this._spriteArray,\n          scoreRenderers = this._scoreRenderer;\n      var nowEntityLen = scoreEntitys.length;\n      var scoreEntity;\n      var scoreRenderer; // If the entity is not enough, new one.\n\n      if (scoreLen > nowEntityLen) {\n        for (var i = nowEntityLen; i < scoreLen; i++) {\n          scoreEntity = new _oasisEngine.Entity(engine);\n          scoreRenderer = scoreEntity.addComponent(_oasisEngine.SpriteRenderer);\n          scoreRenderers.push(scoreRenderer);\n          scoreEntitys.push(scoreEntity);\n          entity.addChild(scoreEntity);\n        }\n      } // At the moment nowEntityLen >= scoreLen.\n\n\n      nowEntityLen = scoreEntitys.length;\n      var startX = (1 - scoreLen) * inv / 2;\n\n      for (var _i = 0; _i < nowEntityLen; _i++) {\n        scoreEntity = scoreEntitys[_i];\n\n        if (_i >= scoreLen) {\n          scoreEntity.isActive = false;\n        } else {\n          scoreEntity.isActive = true;\n          scoreEntity.transform.setPosition(startX + _i * inv, 0, 0);\n          scoreRenderers[_i].sprite = spriteArray[parseInt(scoreNumStr[_i])];\n        }\n      }\n    };\n\n    return ScriptScore;\n  }(_oasisEngine.Script);\n\n  var ScriptGround = /*#__PURE__*/function (_Script3) {\n    _inheritsLoose(ScriptGround, _Script3);\n\n    function ScriptGround() {\n      var _this5;\n\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      _this5 = _Script3.call.apply(_Script3, [this].concat(args)) || this;\n      _this5._groundMaterial = void 0;\n      _this5._groundHorizontalV = 0.0082;\n      return _this5;\n    }\n\n    var _proto3 = ScriptGround.prototype;\n\n    _proto3.onAwake = function onAwake() {\n      var _this6 = this;\n\n      this._groundMaterial = this.entity.getComponent(_oasisEngine.MeshRenderer).getMaterial(); // Control the performance of the ground according to the change of the game state.\n\n      engine.on(GameEvent.stateChange, function (gameState) {\n        switch (gameState) {\n          case EnumGameState.Idel:\n          case EnumGameState.Start:\n            _this6.enabled = true;\n            break;\n\n          case EnumGameState.End:\n            _this6.enabled = false;\n            break;\n\n          default:\n            break;\n        }\n      }); // When checkHit is monitored, check the collision between the ground and the bird.\n\n      engine.on(GameEvent.checkHit, function (birdY) {\n        birdY < groundY && engine.dispatch(GameEvent.gameOver);\n      });\n    };\n\n    _proto3.onUpdate = function onUpdate(deltaTime) {\n      // After deltaTime, the distance the ground has moved.\n      this._groundMaterial.tilingOffset.z += deltaTime * this._groundHorizontalV;\n    };\n\n    return ScriptGround;\n  }(_oasisEngine.Script);\n\n  var GameCtrl = /*#__PURE__*/function (_Script4) {\n    _inheritsLoose(GameCtrl, _Script4);\n\n    function GameCtrl() {\n      var _this7;\n\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      _this7 = _Script4.call.apply(_Script4, [this].concat(args)) || this;\n      _this7._gameState = void 0;\n      return _this7;\n    }\n\n    var _proto4 = GameCtrl.prototype;\n\n    _proto4.onAwake = function onAwake() {\n      var _this8 = this;\n\n      engine.on(GameEvent.reStartGame, function () {\n        _this8._setGameState(EnumGameState.Idel);\n      });\n      engine.on(GameEvent.gameOver, function () {\n        _this8._setGameState(EnumGameState.End);\n      });\n      var boxCollider = this.entity.addComponent(_oasisEngine.StaticCollider);\n      var boxColliderShape = new _oasisEngine.BoxColliderShape();\n      boxColliderShape.setSize(10, 10, 0.001);\n      boxCollider.addShape(boxColliderShape);\n    };\n\n    _proto4.onStart = function onStart() {\n      // Give a state at the beginning.\n      this._setGameState(EnumGameState.Idel);\n    };\n\n    _proto4.onUpdate = function onUpdate() {\n      // Update TWEEN.\n      TWEEN.update();\n\n      if (this.engine.inputManager.isKeyDown(_oasisEngine.Keys.Space)) {\n        this._dispatchFly();\n      }\n    };\n\n    _proto4.onPointerDown = function onPointerDown() {\n      this._dispatchFly();\n    };\n\n    _proto4._dispatchFly = function _dispatchFly() {\n      switch (this._gameState) {\n        case EnumGameState.Idel:\n          this._setGameState(EnumGameState.Start);\n\n          engine.dispatch(GameEvent.fly);\n          break;\n\n        case EnumGameState.Start:\n          engine.dispatch(GameEvent.fly);\n          break;\n\n        default:\n          break;\n      }\n    }\n    /**\n     * The status will be distributed to all objects in the game.\n     * @param state - EnumGameState\n     */\n    ;\n\n    _proto4._setGameState = function _setGameState(state) {\n      if (this._gameState != state) {\n        this._gameState = state;\n        engine.dispatch(GameEvent.stateChange, state);\n      }\n    };\n\n    return GameCtrl;\n  }(_oasisEngine.Script);\n\n  var ScriptGUI = /*#__PURE__*/function (_Script5) {\n    _inheritsLoose(ScriptGUI, _Script5);\n\n    function ScriptGUI() {\n      return _Script5.apply(this, arguments) || this;\n    }\n\n    var _proto5 = ScriptGUI.prototype;\n\n    _proto5.onAwake = function onAwake() {\n      var _this9 = this;\n\n      var entity = this.entity;\n      var resetBtnNode = entity.findByName(\"nodeRestart\"); // Add BoxCollider.\n\n      var boxCollider = resetBtnNode.addComponent(_oasisEngine.StaticCollider);\n      var boxColliderShape = new _oasisEngine.BoxColliderShape();\n      boxColliderShape.setSize(2.14, 0.75, 0.001);\n      boxCollider.addShape(boxColliderShape);\n\n      resetBtnNode.addComponent(_oasisEngine.Script).onPointerClick = function () {\n        _this9.engine.dispatch(GameEvent.reStartGame);\n      }; // Control the performance of the GUI according to the change of the game state.\n\n\n      engine.on(GameEvent.stateChange, function (gameState) {\n        switch (gameState) {\n          case EnumGameState.Idel:\n          case EnumGameState.Start:\n            resetBtnNode.isActive = false;\n            break;\n\n          case EnumGameState.End:\n            break;\n\n          default:\n            break;\n        }\n      });\n      engine.on(GameEvent.showGui, function () {\n        resetBtnNode.isActive = true;\n      });\n    };\n\n    return ScriptGUI;\n  }(_oasisEngine.Script);\n\n  var ScriptBird = /*#__PURE__*/function (_Script6) {\n    _inheritsLoose(ScriptBird, _Script6);\n\n    function ScriptBird() {\n      var _this10;\n\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      _this10 = _Script6.call.apply(_Script6, [this].concat(args)) || this;\n      _this10._regions = [new _oasisEngine.Vector2(0, 0), new _oasisEngine.Vector2(1 / 3, 0), new _oasisEngine.Vector2(2 / 3, 0)];\n      _this10._reciprocalSliceWidth = 1 / 3;\n      _this10._reciprocalSliceHeight = 1;\n      _this10._frameInterval = 150;\n      _this10._totalFrames = 3;\n      _this10._maxDropV = -8;\n      _this10._gravity = -35;\n      _this10._startFlyV = 10;\n      _this10._cumulativeTime = 0;\n      _this10._birdState = EnumBirdState.Alive;\n      _this10._sprite = void 0;\n      _this10._curFrameIndex = void 0;\n      _this10._startY = void 0;\n      _this10._flyStartTime = void 0;\n      _this10._gameState = void 0;\n      _this10._yoyoTween = void 0;\n      _this10._dropTween = void 0;\n      return _this10;\n    }\n\n    var _proto6 = ScriptBird.prototype;\n\n    _proto6.onAwake = function onAwake() {\n      this._initDataAndUI();\n\n      this._initTween();\n\n      this._initListener();\n    };\n\n    _proto6.onUpdate = function onUpdate(deltaTime) {\n      // Update the performance of the bird.\n      switch (this._birdState) {\n        case EnumBirdState.Alive:\n          var _frameInterval = this._frameInterval,\n              _totalFrames = this._totalFrames;\n          this._cumulativeTime += deltaTime;\n\n          if (this._cumulativeTime >= _frameInterval) {\n            // Need update frameIndex.\n            var addFrameCount = Math.floor(this._cumulativeTime / _frameInterval);\n            this._cumulativeTime -= addFrameCount * _frameInterval;\n\n            this._setFrameIndex((this._curFrameIndex + addFrameCount) % _totalFrames);\n          } // Update bird's location information.\n\n\n          if (this._gameState == EnumGameState.Start) {\n            // Free fall and uniform motion are superimposed to obtain the current position.\n            var endY;\n            var _maxDropV = this._maxDropV,\n                _startFlyV = this._startFlyV,\n                _gravity = this._gravity;\n            var transform = this.entity.transform;\n            var position = transform.position; // How much time has passed.\n\n            var subTime = (engine.time.nowTime - this._flyStartTime) / 1000; // How long has it been in free fall.\n\n            var addToMaxUseTime = (_maxDropV - _startFlyV) / _gravity;\n\n            if (subTime <= addToMaxUseTime) {\n              // Free fall.\n              endY = (_startFlyV + (_startFlyV + subTime * _gravity)) * subTime / 2 + this._startY;\n            } else {\n              // Falling at a constant speed.\n              endY = (_maxDropV + _startFlyV) * addToMaxUseTime / 2 + _maxDropV * (subTime - addToMaxUseTime) + this._startY;\n            }\n\n            transform.setPosition(position.x, endY, position.z);\n          }\n\n          break;\n\n        case EnumBirdState.Dead:\n          this._setFrameIndex(0);\n\n          break;\n      }\n    };\n\n    _proto6.onLateUpdate = function onLateUpdate() {\n      // After updating the position, check the collision.\n      engine.dispatch(GameEvent.checkHit, this.entity.transform.position.y);\n    };\n\n    _proto6._initDataAndUI = function _initDataAndUI() {\n      var entity = this.entity;\n      var renderer = entity.getComponent(_oasisEngine.SpriteRenderer);\n      renderer.sprite = this._sprite = new _oasisEngine.Sprite(engine, gameResArray[3]);\n\n      this._setFrameIndex(0);\n    };\n\n    _proto6._initTween = function _initTween() {\n      var transform = this.entity.transform;\n      var rotation = transform.rotation;\n      var position = transform.position;\n      this._yoyoTween = new TWEEN.Tween(position).to({\n        y: 0.25\n      }, 380).repeat(Infinity).onUpdate(function (target) {\n        transform.position = target;\n      }).yoyo(true).easing(TWEEN.Easing.Sinusoidal.InOut);\n      this._dropTween = new TWEEN.Tween(rotation).to({\n        z: -90\n      }, 380).onUpdate(function (target) {\n        transform.rotation = target;\n      }).delay(520);\n    };\n\n    _proto6._initListener = function _initListener() {\n      var _this11 = this;\n\n      var transform = this.entity.transform;\n      engine.on(GameEvent.fly, function () {\n        // Record start time and location.\n        _this11._startY = transform.position.y;\n        _this11._flyStartTime = engine.time.nowTime; // Flying performance.\n\n        _this11._yoyoTween.stop();\n\n        _this11._dropTween.stop();\n\n        transform.setRotation(transform.rotation.x, transform.rotation.y, 20);\n\n        _this11._dropTween.start();\n      }); // Control the performance of the bird according to the change of the game state.\n\n      engine.on(GameEvent.stateChange, function (gameState) {\n        _this11._gameState = gameState;\n\n        switch (gameState) {\n          case EnumGameState.Idel:\n            transform.setPosition(0, 0, 0);\n            transform.rotation = new _oasisEngine.Vector3(0, 0, 0);\n            _this11._birdState = EnumBirdState.Alive;\n\n            _this11._yoyoTween.start();\n\n            break;\n\n          case EnumGameState.Start:\n            break;\n\n          case EnumGameState.End:\n            _this11._birdState = EnumBirdState.Dead;\n            setTimeout(function () {\n              var position = transform.position,\n                  rotation = transform.rotation;\n              var birdPosY = position.y;\n\n              if (birdPosY > groundY) {\n                _this11._yoyoTween.stop();\n\n                _this11._dropTween.stop();\n\n                new TWEEN.Tween(rotation).duration((birdPosY - groundY) * 40).to({\n                  z: -90\n                }).onUpdate(function (target) {\n                  transform.rotation = target;\n                }).start();\n                new TWEEN.Tween(position).duration((birdPosY - groundY) * 120).to({\n                  y: groundY\n                }).onUpdate(function (target) {\n                  transform.position = target;\n                }).onComplete(function () {\n                  engine.dispatch(GameEvent.showGui);\n                }).start();\n              } else {\n                engine.dispatch(GameEvent.showGui);\n              }\n            }, 300);\n            break;\n        }\n      });\n    };\n\n    _proto6._setFrameIndex = function _setFrameIndex(frameIndex) {\n      if (this._curFrameIndex !== frameIndex) {\n        this._curFrameIndex = frameIndex;\n        var frameInfo = this._regions[frameIndex];\n        var region = this._sprite.region;\n        region.set(frameInfo.x, frameInfo.y, this._reciprocalSliceWidth, this._reciprocalSliceHeight);\n        this._sprite.region = region;\n      }\n    };\n\n    return ScriptBird;\n  }(_oasisEngine.Script);\n\n  var ScriptDeathEff = /*#__PURE__*/function (_Script7) {\n    _inheritsLoose(ScriptDeathEff, _Script7);\n\n    function ScriptDeathEff() {\n      return _Script7.apply(this, arguments) || this;\n    }\n\n    var _proto7 = ScriptDeathEff.prototype;\n\n    _proto7.onAwake = function onAwake() {\n      var entity = this.entity;\n      var renderer = entity.getComponent(_oasisEngine.MeshRenderer);\n      var material = renderer.getMaterial(); // init Tween.\n\n      var baseColor = material.baseColor;\n      var shockTween = new TWEEN.Tween(baseColor).to({\n        a: 1\n      }, 80).repeat(1).yoyo(true).delay(20);\n      engine.on(GameEvent.stateChange, function (gameState) {\n        switch (gameState) {\n          case EnumGameState.End:\n            shockTween.start();\n            break;\n        }\n      });\n    };\n\n    return ScriptDeathEff;\n  }(_oasisEngine.Script);\n});"},"name":"flappy-bird","id":"d542eb4b-93ae-5cbf-a87a-75d839caa2fb"}}},"staticQueryHashes":[]}