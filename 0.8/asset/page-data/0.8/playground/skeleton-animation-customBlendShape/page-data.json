{"componentChunkName":"component---src-templates-playground-tsx","path":"/0.8/playground/skeleton-animation-customBlendShape","result":{"pageContext":{"node":{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine-toolkit/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine-toolkit/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngineToolkit/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title Animation CustomBlendShape\n   * @category Animation\n   */\n  _oasisEngine.Logger.enable();\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.width = window.innerWidth * _oasisEngine.SystemInfo.devicePixelRatio;\n  engine.canvas.height = window.innerHeight * _oasisEngine.SystemInfo.devicePixelRatio;\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // camera\n\n  var cameraEntity = rootEntity.createChild(\"cameraNode\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 0, 5);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl);\n  var meshEntity = rootEntity.createChild(\"meshEntity\");\n  var skinnedMeshRenderer = meshEntity.addComponent(_oasisEngine.SkinnedMeshRenderer);\n  var modelMesh = new _oasisEngine.ModelMesh(engine); // Set vertices data.\n\n  var positions = [new _oasisEngine.Vector3(-1.0, -1.0, 1.0), new _oasisEngine.Vector3(1.0, -1.0, 1.0), new _oasisEngine.Vector3(1.0, 1.0, 1.0), new _oasisEngine.Vector3(1.0, 1.0, 1.0), new _oasisEngine.Vector3(-1.0, 1.0, 1.0), new _oasisEngine.Vector3(-1.0, -1.0, 1.0)];\n  modelMesh.setPositions(positions); // Add SubMesh.\n\n  modelMesh.addSubMesh(0, 6); // Add BlendShape.\n\n  var deltaPositions = [new _oasisEngine.Vector3(0.0, 0.0, 0.0), new _oasisEngine.Vector3(0.0, 0.0, 0.0), new _oasisEngine.Vector3(-1.0, 0.0, 0.0), new _oasisEngine.Vector3(-1.0, 0.0, 0.0), new _oasisEngine.Vector3(1.0, 0.0, 0.0), new _oasisEngine.Vector3(0.0, 0.0, 0.0)];\n  var blendShape = new _oasisEngine.BlendShape(\"BlendShapeA\");\n  blendShape.addFrame(1.0, deltaPositions);\n  modelMesh.addBlendShape(blendShape);\n  skinnedMeshRenderer.mesh = modelMesh;\n  skinnedMeshRenderer.setMaterial(new _oasisEngine.UnlitMaterial(engine)); // Upload data.\n\n  modelMesh.uploadData(false);\n  engine.run(); // Use `blendShapeWeights` property to adjust the mesh to the target BlendShape\n\n  skinnedMeshRenderer.blendShapeWeights = new Float32Array([1.0]); // Add data GUI\n\n  addDataGUI(skinnedMeshRenderer);\n  /**\n   * Add data GUI.\n   */\n\n  function addDataGUI(skinnedMeshRenderer) {\n    var gui = new dat.GUI();\n    var guiData = {\n      blendShapeWeights: 1.0\n    };\n    gui.add(guiData, \"blendShapeWeights\", 0, 1).onChange(function (value) {\n      skinnedMeshRenderer.blendShapeWeights[0] = value;\n    });\n  }\n});"},"name":"skeleton-animation-customBlendShape","id":"46453324-79d6-593b-bef0-d91b598b7a47"}}},"staticQueryHashes":[]}