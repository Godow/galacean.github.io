{"componentChunkName":"component---src-templates-playground-tsx","path":"/0.8/playground/text-barrage","result":{"pageContext":{"node":{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@oasis-engine-toolkit/stats\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@oasis-engine-toolkit/stats\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global[\"@oasisEngineToolkit/stats\"]);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, _stats) {\n  \"use strict\";\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  _oasisEngine.Engine.registerFeature(_stats.Stats);\n\n  var TextBarrageAnimation = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(TextBarrageAnimation, _Script);\n\n    function TextBarrageAnimation() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _Script.call.apply(_Script, [this].concat(args)) || this;\n      _this.camera = void 0;\n      _this.priorityOffset = 0;\n      _this._speed = 0;\n      _this._range = 0;\n      _this._isPlayging = false;\n      _this._textRenderer = null;\n      return _this;\n    }\n\n    var _proto = TextBarrageAnimation.prototype;\n\n    _proto.play = function play() {\n      this._isPlayging = true;\n    };\n\n    _proto.onStart = function onStart() {\n      this._textRenderer = this.entity.getComponent(_oasisEngine.TextRenderer);\n      this._range = -camera.orthographicSize * camera.aspectRatio;\n\n      this._reset(true);\n    };\n\n    _proto.onUpdate = function onUpdate(dt) {\n      if (this._isPlayging) {\n        var position = this.entity.transform.position;\n        position.x += this._speed * dt;\n\n        if (position.x < this._range) {\n          this._reset(false);\n        }\n      }\n    };\n\n    _proto._reset = function _reset(isFirst) {\n      var textRenderer = this._textRenderer;\n      var words = TextBarrageAnimation.words,\n          colors = TextBarrageAnimation.colors; // Reset priority for renderer\n\n      textRenderer.priority += this.priorityOffset; // Reset the text to render\n\n      var wordLastIndex = words.length - 1;\n      textRenderer.text = words[getRandomNum(0, wordLastIndex)] + \" \" + words[getRandomNum(0, wordLastIndex)] + \" \" + getRandomNum(0, 99); // Reset color\n\n      textRenderer.color = colors[getRandomNum(0, colors.length - 1)]; // Reset position\n\n      var position = this.entity.transform.position;\n      var orthographicSize = camera.orthographicSize;\n\n      if (isFirst) {\n        var halfOrthoWidth = orthographicSize * camera.aspectRatio;\n        position.x = getRandomNum(-halfOrthoWidth, halfOrthoWidth);\n      } else {\n        var bounds = textRenderer.bounds;\n        position.x = orthographicSize * camera.aspectRatio + bounds.max.x - bounds.min.x;\n      }\n\n      position.y = getRandomNum(-orthographicSize, orthographicSize); // Reset speed\n\n      this._speed = getRandomNum(-500, -200) * 0.00001;\n    };\n\n    return TextBarrageAnimation;\n  }(_oasisEngine.Script); // Create engine object\n\n\n  TextBarrageAnimation.words = [\"OASIS\", \"oasis\", \"HELLO\", \"hello\", \"WORLD\", \"world\", \"TEXT\", \"text\", \"PEACE\", \"peace\", \"LOVE\", \"love\", \"abcdefg\", \"hijklmn\", \"opqrst\", \"uvwxyz\", \"ABCDEFG\", \"HIJKLMN\", \"OPQRST\", \"UVWXYZ\", \"~!@#$\", \"%^&*\", \"()_+\"];\n  TextBarrageAnimation.colors = [new _oasisEngine.Color(1, 1, 1, 1), new _oasisEngine.Color(1, 0, 0, 1), new _oasisEngine.Color(0, 1, 0.89, 1)];\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  engine.run();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // Create camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_entity\");\n  var camera = cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.transform.setPosition(0, 0, 10);\n  camera.isOrthographic = true; // Create text barrage.\n\n  var textCount = 50;\n\n  for (var i = 0; i < textCount; ++i) {\n    var textEntity = rootEntity.createChild(); // Init text renderer.\n\n    var textRenderer = textEntity.addComponent(_oasisEngine.TextRenderer);\n    textRenderer.font = _oasisEngine.Font.createFromOS(engine, \"Arial\");\n    textRenderer.fontSize = 36;\n    textRenderer.priority = i;\n    textRenderer.horizontalAlignment = _oasisEngine.TextHorizontalAlignment.Right; // Init and reset text barrage animation.\n\n    var barrage = textEntity.addComponent(TextBarrageAnimation);\n    barrage.camera = camera;\n    barrage.priorityOffset = textCount;\n    barrage.play();\n  }\n\n  function getRandomNum(min, max) {\n    var range = max - min;\n    var rand = Math.random();\n    return min + Math.round(rand * range);\n  }\n});"},"name":"text-barrage","id":"cb673b75-e0c2-55af-a533-fcd077dbe6aa"}}},"staticQueryHashes":[]}