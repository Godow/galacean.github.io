{"componentChunkName":"component---src-templates-playground-tsx","path":"/0.8/playground/sprite-atlas","result":{"pageContext":{"node":{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title Sprite Atlas\n   * @category 2D\n   */\n  // Create engine object.\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize(); // Create root entity.\n\n  var rootEntity = engine.sceneManager.activeScene.createRootEntity(); // Create camera.\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 0, 4);\n  cameraEntity.addComponent(_oasisEngine.Camera).isOrthographic = true;\n  engine.resourceManager.load({\n    url: \"https://gw.alipayobjects.com/os/bmw-prod/da0bccd4-020a-41d5-82e0-a04f4413d9a6.atlas\",\n    type: _oasisEngine.AssetType.SpriteAtlas\n  }).then(function (atlas) {\n    var from = new _oasisEngine.Vector3();\n    var to = new _oasisEngine.Vector3(); // Draw the fence.\n\n    var sprite = atlas.getSprite(\"terrains-5\");\n    addGroupSpriteRenderer(sprite, from.set(-6, -6, 0), to.set(6, -6, 0));\n    addGroupSpriteRenderer(sprite, from.set(-6, 6, 0), to.set(6, 6, 0));\n    addGroupSpriteRenderer(sprite, from.set(-6, -5, 0), to.set(-6, 5, 0));\n    addGroupSpriteRenderer(sprite, from.set(6, -5, 0), to.set(6, 5, 0)); // Draw the walls.\n\n    sprite = atlas.getSprite(\"terrains-3\");\n    addGroupSpriteRenderer(sprite, from.set(-5, -2, 0), to.set(-5, 5, 0));\n    addGroupSpriteRenderer(sprite, from.set(-4, -3, 0), to.set(-4, -1, 0));\n    addSpriteRenderer(sprite, from.set(-3, -2, 0));\n    addGroupSpriteRenderer(sprite, from.set(-2, -3, 0), to.set(-2, -2, 0));\n    addGroupSpriteRenderer(sprite, from.set(-1, -2, 0), to.set(-1, 5, 0));\n    addGroupSpriteRenderer(sprite, from.set(5, -2, 0), to.set(5, 5, 0));\n    addGroupSpriteRenderer(sprite, from.set(4, -3, 0), to.set(4, -1, 0));\n    addSpriteRenderer(sprite, from.set(3, -2, 0));\n    addGroupSpriteRenderer(sprite, from.set(2, -3, 0), to.set(2, -2, 0));\n    addGroupSpriteRenderer(sprite, from.set(1, -2, 0), to.set(1, 5, 0)); // Draw the ground.\n\n    sprite = atlas.getSprite(\"terrains-0\");\n    addGroupSpriteRenderer(sprite, from.set(0, -5, 0), to.set(0, 5, 0));\n    addGroupSpriteRenderer(sprite, from.set(-1, -3, 0), to.set(1, -3, 0)); // Draw the magma.\n\n    sprite = atlas.getSprite(\"terrains-45\");\n    addGroupSpriteRenderer(sprite, from.set(-5, -5, 0), to.set(-1, -4, 0));\n    addGroupSpriteRenderer(sprite, from.set(-4, -3, 0), to.set(-4, -3, 0));\n    addSpriteRenderer(sprite, from.set(-5, -3, 0));\n    addSpriteRenderer(sprite, from.set(-3, -3, 0));\n    addGroupSpriteRenderer(sprite, from.set(1, -5, 0), to.set(5, -4, 0));\n    addGroupSpriteRenderer(sprite, from.set(4, -3, 0), to.set(4, -3, 0));\n    addSpriteRenderer(sprite, from.set(5, -3, 0));\n    addSpriteRenderer(sprite, from.set(3, -3, 0)); // Draw the river.\n\n    sprite = atlas.getSprite(\"terrains-46\");\n    addGroupSpriteRenderer(sprite, from.set(-4, 0, 0), to.set(-2, 5, 0));\n    addGroupSpriteRenderer(sprite, from.set(-3, -1, 0), to.set(-2, -1, 0));\n    addGroupSpriteRenderer(sprite, from.set(2, 0, 0), to.set(4, 5, 0));\n    addGroupSpriteRenderer(sprite, from.set(2, -1, 0), to.set(3, -1, 0)); // Draw the npcs.\n\n    addSpriteRenderer(atlas.getSprite(\"npcs-0\"), from.set(0, -4, 1));\n    addSpriteRenderer(atlas.getSprite(\"npcs-7\"), from.set(-1, -3, 1));\n  });\n  /**\n   * Draw a set of items.\n   * @param spriteName - The name of the sprite resource used for drawing\n   * @param from  - Starting point of drawing\n   * @param to - End point of drawing\n   */\n\n  function addGroupSpriteRenderer(sprite, from, to) {\n    var fromX = from.x,\n        fromY = from.y;\n    var toX = to.x,\n        toY = to.y;\n\n    for (var i = fromX, n = toX; i <= n; i++) {\n      for (var j = fromY, m = toY; j <= m; j++) {\n        addSpriteRenderer(sprite, from.set(i, j, 0));\n      }\n    }\n  }\n  /**\n   * Draw an item.\n   * @param spriteName - The name of the sprite resource used for drawing\n   * @param position - Position of drawing\n   */\n\n\n  function addSpriteRenderer(sprite, position) {\n    var spriteEntity = rootEntity.createChild();\n    spriteEntity.transform.position = position;\n    spriteEntity.transform.scale.set(100 / 32, 100 / 32, 100 / 32);\n    spriteEntity.addComponent(_oasisEngine.SpriteRenderer).sprite = sprite;\n  }\n\n  engine.run();\n});"},"name":"sprite-atlas","id":"b0c7fef1-2582-5e1e-b74a-95b6ac9038ba"}}},"staticQueryHashes":[]}