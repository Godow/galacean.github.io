{"componentChunkName":"component---src-templates-playground-tsx","path":"/0.5/playground/light-type","result":{"pageContext":{"node":{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title Light Type\n   * @category Light\n   */\n  var gui = new dat.GUI(); // Create engine object\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // Create Ground\n\n  var groundEntity = rootEntity.createChild(\"ground\");\n  var groundRenderer = groundEntity.addComponent(_oasisEngine.MeshRenderer);\n\n  var mesh = _oasisEngine.PrimitiveMesh.createPlane(engine, 100, 100);\n\n  var material = new _oasisEngine.BlinnPhongMaterial(engine);\n  material.renderFace = _oasisEngine.RenderFace.Double;\n  groundEntity.transform.rotate(90, 0, 0);\n  groundRenderer.mesh = mesh;\n  groundRenderer.setMaterial(material); // Create camera\n\n  var cameraNode = rootEntity.createChild(\"camera_node\");\n  cameraNode.transform.setPosition(0, 30, 50);\n  var camera = cameraNode.addComponent(_oasisEngine.Camera);\n  camera.farClipPlane = 200;\n  var control = cameraNode.addComponent(_controls.OrbitControl);\n  control.maxDistance = 100; // Create spot light\n\n  var lightEntity = rootEntity.createChild(\"light\");\n  var spotLight = lightEntity.addComponent(_oasisEngine.SpotLight);\n  var pointLight = lightEntity.addComponent(_oasisEngine.PointLight);\n  var directionalLight = lightEntity.addComponent(_oasisEngine.DirectLight);\n  var target = new _oasisEngine.Vector3(0, 0, 0);\n  var up = new _oasisEngine.Vector3(0, 1, 0);\n  var light = spotLight;\n  pointLight.enabled = false;\n  directionalLight.enabled = false;\n  lightEntity.transform.setPosition(20, 20, 0);\n  lightEntity.transform.lookAt(target, up);\n  var lightRenderer = lightEntity.addComponent(_oasisEngine.MeshRenderer);\n  lightRenderer.mesh = _oasisEngine.PrimitiveMesh.createSphere(engine, 1);\n  lightRenderer.setMaterial(new _oasisEngine.UnlitMaterial(engine)); // Debug\n\n  var debugInfo = {\n    type: \"SpotLight\",\n    angle: 30,\n    penumbra: 15,\n    x: 20,\n    y: 20,\n    z: 0\n  };\n  gui.add(debugInfo, \"type\", [\"DirectionalLight\", \"PointLight\", \"SpotLight\"]).onChange(function (v) {\n    light.enabled = false;\n    spotFolder.closed = true;\n\n    switch (v) {\n      case \"SpotLight\":\n        light = spotLight;\n        light.enabled = true;\n        spotFolder.closed = false;\n        break;\n\n      case \"DirectionalLight\":\n        light = directionalLight;\n        light.enabled = true;\n        break;\n\n      case \"PointLight\":\n        light = pointLight;\n        light.enabled = true;\n        break;\n    }\n  });\n  gui.add(light, \"distance\", 0, 100, 1);\n  var folder = gui.addFolder(\"位置\");\n  folder.open();\n  folder.add(debugInfo, \"x\", -100, 100).onChange(function (v) {\n    var last = lightEntity.transform.position;\n    lightEntity.transform.setPosition(v, last.y, last.z);\n    lightEntity.transform.lookAt(target, up);\n  });\n  folder.add(debugInfo, \"y\", 0, 100).onChange(function (v) {\n    var last = lightEntity.transform.position;\n    lightEntity.transform.setPosition(last.x, v, last.z);\n    lightEntity.transform.lookAt(target, up);\n  });\n  folder.add(debugInfo, \"z\", -100, 100).onChange(function (v) {\n    var last = lightEntity.transform.position;\n    lightEntity.transform.setPosition(last.x, last.y, v);\n    lightEntity.transform.lookAt(target, up);\n  });\n  var spotFolder = gui.addFolder(\"SpotLight\");\n  spotFolder.open();\n  spotFolder.add(debugInfo, \"angle\", 1, 90, 1).onChange(function (v) {\n    light.angle = v * Math.PI / 180;\n  });\n  spotFolder.add(debugInfo, \"penumbra\", 1, 90, 1).onChange(function (v) {\n    light.penumbra = v * Math.PI / 180;\n  }); // Run\n\n  engine.run();\n});"},"name":"light-type","id":"2d15cf04-fa75-5308-9d3a-98fe21f78c16"}}},"staticQueryHashes":[]}