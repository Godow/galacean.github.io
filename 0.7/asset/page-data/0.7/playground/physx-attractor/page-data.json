{"componentChunkName":"component---src-templates-playground-tsx","path":"/0.7/playground/physx-attractor","result":{"pageContext":{"node":{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@oasis-engine/physics-physx\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@oasis-engine/physics-physx\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global[\"@oasisEngine/physicsPhysx\"]);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, _physicsPhysx) {\n  \"use strict\";\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  var Attractor = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(Attractor, _Script);\n\n    function Attractor() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _Script.call.apply(_Script, [this].concat(args)) || this;\n      _this.collider = void 0;\n      _this.force = new _oasisEngine.Vector3();\n      return _this;\n    }\n\n    var _proto = Attractor.prototype;\n\n    _proto.onAwake = function onAwake() {\n      this.collider = this.entity.getComponent(_oasisEngine.DynamicCollider);\n    };\n\n    _proto.onPhysicsUpdate = function onPhysicsUpdate() {\n      this.entity.transform.worldPosition.cloneTo(this.force);\n      this.collider.applyForce(this.force.normalize().scale(-10));\n    };\n\n    return Attractor;\n  }(_oasisEngine.Script);\n\n  _physicsPhysx.PhysXPhysics.initialize().then(function () {\n    var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n    engine.physicsManager.initialize(_physicsPhysx.PhysXPhysics);\n    engine.canvas.resizeByClientSize();\n    var scene = engine.sceneManager.activeScene;\n    var rootEntity = scene.createRootEntity(); // init camera\n\n    var cameraEntity = rootEntity.createChild(\"camera\");\n    var camera = cameraEntity.addComponent(_oasisEngine.Camera);\n    var pos = cameraEntity.transform.position;\n    pos.setValue(0, 0, -15);\n    cameraEntity.transform.position = pos;\n    cameraEntity.transform.lookAt(new _oasisEngine.Vector3()); // init light\n\n    scene.ambientLight.diffuseSolidColor.setValue(1, 1, 1, 1);\n    var light = rootEntity.createChild(\"light\");\n    light.transform.position = new _oasisEngine.Vector3(0, 0, 0);\n    var p = light.addComponent(_oasisEngine.PointLight);\n    p.intensity = 0.3;\n    {\n      var attractorEntity = rootEntity.createChild();\n      var mtl = new _oasisEngine.BlinnPhongMaterial(engine);\n      mtl.baseColor.setValue(1, 1, 1, 1.0);\n      var renderer = attractorEntity.addComponent(_oasisEngine.MeshRenderer);\n      renderer.mesh = _oasisEngine.PrimitiveMesh.createSphere(engine, 2); // renderer.setMaterial(mtl);\n\n      var attractorSphere = new _oasisEngine.SphereColliderShape();\n      attractorSphere.radius = 2;\n      var attractorCollider = attractorEntity.addComponent(_oasisEngine.DynamicCollider);\n      attractorCollider.isKinematic = true;\n      attractorCollider.addShape(attractorSphere);\n      window.addEventListener(\"mousemove\", function (event) {\n        var ray = new _oasisEngine.Ray();\n        camera.screenPointToRay(new _oasisEngine.Vector2(event.pageX * window.devicePixelRatio, event.pageY * window.devicePixelRatio), ray);\n        var position = attractorEntity.transform.position;\n        ray.origin.cloneTo(position);\n        position.add(ray.direction.scale(18));\n        attractorEntity.transform.position = position;\n      });\n    }\n    engine.physicsManager.gravity = new _oasisEngine.Vector3();\n    init();\n    engine.run(); //--------------------------------------------------------------------------------------------------------------------\n    // init scene\n\n    function init() {\n      addPlane(new _oasisEngine.Vector3(0, -8, 0), new _oasisEngine.Quaternion());\n      var quat180 = new _oasisEngine.Quaternion();\n      quat180.rotateZ(_oasisEngine.MathUtil.degreeToRadian(180));\n      addPlane(new _oasisEngine.Vector3(0, 8, 0), quat180);\n      var quat90 = new _oasisEngine.Quaternion();\n      quat90.rotateZ(_oasisEngine.MathUtil.degreeToRadian(90));\n      addPlane(new _oasisEngine.Vector3(10, 0, 0), quat90);\n      var quatNega90 = new _oasisEngine.Quaternion();\n      quatNega90.rotateZ(_oasisEngine.MathUtil.degreeToRadian(-90));\n      addPlane(new _oasisEngine.Vector3(-10, 0, 0), quatNega90);\n      var quatFront90 = new _oasisEngine.Quaternion();\n      quatFront90.rotateX(_oasisEngine.MathUtil.degreeToRadian(-90));\n      addPlane(new _oasisEngine.Vector3(0, 0, 20), quatFront90);\n      var quatNegaFront90 = new _oasisEngine.Quaternion();\n      quatNegaFront90.rotateX(_oasisEngine.MathUtil.degreeToRadian(90));\n      addPlane(new _oasisEngine.Vector3(0, 0, 0), quatNegaFront90);\n      var quat = new _oasisEngine.Quaternion(0, 0, 0.3, 0.7);\n      quat.normalize();\n\n      for (var i = 0; i < 4; i++) {\n        for (var j = 0; j < 4; j++) {\n          for (var k = 0; k < 4; k++) {\n            addSphere(1, new _oasisEngine.Vector3(-4 + 2 * i, -4 + 2 * j, -4 + 2 * k), quat);\n          }\n        }\n      }\n    }\n\n    function addPlane(position, rotation) {\n      var mtl = new _oasisEngine.BlinnPhongMaterial(engine);\n      mtl.baseColor.setValue(0.03179807202597362, 0.3939682161541871, 0.41177952549087604, 1);\n      mtl.renderFace = _oasisEngine.RenderFace.Double;\n      var planeEntity = rootEntity.createChild();\n      planeEntity.layer = _oasisEngine.Layer.Layer1;\n      var renderer = planeEntity.addComponent(_oasisEngine.MeshRenderer);\n      renderer.mesh = _oasisEngine.PrimitiveMesh.createPlane(engine, 10, 10); // renderer.setMaterial(mtl);\n\n      planeEntity.transform.position = position;\n      planeEntity.transform.rotationQuaternion = rotation;\n      var physicsPlane = new _oasisEngine.PlaneColliderShape();\n      var planeCollider = planeEntity.addComponent(_oasisEngine.StaticCollider);\n      planeCollider.addShape(physicsPlane);\n      return planeEntity;\n    }\n\n    function addSphere(radius, position, rotation) {\n      var mtl = new _oasisEngine.BlinnPhongMaterial(engine);\n      mtl.baseColor.setValue(227 / 255, 168 / 255, 196 / 255, 1.0);\n      var sphereEntity = rootEntity.createChild();\n      var renderer = sphereEntity.addComponent(_oasisEngine.MeshRenderer);\n      renderer.mesh = _oasisEngine.PrimitiveMesh.createSphere(engine, radius);\n      renderer.setMaterial(mtl);\n      sphereEntity.transform.position = position;\n      sphereEntity.transform.rotationQuaternion = rotation;\n      var physicsSphere = new _oasisEngine.SphereColliderShape();\n      physicsSphere.radius = radius;\n      var sphereCollider = sphereEntity.addComponent(_oasisEngine.DynamicCollider);\n      sphereCollider.addShape(physicsSphere);\n      sphereCollider.linearDamping = 0.95;\n      sphereCollider.angularDamping = 0.2;\n      sphereEntity.addComponent(Attractor);\n      return sphereEntity;\n    }\n  });\n});"},"name":"physx-attractor","id":"62aee81a-ef7f-5712-a906-838593c51f4e"}}},"staticQueryHashes":[]}