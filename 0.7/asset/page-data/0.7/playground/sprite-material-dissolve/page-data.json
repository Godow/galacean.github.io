{"componentChunkName":"component---src-templates-playground-tsx","path":"/0.7/playground/sprite-material-dissolve","result":{"pageContext":{"node":{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  init();\n\n  function init() {\n    // Create engine.\n    var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n    engine.canvas.resizeByClientSize(); // Create root entity.\n\n    var rootEntity = engine.sceneManager.activeScene.createRootEntity(); // Create camera.\n\n    var cameraEntity = rootEntity.createChild(\"Camera\");\n    cameraEntity.transform.setPosition(0, 0, 12);\n    cameraEntity.addComponent(_oasisEngine.Camera);\n    cameraEntity.addComponent(_controls.OrbitControl);\n    engine.resourceManager.load([{\n      // \bSprite texture\n      url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*L2GNRLWn9EAAAAAAAAAAAAAAARQnAQ\",\n      type: _oasisEngine.AssetType.Texture2D\n    }, {\n      // Noise texture\n      url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*j2xJQL0e6J4AAAAAAAAAAAAAARQnAQ\",\n      type: _oasisEngine.AssetType.Texture2D\n    }, {\n      // Ramp texture\n      url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*ygj3S7sm4hQAAAAAAAAAAAAAARQnAQ\",\n      type: _oasisEngine.AssetType.Texture2D\n    }]).then(function (textures) {\n      // Create origin sprite entity.\n      var spriteEntity = rootEntity.createChild(\"DissolveSprite\");\n      var material = addCustomMaterial(engine, textures[1], textures[2]);\n      var renderer = spriteEntity.addComponent(_oasisEngine.SpriteRenderer);\n      renderer.sprite = new _oasisEngine.Sprite(engine, textures[0]);\n      renderer.setMaterial(material); // Add dissolve animate script.\n\n      var script = spriteEntity.addComponent(AnimateScript); // Add custom material.\n\n      script.material = material; // Add Data UI.\n\n      script.guiData = addDataGUI(script.material, script);\n    });\n    engine.run();\n  }\n\n  function addCustomMaterial(engine, noiseTexture, rampTexture) {\n    var material = new _oasisEngine.Material(engine, _oasisEngine.Shader.find(\"SpriteDissolve\")); // Init state.\n\n    var renderState = material.renderState;\n    var target = renderState.blendState.targetBlendState;\n    target.enabled = true;\n    target.sourceColorBlendFactor = _oasisEngine.BlendFactor.SourceAlpha;\n    target.destinationColorBlendFactor = _oasisEngine.BlendFactor.OneMinusSourceAlpha;\n    target.sourceAlphaBlendFactor = _oasisEngine.BlendFactor.One;\n    target.destinationAlphaBlendFactor = _oasisEngine.BlendFactor.OneMinusSourceAlpha;\n    renderState.depthState.writeEnabled = false;\n    renderState.rasterState.cullMode = _oasisEngine.CullMode.Off;\n    material.renderQueueType = _oasisEngine.RenderQueueType.Transparent; // Set material shader data.\n\n    var shaderData = material.shaderData;\n    shaderData.setFloat(\"u_threshold\", 0.0);\n    shaderData.setFloat(\"u_edgeLength\", 0.1);\n    shaderData.setTexture(\"u_rampTexture\", rampTexture);\n    shaderData.setTexture(\"u_noiseTexture\", noiseTexture);\n    return material;\n  }\n  /**\n   * Add data GUI.\n   */\n\n\n  function addDataGUI(material, animationScript) {\n    var shaderData = material.shaderData;\n    var gui = new dat.GUI();\n    var guiData = {\n      threshold: 0.0,\n      edgeLength: 0.1,\n      reset: function reset() {\n        guiData.threshold = 0.0;\n        guiData.edgeLength = 0.1;\n        shaderData.setFloat(\"u_threshold\", 0.0);\n        shaderData.setFloat(\"u_edgeLength\", 0.1);\n      },\n      pause: function pause() {\n        animationScript.enabled = false;\n      },\n      resume: function resume() {\n        animationScript.enabled = true;\n      }\n    };\n    gui.add(guiData, \"threshold\", 0.0, 1.0, 0.01).onChange(function (value) {\n      shaderData.setFloat(\"u_threshold\", value);\n    }).listen();\n    gui.add(guiData, \"edgeLength\", 0.0, 0.2, 0.001).onChange(function (value) {\n      shaderData.setFloat(\"u_edgeLength\", value);\n    }).listen();\n    gui.add(guiData, \"reset\").name(\"重置\");\n    gui.add(guiData, \"pause\").name(\"暂停动画\");\n    gui.add(guiData, \"resume\").name(\"继续动画\");\n    return guiData;\n  }\n\n  var AnimateScript = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(AnimateScript, _Script);\n\n    function AnimateScript() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _Script.call.apply(_Script, [this].concat(args)) || this;\n      _this.guiData = void 0;\n      _this.material = void 0;\n      return _this;\n    }\n\n    var _proto = AnimateScript.prototype;\n\n    /**\n     * The main loop, called frame by frame.\n     * @param deltaTime - The deltaTime when the script update.\n     */\n    _proto.onUpdate = function onUpdate(deltaTime) {\n      var guiData = this.guiData;\n      var threshold = (guiData.threshold + deltaTime * 0.0003) % 1.0; // Update gui data.\n\n      guiData.threshold = threshold; // Update material data.\n\n      this.material.shaderData.setFloat(\"u_threshold\", threshold);\n    };\n\n    return AnimateScript;\n  }(_oasisEngine.Script); // Custom shader\n\n\n  var spriteVertShader = \"\\n  precision highp float;\\n\\n  uniform mat4 u_VPMat;\\n\\n  attribute vec3 POSITION;\\n  attribute vec2 TEXCOORD_0;\\n  attribute vec4 COLOR_0;\\n\\n  varying vec4 v_color;\\n  varying vec2 v_uv;\\n\\n  void main()\\n  {\\n    gl_Position = u_VPMat * vec4(POSITION, 1.0);\\n    v_color = COLOR_0;\\n    v_uv = TEXCOORD_0;\\n  }\\n\";\n  var spriteFragmentShader = \"\\n  precision mediump float;\\n  precision mediump int;\\n\\n  uniform sampler2D u_spriteTexture;\\n  uniform sampler2D u_noiseTexture;\\n  uniform sampler2D u_rampTexture;\\n  uniform float u_threshold;\\n  uniform float u_edgeLength;\\n\\n  varying vec2 v_uv;\\n  varying vec4 v_color;\\n\\n  vec4 lerp(vec4 a, vec4 b, float w) {\\n    return a + w * (b - a);\\n  }\\n\\n  void main() {\\n    float r = texture2D(u_noiseTexture, v_uv).r;\\n    float diff = r - u_threshold;\\n    if (diff <= 0.0) {\\n      discard;\\n    }\\n\\n    float degree = clamp(0.0, 1.0, diff / u_edgeLength);\\n    vec4 edgeColor = texture2D(u_rampTexture, vec2(degree, degree));\\n    vec4 color = texture2D(u_spriteTexture, v_uv);\\n    vec4 finalColor = lerp(edgeColor, color, degree);\\n    gl_FragColor = vec4(finalColor.rgb, color.a) * v_color;\\n  }\\n\";\n\n  _oasisEngine.Shader.create(\"SpriteDissolve\", spriteVertShader, spriteFragmentShader);\n});"},"name":"sprite-material-dissolve","id":"362265ca-27b9-5d21-a12c-0ba850d9db50"}}},"staticQueryHashes":[]}