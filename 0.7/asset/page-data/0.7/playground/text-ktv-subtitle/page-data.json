{"componentChunkName":"component---src-templates-playground-tsx","path":"/0.7/playground/text-ktv-subtitle","result":{"pageContext":{"node":{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine) {\n  \"use strict\";\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\n  function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n  // Create engine object\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  engine.run();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // Create camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_entity\");\n  cameraEntity.transform.setPosition(0, 0, 10);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n\n  function init() {\n    return _init.apply(this, arguments);\n  }\n\n  function _init() {\n    _init = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var bgTex, background, text1Entity, text2Entity, animateScript1, animateScript2;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return engine.resourceManager.load({\n                url: \"https://gw.alipayobjects.com/zos/OasisHub/440000983/3784/vcg_VCG211258128318_RF.jpg?x-oss-process=image/format,webp\",\n                type: _oasisEngine.AssetType.Texture2D\n              });\n\n            case 2:\n              bgTex = _context.sent;\n              background = engine.sceneManager.activeScene.background;\n              background.mode = _oasisEngine.BackgroundMode.Texture;\n              background.texture = bgTex; // Create texts\n\n              text1Entity = createText(\"听我说 谢谢你\", -2, -2);\n              text2Entity = createText(\"因为有你 温暖了四季\", 0, -3); // Add KTV subtitle material and animate script\n\n              animateScript1 = addCustomMaterialAndAnimateScript(text1Entity, 5000);\n              animateScript2 = addCustomMaterialAndAnimateScript(text2Entity, 5000); // Play animation loop\n\n            case 10:\n              if (!true) {\n                _context.next = 19;\n                break;\n              }\n\n              _context.next = 13;\n              return animateScript1.play();\n\n            case 13:\n              animateScript1.reset();\n              _context.next = 16;\n              return animateScript2.play();\n\n            case 16:\n              animateScript2.reset();\n              _context.next = 10;\n              break;\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _init.apply(this, arguments);\n  }\n\n  function createText(text, posX, posY) {\n    // Create text entity\n    var textEntity = rootEntity.createChild(\"text\");\n    rootEntity.addChild(textEntity); // Add text renderer for text entity\n\n    var renderer = textEntity.addComponent(_oasisEngine.TextRenderer); // Set font size\n\n    renderer.fontSize = 48; // Set font with font family\n\n    renderer.font = _oasisEngine.Font.createFromOS(textEntity.engine); // Set text to display\n\n    renderer.text = text; // Set position\n\n    textEntity.transform.position.setValue(posX, posY, 0);\n    return textEntity;\n  }\n\n  function addCustomMaterialAndAnimateScript(entity, time) {\n    // Create material\n    var material = new _oasisEngine.BaseMaterial(engine, _oasisEngine.Shader.find(\"TextKTVSubtitle\"));\n    entity.getComponent(_oasisEngine.TextRenderer).setMaterial(material); // Init state\n\n    material.isTransparent = true;\n    material.renderFace = _oasisEngine.RenderFace.Double; // Set uniform\n\n    material.shaderData.setFloat(\"u_percent\", 0);\n    material.shaderData.setColor(\"u_subtitleColor\", new _oasisEngine.Color(0, 1, 0.89, 1)); // Add AnimateScript\n\n    var script = entity.addComponent(AnimateScript);\n    script.material = material;\n    script.totalTime = time;\n    return script;\n  } // Custom shader\n\n\n  var vertShader = \"\\n  precision highp float;\\n\\n  uniform mat4 u_VPMat;\\n  uniform float u_worldPosX;\\n\\n  attribute vec3 POSITION;\\n  attribute vec2 TEXCOORD_0;\\n  attribute vec4 COLOR_0;\\n\\n  varying vec4 v_color;\\n  varying vec2 v_uv;\\n  varying float v_startX;\\n  varying float v_width;\\n  varying float v_posX;\\n\\n  void main()\\n  {\\n    gl_Position = u_VPMat * vec4(POSITION, 1.0);\\n    v_uv = TEXCOORD_0;\\n    v_color = COLOR_0;\\n    float halfWidth = abs(u_worldPosX - POSITION.x);\\n    v_startX = u_worldPosX - halfWidth;\\n    v_width = halfWidth * 2.0;\\n    v_posX = POSITION.x;\\n  }\\n\";\n  var fragmentShader = \"\\n  precision mediump float;\\n  precision mediump int;\\n\\n  uniform sampler2D u_spriteTexture;\\n  uniform float u_percent;\\n  uniform vec4 u_subtitleColor;\\n\\n  varying vec2 v_uv;\\n  varying vec4 v_color;\\n  varying float v_startX;\\n  varying float v_width;\\n  varying float v_posX;\\n\\n  void main() {\\n    vec4 baseColor = texture2D(u_spriteTexture, v_uv);\\n    float percent = (v_posX - v_startX) / v_width;\\n    if (percent <= u_percent) {\\n      gl_FragColor = baseColor * u_subtitleColor;\\n    } else {\\n      gl_FragColor = baseColor * v_color;\\n    }\\n  }\\n\";\n\n  _oasisEngine.Shader.create(\"TextKTVSubtitle\", vertShader, fragmentShader);\n\n  var AnimateScript = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(AnimateScript, _Script);\n\n    function AnimateScript() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _Script.call.apply(_Script, [this].concat(args)) || this;\n      _this.material = void 0;\n      _this.totalTime = 0;\n      _this._curTime = 0;\n      _this._isPlaying = false;\n      _this._cb = null;\n      return _this;\n    }\n\n    var _proto = AnimateScript.prototype;\n\n    _proto.onUpdate = function onUpdate(dt) {\n      if (this._isPlaying) {\n        this._curTime += dt;\n        var curTime = this._curTime,\n            totalTime = this.totalTime;\n        var shaderData = this.material.shaderData;\n        shaderData.setFloat(\"u_percent\", curTime / totalTime);\n        shaderData.setFloat(\"u_worldPosX\", this.entity.transform.worldPosition.x);\n\n        if (curTime >= totalTime) {\n          this._isPlaying = false;\n          this._cb && this._cb();\n        }\n      }\n    };\n\n    _proto.play = function play() {\n      var _this2 = this;\n\n      var material = this.material;\n\n      if (!material) {\n        return;\n      }\n\n      this._isPlaying = true;\n      this._curTime = 0;\n      return new Promise(function (resolve) {\n        _this2._cb = resolve;\n      });\n    };\n\n    _proto.reset = function reset() {\n      this._isPlaying = false;\n      this.material.shaderData.setFloat(\"u_percent\", 0);\n    };\n\n    return AnimateScript;\n  }(_oasisEngine.Script);\n\n  init();\n});"},"name":"text-ktv-subtitle","id":"5c14a871-e556-5308-8bcb-d80005407a46"}}},"staticQueryHashes":[]}