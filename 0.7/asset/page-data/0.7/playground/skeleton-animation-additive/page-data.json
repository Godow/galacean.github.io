{"componentChunkName":"component---src-templates-playground-tsx","path":"/0.7/playground/skeleton-animation-additive","result":{"pageContext":{"node":{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\", \"dat.gui\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"), require(\"dat.gui\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine, global.dat);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine, dat) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title Animation Additive\n   * @category Animation\n   */\n  var gui = new dat.GUI();\n\n  _oasisEngine.Logger.enable();\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.width = window.innerWidth * _oasisEngine.SystemInfo.devicePixelRatio;\n  engine.canvas.height = window.innerHeight * _oasisEngine.SystemInfo.devicePixelRatio;\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_node\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 1, 5);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl).target = new _oasisEngine.Vector3(0, 1, 0);\n  var lightNode = rootEntity.createChild(\"light_node\");\n  lightNode.addComponent(_oasisEngine.DirectLight).intensity = 0.6;\n  lightNode.transform.lookAt(new _oasisEngine.Vector3(0, 0, 1));\n  lightNode.transform.rotate(new _oasisEngine.Vector3(0, 90, 0));\n  engine.resourceManager.load(\"https://gw.alipayobjects.com/os/bmw-prod/5e3c1e4e-496e-45f8-8e05-f89f2bd5e4a4.glb\").then(function (asset) {\n    var animations = asset.animations,\n        defaultSceneRoot = asset.defaultSceneRoot;\n    var animator = defaultSceneRoot.getComponent(_oasisEngine.Animator);\n    var animatorController = new _oasisEngine.AnimatorController();\n    var layer = new _oasisEngine.AnimatorControllerLayer(\"layer\");\n    var layer1 = new _oasisEngine.AnimatorControllerLayer(\"layer1\");\n    var animatorStateMachine = new _oasisEngine.AnimatorStateMachine();\n    var animatorStateMachine1 = new _oasisEngine.AnimatorStateMachine();\n    animatorController.addLayer(layer);\n    animatorController.addLayer(layer1);\n    animator.animatorController = animatorController;\n    layer.stateMachine = animatorStateMachine;\n    layer1.stateMachine = animatorStateMachine1;\n    layer1.blendingMode = _oasisEngine.AnimatorLayerBlendingMode.Additive;\n    var animationNames = [];\n    var animationNames2 = [];\n\n    if (animations) {\n      animations.forEach(function (clip) {\n        if (clip.name.includes(\"pose\")) {\n          var animatorState2 = animatorStateMachine1.addState(clip.name);\n          animatorState2.clip = clip;\n          animatorState2.clipStartTime = 1;\n          animationNames2.push(clip.name);\n        } else {\n          var animatorState = animatorStateMachine.addState(clip.name);\n          animatorState.clip = clip;\n          animationNames.push(clip.name);\n        }\n      });\n    }\n\n    rootEntity.addChild(defaultSceneRoot);\n    animator.play(animationNames[0], 0);\n    animator.play(animationNames2[1], 1);\n    var debugInfo = {\n      animation: animationNames[0],\n      additive_pose: animationNames2[1],\n      additive_weight: 1,\n      speed: 1\n    };\n    gui.add(debugInfo, \"animation\", animationNames).onChange(function (v) {\n      animator.play(v, 0);\n    });\n    gui.add(debugInfo, \"additive_pose\", animationNames2).onChange(function (v) {\n      animator.play(v, 1);\n    });\n    gui.add(debugInfo, \"additive_weight\", 0, 1).onChange(function (v) {\n      layer1.weight = v;\n    });\n    gui.add(debugInfo, \"speed\", -1, 1).onChange(function (v) {\n      animator.speed = v;\n    });\n  });\n  engine.run();\n});"},"name":"skeleton-animation-additive","id":"4e4e029b-8a43-57ff-862d-6a85357b97e0"}}},"staticQueryHashes":[]}