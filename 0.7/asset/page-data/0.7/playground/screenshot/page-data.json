{"componentChunkName":"component---src-templates-playground-tsx","path":"/0.7/playground/screenshot","result":{"pageContext":{"node":{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title Screenshot\n   * @category Camera\n   */\n  var gui = new dat.GUI();\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  scene.background.solidColor.setValue(0, 0, 0, 0);\n  var rootEntity = scene.createRootEntity(); // camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_node\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 1, 5);\n  var camera = cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl).target = new _oasisEngine.Vector3(0, 1, 0); // add gltf model\n\n  engine.resourceManager.load(\"https://gw.alipayobjects.com/os/bmw-prod/5e3c1e4e-496e-45f8-8e05-f89f2bd5e4a4.glb\").then(function (asset) {\n    var defaultSceneRoot = asset.defaultSceneRoot;\n    rootEntity.addChild(defaultSceneRoot);\n    var animator = defaultSceneRoot.getComponent(_oasisEngine.Animator);\n    animator.play(\"run\");\n  }); // add ambient light\n\n  engine.resourceManager.load({\n    type: _oasisEngine.AssetType.Env,\n    url: \"https://gw.alipayobjects.com/os/bmw-prod/09904c03-0d23-4834-aa73-64e11e2287b0.bin\"\n  }).then(function (ambientLight) {\n    scene.ambientLight = ambientLight;\n  });\n  engine.run();\n  /** ---------------------------- Capture ---------------------------- */\n\n  var screenshotCanvas = null;\n  var flipYCanvas = null;\n\n  function _screenshot(camera, width, height, flipY, isPNG, jpgQuality) {\n    if (flipY === void 0) {\n      flipY = true;\n    }\n\n    if (isPNG === void 0) {\n      isPNG = true;\n    }\n\n    if (jpgQuality === void 0) {\n      jpgQuality = 1;\n    }\n\n    if (!screenshotCanvas) {\n      screenshotCanvas = document.createElement(\"canvas\");\n    }\n\n    var canvas = screenshotCanvas;\n    screenshotCanvas.width = width;\n    screenshotCanvas.height = height;\n    var context = screenshotCanvas.getContext(\"2d\");\n    var isPaused = engine.isPaused;\n    engine.pause();\n    var originalTarget = camera.renderTarget;\n    var renderColorTexture = new _oasisEngine.Texture2D(engine, width, height);\n    var renderTargetData = new Uint8Array(width * height * 4);\n    var renderTarget = new _oasisEngine.RenderTarget(engine, width, height, renderColorTexture, undefined, 8); // render to off-screen\n\n    camera.renderTarget = renderTarget;\n    camera.aspectRatio = width / height;\n    camera.render();\n    renderColorTexture.getPixelBuffer(0, 0, width, height, 0, renderTargetData);\n    var imageData = context.createImageData(width, height);\n    imageData.data.set(renderTargetData);\n    context.putImageData(imageData, 0, 0); // flip Y\n\n    if (flipY) {\n      if (!flipYCanvas) {\n        flipYCanvas = document.createElement(\"canvas\");\n      }\n\n      canvas = flipYCanvas;\n      flipYCanvas.width = width;\n      flipYCanvas.height = height;\n      var ctx2 = flipYCanvas.getContext(\"2d\");\n      ctx2.translate(0, height);\n      ctx2.scale(1, -1);\n      ctx2.drawImage(screenshotCanvas, 0, 0);\n    } // download\n\n\n    canvas.toBlob(function (blob) {\n      var url = window.URL.createObjectURL(blob);\n      var a = document.createElement(\"a\");\n      document.body.appendChild(a);\n      a.style.display = \"none\";\n      a.href = url;\n      a.download = \"screenshot\";\n      a.addEventListener(\"click\", function () {\n        if (a.parentElement) {\n          a.parentElement.removeChild(a);\n        }\n      });\n      a.click();\n      window.URL.revokeObjectURL(url); // revert\n\n      camera.renderTarget = originalTarget;\n      camera.resetAspectRatio();\n      !isPaused && engine.resume();\n    }, isPNG ? \"image/png\" : \"image/jpeg\", !isPNG && jpgQuality);\n  }\n\n  function openDebug() {\n    var config = {\n      width: 1024,\n      height: 1024,\n      flipY: true,\n      isPNG: true,\n      jpgQuality: 1,\n      screenshot: function screenshot() {\n        var width = config.width,\n            height = config.height,\n            flipY = config.flipY,\n            isPNG = config.isPNG,\n            jpgQuality = config.jpgQuality;\n\n        _screenshot(camera, width, height, flipY, isPNG, jpgQuality);\n      }\n    };\n    var configFolder = gui.addFolder(\"config\");\n    configFolder.add(config, \"width\", 1, 2048, 1);\n    configFolder.add(config, \"height\", 1, 2048, 1);\n    configFolder.add(config, \"flipY\");\n    configFolder.add(config, \"isPNG\");\n    configFolder.add(config, \"jpgQuality\", 0, 1, 0.01);\n    gui.add(config, \"screenshot\");\n  }\n\n  openDebug();\n});"},"name":"screenshot","id":"cc227617-91b0-536d-9b7a-e1442fc1c492"}}},"staticQueryHashes":[]}