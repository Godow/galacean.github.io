{"componentChunkName":"component---src-templates-playground-tsx","path":"/0.7/playground/buffer-mesh-interleaved","result":{"pageContext":{"node":{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title Buffer Mesh Interleaved\n   * @category Mesh\n   */\n  // Create engine and get root entity.\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var rootEntity = engine.sceneManager.activeScene.createRootEntity(\"Root\"); // Create light.\n\n  var lightEntity = rootEntity.createChild(\"pointLight\");\n  var pointLight = lightEntity.addComponent(_oasisEngine.PointLight);\n  pointLight.distance = 10;\n  lightEntity.transform.setPosition(2, 5, 5); // Create camera.\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 6, 10);\n  cameraEntity.transform.lookAt(new _oasisEngine.Vector3(0, 0, 0));\n  cameraEntity.addComponent(_oasisEngine.Camera); // Create custom cube.\n  // Use createCustomMesh() to create custom cube mesh.\n\n  var cubeEntity = rootEntity.createChild(\"Cube\");\n  var cubeRenderer = cubeEntity.addComponent(_oasisEngine.MeshRenderer);\n  var cubeGeometry = createCustomMesh(engine, 1.0);\n  var material = new _oasisEngine.BlinnPhongMaterial(engine);\n  cubeEntity.transform.rotate(0, 60, 0);\n  cubeRenderer.mesh = cubeGeometry;\n  cubeRenderer.setMaterial(material); // Run engine.\n\n  engine.run();\n  /**\n   * Create cube geometry with custom BufferGeometry.\n   * @param engine - Engine\n   * @param size - Cube size\n   * @returns Cube mesh\n   */\n\n  function createCustomMesh(engine, size) {\n    var geometry = new _oasisEngine.BufferMesh(engine, \"CustomCubeGeometry\"); // prettier-ignore\n    // Create vertices data.\n\n    var vertices = new Float32Array([// Up\n    -size, size, -size, 0, 1, 0, size, size, -size, 0, 1, 0, size, size, size, 0, 1, 0, -size, size, size, 0, 1, 0, // Down\n    -size, -size, -size, 0, -1, 0, size, -size, -size, 0, -1, 0, size, -size, size, 0, -1, 0, -size, -size, size, 0, -1, 0, // Left\n    -size, size, -size, -1, 0, 0, -size, size, size, -1, 0, 0, -size, -size, size, -1, 0, 0, -size, -size, -size, -1, 0, 0, // Right\n    size, size, -size, 1, 0, 0, size, size, size, 1, 0, 0, size, -size, size, 1, 0, 0, size, -size, -size, 1, 0, 0, // Front\n    -size, size, size, 0, 0, 1, size, size, size, 0, 0, 1, size, -size, size, 0, 0, 1, -size, -size, size, 0, 0, 1, // Back\n    -size, size, -size, 0, 0, -1, size, size, -size, 0, 0, -1, size, -size, -size, 0, 0, -1, -size, -size, -size, 0, 0, -1]); // prettier-ignore\n    // Create indices data.\n\n    var indices = new Uint16Array([// Up\n    0, 2, 1, 2, 0, 3, // Down\n    4, 6, 7, 6, 4, 5, // Left\n    8, 10, 9, 10, 8, 11, // Right\n    12, 14, 15, 14, 12, 13, // Front\n    16, 18, 17, 18, 16, 19, // Back\n    20, 22, 23, 22, 20, 21]); // Create gpu vertex buffer and index buffer.\n\n    var vertexBuffer = new _oasisEngine.Buffer(engine, _oasisEngine.BufferBindFlag.VertexBuffer, vertices, _oasisEngine.BufferUsage.Static);\n    var indexBuffer = new _oasisEngine.Buffer(engine, _oasisEngine.BufferBindFlag.IndexBuffer, indices, _oasisEngine.BufferUsage.Static); // Bind buffer\n\n    geometry.setVertexBufferBinding(vertexBuffer, 24);\n    geometry.setIndexBufferBinding(indexBuffer, _oasisEngine.IndexFormat.UInt16); // Add vertexElement\n\n    geometry.setVertexElements([new _oasisEngine.VertexElement(\"POSITION\", 0, _oasisEngine.VertexElementFormat.Vector3, 0), new _oasisEngine.VertexElement(\"NORMAL\", 12, _oasisEngine.VertexElementFormat.Vector3, 0)]); // Add one sub geometry.\n\n    geometry.addSubMesh(0, indices.length);\n    return geometry;\n  }\n});"},"name":"buffer-mesh-interleaved","id":"bb5d8656-915d-5923-80b4-1f1b7d726c53"}}},"staticQueryHashes":[]}