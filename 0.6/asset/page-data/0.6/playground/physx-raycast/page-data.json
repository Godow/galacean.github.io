{"componentChunkName":"component---src-templates-playground-tsx","path":"/0.6/playground/physx-raycast","result":{"pageContext":{"node":{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@oasis-engine/math\", \"@oasis-engine/controls\", \"@oasis-engine/physics-physx\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@oasis-engine/math\"), require(\"@oasis-engine/controls\"), require(\"@oasis-engine/physics-physx\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global[\"@oasisEngine/math\"], global[\"@oasisEngine/controls\"], global.PHYSX);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, _math, _controls, _physicsPhysx) {\n  \"use strict\";\n\n  /**\n   * @title PhysX Raycast\n   * @category Physics\n   */\n  _physicsPhysx.PhysXPhysics.init().then(function () {\n    var engine = new _oasisEngine.WebGLEngine(\"canvas\", _physicsPhysx.PhysXPhysics);\n    engine.canvas.resizeByClientSize();\n    var scene = engine.sceneManager.activeScene;\n    var rootEntity = scene.createRootEntity(); // init camera\n\n    var cameraEntity = rootEntity.createChild(\"camera\");\n    cameraEntity.addComponent(_oasisEngine.Camera);\n    var pos = cameraEntity.transform.position;\n    pos.setValue(10, 10, 10);\n    cameraEntity.transform.position = pos;\n    cameraEntity.addComponent(_controls.OrbitControl); // init light\n\n    scene.ambientLight.diffuseSolidColor.setValue(1, 1, 1, 1);\n    scene.ambientLight.diffuseIntensity = 1.2;\n    var light = rootEntity.createChild(\"light\");\n    light.transform.position = new _math.Vector3(0, 5, 0);\n    var p = light.addComponent(_oasisEngine.PointLight);\n    p.intensity = 0.3;\n    init();\n    window.addEventListener(\"mousedown\", function (event) {\n      var ray = new _oasisEngine.Ray();\n      cameraEntity.getComponent(_oasisEngine.Camera).screenPointToRay(new _math.Vector2(event.pageX * window.devicePixelRatio, event.pageY * window.devicePixelRatio), ray);\n      var hit = new _oasisEngine.HitResult();\n      var result = engine.physicsManager.raycast(ray, Number.MAX_VALUE, _oasisEngine.Layer.Layer0, hit);\n\n      if (result) {\n        var mtl = new _oasisEngine.BlinnPhongMaterial(engine);\n        var color = mtl.baseColor;\n        color.r = Math.random();\n        color.g = Math.random();\n        color.b = Math.random();\n        color.a = 1.0;\n        var meshes = [];\n        hit.entity.getComponentsIncludeChildren(_oasisEngine.MeshRenderer, meshes);\n        meshes.forEach(function (mesh) {\n          mesh.setMaterial(mtl);\n        });\n      }\n    });\n    window.addEventListener(\"mousedown\", function (event) {\n      if (event.button === 2) {\n        if (Math.random() > 0.5) {\n          addSphere(0.5, new _math.Vector3(Math.floor(Math.random() * 6) - 2.5, 5, Math.floor(Math.random() * 6) - 2.5), new _math.Quaternion(0, 0, 0.3, 0.7));\n        } else {\n          addCapsule(0.5, 2.0, new _math.Vector3(Math.floor(Math.random() * 6) - 2.5, 5, Math.floor(Math.random() * 6) - 2.5), new _math.Quaternion(0, 0, 0.3, 0.7));\n        }\n      }\n    });\n    engine.run(); //--------------------------------------------------------------------------------------------------------------------\n    // init scene\n\n    function init() {\n      addPlane(new _math.Vector3(30, 0.1, 30), new _math.Vector3(), new _math.Quaternion()); // eslint-disable-next-line no-plusplus\n\n      for (var i = 0; i < 5; i++) {\n        // eslint-disable-next-line no-plusplus\n        for (var j = 0; j < 5; j++) {\n          addBox(new _math.Vector3(1, 1, 1), new _math.Vector3(-2.5 + i + 0.1 * i, Math.floor(Math.random() * 6) + 1, -2.5 + j + 0.1 * j), new _math.Quaternion(0, 0, 0.3, 0.7));\n        }\n      }\n    } //--------------------------------------------------------------------------------------------------------------------\n\n\n    function addPlane(size, position, rotation) {\n      var mtl = new _oasisEngine.BlinnPhongMaterial(engine);\n      mtl.baseColor.setValue(0.03179807202597362, 0.3939682161541871, 0.41177952549087604, 1);\n      var planeEntity = rootEntity.createChild();\n      planeEntity.layer = _oasisEngine.Layer.Layer1;\n      var renderer = planeEntity.addComponent(_oasisEngine.MeshRenderer);\n      renderer.mesh = _oasisEngine.PrimitiveMesh.createCuboid(engine, size.x, size.y, size.z);\n      renderer.setMaterial(mtl);\n      planeEntity.transform.position = position;\n      planeEntity.transform.rotationQuaternion = rotation;\n      var physicsPlane = new _oasisEngine.PlaneColliderShape();\n      physicsPlane.setPosition(0, size.y, 0);\n      var planeCollider = planeEntity.addComponent(_oasisEngine.StaticCollider);\n      planeCollider.addShape(physicsPlane);\n      return planeEntity;\n    }\n\n    function addBox(size, position, rotation) {\n      var mtl = new _oasisEngine.BlinnPhongMaterial(engine);\n      mtl.baseColor.setValue(Math.random(), Math.random(), Math.random(), 1.0);\n      var boxEntity = rootEntity.createChild();\n      var renderer = boxEntity.addComponent(_oasisEngine.MeshRenderer);\n      renderer.mesh = _oasisEngine.PrimitiveMesh.createCuboid(engine, size.x, size.y, size.z);\n      renderer.setMaterial(mtl);\n      boxEntity.transform.position = position;\n      boxEntity.transform.rotationQuaternion = rotation;\n      var physicsBox = new _oasisEngine.BoxColliderShape();\n      physicsBox.size = size;\n      physicsBox.isTrigger = false;\n      var boxCollider = boxEntity.addComponent(_oasisEngine.StaticCollider);\n      boxCollider.addShape(physicsBox);\n      return boxEntity;\n    }\n\n    function addSphere(radius, position, rotation) {\n      var mtl = new _oasisEngine.BlinnPhongMaterial(engine);\n      mtl.baseColor.setValue(Math.random(), Math.random(), Math.random(), 1.0);\n      var sphereEntity = rootEntity.createChild();\n      var renderer = sphereEntity.addComponent(_oasisEngine.MeshRenderer);\n      renderer.mesh = _oasisEngine.PrimitiveMesh.createSphere(engine, radius);\n      renderer.setMaterial(mtl);\n      sphereEntity.transform.position = position;\n      sphereEntity.transform.rotationQuaternion = rotation;\n      var physicsSphere = new _oasisEngine.SphereColliderShape();\n      physicsSphere.radius = radius;\n      var sphereCollider = sphereEntity.addComponent(_oasisEngine.DynamicCollider);\n      sphereCollider.addShape(physicsSphere);\n      return sphereEntity;\n    }\n\n    function addCapsule(radius, height, position, rotation) {\n      var mtl = new _oasisEngine.BlinnPhongMaterial(engine);\n      mtl.baseColor.setValue(Math.random(), Math.random(), Math.random(), 1.0);\n      var capsuleEntity = rootEntity.createChild();\n      var renderer = capsuleEntity.addComponent(_oasisEngine.MeshRenderer);\n      renderer.mesh = _oasisEngine.PrimitiveMesh.createCapsule(engine, radius, height, 20);\n      renderer.setMaterial(mtl);\n      capsuleEntity.transform.position = position;\n      capsuleEntity.transform.rotationQuaternion = rotation;\n      var physicsCapsule = new _oasisEngine.CapsuleColliderShape();\n      physicsCapsule.radius = radius;\n      physicsCapsule.height = height;\n      var capsuleCollider = capsuleEntity.addComponent(_oasisEngine.DynamicCollider);\n      capsuleCollider.addShape(physicsCapsule);\n      return capsuleEntity;\n    }\n  });\n});"},"name":"physx-raycast","id":"2c10317f-af4a-5270-b6aa-68005ea43397"}}},"staticQueryHashes":[]}