{"componentChunkName":"component---src-templates-playground-tsx","path":"/0.6/playground/physx-collision-detection","result":{"pageContext":{"node":{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@oasis-engine/controls\", \"@oasis-engine/physics-physx\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@oasis-engine/controls\"), require(\"@oasis-engine/physics-physx\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global[\"@oasisEngine/controls\"], global.PHYSX);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, _controls, _physicsPhysx) {\n  \"use strict\";\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  _physicsPhysx.PhysXPhysics.init().then(function () {\n    var engine = new _oasisEngine.WebGLEngine(\"canvas\", _physicsPhysx.PhysXPhysics);\n    engine.canvas.resizeByClientSize();\n    var scene = engine.sceneManager.activeScene;\n    var rootEntity = scene.createRootEntity(\"root\");\n    scene.ambientLight.diffuseSolidColor.setValue(1, 1, 1, 1);\n    scene.ambientLight.diffuseIntensity = 1.2; // init camera\n\n    var cameraEntity = rootEntity.createChild(\"camera\");\n    cameraEntity.addComponent(_oasisEngine.Camera);\n    cameraEntity.transform.setPosition(10, 10, 10);\n    cameraEntity.addComponent(_controls.OrbitControl); // init point light\n\n    var light = rootEntity.createChild(\"light\");\n    light.transform.setPosition(0, 3, 0);\n    var pointLight = light.addComponent(_oasisEngine.PointLight);\n    pointLight.intensity = 0.3; // create box test entity\n\n    var cubeSize = 2.0;\n    var boxEntity = rootEntity.createChild(\"BoxEntity\");\n    var boxMtl = new _oasisEngine.BlinnPhongMaterial(engine);\n    var boxRenderer = boxEntity.addComponent(_oasisEngine.MeshRenderer);\n    boxMtl.baseColor.setValue(0.6, 0.3, 0.3, 1.0);\n    boxRenderer.mesh = _oasisEngine.PrimitiveMesh.createCuboid(engine, cubeSize, cubeSize, cubeSize);\n    boxRenderer.setMaterial(boxMtl);\n    var physicsBox = new _oasisEngine.BoxColliderShape();\n    physicsBox.size = new _oasisEngine.Vector3(cubeSize, cubeSize, cubeSize);\n    physicsBox.material.staticFriction = 0.1;\n    physicsBox.material.dynamicFriction = 0.2;\n    physicsBox.material.bounciness = 1;\n    physicsBox.isTrigger = true;\n    var boxCollider = boxEntity.addComponent(_oasisEngine.StaticCollider);\n    boxCollider.addShape(physicsBox); // create sphere test entity\n\n    var radius = 1.25;\n    var sphereEntity = rootEntity.createChild(\"SphereEntity\");\n    sphereEntity.transform.setPosition(-2, 0, 0);\n    var sphereMtl = new _oasisEngine.BlinnPhongMaterial(engine);\n    var sphereRenderer = sphereEntity.addComponent(_oasisEngine.MeshRenderer);\n    sphereMtl.baseColor.setValue(Math.random(), Math.random(), Math.random(), 1.0);\n    sphereRenderer.mesh = _oasisEngine.PrimitiveMesh.createSphere(engine, radius);\n    sphereRenderer.setMaterial(sphereMtl);\n    var physicsSphere = new _oasisEngine.SphereColliderShape();\n    physicsSphere.radius = radius;\n    physicsSphere.material.staticFriction = 0.1;\n    physicsSphere.material.dynamicFriction = 0.2;\n    physicsSphere.material.bounciness = 1; // sphereEntity.transform.setScale(3,3,3);\n\n    var sphereCollider = sphereEntity.addComponent(_oasisEngine.DynamicCollider);\n    sphereCollider.addShape(physicsSphere);\n\n    var MoveScript = /*#__PURE__*/function (_Script) {\n      _inheritsLoose(MoveScript, _Script);\n\n      function MoveScript() {\n        var _this;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = _Script.call.apply(_Script, [this].concat(args)) || this;\n        _this.pos = new _oasisEngine.Vector3(-5, 0, 0);\n        _this.vel = 0.005;\n        _this.velSign = -1;\n        return _this;\n      }\n\n      var _proto = MoveScript.prototype;\n\n      _proto.onUpdate = function onUpdate(deltaTime) {\n        _Script.prototype.onUpdate.call(this, deltaTime);\n\n        if (this.pos.x >= 5) {\n          this.velSign = -1;\n        }\n\n        if (this.pos.x <= -5) {\n          this.velSign = 1;\n        }\n\n        this.pos.x += deltaTime * this.vel * this.velSign;\n        this.entity.transform.position = this.pos;\n      };\n\n      return MoveScript;\n    }(_oasisEngine.Script); // Collision Detection\n\n\n    var CollisionScript = /*#__PURE__*/function (_Script2) {\n      _inheritsLoose(CollisionScript, _Script2);\n\n      function CollisionScript() {\n        return _Script2.apply(this, arguments) || this;\n      }\n\n      var _proto2 = CollisionScript.prototype;\n\n      _proto2.onTriggerExit = function onTriggerExit(other) {\n        sphereRenderer.getMaterial().baseColor.setValue(Math.random(), Math.random(), Math.random(), 1.0);\n      };\n\n      _proto2.onTriggerEnter = function onTriggerEnter(other) {\n        sphereRenderer.getMaterial().baseColor.setValue(Math.random(), Math.random(), Math.random(), 1.0);\n      };\n\n      _proto2.onTriggerStay = function onTriggerStay(other) {\n        console.log(\"hahaha\");\n      };\n\n      return CollisionScript;\n    }(_oasisEngine.Script);\n\n    sphereEntity.addComponent(CollisionScript);\n    sphereEntity.addComponent(MoveScript); // Run engine\n\n    engine.run();\n  });\n});"},"name":"physx-collision-detection","id":"d7f428ed-652f-5d07-bb9d-c2ffa9f340fd"}}},"staticQueryHashes":[]}