{"componentChunkName":"component---src-templates-playground-tsx","path":"/0.6/playground/tiling-offset","result":{"pageContext":{"node":{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  init();\n\n  function init() {\n    // Create engine object\n    var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n    engine.canvas.resizeByClientSize(); // Load texture\n\n    engine.resourceManager.load({\n      url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Umw_RJGiZLYAAAAAAAAAAAAAARQnAQ\",\n      type: _oasisEngine.AssetType.Texture2D\n    }).then(function (texture) {\n      var scene = engine.sceneManager.activeScene;\n      var rootEntity = scene.createRootEntity(); // Create camera\n\n      var cameraEntity = rootEntity.createChild(\"Camera\");\n      cameraEntity.transform.position = new _oasisEngine.Vector3(0, 0, 20);\n      cameraEntity.addComponent(_oasisEngine.Camera);\n      cameraEntity.addComponent(_controls.OrbitControl); // Create plane\n\n      var entity = rootEntity.createChild();\n      entity.transform.setRotation(90, 0, 0);\n      var renderer = entity.addComponent(_oasisEngine.MeshRenderer);\n\n      var mesh = _oasisEngine.PrimitiveMesh.createPlane(engine, 10, 10);\n\n      var material = new _oasisEngine.UnlitMaterial(engine);\n      texture.anisoLevel = 16;\n      material.renderFace = _oasisEngine.RenderFace.Double;\n      material.baseTexture = texture;\n      renderer.mesh = mesh;\n      renderer.setMaterial(material); // Add animation script\n\n      var animationScript = rootEntity.addComponent(AnimateScript); // Add data GUI\n\n      var guiData = addDataGUI(material, animationScript);\n      animationScript.guiData = guiData;\n      animationScript.material = material; // Run engine\n\n      engine.run();\n    });\n  }\n  /**\n   * Add data GUI.\n   */\n\n\n  function addDataGUI(material, animationScript) {\n    var gui = new dat.GUI();\n    var guiData = {\n      tilingX: 1,\n      tilingY: 1,\n      offsetX: 0,\n      offsetY: 0,\n      reset: function reset() {\n        guiData.tilingX = 1;\n        guiData.tilingY = 1;\n        guiData.offsetX = 0;\n        guiData.offsetY = 0;\n        material.tilingOffset.setValue(1, 1, 0, 0);\n      },\n      pause: function pause() {\n        animationScript.enabled = false;\n      },\n      resume: function resume() {\n        animationScript.enabled = true;\n      }\n    };\n    gui.add(guiData, \"tilingX\", 0, 10).onChange(function (value) {\n      material.tilingOffset.x = value;\n    }).listen();\n    gui.add(guiData, \"tilingY\", 0, 10).onChange(function (value) {\n      material.tilingOffset.y = value;\n    }).listen();\n    gui.add(guiData, \"offsetX\", 0, 1).onChange(function (value) {\n      material.tilingOffset.z = value;\n    }).listen();\n    gui.add(guiData, \"offsetY\", 0, 1).onChange(function (value) {\n      material.tilingOffset.w = value;\n    }).listen();\n    gui.add(guiData, \"reset\").name(\"重置\");\n    gui.add(guiData, \"pause\").name(\"暂停动画\");\n    gui.add(guiData, \"resume\").name(\"继续动画\");\n    return guiData;\n  }\n  /**\n   * Animation script.\n   */\n\n\n  var AnimateScript = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(AnimateScript, _Script);\n\n    function AnimateScript() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _Script.call.apply(_Script, [this].concat(args)) || this;\n      _this.guiData = void 0;\n      return _this;\n    }\n\n    var _proto = AnimateScript.prototype;\n\n    /**\n     * The main loop, called frame by frame.\n     * @param deltaTime - The deltaTime when the script update.\n     */\n    _proto.onUpdate = function onUpdate(deltaTime) {\n      var material = this.material,\n          guiData = this.guiData;\n      material.tilingOffset.x = guiData.tilingX = (guiData.tilingX - 1 + deltaTime * 0.001) % 9 + 1;\n      material.tilingOffset.y = guiData.tilingY = (guiData.tilingY - 1 + deltaTime * 0.001) % 9 + 1;\n    };\n\n    return AnimateScript;\n  }(_oasisEngine.Script);\n});"},"name":"tiling-offset","id":"386cf00e-6fc8-53d2-8e6a-89bf74c01330"}}},"staticQueryHashes":[]}