{"componentChunkName":"component---src-pages-examples-tsx","path":"/0.6/examples","result":{"data":{"allPlayground":{"nodes":[{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title Animation Cross Fade\n   * @category Animation\n   */\n  var gui = new dat.GUI(); //-- create engine object\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity();\n  var lightEntity = rootEntity.createChild(\"light\");\n  lightEntity.transform.rotate(0, 180, 0);\n  var light = lightEntity.addComponent(_oasisEngine.DirectLight);\n  light.color = new _oasisEngine.Color(0.8, 0.8, 0.8, 1.0); //-- create camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_entity\");\n  cameraEntity.transform.setPosition(0, 0, -10);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl);\n  engine.run();\n  engine.resourceManager.load(\"https://gw.alipayobjects.com/os/OasisHub/267000040/494/redPacket.gltf\").then(function (asset) {\n    var animations = asset.animations,\n        defaultSceneRoot = asset.defaultSceneRoot;\n    var animationNameList = animations.map(function (_ref) {\n      var name = _ref.name;\n      return name;\n    });\n    rootEntity.addChild(defaultSceneRoot);\n    var animator = defaultSceneRoot.getComponent(_oasisEngine.Animator);\n    animator.play(animationNameList[0]);\n    var debugInfo = {\n      animation: animationNameList[0],\n      crossFade: true,\n      crossTime: 1\n    };\n    gui.add(debugInfo, \"animation\", animationNameList).onChange(function (v) {\n      var crossFade = debugInfo.crossFade,\n          crossTime = debugInfo.crossTime;\n\n      if (crossFade) {\n        animator.crossFade(v, crossTime);\n      } else {\n        animator.play(v);\n      }\n    });\n    gui.add(debugInfo, \"crossFade\");\n    gui.add(debugInfo, \"crossTime\", 0, 5).name(\"过渡时间(秒)\");\n  });\n});"},"name":"animation-cross-fade","title":"Animation Cross Fade","category":"Animation","id":"c95dc88d-3e84-50b2-9524-724c58add9af","sourceCode":"/**\n * @title Animation Cross Fade\n * @category Animation\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\nimport { Animator, Camera, Color, DirectLight, GLTFResource, WebGLEngine } from \"oasis-engine\";\n\nconst gui = new dat.GUI();\n\n//-- create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\nconst lightEntity = rootEntity.createChild(\"light\");\nlightEntity.transform.rotate(0, 180, 0);\n\nconst light = lightEntity.addComponent(DirectLight);\nlight.color = new Color(0.8, 0.8, 0.8, 1.0);\n\n//-- create camera\nconst cameraEntity = rootEntity.createChild(\"camera_entity\");\ncameraEntity.transform.setPosition(0, 0, -10);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\nengine.run();\n\nengine.resourceManager\n  .load<GLTFResource>(\"https://gw.alipayobjects.com/os/OasisHub/267000040/494/redPacket.gltf\")\n  .then((asset) => {\n    const { animations, defaultSceneRoot } = asset;\n    const animationNameList = animations.map(({ name }) => name);\n\n    rootEntity.addChild(defaultSceneRoot);\n\n    const animator = defaultSceneRoot.getComponent(Animator);\n    animator.play(animationNameList[0]);\n\n    const debugInfo = {\n      animation: animationNameList[0],\n      crossFade: true,\n      crossTime: 1\n    };\n\n    gui.add(debugInfo, \"animation\", animationNameList).onChange((v) => {\n      const { crossFade, crossTime } = debugInfo;\n      if (crossFade) {\n        animator.crossFade(v, crossTime);\n      } else {\n        animator.play(v);\n      }\n    });\n\n    gui.add(debugInfo, \"crossFade\");\n    gui.add(debugInfo, \"crossTime\", 0, 5).name(\"过渡时间(秒)\");\n  });\n","formatedCode":"<span class=\"token comment\">/**\n * @title Animation Cross Fade\n * @category Animation\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Animator<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> Color<span class=\"token punctuation\">,</span> DirectLight<span class=\"token punctuation\">,</span> GLTFResource<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> lightEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"light\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">180</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> light <span class=\"token operator\">=</span> lightEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlight<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_entity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>GLTFResource<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://gw.alipayobjects.com/os/OasisHub/267000040/494/redPacket.gltf\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">asset</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> animations<span class=\"token punctuation\">,</span> defaultSceneRoot <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> asset<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> animationNameList <span class=\"token operator\">=</span> animations<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> name <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>defaultSceneRoot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> animator <span class=\"token operator\">=</span> defaultSceneRoot<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>Animator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    animator<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span>animationNameList<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> debugInfo <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      animation<span class=\"token operator\">:</span> animationNameList<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      crossFade<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      crossTime<span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>debugInfo<span class=\"token punctuation\">,</span> <span class=\"token string\">\"animation\"</span><span class=\"token punctuation\">,</span> animationNameList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> crossFade<span class=\"token punctuation\">,</span> crossTime <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> debugInfo<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>crossFade<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        animator<span class=\"token punctuation\">.</span><span class=\"token function\">crossFade</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> crossTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        animator<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>debugInfo<span class=\"token punctuation\">,</span> <span class=\"token string\">\"crossFade\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>debugInfo<span class=\"token punctuation\">,</span> <span class=\"token string\">\"crossTime\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"过渡时间(秒)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title AmbientLight\n   * @category Light\n   */\n  _oasisEngine.Logger.enable();\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity();\n  var gui = new dat.GUI(); // Create camera\n\n  var cameraNode = rootEntity.createChild(\"camera_node\");\n  cameraNode.transform.position = new _oasisEngine.Vector3(-3, 0, 3);\n  cameraNode.addComponent(_oasisEngine.Camera);\n  cameraNode.addComponent(_controls.OrbitControl); // Create sky\n\n  var sky = scene.background.sky;\n  var skyMaterial = new _oasisEngine.SkyBoxMaterial(engine);\n  scene.background.mode = _oasisEngine.BackgroundMode.Sky;\n  sky.material = skyMaterial;\n  sky.mesh = _oasisEngine.PrimitiveMesh.createCuboid(engine, 1, 1, 1);\n  var lightEntity = rootEntity.createChild();\n  lightEntity.addComponent(_oasisEngine.DirectLight).intensity = 0.5;\n  lightEntity.transform.setPosition(5, 5, 5);\n  lightEntity.transform.lookAt(new _oasisEngine.Vector3(0, 0, 0)); // material ball\n\n  var ball = rootEntity.createChild(\"ball\");\n  var ballRender = ball.addComponent(_oasisEngine.MeshRenderer);\n  var material = new _oasisEngine.PBRMaterial(engine);\n  material.metallic = 0;\n  material.roughness = 0;\n  ballRender.mesh = _oasisEngine.PrimitiveMesh.createSphere(engine, 1, 64);\n  ballRender.setMaterial(material);\n  engine.resourceManager.load({\n    type: _oasisEngine.AssetType.Env,\n    url: \"https://gw.alipayobjects.com/os/bmw-prod/258a783d-0673-4b47-907a-da17b882feee.bin\"\n  }).then(function (ambientLight) {\n    scene.ambientLight = ambientLight;\n    skyMaterial.textureCubeMap = ambientLight.specularTexture;\n    skyMaterial.textureDecodeRGBM = true;\n    openDebug(ambientLight.specularTexture);\n    engine.run();\n  });\n\n  function openDebug(specularTexture) {\n    var info = {\n      diffuseMode: \"SphericalHarmonics\",\n      diffuseSolidColor: [0.212 * 255, 0.227 * 255, 0.259 * 255],\n      specularTexture: true\n    };\n    gui.add(info, \"diffuseMode\", [\"SolidColor\", \"SphericalHarmonics\"]).onChange(function (v) {\n      if (v === \"SphericalHarmonics\") {\n        scene.ambientLight.diffuseMode = _oasisEngine.DiffuseMode.SphericalHarmonics;\n      } else if (v === \"SolidColor\") {\n        scene.ambientLight.diffuseMode = _oasisEngine.DiffuseMode.SolidColor;\n      }\n    });\n    gui.addColor(info, \"diffuseSolidColor\").onChange(function (v) {\n      scene.ambientLight.diffuseSolidColor.setValue(v[0] / 255, v[1] / 255, v[2] / 255, 1);\n    });\n    gui.add(info, \"specularTexture\").onChange(function (v) {\n      if (v) {\n        scene.ambientLight.specularTexture = specularTexture;\n      } else {\n        scene.ambientLight.specularTexture = null;\n      }\n    }); // env light debug\n\n    gui.add(scene.ambientLight, \"specularIntensity\", 0, 1);\n    gui.add(scene.ambientLight, \"diffuseIntensity\", 0, 1);\n  }\n});"},"name":"ambient-light","title":"AmbientLight","category":"Light","id":"d94466d1-7d18-51e8-a1e8-e242d2a43ac5","sourceCode":"/**\n * @title AmbientLight\n * @category Light\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\nimport {\n  AmbientLight,\n  AssetType,\n  BackgroundMode,\n  Camera,\n  DiffuseMode,\n  DirectLight,\n  Logger,\n  MeshRenderer,\n  PBRMaterial,\n  PrimitiveMesh,\n  SkyBoxMaterial,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\nLogger.enable();\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\nconst gui = new dat.GUI();\n\n// Create camera\nconst cameraNode = rootEntity.createChild(\"camera_node\");\ncameraNode.transform.position = new Vector3(-3, 0, 3);\ncameraNode.addComponent(Camera);\ncameraNode.addComponent(OrbitControl);\n\n// Create sky\nconst sky = scene.background.sky;\nconst skyMaterial = new SkyBoxMaterial(engine);\nscene.background.mode = BackgroundMode.Sky;\nsky.material = skyMaterial;\nsky.mesh = PrimitiveMesh.createCuboid(engine, 1, 1, 1);\n\nconst lightEntity = rootEntity.createChild();\nlightEntity.addComponent(DirectLight).intensity = 0.5;\nlightEntity.transform.setPosition(5, 5, 5);\nlightEntity.transform.lookAt(new Vector3(0, 0, 0));\n\n// material ball\nconst ball = rootEntity.createChild(\"ball\");\nconst ballRender = ball.addComponent(MeshRenderer);\nconst material = new PBRMaterial(engine);\nmaterial.metallic = 0;\nmaterial.roughness = 0;\nballRender.mesh = PrimitiveMesh.createSphere(engine, 1, 64);\nballRender.setMaterial(material);\n\nengine.resourceManager\n  .load<AmbientLight>({\n    type: AssetType.Env,\n    url: \"https://gw.alipayobjects.com/os/bmw-prod/258a783d-0673-4b47-907a-da17b882feee.bin\"\n  })\n  .then((ambientLight) => {\n    scene.ambientLight = ambientLight;\n    skyMaterial.textureCubeMap = ambientLight.specularTexture;\n    skyMaterial.textureDecodeRGBM = true;\n    openDebug(ambientLight.specularTexture);\n    engine.run();\n  });\n\nfunction openDebug(specularTexture) {\n  const info = {\n    diffuseMode: \"SphericalHarmonics\",\n    diffuseSolidColor: [0.212 * 255, 0.227 * 255, 0.259 * 255],\n    specularTexture: true\n  };\n\n  gui.add(info, \"diffuseMode\", [\"SolidColor\", \"SphericalHarmonics\"]).onChange((v) => {\n    if (v === \"SphericalHarmonics\") {\n      scene.ambientLight.diffuseMode = DiffuseMode.SphericalHarmonics;\n    } else if (v === \"SolidColor\") {\n      scene.ambientLight.diffuseMode = DiffuseMode.SolidColor;\n    }\n  });\n\n  gui.addColor(info, \"diffuseSolidColor\").onChange((v) => {\n    scene.ambientLight.diffuseSolidColor.setValue(v[0] / 255, v[1] / 255, v[2] / 255, 1);\n  });\n\n  gui.add(info, \"specularTexture\").onChange((v) => {\n    if (v) {\n      scene.ambientLight.specularTexture = specularTexture;\n    } else {\n      scene.ambientLight.specularTexture = null;\n    }\n  });\n\n  // env light debug\n  gui.add(scene.ambientLight, \"specularIntensity\", 0, 1);\n  gui.add(scene.ambientLight, \"diffuseIntensity\", 0, 1);\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title AmbientLight\n * @category Light\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AmbientLight<span class=\"token punctuation\">,</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  BackgroundMode<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  DiffuseMode<span class=\"token punctuation\">,</span>\n  DirectLight<span class=\"token punctuation\">,</span>\n  Logger<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  PBRMaterial<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  SkyBoxMaterial<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\nLogger<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera</span>\n<span class=\"token keyword\">const</span> cameraNode <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create sky</span>\n<span class=\"token keyword\">const</span> sky <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span>background<span class=\"token punctuation\">.</span>sky<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> skyMaterial <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SkyBoxMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nscene<span class=\"token punctuation\">.</span>background<span class=\"token punctuation\">.</span>mode <span class=\"token operator\">=</span> BackgroundMode<span class=\"token punctuation\">.</span>Sky<span class=\"token punctuation\">;</span>\nsky<span class=\"token punctuation\">.</span>material <span class=\"token operator\">=</span> skyMaterial<span class=\"token punctuation\">;</span>\nsky<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> lightEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\nlightEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// material ball</span>\n<span class=\"token keyword\">const</span> ball <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ball\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> ballRender <span class=\"token operator\">=</span> ball<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PBRMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmaterial<span class=\"token punctuation\">.</span>metallic <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\nmaterial<span class=\"token punctuation\">.</span>roughness <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\nballRender<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createSphere</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nballRender<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>AmbientLight<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Env<span class=\"token punctuation\">,</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/258a783d-0673-4b47-907a-da17b882feee.bin\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ambientLight</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    scene<span class=\"token punctuation\">.</span>ambientLight <span class=\"token operator\">=</span> ambientLight<span class=\"token punctuation\">;</span>\n    skyMaterial<span class=\"token punctuation\">.</span>textureCubeMap <span class=\"token operator\">=</span> ambientLight<span class=\"token punctuation\">.</span>specularTexture<span class=\"token punctuation\">;</span>\n    skyMaterial<span class=\"token punctuation\">.</span>textureDecodeRGBM <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">openDebug</span><span class=\"token punctuation\">(</span>ambientLight<span class=\"token punctuation\">.</span>specularTexture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">openDebug</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">specularTexture</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> info <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    diffuseMode<span class=\"token operator\">:</span> <span class=\"token string\">\"SphericalHarmonics\"</span><span class=\"token punctuation\">,</span>\n    diffuseSolidColor<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0.212</span> <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.227</span> <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.259</span> <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    specularTexture<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">,</span> <span class=\"token string\">\"diffuseMode\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"SolidColor\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"SphericalHarmonics\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>v <span class=\"token operator\">===</span> <span class=\"token string\">\"SphericalHarmonics\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      scene<span class=\"token punctuation\">.</span>ambientLight<span class=\"token punctuation\">.</span>diffuseMode <span class=\"token operator\">=</span> DiffuseMode<span class=\"token punctuation\">.</span>SphericalHarmonics<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>v <span class=\"token operator\">===</span> <span class=\"token string\">\"SolidColor\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      scene<span class=\"token punctuation\">.</span>ambientLight<span class=\"token punctuation\">.</span>diffuseMode <span class=\"token operator\">=</span> DiffuseMode<span class=\"token punctuation\">.</span>SolidColor<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">addColor</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">,</span> <span class=\"token string\">\"diffuseSolidColor\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    scene<span class=\"token punctuation\">.</span>ambientLight<span class=\"token punctuation\">.</span>diffuseSolidColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">,</span> <span class=\"token string\">\"specularTexture\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      scene<span class=\"token punctuation\">.</span>ambientLight<span class=\"token punctuation\">.</span>specularTexture <span class=\"token operator\">=</span> specularTexture<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      scene<span class=\"token punctuation\">.</span>ambientLight<span class=\"token punctuation\">.</span>specularTexture <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// env light debug</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>scene<span class=\"token punctuation\">.</span>ambientLight<span class=\"token punctuation\">,</span> <span class=\"token string\">\"specularIntensity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>scene<span class=\"token punctuation\">.</span>ambientLight<span class=\"token punctuation\">,</span> <span class=\"token string\">\"diffuseIntensity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  _oasisEngine.Logger.enable();\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.width = window.innerWidth * _oasisEngine.SystemInfo.devicePixelRatio;\n  engine.canvas.height = window.innerHeight * _oasisEngine.SystemInfo.devicePixelRatio;\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_node\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 1, 5);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl).target = new _oasisEngine.Vector3(0, 1, 0);\n  var lightNode = rootEntity.createChild(\"light_node\");\n  lightNode.addComponent(_oasisEngine.DirectLight).intensity = 0.6;\n  lightNode.transform.lookAt(new _oasisEngine.Vector3(0, 0, 1));\n  lightNode.transform.rotate(new _oasisEngine.Vector3(0, 90, 0));\n\n  var EventHandlerScript = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(EventHandlerScript, _Script);\n\n    function EventHandlerScript() {\n      return _Script.apply(this, arguments) || this;\n    }\n\n    var _proto = EventHandlerScript.prototype;\n\n    _proto.test = function test() {\n      console.log(\"EventHandlerScript test triggered\");\n    };\n\n    return EventHandlerScript;\n  }(_oasisEngine.Script);\n\n  var EventHandlerScript2 = /*#__PURE__*/function (_Script2) {\n    _inheritsLoose(EventHandlerScript2, _Script2);\n\n    function EventHandlerScript2() {\n      return _Script2.apply(this, arguments) || this;\n    }\n\n    var _proto2 = EventHandlerScript2.prototype;\n\n    _proto2.test = function test() {\n      console.log(\"EventHandlerScript2 test triggered\");\n    };\n\n    return EventHandlerScript2;\n  }(_oasisEngine.Script);\n\n  engine.resourceManager.load(\"https://gw.alipayobjects.com/os/bmw-prod/5e3c1e4e-496e-45f8-8e05-f89f2bd5e4a4.glb\").then(function (asset) {\n    var animations = asset.animations,\n        defaultSceneRoot = asset.defaultSceneRoot;\n    var animator = defaultSceneRoot.addComponent(_oasisEngine.Animator);\n    defaultSceneRoot.addComponent(EventHandlerScript);\n    defaultSceneRoot.addComponent(EventHandlerScript2);\n    var animatorController = new _oasisEngine.AnimatorController();\n    var layer = new _oasisEngine.AnimatorControllerLayer(\"layer\");\n    var animatorStateMachine = new _oasisEngine.AnimatorStateMachine();\n    layer.stateMachine = animatorStateMachine;\n    animatorController.addLayer(layer);\n    animator.animatorController = animatorController;\n\n    if (animations) {\n      animations.forEach(function (clip) {\n        if (clip.name === \"run\") {\n          var animatorState = animatorStateMachine.addState(clip.name);\n          animatorState.clipStartTime = 0.1;\n          animatorState.clip = clip;\n          var event = new _oasisEngine.AnimationEvent();\n          event.functionName = \"test\";\n          event.time = 0.5;\n          clip.addEvent(event);\n        }\n      });\n    }\n\n    rootEntity.addChild(defaultSceneRoot);\n    animator.play(\"run\", 0);\n  });\n  engine.run();\n});"},"name":"animation-event","title":"Animation Event","category":"Animation","id":"1d0ffb6d-d9fa-5cfc-b0d7-345627f6353d","sourceCode":"/**\n * @title Animation Event\n * @category Animation\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport {\n  Animator,\n  Camera,\n  DirectLight,\n  Logger,\n  SystemInfo,\n  Vector3,\n  WebGLEngine,\n  AnimatorController,\n  AnimatorControllerLayer,\n  AnimatorStateMachine,\n  AnimationClip,\n  AnimationEvent,\n  Script,\n  GLTFResource\n} from \"oasis-engine\";\n\nLogger.enable();\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.width = window.innerWidth * SystemInfo.devicePixelRatio;\nengine.canvas.height = window.innerHeight * SystemInfo.devicePixelRatio;\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// camera\nconst cameraEntity = rootEntity.createChild(\"camera_node\");\ncameraEntity.transform.position = new Vector3(0, 1, 5);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl).target = new Vector3(0, 1, 0);\n\nconst lightNode = rootEntity.createChild(\"light_node\");\nlightNode.addComponent(DirectLight).intensity = 0.6;\nlightNode.transform.lookAt(new Vector3(0, 0, 1));\nlightNode.transform.rotate(new Vector3(0, 90, 0));\n\nclass EventHandlerScript extends Script {\n  test() {\n    console.log(\"EventHandlerScript test triggered\");\n  }\n}\n\nclass EventHandlerScript2 extends Script {\n  test() {\n    console.log(\"EventHandlerScript2 test triggered\");\n  }\n}\n\nengine.resourceManager\n  .load<GLTFResource>(\"https://gw.alipayobjects.com/os/bmw-prod/5e3c1e4e-496e-45f8-8e05-f89f2bd5e4a4.glb\")\n  .then((asset) => {\n    const { animations, defaultSceneRoot } = asset;\n    const animator = defaultSceneRoot.addComponent(Animator);\n    defaultSceneRoot.addComponent(EventHandlerScript);\n    defaultSceneRoot.addComponent(EventHandlerScript2);\n    const animatorController = new AnimatorController();\n    const layer = new AnimatorControllerLayer(\"layer\");\n    const animatorStateMachine = new AnimatorStateMachine();\n    layer.stateMachine = animatorStateMachine;\n    animatorController.addLayer(layer);\n    animator.animatorController = animatorController;\n\n    if (animations) {\n      animations.forEach((clip: AnimationClip) => {\n        if (clip.name === \"run\") {\n          const animatorState = animatorStateMachine.addState(clip.name);\n          animatorState.clipStartTime = 0.1;\n          animatorState.clip = clip;\n          const event = new AnimationEvent();\n          event.functionName = \"test\";\n          event.time = 0.5;\n          clip.addEvent(event);\n        }\n      });\n    }\n    rootEntity.addChild(defaultSceneRoot);\n    animator.play(\"run\", 0);\n  });\n\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Animation Event\n * @category Animation\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  Animator<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  DirectLight<span class=\"token punctuation\">,</span>\n  Logger<span class=\"token punctuation\">,</span>\n  SystemInfo<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine<span class=\"token punctuation\">,</span>\n  AnimatorController<span class=\"token punctuation\">,</span>\n  AnimatorControllerLayer<span class=\"token punctuation\">,</span>\n  AnimatorStateMachine<span class=\"token punctuation\">,</span>\n  AnimationClip<span class=\"token punctuation\">,</span>\n  AnimationEvent<span class=\"token punctuation\">,</span>\n  Script<span class=\"token punctuation\">,</span>\n  GLTFResource\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\nLogger<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>innerWidth <span class=\"token operator\">*</span> SystemInfo<span class=\"token punctuation\">.</span>devicePixelRatio<span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>innerHeight <span class=\"token operator\">*</span> SystemInfo<span class=\"token punctuation\">.</span>devicePixelRatio<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>target <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> lightNode <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"light_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">EventHandlerScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"EventHandlerScript test triggered\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">EventHandlerScript2</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"EventHandlerScript2 test triggered\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>GLTFResource<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/5e3c1e4e-496e-45f8-8e05-f89f2bd5e4a4.glb\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">asset</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> animations<span class=\"token punctuation\">,</span> defaultSceneRoot <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> asset<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> animator <span class=\"token operator\">=</span> defaultSceneRoot<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Animator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    defaultSceneRoot<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>EventHandlerScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    defaultSceneRoot<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>EventHandlerScript2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> animatorController <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AnimatorController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> layer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AnimatorControllerLayer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"layer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> animatorStateMachine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AnimatorStateMachine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    layer<span class=\"token punctuation\">.</span>stateMachine <span class=\"token operator\">=</span> animatorStateMachine<span class=\"token punctuation\">;</span>\n    animatorController<span class=\"token punctuation\">.</span><span class=\"token function\">addLayer</span><span class=\"token punctuation\">(</span>layer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    animator<span class=\"token punctuation\">.</span>animatorController <span class=\"token operator\">=</span> animatorController<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>animations<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      animations<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">clip<span class=\"token operator\">:</span> AnimationClip</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>clip<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token string\">\"run\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> animatorState <span class=\"token operator\">=</span> animatorStateMachine<span class=\"token punctuation\">.</span><span class=\"token function\">addState</span><span class=\"token punctuation\">(</span>clip<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          animatorState<span class=\"token punctuation\">.</span>clipStartTime <span class=\"token operator\">=</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">;</span>\n          animatorState<span class=\"token punctuation\">.</span>clip <span class=\"token operator\">=</span> clip<span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">const</span> event <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AnimationEvent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          event<span class=\"token punctuation\">.</span>functionName <span class=\"token operator\">=</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">;</span>\n          event<span class=\"token punctuation\">.</span>time <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n          clip<span class=\"token punctuation\">.</span><span class=\"token function\">addEvent</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>defaultSceneRoot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    animator<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"run\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  _oasisEngine.Logger.enable();\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.width = window.innerWidth * _oasisEngine.SystemInfo.devicePixelRatio;\n  engine.canvas.height = window.innerHeight * _oasisEngine.SystemInfo.devicePixelRatio;\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_node\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 1, 5);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl).target = new _oasisEngine.Vector3(0, 1, 0);\n  var lightNode = rootEntity.createChild(\"light_node\");\n  lightNode.addComponent(_oasisEngine.DirectLight).intensity = 0.6;\n  lightNode.transform.lookAt(new _oasisEngine.Vector3(0, 0, 1));\n  lightNode.transform.rotate(new _oasisEngine.Vector3(0, 90, 0));\n\n  var theScript = /*#__PURE__*/function (_StateMachineScript) {\n    _inheritsLoose(theScript, _StateMachineScript);\n\n    function theScript() {\n      return _StateMachineScript.apply(this, arguments) || this;\n    }\n\n    var _proto = theScript.prototype;\n\n    // onStateEnter is called when a transition starts and the state machine starts to evaluate this state\n    _proto.onStateEnter = function onStateEnter(animator, stateInfo, layerIndex) {\n      console.log('onStateEnter', animator, stateInfo, layerIndex);\n    } // onStateUpdate is called on each Update frame between onStateEnter and onStateExit callbacks\n    ;\n\n    _proto.onStateUpdate = function onStateUpdate(animator, stateInfo, layerIndex) {\n      console.log('onStateUpdate', animator, stateInfo, layerIndex);\n    } // onStateExit is called when a transition ends and the state machine finishes evaluating this state\n    ;\n\n    _proto.onStateExit = function onStateExit(animator, stateInfo, layerIndex) {\n      console.log('onStateExit', animator, stateInfo, layerIndex);\n    };\n\n    return theScript;\n  }(_oasisEngine.StateMachineScript);\n\n  engine.resourceManager.load(\"https://gw.alipayobjects.com/os/bmw-prod/5e3c1e4e-496e-45f8-8e05-f89f2bd5e4a4.glb\").then(function (asset) {\n    var animations = asset.animations,\n        defaultSceneRoot = asset.defaultSceneRoot;\n    var animator = defaultSceneRoot.getComponent(_oasisEngine.Animator);\n    var animatorController = new _oasisEngine.AnimatorController();\n    var layer = new _oasisEngine.AnimatorControllerLayer(\"layer\");\n    var animatorStateMachine = new _oasisEngine.AnimatorStateMachine();\n    animatorController.addLayer(layer);\n    animator.animatorController = animatorController;\n    layer.stateMachine = animatorStateMachine;\n    setTimeout(function () {\n      console.log(\"crossFade\");\n      animator.crossFade(\"run\", 0.5, 0, 0.1);\n    }, 3000);\n\n    if (animations) {\n      animations.forEach(function (clip) {\n        if (clip.name === \"walk\" || clip.name === \"run\") {\n          var animatorState = animatorStateMachine.addState(clip.name);\n          animatorState.clip = clip;\n          clip.name === \"walk\" && animatorState.addStateMachineScript(theScript);\n        }\n      });\n    }\n\n    animator.play(\"walk\");\n    animator.speed = 1;\n    rootEntity.addChild(defaultSceneRoot);\n  });\n  engine.run();\n});"},"name":"animation-stateMachineScript","title":"AnimatorStateScript","category":"Animation","id":"f6e863a4-50ff-5c15-b29f-c968d078dc11","sourceCode":"/**\n * @title AnimatorStateScript\n * @category Animation\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport {\n  Animator,\n  Camera,\n  DirectLight,\n  Logger,\n  SystemInfo,\n  Vector3,\n  WebGLEngine,\n  AnimatorController,\n  AnimatorControllerLayer,\n  AnimatorStateMachine,\n  AnimationClip,\n  GLTFResource,\n  StateMachineScript\n} from \"oasis-engine\";\n\nLogger.enable();\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.width = window.innerWidth * SystemInfo.devicePixelRatio;\nengine.canvas.height = window.innerHeight * SystemInfo.devicePixelRatio;\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// camera\nconst cameraEntity = rootEntity.createChild(\"camera_node\");\ncameraEntity.transform.position = new Vector3(0, 1, 5);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl).target = new Vector3(0, 1, 0);\n\nconst lightNode = rootEntity.createChild(\"light_node\");\nlightNode.addComponent(DirectLight).intensity = 0.6;\nlightNode.transform.lookAt(new Vector3(0, 0, 1));\nlightNode.transform.rotate(new Vector3(0, 90, 0));\n\nclass theScript extends StateMachineScript {\n  // onStateEnter is called when a transition starts and the state machine starts to evaluate this state\n  onStateEnter(animator: Animator, stateInfo: any, layerIndex: number) {\n    console.log('onStateEnter', animator, stateInfo, layerIndex);\n  }\n\n  // onStateUpdate is called on each Update frame between onStateEnter and onStateExit callbacks\n  onStateUpdate(animator: Animator, stateInfo: any, layerIndex: number) {\n    console.log('onStateUpdate', animator, stateInfo, layerIndex);\n  }\n\n  // onStateExit is called when a transition ends and the state machine finishes evaluating this state\n  onStateExit(animator: Animator, stateInfo: any, layerIndex: number) {\n    console.log('onStateExit', animator, stateInfo, layerIndex);\n  }\n}\n\nengine.resourceManager\n  .load<GLTFResource>(\"https://gw.alipayobjects.com/os/bmw-prod/5e3c1e4e-496e-45f8-8e05-f89f2bd5e4a4.glb\")\n  .then((asset) => {\n    const { animations, defaultSceneRoot } = asset;\n\n    const animator = defaultSceneRoot.getComponent(Animator);\n    const animatorController = new AnimatorController();\n    const layer = new AnimatorControllerLayer(\"layer\");\n    const animatorStateMachine = new AnimatorStateMachine();\n    animatorController.addLayer(layer);\n    animator.animatorController = animatorController;\n    layer.stateMachine = animatorStateMachine;\n    setTimeout(() => {\n      console.log(\"crossFade\");\n      animator.crossFade(\"run\", 0.5, 0, 0.1);\n    }, 3000);\n    if (animations) {\n      animations.forEach((clip: AnimationClip) => {\n        if (clip.name === \"walk\" || clip.name === \"run\") {\n          const animatorState = animatorStateMachine.addState(clip.name);\n          animatorState.clip = clip;\n          clip.name === \"walk\" && animatorState.addStateMachineScript(theScript)\n        }\n      });\n    }\n    animator.play(\"walk\");\n    animator.speed = 1\n    rootEntity.addChild(defaultSceneRoot);\n  });\n\nengine.run();\n\n","formatedCode":"<span class=\"token comment\">/**\n * @title AnimatorStateScript\n * @category Animation\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  Animator<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  DirectLight<span class=\"token punctuation\">,</span>\n  Logger<span class=\"token punctuation\">,</span>\n  SystemInfo<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine<span class=\"token punctuation\">,</span>\n  AnimatorController<span class=\"token punctuation\">,</span>\n  AnimatorControllerLayer<span class=\"token punctuation\">,</span>\n  AnimatorStateMachine<span class=\"token punctuation\">,</span>\n  AnimationClip<span class=\"token punctuation\">,</span>\n  GLTFResource<span class=\"token punctuation\">,</span>\n  StateMachineScript\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\nLogger<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>innerWidth <span class=\"token operator\">*</span> SystemInfo<span class=\"token punctuation\">.</span>devicePixelRatio<span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>innerHeight <span class=\"token operator\">*</span> SystemInfo<span class=\"token punctuation\">.</span>devicePixelRatio<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>target <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> lightNode <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"light_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">theScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StateMachineScript</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// onStateEnter is called when a transition starts and the state machine starts to evaluate this state</span>\n  <span class=\"token function\">onStateEnter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">animator<span class=\"token operator\">:</span> Animator<span class=\"token punctuation\">,</span> stateInfo<span class=\"token operator\">:</span> any<span class=\"token punctuation\">,</span> layerIndex<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'onStateEnter'</span><span class=\"token punctuation\">,</span> animator<span class=\"token punctuation\">,</span> stateInfo<span class=\"token punctuation\">,</span> layerIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// onStateUpdate is called on each Update frame between onStateEnter and onStateExit callbacks</span>\n  <span class=\"token function\">onStateUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">animator<span class=\"token operator\">:</span> Animator<span class=\"token punctuation\">,</span> stateInfo<span class=\"token operator\">:</span> any<span class=\"token punctuation\">,</span> layerIndex<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'onStateUpdate'</span><span class=\"token punctuation\">,</span> animator<span class=\"token punctuation\">,</span> stateInfo<span class=\"token punctuation\">,</span> layerIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// onStateExit is called when a transition ends and the state machine finishes evaluating this state</span>\n  <span class=\"token function\">onStateExit</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">animator<span class=\"token operator\">:</span> Animator<span class=\"token punctuation\">,</span> stateInfo<span class=\"token operator\">:</span> any<span class=\"token punctuation\">,</span> layerIndex<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'onStateExit'</span><span class=\"token punctuation\">,</span> animator<span class=\"token punctuation\">,</span> stateInfo<span class=\"token punctuation\">,</span> layerIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>GLTFResource<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/5e3c1e4e-496e-45f8-8e05-f89f2bd5e4a4.glb\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">asset</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> animations<span class=\"token punctuation\">,</span> defaultSceneRoot <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> asset<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> animator <span class=\"token operator\">=</span> defaultSceneRoot<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>Animator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> animatorController <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AnimatorController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> layer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AnimatorControllerLayer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"layer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> animatorStateMachine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AnimatorStateMachine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    animatorController<span class=\"token punctuation\">.</span><span class=\"token function\">addLayer</span><span class=\"token punctuation\">(</span>layer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    animator<span class=\"token punctuation\">.</span>animatorController <span class=\"token operator\">=</span> animatorController<span class=\"token punctuation\">;</span>\n    layer<span class=\"token punctuation\">.</span>stateMachine <span class=\"token operator\">=</span> animatorStateMachine<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"crossFade\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      animator<span class=\"token punctuation\">.</span><span class=\"token function\">crossFade</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"run\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>animations<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      animations<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">clip<span class=\"token operator\">:</span> AnimationClip</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>clip<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token string\">\"walk\"</span> <span class=\"token operator\">||</span> clip<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token string\">\"run\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> animatorState <span class=\"token operator\">=</span> animatorStateMachine<span class=\"token punctuation\">.</span><span class=\"token function\">addState</span><span class=\"token punctuation\">(</span>clip<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          animatorState<span class=\"token punctuation\">.</span>clip <span class=\"token operator\">=</span> clip<span class=\"token punctuation\">;</span>\n          clip<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token string\">\"walk\"</span> <span class=\"token operator\">&amp;&amp;</span> animatorState<span class=\"token punctuation\">.</span><span class=\"token function\">addStateMachineScript</span><span class=\"token punctuation\">(</span>theScript<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    animator<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"walk\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    animator<span class=\"token punctuation\">.</span>speed <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>defaultSceneRoot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title Animation\n   * @category Benchmark\n   */\n  // Create engine object.\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize(); // Create root entity and get scene.\n\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity();\n  scene.ambientLight.diffuseSolidColor.setValue(1, 1, 1, 1); // Create camera.\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 0, 12);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl); // Load resources and add models.\n\n  engine.resourceManager.load([{\n    url: \"https://gw.alipayobjects.com/os/loanprod/bf055064-3eec-4d40-bce0-ddf11dfbb88a/5d78db60f211d21a43834e23/4f5e6bb277dd2fab8e2097d7a418c5bc.gltf\",\n    type: _oasisEngine.AssetType.Prefab\n  }, {\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*OStMT63k5o8AAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }]).then(function (resources) {\n    var glTF = resources[0];\n    var baseTexture = resources[1];\n    var model = glTF.defaultSceneRoot;\n    glTF.materials.forEach(function (material) {\n      material.baseTexture = baseTexture;\n      material.baseColor.setValue(1, 1, 1, 1);\n    });\n\n    for (var i = 0; i < 8; i++) {\n      for (var j = 0; j < 8; j++) {\n        var modelClone = model.clone();\n        rootEntity.addChild(modelClone);\n        var transform = modelClone.transform;\n        transform.setRotation(0, -90, 0);\n        transform.setScale(0.5, 0.5, 0.5);\n        transform.setPosition(i * 1.0 - 3.0, j * 1.2, -j * 3.5);\n        modelClone.getComponent(_oasisEngine.Animator).play(\"A\");\n      }\n    }\n  }); // Run engine\n\n  engine.run();\n});"},"name":"benchmark-animation","title":"Animation","category":"Benchmark","id":"47bf0836-881e-5043-a36e-76c77426f1ce","sourceCode":"/**\n * @title Animation\n * @category Benchmark\n */\n\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport { Animator, AssetType, Camera, GLTFResource, PBRMaterial, Texture2D, WebGLEngine } from \"oasis-engine\";\n\n// Create engine object.\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\n// Create root entity and get scene.\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\nscene.ambientLight.diffuseSolidColor.setValue(1, 1, 1, 1);\n\n// Create camera.\nconst cameraEntity = rootEntity.createChild(\"Camera\");\ncameraEntity.transform.setPosition(0, 0, 12);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\n// Load resources and add models.\nengine.resourceManager\n  .load([\n    {\n      url: \"https://gw.alipayobjects.com/os/loanprod/bf055064-3eec-4d40-bce0-ddf11dfbb88a/5d78db60f211d21a43834e23/4f5e6bb277dd2fab8e2097d7a418c5bc.gltf\",\n      type: AssetType.Prefab\n    },\n    {\n      url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*OStMT63k5o8AAAAAAAAAAAAAARQnAQ\",\n      type: AssetType.Texture2D\n    }\n  ])\n  .then((resources: Object[]) => {\n    const glTF = <GLTFResource>resources[0];\n    const baseTexture = <Texture2D>resources[1];\n    const model = glTF.defaultSceneRoot;\n\n    glTF.materials.forEach((material: PBRMaterial) => {\n      material.baseTexture = baseTexture;\n      material.baseColor.setValue(1, 1, 1, 1);\n    });\n\n    for (let i = 0; i < 8; i++) {\n      for (let j = 0; j < 8; j++) {\n        const modelClone = model.clone();\n        rootEntity.addChild(modelClone);\n\n        const { transform } = modelClone;\n        transform.setRotation(0, -90, 0);\n        transform.setScale(0.5, 0.5, 0.5);\n        transform.setPosition(i * 1.0 - 3.0, j * 1.2, -j * 3.5);\n\n        modelClone.getComponent(Animator).play(\"A\");\n      }\n    }\n  });\n\n// Run engine\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Animation\n * @category Benchmark\n */</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Animator<span class=\"token punctuation\">,</span> AssetType<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> GLTFResource<span class=\"token punctuation\">,</span> PBRMaterial<span class=\"token punctuation\">,</span> Texture2D<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine object.</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create root entity and get scene.</span>\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nscene<span class=\"token punctuation\">.</span>ambientLight<span class=\"token punctuation\">.</span>diffuseSolidColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera.</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Load resources and add models.</span>\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/loanprod/bf055064-3eec-4d40-bce0-ddf11dfbb88a/5d78db60f211d21a43834e23/4f5e6bb277dd2fab8e2097d7a418c5bc.gltf\"</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Prefab\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*OStMT63k5o8AAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resources<span class=\"token operator\">:</span> Object<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> glTF <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>GLTFResource<span class=\"token operator\">></span>resources<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> baseTexture <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span>resources<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> model <span class=\"token operator\">=</span> glTF<span class=\"token punctuation\">.</span>defaultSceneRoot<span class=\"token punctuation\">;</span>\n\n    glTF<span class=\"token punctuation\">.</span>materials<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">material<span class=\"token operator\">:</span> PBRMaterial</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      material<span class=\"token punctuation\">.</span>baseTexture <span class=\"token operator\">=</span> baseTexture<span class=\"token punctuation\">;</span>\n      material<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> modelClone <span class=\"token operator\">=</span> model<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>modelClone<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> transform <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> modelClone<span class=\"token punctuation\">;</span>\n        transform<span class=\"token punctuation\">.</span><span class=\"token function\">setRotation</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        transform<span class=\"token punctuation\">.</span><span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">*</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">-</span> <span class=\"token number\">3.0</span><span class=\"token punctuation\">,</span> j <span class=\"token operator\">*</span> <span class=\"token number\">1.2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>j <span class=\"token operator\">*</span> <span class=\"token number\">3.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        modelClone<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>Animator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Run engine</span>\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"dat.gui\", \"oasis-engine\", \"@oasis-engine/controls\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"dat.gui\"), require(\"oasis-engine\"), require(\"@oasis-engine/controls\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.dat, global.oasisEngine, global[\"@oasisEngine/controls\"]);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (dat, _oasisEngine, _controls) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title Scene Background\n   * @category Scene\n   */\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var background = scene.background;\n  var root = scene.createRootEntity();\n  var cameraEntity = root.createChild();\n  cameraEntity.transform.setPosition(0, 0, 10);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl);\n  engine.run();\n\n  engine.canvas._webCanvas.addEventListener(\"onresize\", function () {\n    engine.canvas.resizeByClientSize();\n  });\n\n  engine.resourceManager //@ts-ignore\n  .load([{\n    urls: [\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5w6_Rr6ML6IAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*TiT2TbN5cG4AAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*8GF6Q4LZefUAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*D5pdRqUHC3IAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_FooTIp6pNIAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*CYGZR7ogZfoAAAAAAAAAAAAAARQnAQ\"],\n    type: _oasisEngine.AssetType.TextureCube\n  }, {\n    urls: [\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Bk5FQKGOir4AAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_cPhR7JMDjkAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*trqjQp1nOMQAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_RXwRqwMK3EAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*q4Q6TroyuXcAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*DP5QTbTSAYgAAAAAAAAAAAAAARQnAQ\"],\n    type: _oasisEngine.AssetType.TextureCube\n  }, {\n    url: \"https://gw.alipayobjects.com/mdn/rms_2e421e/afts/img/A*BcWiRYM7hroAAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }]).then(function (_ref) {\n    var cubeMap1 = _ref[0],\n        cubeMap2 = _ref[1],\n        texture = _ref[2];\n    // 添加天空盒背景\n    // background.mode = BackgroundMode.Sky; // 默认纯色背景\n    var skyMaterial = background.sky.material = new _oasisEngine.SkyBoxMaterial(engine); // 添加天空盒材质\n\n    skyMaterial.textureCubeMap = cubeMap1; // 设置立方体纹理\n\n    background.sky.mesh = _oasisEngine.PrimitiveMesh.createCuboid(engine, 2, 2, 2); // 设置天空盒网格\n\n    background.texture = texture;\n    return [cubeMap1, cubeMap2];\n  }).then(function (cubeMaps) {\n    addGUI(cubeMaps);\n  });\n\n  function addGUI(cubeMaps) {\n    var gui = new dat.GUI();\n    var colorGUI = null;\n    var cubeMapGUI = null;\n    var fitModeGUI = null;\n\n    function hide(_gui) {\n      _gui.__li.style.display = \"none\";\n    }\n\n    function show(_gui) {\n      _gui.__li.style.display = \"block\";\n    }\n\n    background.mode = _oasisEngine.BackgroundMode.Texture;\n    gui.add(background, \"mode\", {\n      Sky: _oasisEngine.BackgroundMode.Sky,\n      SolidColor: _oasisEngine.BackgroundMode.SolidColor,\n      Texture: _oasisEngine.BackgroundMode.Texture\n    }).onChange(function (v) {\n      var mode = background.mode = parseInt(v);\n      hide(colorGUI);\n      hide(cubeMapGUI);\n      hide(fitModeGUI);\n\n      switch (mode) {\n        case _oasisEngine.BackgroundMode.Sky:\n          show(cubeMapGUI);\n          break;\n\n        case _oasisEngine.BackgroundMode.SolidColor:\n          show(colorGUI);\n          break;\n\n        case _oasisEngine.BackgroundMode.Texture:\n          show(fitModeGUI);\n          break;\n      }\n    });\n    var solidColor = background.solidColor;\n    var colorObj = {\n      color: [solidColor.r / 255, solidColor.g / 255, solidColor.b / 255, solidColor.a]\n    };\n    colorGUI = gui.addColor(colorObj, \"color\").onChange(function (v) {\n      background.solidColor.setValue(v[0] / 255, v[1] / 255, v[2] / 255, v[3] / 255);\n    });\n    var obj = {\n      cubeMap: 0\n    };\n    var mode = {\n      fitMode: 1\n    };\n    cubeMapGUI = gui.add(obj, \"cubeMap\", {\n      cubeMap1: 0,\n      cubeMap2: 1\n    }).onChange(function (v) {\n      // @ts-ignore\n      background.sky.material.textureCubeMap = cubeMaps[parseInt(v)];\n    });\n    fitModeGUI = gui.add(mode, \"fitMode\", {\n      AspectFitWidth: 0,\n      AspectFitHeight: 1,\n      Fill: 2\n    }).onChange(function (v) {\n      background.textureFillMode = parseInt(v);\n    }); // init\n\n    background.mode = _oasisEngine.BackgroundMode.Texture;\n    hide(colorGUI);\n    hide(cubeMapGUI);\n    show(fitModeGUI);\n  }\n});"},"name":"background","title":"Scene Background","category":"Scene","id":"b87cc735-565d-520e-9e57-73c618c50ad4","sourceCode":"/**\n * @title Scene Background\n * @category Scene\n */\nimport * as dat from \"dat.gui\";\nimport {\n  AssetType,\n  BackgroundMode,\n  Camera,\n  PrimitiveMesh,\n  SkyBoxMaterial,\n  TextureCubeMap,\n  WebGLEngine\n} from \"oasis-engine\";\n\nimport { OrbitControl } from \"@oasis-engine/controls\";\n\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\nconst scene = engine.sceneManager.activeScene;\nconst { background } = scene;\nconst root = scene.createRootEntity();\nconst cameraEntity = root.createChild();\ncameraEntity.transform.setPosition(0, 0, 10);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\nengine.run();\n\nengine.canvas._webCanvas.addEventListener(\"onresize\", () => {\n  engine.canvas.resizeByClientSize();\n});\n\nengine.resourceManager\n  //@ts-ignore\n  .load<[TextureCubeMap, TextureCubeMap, Texture2D]>([\n    {\n      urls: [\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5w6_Rr6ML6IAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*TiT2TbN5cG4AAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*8GF6Q4LZefUAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*D5pdRqUHC3IAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_FooTIp6pNIAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*CYGZR7ogZfoAAAAAAAAAAAAAARQnAQ\"\n      ],\n      type: AssetType.TextureCube\n    },\n    {\n      urls: [\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Bk5FQKGOir4AAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_cPhR7JMDjkAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*trqjQp1nOMQAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_RXwRqwMK3EAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*q4Q6TroyuXcAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*DP5QTbTSAYgAAAAAAAAAAAAAARQnAQ\"\n      ],\n      type: AssetType.TextureCube\n    },\n    {\n      url: \"https://gw.alipayobjects.com/mdn/rms_2e421e/afts/img/A*BcWiRYM7hroAAAAAAAAAAAAAARQnAQ\",\n      type: AssetType.Texture2D\n    }\n  ])\n  .then(([cubeMap1, cubeMap2, texture]) => {\n    // 添加天空盒背景\n    // background.mode = BackgroundMode.Sky; // 默认纯色背景\n    const skyMaterial = (background.sky.material = new SkyBoxMaterial(engine)); // 添加天空盒材质\n    skyMaterial.textureCubeMap = cubeMap1; // 设置立方体纹理\n    background.sky.mesh = PrimitiveMesh.createCuboid(engine, 2, 2, 2); // 设置天空盒网格\n    background.texture = texture;\n    return [cubeMap1, cubeMap2];\n  })\n  .then((cubeMaps) => {\n    addGUI(cubeMaps);\n  });\n\nfunction addGUI(cubeMaps: TextureCubeMap[]) {\n  const gui = new dat.GUI();\n  let colorGUI = null;\n  let cubeMapGUI = null;\n  let fitModeGUI = null;\n  function hide(_gui) {\n    _gui.__li.style.display = \"none\";\n  }\n  function show(_gui) {\n    _gui.__li.style.display = \"block\";\n  }\n  background.mode = BackgroundMode.Texture;\n  gui\n    .add(background, \"mode\", {\n      Sky: BackgroundMode.Sky,\n      SolidColor: BackgroundMode.SolidColor,\n      Texture: BackgroundMode.Texture\n    })\n    .onChange((v) => {\n      const mode = (background.mode = parseInt(v));\n      hide(colorGUI);\n      hide(cubeMapGUI);\n      hide(fitModeGUI);\n      switch (mode) {\n        case BackgroundMode.Sky:\n          show(cubeMapGUI);\n          break;\n        case BackgroundMode.SolidColor:\n          show(colorGUI);\n          break;\n        case BackgroundMode.Texture:\n          show(fitModeGUI);\n          break;\n      }\n    });\n\n  const solidColor = background.solidColor;\n  let colorObj = { color: [solidColor.r / 255, solidColor.g / 255, solidColor.b / 255, solidColor.a] };\n  colorGUI = gui.addColor(colorObj, \"color\").onChange((v) => {\n    background.solidColor.setValue(v[0] / 255, v[1] / 255, v[2] / 255, v[3] / 255);\n  });\n\n  const obj = {\n    cubeMap: 0\n  };\n\n  const mode = {\n    fitMode: 1\n  };\n\n  cubeMapGUI = gui.add(obj, \"cubeMap\", { cubeMap1: 0, cubeMap2: 1 }).onChange((v) => {\n    // @ts-ignore\n    background.sky.material.textureCubeMap = cubeMaps[parseInt(v)];\n  });\n  fitModeGUI = gui.add(mode, \"fitMode\", { AspectFitWidth: 0, AspectFitHeight: 1, Fill: 2 }).onChange((v) => {\n    background.textureFillMode = parseInt(v);\n  });\n\n  // init\n  background.mode = BackgroundMode.Texture;\n  hide(colorGUI);\n  hide(cubeMapGUI);\n  show(fitModeGUI);\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Scene Background\n * @category Scene\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  BackgroundMode<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  SkyBoxMaterial<span class=\"token punctuation\">,</span>\n  TextureCubeMap<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> background <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> root<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>_webCanvas<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"onresize\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  engine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token comment\">//@ts-ignore</span>\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span>TextureCubeMap<span class=\"token punctuation\">,</span> TextureCubeMap<span class=\"token punctuation\">,</span> Texture2D<span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      urls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5w6_Rr6ML6IAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*TiT2TbN5cG4AAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*8GF6Q4LZefUAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*D5pdRqUHC3IAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_FooTIp6pNIAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*CYGZR7ogZfoAAAAAAAAAAAAAARQnAQ\"</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>TextureCube\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      urls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Bk5FQKGOir4AAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_cPhR7JMDjkAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*trqjQp1nOMQAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_RXwRqwMK3EAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*q4Q6TroyuXcAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*DP5QTbTSAYgAAAAAAAAAAAAAARQnAQ\"</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>TextureCube\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_2e421e/afts/img/A*BcWiRYM7hroAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">[</span>cubeMap1<span class=\"token punctuation\">,</span> cubeMap2<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 添加天空盒背景</span>\n    <span class=\"token comment\">// background.mode = BackgroundMode.Sky; // 默认纯色背景</span>\n    <span class=\"token keyword\">const</span> skyMaterial <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>background<span class=\"token punctuation\">.</span>sky<span class=\"token punctuation\">.</span>material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SkyBoxMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 添加天空盒材质</span>\n    skyMaterial<span class=\"token punctuation\">.</span>textureCubeMap <span class=\"token operator\">=</span> cubeMap1<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 设置立方体纹理</span>\n    background<span class=\"token punctuation\">.</span>sky<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 设置天空盒网格</span>\n    background<span class=\"token punctuation\">.</span>texture <span class=\"token operator\">=</span> texture<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>cubeMap1<span class=\"token punctuation\">,</span> cubeMap2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cubeMaps</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">addGUI</span><span class=\"token punctuation\">(</span>cubeMaps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">addGUI</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cubeMaps<span class=\"token operator\">:</span> TextureCubeMap<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> colorGUI <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> cubeMapGUI <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> fitModeGUI <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">hide</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">_gui</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    _gui<span class=\"token punctuation\">.</span>__li<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">_gui</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    _gui<span class=\"token punctuation\">.</span>__li<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">\"block\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  background<span class=\"token punctuation\">.</span>mode <span class=\"token operator\">=</span> BackgroundMode<span class=\"token punctuation\">.</span>Texture<span class=\"token punctuation\">;</span>\n  gui\n    <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>background<span class=\"token punctuation\">,</span> <span class=\"token string\">\"mode\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      Sky<span class=\"token operator\">:</span> BackgroundMode<span class=\"token punctuation\">.</span>Sky<span class=\"token punctuation\">,</span>\n      SolidColor<span class=\"token operator\">:</span> BackgroundMode<span class=\"token punctuation\">.</span>SolidColor<span class=\"token punctuation\">,</span>\n      Texture<span class=\"token operator\">:</span> BackgroundMode<span class=\"token punctuation\">.</span>Texture\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> mode <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>background<span class=\"token punctuation\">.</span>mode <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">hide</span><span class=\"token punctuation\">(</span>colorGUI<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">hide</span><span class=\"token punctuation\">(</span>cubeMapGUI<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">hide</span><span class=\"token punctuation\">(</span>fitModeGUI<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>mode<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">case</span> BackgroundMode<span class=\"token punctuation\">.</span>Sky<span class=\"token operator\">:</span>\n          <span class=\"token function\">show</span><span class=\"token punctuation\">(</span>cubeMapGUI<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> BackgroundMode<span class=\"token punctuation\">.</span>SolidColor<span class=\"token operator\">:</span>\n          <span class=\"token function\">show</span><span class=\"token punctuation\">(</span>colorGUI<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> BackgroundMode<span class=\"token punctuation\">.</span>Texture<span class=\"token operator\">:</span>\n          <span class=\"token function\">show</span><span class=\"token punctuation\">(</span>fitModeGUI<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> solidColor <span class=\"token operator\">=</span> background<span class=\"token punctuation\">.</span>solidColor<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> colorObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> color<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>solidColor<span class=\"token punctuation\">.</span>r <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> solidColor<span class=\"token punctuation\">.</span>g <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> solidColor<span class=\"token punctuation\">.</span>b <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> solidColor<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  colorGUI <span class=\"token operator\">=</span> gui<span class=\"token punctuation\">.</span><span class=\"token function\">addColor</span><span class=\"token punctuation\">(</span>colorObj<span class=\"token punctuation\">,</span> <span class=\"token string\">\"color\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    background<span class=\"token punctuation\">.</span>solidColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    cubeMap<span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> mode <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    fitMode<span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  cubeMapGUI <span class=\"token operator\">=</span> gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token string\">\"cubeMap\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> cubeMap1<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> cubeMap2<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// @ts-ignore</span>\n    background<span class=\"token punctuation\">.</span>sky<span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">.</span>textureCubeMap <span class=\"token operator\">=</span> cubeMaps<span class=\"token punctuation\">[</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  fitModeGUI <span class=\"token operator\">=</span> gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>mode<span class=\"token punctuation\">,</span> <span class=\"token string\">\"fitMode\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> AspectFitWidth<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> AspectFitHeight<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> Fill<span class=\"token operator\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    background<span class=\"token punctuation\">.</span>textureFillMode <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// init</span>\n  background<span class=\"token punctuation\">.</span>mode <span class=\"token operator\">=</span> BackgroundMode<span class=\"token punctuation\">.</span>Texture<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">hide</span><span class=\"token punctuation\">(</span>colorGUI<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">hide</span><span class=\"token punctuation\">(</span>cubeMapGUI<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">show</span><span class=\"token punctuation\">(</span>fitModeGUI<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title Blend Mode\n   * @category Material\n   */\n  var gui = new dat.GUI(); // Create engine object\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // Create camera\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 3, 10);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl);\n  scene.ambientLight.diffuseSolidColor.setValue(1, 1, 1, 1);\n  engine.resourceManager.load(\"https://gw.alipayobjects.com/os/bmw-prod/d099b30b-59a3-42e4-99eb-b158afa8e65d.glb\").then(function (asset) {\n    var defaultSceneRoot = asset.defaultSceneRoot,\n        materials = asset.materials;\n    rootEntity.addChild(defaultSceneRoot);\n    var state = {\n      alphaCutoff: 0,\n      isTransparent: false,\n      opacity: 0\n    }; // Do not debug first material\n\n    var debugMaterials = materials.slice(1);\n    gui.add(state, \"alphaCutoff\", 0, 1, 0.01).onChange(function (v) {\n      debugMaterials.forEach(function (material) {\n        material.alphaCutoff = v;\n      });\n    });\n    gui.add(state, \"isTransparent\").onChange(function (v) {\n      debugMaterials.forEach(function (material) {\n        material.isTransparent = v;\n      });\n    });\n    gui.add(state, \"opacity\", 0, 1, 0.01).onChange(function (v) {\n      debugMaterials.forEach(function (material) {\n        material.baseColor.a = v;\n      });\n    });\n  });\n  engine.run();\n});"},"name":"blend-mode","title":"Blend Mode","category":"Material","id":"2ee3e111-2f92-587b-8e03-37239a136f64","sourceCode":"/**\n * @title Blend Mode\n * @category Material\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\nimport { Camera, GLTFResource, PBRMaterial, Vector3, WebGLEngine } from \"oasis-engine\";\nconst gui = new dat.GUI();\n\n// Create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// Create camera\nconst cameraEntity = rootEntity.createChild(\"Camera\");\ncameraEntity.transform.position = new Vector3(0, 3, 10);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\nscene.ambientLight.diffuseSolidColor.setValue(1, 1, 1, 1);\n\nengine.resourceManager\n  .load<GLTFResource>(\"https://gw.alipayobjects.com/os/bmw-prod/d099b30b-59a3-42e4-99eb-b158afa8e65d.glb\")\n  .then((asset) => {\n    const { defaultSceneRoot, materials } = asset;\n    rootEntity.addChild(defaultSceneRoot);\n\n    const state = {\n      alphaCutoff: 0,\n      isTransparent: false,\n      opacity: 0\n    };\n\n    // Do not debug first material\n    const debugMaterials = materials.slice(1);\n    gui.add(state, \"alphaCutoff\", 0, 1, 0.01).onChange((v) => {\n      debugMaterials.forEach((material) => {\n        (material as PBRMaterial).alphaCutoff = v;\n      });\n    });\n\n    gui.add(state, \"isTransparent\").onChange((v) => {\n      debugMaterials.forEach((material) => {\n        (material as PBRMaterial).isTransparent = v;\n      });\n    });\n\n    gui.add(state, \"opacity\", 0, 1, 0.01).onChange((v) => {\n      debugMaterials.forEach((material) => {\n        (material as PBRMaterial).baseColor.a = v;\n      });\n    });\n  });\n\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Blend Mode\n * @category Material\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Camera<span class=\"token punctuation\">,</span> GLTFResource<span class=\"token punctuation\">,</span> PBRMaterial<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nscene<span class=\"token punctuation\">.</span>ambientLight<span class=\"token punctuation\">.</span>diffuseSolidColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>GLTFResource<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/d099b30b-59a3-42e4-99eb-b158afa8e65d.glb\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">asset</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> defaultSceneRoot<span class=\"token punctuation\">,</span> materials <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> asset<span class=\"token punctuation\">;</span>\n    rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>defaultSceneRoot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      alphaCutoff<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n      isTransparent<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      opacity<span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Do not debug first material</span>\n    <span class=\"token keyword\">const</span> debugMaterials <span class=\"token operator\">=</span> materials<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"alphaCutoff\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      debugMaterials<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">material</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">(</span>material <span class=\"token keyword\">as</span> PBRMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>alphaCutoff <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"isTransparent\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      debugMaterials<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">material</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">(</span>material <span class=\"token keyword\">as</span> PBRMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>isTransparent <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"opacity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      debugMaterials<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">material</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">(</span>material <span class=\"token keyword\">as</span> PBRMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title Blinn Phong Material\n   * @category Material\n   */\n  var gui = new dat.GUI(); // Create engine object\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // Create camera\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 10, 30);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  var control = cameraEntity.addComponent(_controls.OrbitControl);\n  control.target.y = 5; // Create Direct Light\n\n  var light1 = rootEntity.createChild();\n  var light2 = rootEntity.createChild();\n  light1.transform.lookAt(new _oasisEngine.Vector3(-1, -1, -1));\n  light2.transform.lookAt(new _oasisEngine.Vector3(1, 1, 1));\n  light1.addComponent(_oasisEngine.DirectLight);\n  light2.addComponent(_oasisEngine.DirectLight);\n  engine.run();\n  engine.resourceManager.load([{\n    type: _oasisEngine.AssetType.Texture2D,\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*g_HIRqQdNUcAAAAAAAAAAAAAARQnAQ\"\n  }, {\n    type: _oasisEngine.AssetType.Texture2D,\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*H7nMRY2SuWcAAAAAAAAAAAAAARQnAQ\"\n  }, {\n    type: _oasisEngine.AssetType.Perfab,\n    url: \"https://gw.alipayobjects.com/os/bmw-prod/72a8e335-01da-4234-9e81-5f8b56464044.gltf\"\n  }]).then(function (res) {\n    var baseTexture = res[0];\n    var normalTexture = res[1];\n    var gltf = res[2];\n    var defaultSceneRoot = gltf.defaultSceneRoot;\n    var rendererArray = new Array();\n    var materials = new Array();\n    rootEntity.addChild(defaultSceneRoot);\n    defaultSceneRoot.getComponentsIncludeChildren(_oasisEngine.MeshRenderer, rendererArray);\n    rendererArray.forEach(function (renderer) {\n      var material = new _oasisEngine.BlinnPhongMaterial(engine);\n      material.baseTexture = baseTexture;\n      material.normalTexture = normalTexture;\n      material.shininess = 64;\n      material.renderFace = _oasisEngine.RenderFace.Double;\n      renderer.setMaterial(material);\n      materials.push(material);\n    });\n    addGUI(materials);\n  });\n\n  function addGUI(materials) {\n    var state = {\n      baseColor: [255, 255, 255],\n      specularColor: [255, 255, 255],\n      shininess: 64,\n      normalIntensity: 1,\n      isTransparent: false,\n      opacity: 1\n    };\n    gui.addColor(state, \"baseColor\").onChange(function (v) {\n      materials.forEach(function (material) {\n        material.baseColor.setValue(v[0] / 255, v[1] / 255, v[2] / 255, state.opacity);\n      });\n    });\n    gui.addColor(state, \"specularColor\").onChange(function (v) {\n      materials.forEach(function (material) {\n        material.specularColor.setValue(v[0] / 255, v[1] / 255, v[2] / 255, 1);\n      });\n    });\n    gui.add(state, \"shininess\", 0, 100).onChange(function (v) {\n      materials.forEach(function (material) {\n        material.shininess = v;\n      });\n    });\n    gui.add(state, \"normalIntensity\", 0, 1, 0.1).onChange(function (v) {\n      materials.forEach(function (material) {\n        material.normalIntensity = v;\n      });\n    });\n    gui.add(state, \"isTransparent\").onChange(function (v) {\n      materials.forEach(function (material) {\n        material.isTransparent = v;\n      });\n    });\n    gui.add(state, \"opacity\", 0, 1, 0.1).onChange(function (v) {\n      materials.forEach(function (material) {\n        material.baseColor.a = v;\n      });\n    });\n  }\n});"},"name":"blinn-phong","title":"Blinn Phong Material","category":"Material","id":"3dda22a3-67f1-5ae8-aa17-6f8c28cea202","sourceCode":"/**\n * @title Blinn Phong Material\n * @category Material\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\nimport {\n  AssetType,\n  BlinnPhongMaterial,\n  Camera,\n  DirectLight,\n  GLTFResource,\n  MeshRenderer,\n  RenderFace,\n  Texture2D,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\nconst gui = new dat.GUI();\n\n// Create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// Create camera\nconst cameraEntity = rootEntity.createChild(\"Camera\");\ncameraEntity.transform.setPosition(0, 10, 30);\ncameraEntity.addComponent(Camera);\nconst control = cameraEntity.addComponent(OrbitControl);\ncontrol.target.y = 5;\n\n// Create Direct Light\nconst light1 = rootEntity.createChild();\nconst light2 = rootEntity.createChild();\nlight1.transform.lookAt(new Vector3(-1, -1, -1));\nlight2.transform.lookAt(new Vector3(1, 1, 1));\nlight1.addComponent(DirectLight);\nlight2.addComponent(DirectLight);\n\nengine.run();\n\nengine.resourceManager\n  .load([\n    {\n      type: AssetType.Texture2D,\n      url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*g_HIRqQdNUcAAAAAAAAAAAAAARQnAQ\"\n    },\n    {\n      type: AssetType.Texture2D,\n      url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*H7nMRY2SuWcAAAAAAAAAAAAAARQnAQ\"\n    },\n    {\n      type: AssetType.Perfab,\n      url: \"https://gw.alipayobjects.com/os/bmw-prod/72a8e335-01da-4234-9e81-5f8b56464044.gltf\"\n    }\n  ])\n  .then((res) => {\n    const baseTexture = res[0] as Texture2D;\n    const normalTexture = res[1] as Texture2D;\n    const gltf = res[2] as GLTFResource;\n\n    const { defaultSceneRoot } = gltf;\n    const rendererArray = new Array<MeshRenderer>();\n    const materials = new Array<BlinnPhongMaterial>();\n\n    rootEntity.addChild(defaultSceneRoot);\n    defaultSceneRoot.getComponentsIncludeChildren(MeshRenderer, rendererArray);\n\n    rendererArray.forEach((renderer) => {\n      const material = new BlinnPhongMaterial(engine);\n      material.baseTexture = baseTexture;\n      material.normalTexture = normalTexture;\n      material.shininess = 64;\n      material.renderFace = RenderFace.Double;\n      renderer.setMaterial(material);\n      materials.push(material);\n    });\n\n    addGUI(materials);\n  });\n\nfunction addGUI(materials: BlinnPhongMaterial[]): void {\n  const state = {\n    baseColor: [255, 255, 255],\n    specularColor: [255, 255, 255],\n    shininess: 64,\n    normalIntensity: 1,\n    isTransparent: false,\n    opacity: 1\n  };\n\n  gui.addColor(state, \"baseColor\").onChange((v) => {\n    materials.forEach((material) => {\n      material.baseColor.setValue(v[0] / 255, v[1] / 255, v[2] / 255, state.opacity);\n    });\n  });\n\n  gui.addColor(state, \"specularColor\").onChange((v) => {\n    materials.forEach((material) => {\n      material.specularColor.setValue(v[0] / 255, v[1] / 255, v[2] / 255, 1);\n    });\n  });\n  gui.add(state, \"shininess\", 0, 100).onChange((v) => {\n    materials.forEach((material) => {\n      material.shininess = v;\n    });\n  });\n  gui.add(state, \"normalIntensity\", 0, 1, 0.1).onChange((v) => {\n    materials.forEach((material) => {\n      material.normalIntensity = v;\n    });\n  });\n  gui.add(state, \"isTransparent\").onChange((v) => {\n    materials.forEach((material) => {\n      material.isTransparent = v;\n    });\n  });\n  gui.add(state, \"opacity\", 0, 1, 0.1).onChange((v) => {\n    materials.forEach((material) => {\n      material.baseColor.a = v;\n    });\n  });\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Blinn Phong Material\n * @category Material\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  BlinnPhongMaterial<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  DirectLight<span class=\"token punctuation\">,</span>\n  GLTFResource<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  RenderFace<span class=\"token punctuation\">,</span>\n  Texture2D<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> control <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncontrol<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create Direct Light</span>\n<span class=\"token keyword\">const</span> light1 <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> light2 <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlight1<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlight2<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlight1<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlight2<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D<span class=\"token punctuation\">,</span>\n      url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*g_HIRqQdNUcAAAAAAAAAAAAAARQnAQ\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D<span class=\"token punctuation\">,</span>\n      url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*H7nMRY2SuWcAAAAAAAAAAAAAARQnAQ\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Perfab<span class=\"token punctuation\">,</span>\n      url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/72a8e335-01da-4234-9e81-5f8b56464044.gltf\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> baseTexture <span class=\"token operator\">=</span> res<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">as</span> Texture2D<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> normalTexture <span class=\"token operator\">=</span> res<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">as</span> Texture2D<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> gltf <span class=\"token operator\">=</span> res<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">as</span> GLTFResource<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> defaultSceneRoot <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> gltf<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> rendererArray <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token operator\">&lt;</span>MeshRenderer<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> materials <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token operator\">&lt;</span>BlinnPhongMaterial<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>defaultSceneRoot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    defaultSceneRoot<span class=\"token punctuation\">.</span><span class=\"token function\">getComponentsIncludeChildren</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">,</span> rendererArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    rendererArray<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">renderer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      material<span class=\"token punctuation\">.</span>baseTexture <span class=\"token operator\">=</span> baseTexture<span class=\"token punctuation\">;</span>\n      material<span class=\"token punctuation\">.</span>normalTexture <span class=\"token operator\">=</span> normalTexture<span class=\"token punctuation\">;</span>\n      material<span class=\"token punctuation\">.</span>shininess <span class=\"token operator\">=</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span>\n      material<span class=\"token punctuation\">.</span>renderFace <span class=\"token operator\">=</span> RenderFace<span class=\"token punctuation\">.</span>Double<span class=\"token punctuation\">;</span>\n      renderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      materials<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">addGUI</span><span class=\"token punctuation\">(</span>materials<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">addGUI</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">materials<span class=\"token operator\">:</span> BlinnPhongMaterial<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    baseColor<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    specularColor<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    shininess<span class=\"token operator\">:</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span>\n    normalIntensity<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    isTransparent<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    opacity<span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">addColor</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"baseColor\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    materials<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">material</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      material<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">.</span>opacity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">addColor</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"specularColor\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    materials<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">material</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      material<span class=\"token punctuation\">.</span>specularColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"shininess\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    materials<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">material</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      material<span class=\"token punctuation\">.</span>shininess <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"normalIntensity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    materials<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">material</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      material<span class=\"token punctuation\">.</span>normalIntensity <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"isTransparent\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    materials<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">material</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      material<span class=\"token punctuation\">.</span>isTransparent <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"opacity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    materials<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">material</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      material<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine) {\n  \"use strict\";\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  /**\n   * Script for updating color buffer.\n   */\n  var RandomColorScript = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(RandomColorScript, _Script);\n\n    function RandomColorScript() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _Script.call.apply(_Script, [this].concat(args)) || this;\n      _this.colorData = void 0;\n      _this.colorBuffer = void 0;\n      _this._loopCount = 0;\n      return _this;\n    }\n\n    var _proto = RandomColorScript.prototype;\n\n    /**\n     * @override\n     * The main loop, called frame by frame.\n     * @param deltaTime - The deltaTime when the script update.\n     */\n    _proto.onUpdate = function onUpdate(deltaTime) {\n      if (this._loopCount === 30) {\n        var colorData = this.colorData;\n\n        for (var i = 0; i < 6; i++) {\n          var r = Math.random();\n          var g = Math.random();\n          var b = Math.random();\n          var faceOffset = i * 12;\n\n          for (var _i = 0; _i < 4; _i++) {\n            var vertexOffset = _i * 3;\n            colorData[faceOffset + vertexOffset] = r;\n            colorData[faceOffset + vertexOffset + 1] = g;\n            colorData[faceOffset + vertexOffset + 2] = b;\n          }\n        }\n\n        this.colorBuffer.setData(colorData);\n        this._loopCount = 0;\n      }\n\n      this._loopCount++;\n    };\n\n    return RandomColorScript;\n  }(_oasisEngine.Script);\n\n  init();\n\n  function init() {\n    // Create engine and get root entity.\n    var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n    engine.canvas.resizeByClientSize();\n    var rootEntity = engine.sceneManager.activeScene.createRootEntity(\"Root\"); // Create light.\n\n    var lightEntity = rootEntity.createChild(\"pointLight\");\n    var pointLight = lightEntity.addComponent(_oasisEngine.PointLight);\n    pointLight.distance = 10;\n    lightEntity.transform.setPosition(2, 5, 5); // Create camera.\n\n    var cameraEntity = rootEntity.createChild(\"Camera\");\n    cameraEntity.transform.setPosition(0, 6, 10);\n    cameraEntity.transform.lookAt(new _oasisEngine.Vector3(0, 0, 0));\n    cameraEntity.addComponent(_oasisEngine.Camera); // Create custom cube.\n    // Use createCustomMesh() to create custom cube mesh.\n\n    var cubeEntity = rootEntity.createChild(\"Cube\");\n    var cubeRenderer = cubeEntity.addComponent(_oasisEngine.MeshRenderer);\n    var randomColorScript = cubeEntity.addComponent(RandomColorScript);\n    var cubeGeometry = createCustomMesh(engine, 1.0, randomColorScript);\n    var material = new _oasisEngine.BlinnPhongMaterial(engine);\n    cubeEntity.transform.rotate(0, 60, 0);\n    cubeRenderer.mesh = cubeGeometry;\n    cubeRenderer.setMaterial(material); // Run engine.\n\n    engine.run();\n  }\n  /**\n   * Create cube geometry with custom BufferGeometry.\n   * @param engine - Engine\n   * @param size - Cube size\n   * @returns Cube mesh\n   */\n\n\n  function createCustomMesh(engine, size, randomColorScript) {\n    var cubeMesh = new _oasisEngine.BufferMesh(engine, \"CustomCubeMesh\"); // Create vertices position and normal data.\n    // prettier-ignore\n\n    var positionNormals = new Float32Array([// Up\n    -size, size, -size, 0, 1, 0, size, size, -size, 0, 1, 0, size, size, size, 0, 1, 0, -size, size, size, 0, 1, 0, // Down\n    -size, -size, -size, 0, -1, 0, size, -size, -size, 0, -1, 0, size, -size, size, 0, -1, 0, -size, -size, size, 0, -1, 0, // Left\n    -size, size, -size, -1, 0, 0, -size, size, size, -1, 0, 0, -size, -size, size, -1, 0, 0, -size, -size, -size, -1, 0, 0, // Right\n    size, size, -size, 1, 0, 0, size, size, size, 1, 0, 0, size, -size, size, 1, 0, 0, size, -size, -size, 1, 0, 0, // Front\n    -size, size, size, 0, 0, 1, size, size, size, 0, 0, 1, size, -size, size, 0, 0, 1, -size, -size, size, 0, 0, 1, // Back\n    -size, size, -size, 0, 0, -1, size, size, -size, 0, 0, -1, size, -size, -size, 0, 0, -1, -size, -size, -size, 0, 0, -1]); // Create vertices color and init by white.\n\n    var colorData = new Float32Array(3 * 24);\n    colorData.fill(1.0); // Create indices data.\n    // prettier-ignore\n\n    var indices = new Uint16Array([// Up\n    0, 2, 1, 2, 0, 3, // Down\n    4, 6, 7, 6, 4, 5, // Left\n    8, 10, 9, 10, 8, 11, // Right\n    12, 14, 15, 14, 12, 13, // Front\n    16, 18, 17, 18, 16, 19, // Back\n    20, 22, 23, 22, 20, 21]); // Create gpu vertex buffer and index buffer.\n\n    var posNorBuffer = new _oasisEngine.Buffer(engine, _oasisEngine.BufferBindFlag.VertexBuffer, positionNormals, _oasisEngine.BufferUsage.Static);\n    var independentColorBuffer = new _oasisEngine.Buffer(engine, _oasisEngine.BufferBindFlag.VertexBuffer, colorData, _oasisEngine.BufferUsage.Dynamic);\n    var indexBuffer = new _oasisEngine.Buffer(engine, _oasisEngine.BufferBindFlag.IndexBuffer, indices, _oasisEngine.BufferUsage.Static); // Bind buffer.\n\n    cubeMesh.setVertexBufferBinding(posNorBuffer, 24, 0);\n    cubeMesh.setVertexBufferBinding(independentColorBuffer, 12, 1);\n    cubeMesh.setIndexBufferBinding(indexBuffer, _oasisEngine.IndexFormat.UInt16); // Set vertexElements.\n\n    cubeMesh.setVertexElements([new _oasisEngine.VertexElement(\"POSITION\", 0, _oasisEngine.VertexElementFormat.Vector3, 0), new _oasisEngine.VertexElement(\"NORMAL\", 12, _oasisEngine.VertexElementFormat.Vector3, 0), new _oasisEngine.VertexElement(\"COLOR_0\", 0, _oasisEngine.VertexElementFormat.Vector3, 1)]); // Add one sub geometry.\n\n    cubeMesh.addSubMesh(0, indices.length); // Set `vertexColors` and `colorBuffer` to `randomColorScript`.\n\n    randomColorScript.colorData = colorData;\n    randomColorScript.colorBuffer = independentColorBuffer;\n    return cubeMesh;\n  }\n});"},"name":"buffer-mesh-independent","title":"Buffer Mesh Independent","category":"Mesh","id":"fa780752-0bb2-5bdb-863c-05ed3b2c5748","sourceCode":"/**\n * @title Buffer Mesh Independent\n * @category Mesh\n */\nimport {\n  BlinnPhongMaterial,\n  Buffer,\n  BufferBindFlag,\n  BufferMesh,\n  BufferUsage,\n  Camera,\n  Engine,\n  IndexFormat,\n  Mesh,\n  MeshRenderer,\n  PointLight,\n  Vector3,\n  VertexElement,\n  VertexElementFormat,\n  WebGLEngine,\n  Script\n} from \"oasis-engine\";\n\n/**\n * Script for updating color buffer.\n */\nclass RandomColorScript extends Script {\n  /** Color data. */\n  colorData: Float32Array;\n  /** Color buffer. */\n  colorBuffer: Buffer;\n\n  private _loopCount = 0;\n\n  /**\n   * @override\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */\n  onUpdate(deltaTime: number): void {\n    if (this._loopCount === 30) {\n      const { colorData } = this;\n      for (let i = 0; i < 6; i++) {\n        const r = Math.random();\n        const g = Math.random();\n        const b = Math.random();\n        const faceOffset = i * 12;\n        for (let i = 0; i < 4; i++) {\n          const vertexOffset = i * 3;\n          colorData[faceOffset + vertexOffset] = r;\n          colorData[faceOffset + vertexOffset + 1] = g;\n          colorData[faceOffset + vertexOffset + 2] = b;\n        }\n      }\n      this.colorBuffer.setData(colorData);\n      this._loopCount = 0;\n    }\n    this._loopCount++;\n  }\n}\n\ninit();\n\nfunction init() {\n  // Create engine and get root entity.\n  const engine = new WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n\n  const rootEntity = engine.sceneManager.activeScene.createRootEntity(\"Root\");\n\n  // Create light.\n  const lightEntity = rootEntity.createChild(\"pointLight\");\n  const pointLight = lightEntity.addComponent(PointLight);\n  pointLight.distance = 10;\n  lightEntity.transform.setPosition(2, 5, 5);\n  // Create camera.\n  const cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 6, 10);\n  cameraEntity.transform.lookAt(new Vector3(0, 0, 0));\n  cameraEntity.addComponent(Camera);\n\n  // Create custom cube.\n  // Use createCustomMesh() to create custom cube mesh.\n  const cubeEntity = rootEntity.createChild(\"Cube\");\n  const cubeRenderer = cubeEntity.addComponent(MeshRenderer);\n  const randomColorScript = cubeEntity.addComponent(RandomColorScript);\n  const cubeGeometry = createCustomMesh(engine, 1.0, randomColorScript);\n  const material = new BlinnPhongMaterial(engine);\n  cubeEntity.transform.rotate(0, 60, 0);\n  cubeRenderer.mesh = cubeGeometry;\n  cubeRenderer.setMaterial(material);\n\n  // Run engine.\n  engine.run();\n}\n\n/**\n * Create cube geometry with custom BufferGeometry.\n * @param engine - Engine\n * @param size - Cube size\n * @returns Cube mesh\n */\nfunction createCustomMesh(engine: Engine, size: number, randomColorScript: RandomColorScript): Mesh {\n  const cubeMesh = new BufferMesh(engine, \"CustomCubeMesh\");\n\n  // Create vertices position and normal data.\n  // prettier-ignore\n  const positionNormals = new Float32Array([\n          // Up\n          -size, size, -size, 0, 1, 0, size, size, -size, 0, 1, 0, size, size, size, 0, 1, 0, -size, size, size, 0, 1, 0,\n          // Down\n          -size, -size, -size, 0, -1, 0, size, -size, -size, 0, -1, 0, size, -size, size, 0, -1, 0, -size, -size, size, 0, -1, 0,\n          // Left\n          -size, size, -size, -1, 0, 0, -size, size, size, -1, 0, 0, -size, -size, size, -1, 0, 0, -size, -size, -size, -1, 0, 0,\n          // Right\n          size, size, -size, 1, 0, 0, size, size, size, 1, 0, 0, size, -size, size, 1, 0, 0, size, -size, -size, 1, 0, 0,\n          // Front\n          -size, size, size, 0, 0, 1, size, size, size, 0, 0, 1, size, -size, size, 0, 0, 1, -size, -size, size, 0, 0, 1,\n          // Back\n          -size, size, -size, 0, 0, -1, size, size, -size, 0, 0, -1, size, -size, -size, 0, 0, -1, -size, -size, -size, 0, 0, -1]);\n\n  // Create vertices color and init by white.\n  const colorData = new Float32Array(3 * 24);\n  colorData.fill(1.0);\n\n  // Create indices data.\n  // prettier-ignore\n  const indices = new Uint16Array([\n          // Up\n          0, 2, 1, 2, 0, 3,\n          // Down\n          4, 6, 7, 6, 4, 5,\n          // Left\n          8, 10, 9, 10, 8, 11,\n          // Right\n          12, 14, 15, 14, 12, 13,\n          // Front\n          16, 18, 17, 18, 16, 19,\n          // Back\n          20, 22, 23, 22, 20, 21]);\n\n  // Create gpu vertex buffer and index buffer.\n  const posNorBuffer = new Buffer(engine, BufferBindFlag.VertexBuffer, positionNormals, BufferUsage.Static);\n  const independentColorBuffer = new Buffer(engine, BufferBindFlag.VertexBuffer, colorData, BufferUsage.Dynamic);\n  const indexBuffer = new Buffer(engine, BufferBindFlag.IndexBuffer, indices, BufferUsage.Static);\n\n  // Bind buffer.\n  cubeMesh.setVertexBufferBinding(posNorBuffer, 24, 0);\n  cubeMesh.setVertexBufferBinding(independentColorBuffer, 12, 1);\n  cubeMesh.setIndexBufferBinding(indexBuffer, IndexFormat.UInt16);\n\n  // Set vertexElements.\n  cubeMesh.setVertexElements([\n    new VertexElement(\"POSITION\", 0, VertexElementFormat.Vector3, 0),\n    new VertexElement(\"NORMAL\", 12, VertexElementFormat.Vector3, 0),\n    new VertexElement(\"COLOR_0\", 0, VertexElementFormat.Vector3, 1)\n  ]);\n\n  // Add one sub geometry.\n  cubeMesh.addSubMesh(0, indices.length);\n\n  // Set `vertexColors` and `colorBuffer` to `randomColorScript`.\n  randomColorScript.colorData = colorData;\n  randomColorScript.colorBuffer = independentColorBuffer;\n\n  return cubeMesh;\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Buffer Mesh Independent\n * @category Mesh\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  BlinnPhongMaterial<span class=\"token punctuation\">,</span>\n  Buffer<span class=\"token punctuation\">,</span>\n  BufferBindFlag<span class=\"token punctuation\">,</span>\n  BufferMesh<span class=\"token punctuation\">,</span>\n  BufferUsage<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  Engine<span class=\"token punctuation\">,</span>\n  IndexFormat<span class=\"token punctuation\">,</span>\n  Mesh<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  PointLight<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  VertexElement<span class=\"token punctuation\">,</span>\n  VertexElementFormat<span class=\"token punctuation\">,</span>\n  WebGLEngine<span class=\"token punctuation\">,</span>\n  Script\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Script for updating color buffer.\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">RandomColorScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/** Color data. */</span>\n  colorData<span class=\"token operator\">:</span> Float32Array<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/** Color buffer. */</span>\n  colorBuffer<span class=\"token operator\">:</span> Buffer<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">private</span> _loopCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/**\n   * @override\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */</span>\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span>deltaTime<span class=\"token operator\">:</span> number<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_loopCount <span class=\"token operator\">===</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> colorData <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> r <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> g <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> b <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> faceOffset <span class=\"token operator\">=</span> i <span class=\"token operator\">*</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> vertexOffset <span class=\"token operator\">=</span> i <span class=\"token operator\">*</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n          colorData<span class=\"token punctuation\">[</span>faceOffset <span class=\"token operator\">+</span> vertexOffset<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> r<span class=\"token punctuation\">;</span>\n          colorData<span class=\"token punctuation\">[</span>faceOffset <span class=\"token operator\">+</span> vertexOffset <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> g<span class=\"token punctuation\">;</span>\n          colorData<span class=\"token punctuation\">[</span>faceOffset <span class=\"token operator\">+</span> vertexOffset <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> b<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>colorBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span>colorData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_loopCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_loopCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Create engine and get root entity.</span>\n  <span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  engine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create light.</span>\n  <span class=\"token keyword\">const</span> lightEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pointLight\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> pointLight <span class=\"token operator\">=</span> lightEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>PointLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  pointLight<span class=\"token punctuation\">.</span>distance <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n  lightEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Create camera.</span>\n  <span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create custom cube.</span>\n  <span class=\"token comment\">// Use createCustomMesh() to create custom cube mesh.</span>\n  <span class=\"token keyword\">const</span> cubeEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Cube\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> cubeRenderer <span class=\"token operator\">=</span> cubeEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> randomColorScript <span class=\"token operator\">=</span> cubeEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>RandomColorScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> cubeGeometry <span class=\"token operator\">=</span> <span class=\"token function\">createCustomMesh</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> randomColorScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cubeEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cubeRenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> cubeGeometry<span class=\"token punctuation\">;</span>\n  cubeRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Run engine.</span>\n  engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * Create cube geometry with custom BufferGeometry.\n * @param engine - Engine\n * @param size - Cube size\n * @returns Cube mesh\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">createCustomMesh</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">engine<span class=\"token operator\">:</span> Engine<span class=\"token punctuation\">,</span> size<span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span> randomColorScript<span class=\"token operator\">:</span> RandomColorScript</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Mesh <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> cubeMesh <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferMesh</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token string\">\"CustomCubeMesh\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create vertices position and normal data.</span>\n  <span class=\"token comment\">// prettier-ignore</span>\n  <span class=\"token keyword\">const</span> positionNormals <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Float32Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n          <span class=\"token comment\">// Up</span>\n          <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Down</span>\n          <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Left</span>\n          <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Right</span>\n          size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Front</span>\n          <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Back</span>\n          <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create vertices color and init by white.</span>\n  <span class=\"token keyword\">const</span> colorData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Float32Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token operator\">*</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  colorData<span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create indices data.</span>\n  <span class=\"token comment\">// prettier-ignore</span>\n  <span class=\"token keyword\">const</span> indices <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint16Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n          <span class=\"token comment\">// Up</span>\n          <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Down</span>\n          <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Left</span>\n          <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Right</span>\n          <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Front</span>\n          <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Back</span>\n          <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create gpu vertex buffer and index buffer.</span>\n  <span class=\"token keyword\">const</span> posNorBuffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Buffer</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> BufferBindFlag<span class=\"token punctuation\">.</span>VertexBuffer<span class=\"token punctuation\">,</span> positionNormals<span class=\"token punctuation\">,</span> BufferUsage<span class=\"token punctuation\">.</span>Static<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> independentColorBuffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Buffer</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> BufferBindFlag<span class=\"token punctuation\">.</span>VertexBuffer<span class=\"token punctuation\">,</span> colorData<span class=\"token punctuation\">,</span> BufferUsage<span class=\"token punctuation\">.</span>Dynamic<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> indexBuffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Buffer</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> BufferBindFlag<span class=\"token punctuation\">.</span>IndexBuffer<span class=\"token punctuation\">,</span> indices<span class=\"token punctuation\">,</span> BufferUsage<span class=\"token punctuation\">.</span>Static<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Bind buffer.</span>\n  cubeMesh<span class=\"token punctuation\">.</span><span class=\"token function\">setVertexBufferBinding</span><span class=\"token punctuation\">(</span>posNorBuffer<span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cubeMesh<span class=\"token punctuation\">.</span><span class=\"token function\">setVertexBufferBinding</span><span class=\"token punctuation\">(</span>independentColorBuffer<span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cubeMesh<span class=\"token punctuation\">.</span><span class=\"token function\">setIndexBufferBinding</span><span class=\"token punctuation\">(</span>indexBuffer<span class=\"token punctuation\">,</span> IndexFormat<span class=\"token punctuation\">.</span>UInt16<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Set vertexElements.</span>\n  cubeMesh<span class=\"token punctuation\">.</span><span class=\"token function\">setVertexElements</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">VertexElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"POSITION\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> VertexElementFormat<span class=\"token punctuation\">.</span>Vector3<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">VertexElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"NORMAL\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> VertexElementFormat<span class=\"token punctuation\">.</span>Vector3<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">VertexElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"COLOR_0\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> VertexElementFormat<span class=\"token punctuation\">.</span>Vector3<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Add one sub geometry.</span>\n  cubeMesh<span class=\"token punctuation\">.</span><span class=\"token function\">addSubMesh</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> indices<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Set `vertexColors` and `colorBuffer` to `randomColorScript`.</span>\n  randomColorScript<span class=\"token punctuation\">.</span>colorData <span class=\"token operator\">=</span> colorData<span class=\"token punctuation\">;</span>\n  randomColorScript<span class=\"token punctuation\">.</span>colorBuffer <span class=\"token operator\">=</span> independentColorBuffer<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> cubeMesh<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title Free Controls\n   * @category Camera\n   */\n\n  /**\n   * 本示例展示如何使用几何体渲染器功能、如何创建几何体资源对象、如何创建材质对象\n   */\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootNode = scene.createRootEntity(\"root\"); // 在场景中创建相机节点、配置位置和目标方向\n\n  var cameraNode = rootNode.createChild(\"Camera\");\n  cameraNode.transform.setPosition(0, 0, 20);\n  var camera = cameraNode.addComponent(_oasisEngine.Camera);\n  var controler = cameraNode.addComponent(_controls.FreeControl);\n  camera.farClipPlane = 2000;\n  controler.movementSpeed = 100;\n  controler.rotateSpeed = 1;\n  var lightNode = rootNode.createChild(\"Light\");\n  lightNode.transform.setRotation(-45, 45, 0);\n  lightNode.addComponent(_oasisEngine.DirectLight);\n\n  var cuboid = _oasisEngine.PrimitiveMesh.createCuboid(engine, 50, 50, 50);\n\n  var material = new _oasisEngine.BlinnPhongMaterial(engine);\n\n  var groundGeometry = _oasisEngine.PrimitiveMesh.createPlane(engine, 2000, 2000, 100, 100);\n\n  groundGeometry.subMesh.topology = _oasisEngine.MeshTopology.LineStrip;\n  var groundMaterial = new _oasisEngine.BlinnPhongMaterial(engine); // create meshes in scene\n\n  for (var i = 0; i < 100; i++) {\n    var cube = rootNode.createChild(\"cube\");\n    cube.transform.setPosition(Math.random() * 2000 - 1000, Math.random() * 200, Math.random() * 2000 - 1000);\n    var cubeRenderer = cube.addComponent(_oasisEngine.MeshRenderer);\n    cubeRenderer.mesh = cuboid;\n    cubeRenderer.setMaterial(material);\n  } // Ground\n\n\n  var ground = rootNode.createChild(\"ground\");\n  ground.transform.setPosition(0, -25, 0);\n  ground.transform.rotate(-90, 0, 0);\n  var groundRender = ground.addComponent(_oasisEngine.MeshRenderer);\n  groundRender.mesh = groundGeometry;\n  groundRender.setMaterial(groundMaterial); // Run engine\n\n  engine.run();\n});"},"name":"controls-free","title":"Free Controls","category":"Camera","id":"e2ec91ff-30fc-5ef5-8e32-f4d9db8bac38","sourceCode":"/**\n * @title Free Controls\n * @category Camera\n */\n/**\n * 本示例展示如何使用几何体渲染器功能、如何创建几何体资源对象、如何创建材质对象\n */\nimport { FreeControl } from \"@oasis-engine/controls\";\nimport {\n  BlinnPhongMaterial,\n  Camera,\n  DirectLight,\n  MeshRenderer,\n  MeshTopology,\n  PrimitiveMesh,\n  WebGLEngine\n} from \"oasis-engine\";\n\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\nconst scene = engine.sceneManager.activeScene;\nconst rootNode = scene.createRootEntity(\"root\");\n\n// 在场景中创建相机节点、配置位置和目标方向\nconst cameraNode = rootNode.createChild(\"Camera\");\ncameraNode.transform.setPosition(0, 0, 20);\nconst camera = cameraNode.addComponent(Camera);\nconst controler = cameraNode.addComponent(FreeControl);\ncamera.farClipPlane = 2000;\ncontroler.movementSpeed = 100;\ncontroler.rotateSpeed = 1;\n\nconst lightNode = rootNode.createChild(\"Light\");\nlightNode.transform.setRotation(-45, 45, 0);\nlightNode.addComponent(DirectLight);\n\nconst cuboid = PrimitiveMesh.createCuboid(engine, 50, 50, 50);\nconst material = new BlinnPhongMaterial(engine);\n\nconst groundGeometry = PrimitiveMesh.createPlane(engine, 2000, 2000, 100, 100);\ngroundGeometry.subMesh.topology = MeshTopology.LineStrip;\nconst groundMaterial = new BlinnPhongMaterial(engine);\n\n// create meshes in scene\nfor (let i = 0; i < 100; i++) {\n  let cube = rootNode.createChild(\"cube\");\n  cube.transform.setPosition(Math.random() * 2000 - 1000, Math.random() * 200, Math.random() * 2000 - 1000);\n  const cubeRenderer = cube.addComponent(MeshRenderer);\n  cubeRenderer.mesh = cuboid;\n  cubeRenderer.setMaterial(material);\n}\n\n// Ground\nconst ground = rootNode.createChild(\"ground\");\nground.transform.setPosition(0, -25, 0);\nground.transform.rotate(-90, 0, 0);\nconst groundRender = ground.addComponent(MeshRenderer);\ngroundRender.mesh = groundGeometry;\ngroundRender.setMaterial(groundMaterial);\n\n// Run engine\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Free Controls\n * @category Camera\n */</span>\n<span class=\"token comment\">/**\n * 本示例展示如何使用几何体渲染器功能、如何创建几何体资源对象、如何创建材质对象\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> FreeControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  BlinnPhongMaterial<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  DirectLight<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  MeshTopology<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootNode <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 在场景中创建相机节点、配置位置和目标方向</span>\n<span class=\"token keyword\">const</span> cameraNode <span class=\"token operator\">=</span> rootNode<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> camera <span class=\"token operator\">=</span> cameraNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> controler <span class=\"token operator\">=</span> cameraNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>FreeControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncamera<span class=\"token punctuation\">.</span>farClipPlane <span class=\"token operator\">=</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">;</span>\ncontroler<span class=\"token punctuation\">.</span>movementSpeed <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\ncontroler<span class=\"token punctuation\">.</span>rotateSpeed <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> lightNode <span class=\"token operator\">=</span> rootNode<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Light\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setRotation</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> cuboid <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> groundGeometry <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createPlane</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngroundGeometry<span class=\"token punctuation\">.</span>subMesh<span class=\"token punctuation\">.</span>topology <span class=\"token operator\">=</span> MeshTopology<span class=\"token punctuation\">.</span>LineStrip<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> groundMaterial <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// create meshes in scene</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> cube <span class=\"token operator\">=</span> rootNode<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cube\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cube<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2000</span> <span class=\"token operator\">-</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2000</span> <span class=\"token operator\">-</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> cubeRenderer <span class=\"token operator\">=</span> cube<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cubeRenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> cuboid<span class=\"token punctuation\">;</span>\n  cubeRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Ground</span>\n<span class=\"token keyword\">const</span> ground <span class=\"token operator\">=</span> rootNode<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ground\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nground<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nground<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> groundRender <span class=\"token operator\">=</span> ground<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngroundRender<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> groundGeometry<span class=\"token punctuation\">;</span>\ngroundRender<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>groundMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Run engine</span>\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title Buffer Mesh Interleaved\n   * @category Mesh\n   */\n  // Create engine and get root entity.\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var rootEntity = engine.sceneManager.activeScene.createRootEntity(\"Root\"); // Create light.\n\n  var lightEntity = rootEntity.createChild(\"pointLight\");\n  var pointLight = lightEntity.addComponent(_oasisEngine.PointLight);\n  pointLight.distance = 10;\n  lightEntity.transform.setPosition(2, 5, 5); // Create camera.\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 6, 10);\n  cameraEntity.transform.lookAt(new _oasisEngine.Vector3(0, 0, 0));\n  cameraEntity.addComponent(_oasisEngine.Camera); // Create custom cube.\n  // Use createCustomMesh() to create custom cube mesh.\n\n  var cubeEntity = rootEntity.createChild(\"Cube\");\n  var cubeRenderer = cubeEntity.addComponent(_oasisEngine.MeshRenderer);\n  var cubeGeometry = createCustomMesh(engine, 1.0);\n  var material = new _oasisEngine.BlinnPhongMaterial(engine);\n  cubeEntity.transform.rotate(0, 60, 0);\n  cubeRenderer.mesh = cubeGeometry;\n  cubeRenderer.setMaterial(material); // Run engine.\n\n  engine.run();\n  /**\n   * Create cube geometry with custom BufferGeometry.\n   * @param engine - Engine\n   * @param size - Cube size\n   * @returns Cube mesh\n   */\n\n  function createCustomMesh(engine, size) {\n    var geometry = new _oasisEngine.BufferMesh(engine, \"CustomCubeGeometry\"); // prettier-ignore\n    // Create vertices data.\n\n    var vertices = new Float32Array([// Up\n    -size, size, -size, 0, 1, 0, size, size, -size, 0, 1, 0, size, size, size, 0, 1, 0, -size, size, size, 0, 1, 0, // Down\n    -size, -size, -size, 0, -1, 0, size, -size, -size, 0, -1, 0, size, -size, size, 0, -1, 0, -size, -size, size, 0, -1, 0, // Left\n    -size, size, -size, -1, 0, 0, -size, size, size, -1, 0, 0, -size, -size, size, -1, 0, 0, -size, -size, -size, -1, 0, 0, // Right\n    size, size, -size, 1, 0, 0, size, size, size, 1, 0, 0, size, -size, size, 1, 0, 0, size, -size, -size, 1, 0, 0, // Front\n    -size, size, size, 0, 0, 1, size, size, size, 0, 0, 1, size, -size, size, 0, 0, 1, -size, -size, size, 0, 0, 1, // Back\n    -size, size, -size, 0, 0, -1, size, size, -size, 0, 0, -1, size, -size, -size, 0, 0, -1, -size, -size, -size, 0, 0, -1]); // prettier-ignore\n    // Create indices data.\n\n    var indices = new Uint16Array([// Up\n    0, 2, 1, 2, 0, 3, // Down\n    4, 6, 7, 6, 4, 5, // Left\n    8, 10, 9, 10, 8, 11, // Right\n    12, 14, 15, 14, 12, 13, // Front\n    16, 18, 17, 18, 16, 19, // Back\n    20, 22, 23, 22, 20, 21]); // Create gpu vertex buffer and index buffer.\n\n    var vertexBuffer = new _oasisEngine.Buffer(engine, _oasisEngine.BufferBindFlag.VertexBuffer, vertices, _oasisEngine.BufferUsage.Static);\n    var indexBuffer = new _oasisEngine.Buffer(engine, _oasisEngine.BufferBindFlag.IndexBuffer, indices, _oasisEngine.BufferUsage.Static); // Bind buffer\n\n    geometry.setVertexBufferBinding(vertexBuffer, 24);\n    geometry.setIndexBufferBinding(indexBuffer, _oasisEngine.IndexFormat.UInt16); // Add vertexElement\n\n    geometry.setVertexElements([new _oasisEngine.VertexElement(\"POSITION\", 0, _oasisEngine.VertexElementFormat.Vector3, 0), new _oasisEngine.VertexElement(\"NORMAL\", 12, _oasisEngine.VertexElementFormat.Vector3, 0)]); // Add one sub geometry.\n\n    geometry.addSubMesh(0, indices.length);\n    return geometry;\n  }\n});"},"name":"buffer-mesh-interleaved","title":"Buffer Mesh Interleaved","category":"Mesh","id":"bb5d8656-915d-5923-80b4-1f1b7d726c53","sourceCode":"/**\n * @title Buffer Mesh Interleaved\n * @category Mesh\n */\nimport {\n  BlinnPhongMaterial,\n  Buffer,\n  BufferBindFlag,\n  BufferMesh,\n  BufferUsage,\n  Camera, Engine,\n  IndexFormat,\n  Mesh, MeshRenderer,\n  PointLight,\n  Vector3,\n  VertexElement,\n  VertexElementFormat,\n  WebGLEngine\n} from \"oasis-engine\";\n\n// Create engine and get root entity.\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst rootEntity = engine.sceneManager.activeScene.createRootEntity(\"Root\");\n\n// Create light.\nconst lightEntity = rootEntity.createChild(\"pointLight\");\nconst pointLight = lightEntity.addComponent(PointLight);\npointLight.distance = 10;\nlightEntity.transform.setPosition(2, 5, 5);\n// Create camera.\nconst cameraEntity = rootEntity.createChild(\"Camera\");\ncameraEntity.transform.setPosition(0, 6, 10);\ncameraEntity.transform.lookAt(new Vector3(0, 0, 0));\ncameraEntity.addComponent(Camera);\n\n// Create custom cube.\n// Use createCustomMesh() to create custom cube mesh.\nconst cubeEntity = rootEntity.createChild(\"Cube\");\nconst cubeRenderer = cubeEntity.addComponent(MeshRenderer);\nconst cubeGeometry = createCustomMesh(engine, 1.0);\nconst material = new BlinnPhongMaterial(engine);\ncubeEntity.transform.rotate(0, 60, 0);\ncubeRenderer.mesh = cubeGeometry;\ncubeRenderer.setMaterial(material);\n\n// Run engine.\nengine.run();\n\n/**\n * Create cube geometry with custom BufferGeometry.\n * @param engine - Engine\n * @param size - Cube size\n * @returns Cube mesh\n */\nfunction createCustomMesh(engine: Engine, size: number): Mesh {\n  const geometry = new BufferMesh(engine, \"CustomCubeGeometry\");\n\n  // prettier-ignore\n  // Create vertices data.\n  const vertices: Float32Array = new Float32Array([\n          // Up\n          -size, size, -size, 0, 1, 0, size, size, -size, 0, 1, 0, size, size, size, 0, 1, 0, -size, size, size, 0, 1, 0,\n          // Down\n          -size, -size, -size, 0, -1, 0, size, -size, -size, 0, -1, 0, size, -size, size, 0, -1, 0, -size, -size, size, 0, -1, 0,\n          // Left\n          -size, size, -size, -1, 0, 0, -size, size, size, -1, 0, 0, -size, -size, size, -1, 0, 0, -size, -size, -size, -1, 0, 0,\n          // Right\n          size, size, -size, 1, 0, 0, size, size, size, 1, 0, 0, size, -size, size, 1, 0, 0, size, -size, -size, 1, 0, 0,\n          // Front\n          -size, size, size, 0, 0, 1, size, size, size, 0, 0, 1, size, -size, size, 0, 0, 1, -size, -size, size, 0, 0, 1,\n          // Back\n          -size, size, -size, 0, 0, -1, size, size, -size, 0, 0, -1, size, -size, -size, 0, 0, -1, -size, -size, -size, 0, 0, -1]);\n\n  // prettier-ignore\n  // Create indices data.\n  const indices: Uint16Array = new Uint16Array([\n          // Up\n          0, 2, 1, 2, 0, 3,\n          // Down\n          4, 6, 7, 6, 4, 5,\n          // Left\n          8, 10, 9, 10, 8, 11,\n          // Right\n          12, 14, 15, 14, 12, 13,\n          // Front\n          16, 18, 17, 18, 16, 19,\n          // Back\n          20, 22, 23, 22, 20, 21]);\n\n  // Create gpu vertex buffer and index buffer.\n  const vertexBuffer = new Buffer(engine, BufferBindFlag.VertexBuffer, vertices, BufferUsage.Static);\n  const indexBuffer = new Buffer(engine, BufferBindFlag.IndexBuffer, indices, BufferUsage.Static);\n\n  // Bind buffer\n  geometry.setVertexBufferBinding(vertexBuffer, 24);\n  geometry.setIndexBufferBinding(indexBuffer, IndexFormat.UInt16);\n\n  // Add vertexElement\n  geometry.setVertexElements([\n    new VertexElement(\"POSITION\", 0, VertexElementFormat.Vector3, 0),\n    new VertexElement(\"NORMAL\", 12, VertexElementFormat.Vector3, 0)\n  ]);\n\n  // Add one sub geometry.\n  geometry.addSubMesh(0, indices.length);\n  return geometry;\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Buffer Mesh Interleaved\n * @category Mesh\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  BlinnPhongMaterial<span class=\"token punctuation\">,</span>\n  Buffer<span class=\"token punctuation\">,</span>\n  BufferBindFlag<span class=\"token punctuation\">,</span>\n  BufferMesh<span class=\"token punctuation\">,</span>\n  BufferUsage<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span> Engine<span class=\"token punctuation\">,</span>\n  IndexFormat<span class=\"token punctuation\">,</span>\n  Mesh<span class=\"token punctuation\">,</span> MeshRenderer<span class=\"token punctuation\">,</span>\n  PointLight<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  VertexElement<span class=\"token punctuation\">,</span>\n  VertexElementFormat<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine and get root entity.</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create light.</span>\n<span class=\"token keyword\">const</span> lightEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pointLight\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> pointLight <span class=\"token operator\">=</span> lightEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>PointLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npointLight<span class=\"token punctuation\">.</span>distance <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\nlightEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Create camera.</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create custom cube.</span>\n<span class=\"token comment\">// Use createCustomMesh() to create custom cube mesh.</span>\n<span class=\"token keyword\">const</span> cubeEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Cube\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> cubeRenderer <span class=\"token operator\">=</span> cubeEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> cubeGeometry <span class=\"token operator\">=</span> <span class=\"token function\">createCustomMesh</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncubeEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncubeRenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> cubeGeometry<span class=\"token punctuation\">;</span>\ncubeRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Run engine.</span>\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Create cube geometry with custom BufferGeometry.\n * @param engine - Engine\n * @param size - Cube size\n * @returns Cube mesh\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">createCustomMesh</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">engine<span class=\"token operator\">:</span> Engine<span class=\"token punctuation\">,</span> size<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Mesh <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> geometry <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferMesh</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token string\">\"CustomCubeGeometry\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// prettier-ignore</span>\n  <span class=\"token comment\">// Create vertices data.</span>\n  <span class=\"token keyword\">const</span> vertices<span class=\"token operator\">:</span> Float32Array <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Float32Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n          <span class=\"token comment\">// Up</span>\n          <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Down</span>\n          <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Left</span>\n          <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Right</span>\n          size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Front</span>\n          <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Back</span>\n          <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// prettier-ignore</span>\n  <span class=\"token comment\">// Create indices data.</span>\n  <span class=\"token keyword\">const</span> indices<span class=\"token operator\">:</span> Uint16Array <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint16Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n          <span class=\"token comment\">// Up</span>\n          <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Down</span>\n          <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Left</span>\n          <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Right</span>\n          <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Front</span>\n          <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Back</span>\n          <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create gpu vertex buffer and index buffer.</span>\n  <span class=\"token keyword\">const</span> vertexBuffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Buffer</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> BufferBindFlag<span class=\"token punctuation\">.</span>VertexBuffer<span class=\"token punctuation\">,</span> vertices<span class=\"token punctuation\">,</span> BufferUsage<span class=\"token punctuation\">.</span>Static<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> indexBuffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Buffer</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> BufferBindFlag<span class=\"token punctuation\">.</span>IndexBuffer<span class=\"token punctuation\">,</span> indices<span class=\"token punctuation\">,</span> BufferUsage<span class=\"token punctuation\">.</span>Static<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Bind buffer</span>\n  geometry<span class=\"token punctuation\">.</span><span class=\"token function\">setVertexBufferBinding</span><span class=\"token punctuation\">(</span>vertexBuffer<span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  geometry<span class=\"token punctuation\">.</span><span class=\"token function\">setIndexBufferBinding</span><span class=\"token punctuation\">(</span>indexBuffer<span class=\"token punctuation\">,</span> IndexFormat<span class=\"token punctuation\">.</span>UInt16<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Add vertexElement</span>\n  geometry<span class=\"token punctuation\">.</span><span class=\"token function\">setVertexElements</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">VertexElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"POSITION\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> VertexElementFormat<span class=\"token punctuation\">.</span>Vector3<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">VertexElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"NORMAL\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> VertexElementFormat<span class=\"token punctuation\">.</span>Vector3<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Add one sub geometry.</span>\n  geometry<span class=\"token punctuation\">.</span><span class=\"token function\">addSubMesh</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> indices<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> geometry<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (dat, o3) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n  o3 = _interopRequireWildcard(o3);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title Culling Mask\n   * @category Camera\n   */\n  o3.Logger.enable();\n  var engine = new o3.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var rootEntity = engine.sceneManager.activeScene.createRootEntity(); // init camera\n\n  var cameraEntity = rootEntity.createChild(\"camera\");\n  var camera = cameraEntity.addComponent(o3.Camera);\n  var pos = cameraEntity.transform.position;\n  pos.setValue(10, 10, 10);\n  cameraEntity.transform.position = pos;\n  cameraEntity.transform.lookAt(new o3.Vector3(0, 0, 0));\n  var lightNode = rootEntity.createChild(\"Light\");\n  lightNode.transform.setRotation(-30, 0, 0);\n  lightNode.addComponent(o3.DirectLight); // init cube\n\n  var cubeEntity = rootEntity.createChild(\"cube\");\n  var renderer = cubeEntity.addComponent(o3.MeshRenderer);\n  renderer.mesh = o3.PrimitiveMesh.createCuboid(engine, 1, 1, 1);\n  var material = new o3.BlinnPhongMaterial(engine);\n  material.baseColor = new o3.Color(1, 0.25, 0.25, 1);\n  renderer.setMaterial(material);\n  engine.run();\n\n  function addGUI() {\n    var gui = new dat.GUI();\n    var cameraFolder = gui.addFolder(\"camera cullingMask\");\n    cameraFolder.open();\n    var constMap = {\n      EveryThing: o3.Layer.Everything,\n      Layer1: o3.Layer.Layer1,\n      Layer2: o3.Layer.Layer2,\n      Layer3: o3.Layer.Layer3\n    };\n    var cameraController = cameraFolder.add({\n      cullingMask: \"EveryThing\"\n    }, \"cullingMask\", Object.keys(constMap));\n    cameraController.onChange(function (v) {\n      camera.cullingMask = constMap[v];\n    });\n    var boxFolder = gui.addFolder(\"box layer\");\n    boxFolder.open();\n    var boxController = boxFolder.add({\n      layer: \"EveryThing\"\n    }, \"layer\", Object.keys(constMap));\n    boxController.onChange(function (v) {\n      renderer.entity.layer = constMap[v];\n    });\n  }\n\n  addGUI();\n});"},"name":"culling-mask","title":"Culling Mask","category":"Camera","id":"58a1bd3d-0925-5cbe-a479-5cb80f271c4b","sourceCode":"/**\n * @title Culling Mask\n * @category Camera\n */\nimport * as dat from \"dat.gui\";\nimport * as o3 from \"oasis-engine\";\nimport { DirectLight, Logger } from \"oasis-engine\";\n\nLogger.enable();\nconst engine = new o3.WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\nconst rootEntity = engine.sceneManager.activeScene.createRootEntity();\n\n// init camera\nconst cameraEntity = rootEntity.createChild(\"camera\");\nconst camera = cameraEntity.addComponent(o3.Camera);\nconst pos = cameraEntity.transform.position;\npos.setValue(10, 10, 10);\ncameraEntity.transform.position = pos;\ncameraEntity.transform.lookAt(new o3.Vector3(0, 0, 0));\n\nconst lightNode = rootEntity.createChild(\"Light\");\nlightNode.transform.setRotation(-30, 0, 0);\nlightNode.addComponent(DirectLight);\n\n// init cube\nconst cubeEntity = rootEntity.createChild(\"cube\");\nconst renderer = cubeEntity.addComponent(o3.MeshRenderer);\nrenderer.mesh = o3.PrimitiveMesh.createCuboid(engine, 1, 1, 1);\nconst material = new o3.BlinnPhongMaterial(engine);\nmaterial.baseColor = new o3.Color(1, 0.25, 0.25, 1);\nrenderer.setMaterial(material);\n\nengine.run();\n\nfunction addGUI() {\n  const gui = new dat.GUI();\n  const cameraFolder = gui.addFolder(\"camera cullingMask\");\n  cameraFolder.open();\n  const constMap = {\n    EveryThing: o3.Layer.Everything,\n    Layer1: o3.Layer.Layer1,\n    Layer2: o3.Layer.Layer2,\n    Layer3: o3.Layer.Layer3\n  };\n  const cameraController = cameraFolder.add({ cullingMask: \"EveryThing\" }, \"cullingMask\", Object.keys(constMap));\n  cameraController.onChange((v) => {\n    camera.cullingMask = constMap[v];\n  });\n\n  const boxFolder = gui.addFolder(\"box layer\");\n  boxFolder.open();\n  const boxController = boxFolder.add({ layer: \"EveryThing\" }, \"layer\", Object.keys(constMap));\n  boxController.onChange((v) => {\n    renderer.entity.layer = constMap[v];\n  });\n}\n\naddGUI();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Culling Mask\n * @category Camera\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> o3 <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> DirectLight<span class=\"token punctuation\">,</span> Logger <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\nLogger<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">o3<span class=\"token punctuation\">.</span>WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// init camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> camera <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>o3<span class=\"token punctuation\">.</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> pos <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">;</span>\npos<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> pos<span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">o3<span class=\"token punctuation\">.</span>Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> lightNode <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Light\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setRotation</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// init cube</span>\n<span class=\"token keyword\">const</span> cubeEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cube\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> renderer <span class=\"token operator\">=</span> cubeEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>o3<span class=\"token punctuation\">.</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> o3<span class=\"token punctuation\">.</span>PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">o3<span class=\"token punctuation\">.</span>BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmaterial<span class=\"token punctuation\">.</span>baseColor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">o3<span class=\"token punctuation\">.</span>Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">addGUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> cameraFolder <span class=\"token operator\">=</span> gui<span class=\"token punctuation\">.</span><span class=\"token function\">addFolder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera cullingMask\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraFolder<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> constMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    EveryThing<span class=\"token operator\">:</span> o3<span class=\"token punctuation\">.</span>Layer<span class=\"token punctuation\">.</span>Everything<span class=\"token punctuation\">,</span>\n    Layer1<span class=\"token operator\">:</span> o3<span class=\"token punctuation\">.</span>Layer<span class=\"token punctuation\">.</span>Layer1<span class=\"token punctuation\">,</span>\n    Layer2<span class=\"token operator\">:</span> o3<span class=\"token punctuation\">.</span>Layer<span class=\"token punctuation\">.</span>Layer2<span class=\"token punctuation\">,</span>\n    Layer3<span class=\"token operator\">:</span> o3<span class=\"token punctuation\">.</span>Layer<span class=\"token punctuation\">.</span>Layer3\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> cameraController <span class=\"token operator\">=</span> cameraFolder<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> cullingMask<span class=\"token operator\">:</span> <span class=\"token string\">\"EveryThing\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"cullingMask\"</span><span class=\"token punctuation\">,</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>constMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraController<span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    camera<span class=\"token punctuation\">.</span>cullingMask <span class=\"token operator\">=</span> constMap<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> boxFolder <span class=\"token operator\">=</span> gui<span class=\"token punctuation\">.</span><span class=\"token function\">addFolder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"box layer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  boxFolder<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> boxController <span class=\"token operator\">=</span> boxFolder<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> layer<span class=\"token operator\">:</span> <span class=\"token string\">\"EveryThing\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"layer\"</span><span class=\"token punctuation\">,</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>constMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  boxController<span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    renderer<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span>layer <span class=\"token operator\">=</span> constMap<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">addGUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title Buffer Mesh Instance\n   * @category Mesh\n   */\n  // Create engine.\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize(); // Get scene and root entity.\n\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(\"Root\"); // Init instance shader.\n\n  var shader = initCustomShader(); // Create camera.\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  var camera = cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl);\n  cameraEntity.transform.setPosition(0, 10, 160);\n  cameraEntity.transform.lookAt(new _oasisEngine.Vector3(0, 0, 0));\n  camera.farClipPlane = 300; // Create Instance Cube.\n\n  var cubeEntity = rootEntity.createChild(\"Cube\");\n  var cubeRenderer = cubeEntity.addComponent(_oasisEngine.MeshRenderer);\n  var material = new _oasisEngine.Material(engine, shader);\n  cubeEntity.transform.rotate(0, 60, 0);\n  cubeRenderer.mesh = createCustomMesh(engine, 1.0); // Use `createCustomMesh()` to create custom instance cube mesh.\n\n  cubeRenderer.setMaterial(material); // Run engine.\n\n  engine.run();\n  /**\n   * Create cube geometry with custom BufferGeometry.\n   * @param engine - Engine\n   * @param size - Cube size\n   * @returns Cube mesh\n   */\n\n  function createCustomMesh(engine, size) {\n    var geometry = new _oasisEngine.BufferMesh(engine, \"CustomCubeGeometry\"); // Create vertices data.\n    // prettier-ignore\n\n    var vertices = new Float32Array([// Up\n    -size, size, -size, 0, 1, 0, size, size, -size, 0, 1, 0, size, size, size, 0, 1, 0, -size, size, size, 0, 1, 0, // Down\n    -size, -size, -size, 0, -1, 0, size, -size, -size, 0, -1, 0, size, -size, size, 0, -1, 0, -size, -size, size, 0, -1, 0, // Left\n    -size, size, -size, -1, 0, 0, -size, size, size, -1, 0, 0, -size, -size, size, -1, 0, 0, -size, -size, -size, -1, 0, 0, // Right\n    size, size, -size, 1, 0, 0, size, size, size, 1, 0, 0, size, -size, size, 1, 0, 0, size, -size, -size, 1, 0, 0, // Front\n    -size, size, size, 0, 0, 1, size, size, size, 0, 0, 1, size, -size, size, 0, 0, 1, -size, -size, size, 0, 0, 1, // Back\n    -size, size, -size, 0, 0, -1, size, size, -size, 0, 0, -1, size, -size, -size, 0, 0, -1, -size, -size, -size, 0, 0, -1]); // Create instance data.\n\n    var instanceCount = 4000;\n    var instanceStride = 6;\n    var instanceData = new Float32Array(instanceCount * instanceStride);\n\n    for (var i = 0; i < instanceCount; i++) {\n      var offset = i * instanceStride; // instance offset\n\n      instanceData[offset] = (Math.random() - 0.5) * 60;\n      instanceData[offset + 1] = (Math.random() - 0.5) * 60;\n      instanceData[offset + 2] = (Math.random() - 0.5) * 60; // instance color\n\n      instanceData[offset + 3] = Math.random();\n      instanceData[offset + 4] = Math.random();\n      instanceData[offset + 5] = Math.random();\n    } // Create indices data.\n    // prettier-ignore\n\n\n    var indices = new Uint16Array([// Up\n    0, 2, 1, 2, 0, 3, // Down\n    4, 6, 7, 6, 4, 5, // Left\n    8, 10, 9, 10, 8, 11, // Right\n    12, 14, 15, 14, 12, 13, // Front\n    16, 18, 17, 18, 16, 19, // Back\n    20, 22, 23, 22, 20, 21]); // Create gpu vertex buffer and index buffer.\n\n    var vertexBuffer = new _oasisEngine.Buffer(engine, _oasisEngine.BufferBindFlag.VertexBuffer, vertices, _oasisEngine.BufferUsage.Static);\n    var instanceVertexBuffer = new _oasisEngine.Buffer(engine, _oasisEngine.BufferBindFlag.VertexBuffer, instanceData, _oasisEngine.BufferUsage.Static);\n    var indexBuffer = new _oasisEngine.Buffer(engine, _oasisEngine.BufferBindFlag.IndexBuffer, indices, _oasisEngine.BufferUsage.Static); // Bind buffer\n\n    geometry.setVertexBufferBinding(vertexBuffer, 24, 0);\n    geometry.setVertexBufferBinding(instanceVertexBuffer, 24, 1);\n    geometry.setIndexBufferBinding(indexBuffer, _oasisEngine.IndexFormat.UInt16); // Add vertexElements\n\n    geometry.setVertexElements([new _oasisEngine.VertexElement(\"POSITION\", 0, _oasisEngine.VertexElementFormat.Vector3, 0, 0), // Bind to VertexBuffer 0\n    new _oasisEngine.VertexElement(\"NORMAL\", 12, _oasisEngine.VertexElementFormat.Vector3, 0, 0), // Bind to VertexBuffer 0\n    new _oasisEngine.VertexElement(\"INSTANCE_OFFSET\", 0, _oasisEngine.VertexElementFormat.Vector3, 1, 1), // Bind instance offset to VertexBuffer 1, and enable instance by set instanceStepRate with 1\n    new _oasisEngine.VertexElement(\"INSTANCE_COLOR\", 12, _oasisEngine.VertexElementFormat.Vector3, 1, 1) // Bind instance color to VertexBuffer 1, and enable instance by set instanceStepRate with 1\n    ]); // Add one sub geometry.\n\n    geometry.addSubMesh(0, indices.length);\n    geometry.instanceCount = instanceCount;\n    return geometry;\n  }\n  /**\n   * Create custom instance shader.\n   */\n\n\n  function initCustomShader() {\n    var shader = _oasisEngine.Shader.create(\"CustomShader\", \"uniform mat4 u_MVPMat;\\n      attribute vec4 POSITION;\\n      attribute vec3 INSTANCE_OFFSET;\\n      attribute vec3 INSTANCE_COLOR;\\n      \\n      uniform mat4 u_MVMat;\\n      \\n      varying vec3 v_position;\\n      varying vec3 v_color;\\n      \\n      void main() {\\n        vec4 position = POSITION;\\n        position.xyz += INSTANCE_OFFSET;\\n        gl_Position = u_MVPMat * position;\\n\\n        v_color = INSTANCE_COLOR;\\n      }\", \"\\n      varying vec3 v_color;\\n      uniform vec4 u_color;\\n      \\n      void main() {\\n        vec4 color = vec4(v_color,1.0);\\n        gl_FragColor = color;\\n      }\\n      \");\n\n    return shader;\n  }\n});"},"name":"buffer-mesh-instance","title":"Buffer Mesh Instance","category":"Mesh","id":"f87a7ccb-1616-564c-986f-7d08693a5dcf","sourceCode":"/**\n * @title Buffer Mesh Instance\n * @category Mesh\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport {\n  Buffer,\n  BufferBindFlag,\n  BufferMesh,\n  BufferUsage,\n  Camera,\n  Engine,\n  IndexFormat,\n  Material,\n  Mesh,\n  MeshRenderer,\n  Shader,\n  Vector3,\n  VertexElement,\n  VertexElementFormat,\n  WebGLEngine\n} from \"oasis-engine\";\n\n// Create engine.\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\n// Get scene and root entity.\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity(\"Root\");\n\n// Init instance shader.\nconst shader = initCustomShader();\n\n// Create camera.\nconst cameraEntity = rootEntity.createChild(\"Camera\");\nconst camera = cameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\ncameraEntity.transform.setPosition(0, 10, 160);\ncameraEntity.transform.lookAt(new Vector3(0, 0, 0));\ncamera.farClipPlane = 300;\n\n// Create Instance Cube.\nconst cubeEntity = rootEntity.createChild(\"Cube\");\nconst cubeRenderer = cubeEntity.addComponent(MeshRenderer);\nconst material = new Material(engine, shader);\ncubeEntity.transform.rotate(0, 60, 0);\ncubeRenderer.mesh = createCustomMesh(engine, 1.0); // Use `createCustomMesh()` to create custom instance cube mesh.\ncubeRenderer.setMaterial(material);\n\n// Run engine.\nengine.run();\n\n/**\n * Create cube geometry with custom BufferGeometry.\n * @param engine - Engine\n * @param size - Cube size\n * @returns Cube mesh\n */\nfunction createCustomMesh(engine: Engine, size: number): Mesh {\n  const geometry = new BufferMesh(engine, \"CustomCubeGeometry\");\n\n  // Create vertices data.\n  // prettier-ignore\n  const vertices: Float32Array = new Float32Array([\n          // Up\n          -size, size, -size, 0, 1, 0, size, size, -size, 0, 1, 0, size, size, size, 0, 1, 0, -size, size, size, 0, 1, 0,\n          // Down\n          -size, -size, -size, 0, -1, 0, size, -size, -size, 0, -1, 0, size, -size, size, 0, -1, 0, -size, -size, size, 0, -1, 0,\n          // Left\n          -size, size, -size, -1, 0, 0, -size, size, size, -1, 0, 0, -size, -size, size, -1, 0, 0, -size, -size, -size, -1, 0, 0,\n          // Right\n          size, size, -size, 1, 0, 0, size, size, size, 1, 0, 0, size, -size, size, 1, 0, 0, size, -size, -size, 1, 0, 0,\n          // Front\n          -size, size, size, 0, 0, 1, size, size, size, 0, 0, 1, size, -size, size, 0, 0, 1, -size, -size, size, 0, 0, 1,\n          // Back\n          -size, size, -size, 0, 0, -1, size, size, -size, 0, 0, -1, size, -size, -size, 0, 0, -1, -size, -size, -size, 0, 0, -1]);\n\n  // Create instance data.\n  const instanceCount = 4000;\n  const instanceStride = 6;\n  const instanceData: Float32Array = new Float32Array(instanceCount * instanceStride);\n  for (let i = 0; i < instanceCount; i++) {\n    const offset = i * instanceStride;\n    // instance offset\n    instanceData[offset] = (Math.random() - 0.5) * 60;\n    instanceData[offset + 1] = (Math.random() - 0.5) * 60;\n    instanceData[offset + 2] = (Math.random() - 0.5) * 60;\n    // instance color\n    instanceData[offset + 3] = Math.random();\n    instanceData[offset + 4] = Math.random();\n    instanceData[offset + 5] = Math.random();\n  }\n\n  // Create indices data.\n  // prettier-ignore\n  const indices: Uint16Array = new Uint16Array([\n          // Up\n          0, 2, 1, 2, 0, 3,\n          // Down\n          4, 6, 7, 6, 4, 5,\n          // Left\n          8, 10, 9, 10, 8, 11,\n          // Right\n          12, 14, 15, 14, 12, 13,\n          // Front\n          16, 18, 17, 18, 16, 19,\n          // Back\n          20, 22, 23, 22, 20, 21]);\n\n  // Create gpu vertex buffer and index buffer.\n  const vertexBuffer = new Buffer(engine, BufferBindFlag.VertexBuffer, vertices, BufferUsage.Static);\n  const instanceVertexBuffer = new Buffer(engine, BufferBindFlag.VertexBuffer, instanceData, BufferUsage.Static);\n  const indexBuffer = new Buffer(engine, BufferBindFlag.IndexBuffer, indices, BufferUsage.Static);\n\n  // Bind buffer\n  geometry.setVertexBufferBinding(vertexBuffer, 24, 0);\n  geometry.setVertexBufferBinding(instanceVertexBuffer, 24, 1);\n  geometry.setIndexBufferBinding(indexBuffer, IndexFormat.UInt16);\n\n  // Add vertexElements\n  geometry.setVertexElements([\n    new VertexElement(\"POSITION\", 0, VertexElementFormat.Vector3, 0, 0), // Bind to VertexBuffer 0\n    new VertexElement(\"NORMAL\", 12, VertexElementFormat.Vector3, 0, 0), // Bind to VertexBuffer 0\n    new VertexElement(\"INSTANCE_OFFSET\", 0, VertexElementFormat.Vector3, 1, 1), // Bind instance offset to VertexBuffer 1, and enable instance by set instanceStepRate with 1\n    new VertexElement(\"INSTANCE_COLOR\", 12, VertexElementFormat.Vector3, 1, 1) // Bind instance color to VertexBuffer 1, and enable instance by set instanceStepRate with 1\n  ]);\n\n  // Add one sub geometry.\n  geometry.addSubMesh(0, indices.length);\n\n  geometry.instanceCount = instanceCount;\n\n  return geometry;\n}\n\n/**\n * Create custom instance shader.\n */\nfunction initCustomShader(): Shader {\n  const shader = Shader.create(\n    \"CustomShader\",\n    `uniform mat4 u_MVPMat;\n      attribute vec4 POSITION;\n      attribute vec3 INSTANCE_OFFSET;\n      attribute vec3 INSTANCE_COLOR;\n      \n      uniform mat4 u_MVMat;\n      \n      varying vec3 v_position;\n      varying vec3 v_color;\n      \n      void main() {\n        vec4 position = POSITION;\n        position.xyz += INSTANCE_OFFSET;\n        gl_Position = u_MVPMat * position;\n\n        v_color = INSTANCE_COLOR;\n      }`,\n\n    `\n      varying vec3 v_color;\n      uniform vec4 u_color;\n      \n      void main() {\n        vec4 color = vec4(v_color,1.0);\n        gl_FragColor = color;\n      }\n      `\n  );\n  return shader;\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Buffer Mesh Instance\n * @category Mesh\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  Buffer<span class=\"token punctuation\">,</span>\n  BufferBindFlag<span class=\"token punctuation\">,</span>\n  BufferMesh<span class=\"token punctuation\">,</span>\n  BufferUsage<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  Engine<span class=\"token punctuation\">,</span>\n  IndexFormat<span class=\"token punctuation\">,</span>\n  Material<span class=\"token punctuation\">,</span>\n  Mesh<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  Shader<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  VertexElement<span class=\"token punctuation\">,</span>\n  VertexElementFormat<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine.</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Get scene and root entity.</span>\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Init instance shader.</span>\n<span class=\"token keyword\">const</span> shader <span class=\"token operator\">=</span> <span class=\"token function\">initCustomShader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera.</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> camera <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">160</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncamera<span class=\"token punctuation\">.</span>farClipPlane <span class=\"token operator\">=</span> <span class=\"token number\">300</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create Instance Cube.</span>\n<span class=\"token keyword\">const</span> cubeEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Cube\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> cubeRenderer <span class=\"token operator\">=</span> cubeEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Material</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> shader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncubeEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncubeRenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> <span class=\"token function\">createCustomMesh</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Use `createCustomMesh()` to create custom instance cube mesh.</span>\ncubeRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Run engine.</span>\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Create cube geometry with custom BufferGeometry.\n * @param engine - Engine\n * @param size - Cube size\n * @returns Cube mesh\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">createCustomMesh</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">engine<span class=\"token operator\">:</span> Engine<span class=\"token punctuation\">,</span> size<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Mesh <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> geometry <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferMesh</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token string\">\"CustomCubeGeometry\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create vertices data.</span>\n  <span class=\"token comment\">// prettier-ignore</span>\n  <span class=\"token keyword\">const</span> vertices<span class=\"token operator\">:</span> Float32Array <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Float32Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n          <span class=\"token comment\">// Up</span>\n          <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Down</span>\n          <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Left</span>\n          <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Right</span>\n          size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Front</span>\n          <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Back</span>\n          <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create instance data.</span>\n  <span class=\"token keyword\">const</span> instanceCount <span class=\"token operator\">=</span> <span class=\"token number\">4000</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> instanceStride <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> instanceData<span class=\"token operator\">:</span> Float32Array <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Float32Array</span><span class=\"token punctuation\">(</span>instanceCount <span class=\"token operator\">*</span> instanceStride<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> instanceCount<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> offset <span class=\"token operator\">=</span> i <span class=\"token operator\">*</span> instanceStride<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// instance offset</span>\n    instanceData<span class=\"token punctuation\">[</span>offset<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span><span class=\"token punctuation\">;</span>\n    instanceData<span class=\"token punctuation\">[</span>offset <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span><span class=\"token punctuation\">;</span>\n    instanceData<span class=\"token punctuation\">[</span>offset <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// instance color</span>\n    instanceData<span class=\"token punctuation\">[</span>offset <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    instanceData<span class=\"token punctuation\">[</span>offset <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    instanceData<span class=\"token punctuation\">[</span>offset <span class=\"token operator\">+</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Create indices data.</span>\n  <span class=\"token comment\">// prettier-ignore</span>\n  <span class=\"token keyword\">const</span> indices<span class=\"token operator\">:</span> Uint16Array <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint16Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n          <span class=\"token comment\">// Up</span>\n          <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Down</span>\n          <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Left</span>\n          <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Right</span>\n          <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Front</span>\n          <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Back</span>\n          <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create gpu vertex buffer and index buffer.</span>\n  <span class=\"token keyword\">const</span> vertexBuffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Buffer</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> BufferBindFlag<span class=\"token punctuation\">.</span>VertexBuffer<span class=\"token punctuation\">,</span> vertices<span class=\"token punctuation\">,</span> BufferUsage<span class=\"token punctuation\">.</span>Static<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> instanceVertexBuffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Buffer</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> BufferBindFlag<span class=\"token punctuation\">.</span>VertexBuffer<span class=\"token punctuation\">,</span> instanceData<span class=\"token punctuation\">,</span> BufferUsage<span class=\"token punctuation\">.</span>Static<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> indexBuffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Buffer</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> BufferBindFlag<span class=\"token punctuation\">.</span>IndexBuffer<span class=\"token punctuation\">,</span> indices<span class=\"token punctuation\">,</span> BufferUsage<span class=\"token punctuation\">.</span>Static<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Bind buffer</span>\n  geometry<span class=\"token punctuation\">.</span><span class=\"token function\">setVertexBufferBinding</span><span class=\"token punctuation\">(</span>vertexBuffer<span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  geometry<span class=\"token punctuation\">.</span><span class=\"token function\">setVertexBufferBinding</span><span class=\"token punctuation\">(</span>instanceVertexBuffer<span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  geometry<span class=\"token punctuation\">.</span><span class=\"token function\">setIndexBufferBinding</span><span class=\"token punctuation\">(</span>indexBuffer<span class=\"token punctuation\">,</span> IndexFormat<span class=\"token punctuation\">.</span>UInt16<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Add vertexElements</span>\n  geometry<span class=\"token punctuation\">.</span><span class=\"token function\">setVertexElements</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">VertexElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"POSITION\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> VertexElementFormat<span class=\"token punctuation\">.</span>Vector3<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Bind to VertexBuffer 0</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">VertexElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"NORMAL\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> VertexElementFormat<span class=\"token punctuation\">.</span>Vector3<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Bind to VertexBuffer 0</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">VertexElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"INSTANCE_OFFSET\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> VertexElementFormat<span class=\"token punctuation\">.</span>Vector3<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Bind instance offset to VertexBuffer 1, and enable instance by set instanceStepRate with 1</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">VertexElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"INSTANCE_COLOR\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> VertexElementFormat<span class=\"token punctuation\">.</span>Vector3<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Bind instance color to VertexBuffer 1, and enable instance by set instanceStepRate with 1</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Add one sub geometry.</span>\n  geometry<span class=\"token punctuation\">.</span><span class=\"token function\">addSubMesh</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> indices<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  geometry<span class=\"token punctuation\">.</span>instanceCount <span class=\"token operator\">=</span> instanceCount<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> geometry<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * Create custom instance shader.\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">initCustomShader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Shader <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> shader <span class=\"token operator\">=</span> Shader<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"CustomShader\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">uniform mat4 u_MVPMat;\n      attribute vec4 POSITION;\n      attribute vec3 INSTANCE_OFFSET;\n      attribute vec3 INSTANCE_COLOR;\n      \n      uniform mat4 u_MVMat;\n      \n      varying vec3 v_position;\n      varying vec3 v_color;\n      \n      void main() {\n        vec4 position = POSITION;\n        position.xyz += INSTANCE_OFFSET;\n        gl_Position = u_MVPMat * position;\n\n        v_color = INSTANCE_COLOR;\n      }</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n      varying vec3 v_color;\n      uniform vec4 u_color;\n      \n      void main() {\n        vec4 color = vec4(v_color,1.0);\n        gl_FragColor = color;\n      }\n      </span><span class=\"token template-punctuation string\">`</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> shader<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title Filter Mode\n   * @category Texture\n   */\n  var gui = new dat.GUI(); // Create engine object\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // Create camera\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 0, 1);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl); // Create Plane\n\n  var mesh = _oasisEngine.PrimitiveMesh.createPlane(engine, 2, 2);\n\n  var material = new _oasisEngine.UnlitMaterial(engine);\n  material.renderFace = _oasisEngine.RenderFace.Double;\n  var planeEntity = rootEntity.createChild(\"ground\");\n  planeEntity.transform.setRotation(5, 0, 0);\n  var planeRenderer = planeEntity.addComponent(_oasisEngine.MeshRenderer);\n  planeRenderer.mesh = mesh;\n  planeRenderer.setMaterial(material);\n  engine.resourceManager.load({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_CtuR7LW4C0AAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }).then(function (texture) {\n    material.baseTexture = texture;\n    material.tilingOffset.setValue(30, 30, 0, 0);\n    addGUI(texture);\n    engine.run();\n  });\n\n  function addGUI(texture) {\n    var _filterMap;\n\n    var filterMap = (_filterMap = {}, _filterMap[_oasisEngine.TextureFilterMode.Point] = \"Point\", _filterMap[_oasisEngine.TextureFilterMode.Bilinear] = \"Bilinear\", _filterMap[_oasisEngine.TextureFilterMode.Trilinear] = \"Trilinear\", _filterMap);\n    var state = {\n      filterMode: filterMap[texture.filterMode]\n    };\n    gui.add(state, \"filterMode\", Object.values(filterMap)).onChange(function (v) {\n      for (var key in filterMap) {\n        var value = filterMap[key];\n\n        if (v === value) {\n          texture.filterMode = Number(key);\n        }\n      }\n    });\n  }\n});"},"name":"filter-mode","title":"Filter Mode","category":"Texture","id":"c94f6409-0b18-5508-a56b-bb483699f0cf","sourceCode":"/**\n * @title Filter Mode\n * @category Texture\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\nimport {\n  AssetType,\n  Camera,\n  MeshRenderer,\n  PrimitiveMesh,\n  RenderFace,\n  Texture2D,\n  TextureFilterMode,\n  UnlitMaterial,\n  WebGLEngine\n} from \"oasis-engine\";\nconst gui = new dat.GUI();\n\n// Create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// Create camera\nconst cameraEntity = rootEntity.createChild(\"Camera\");\ncameraEntity.transform.setPosition(0, 0, 1);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\n// Create Plane\nconst mesh = PrimitiveMesh.createPlane(engine, 2, 2);\nconst material = new UnlitMaterial(engine);\nmaterial.renderFace = RenderFace.Double;\nconst planeEntity = rootEntity.createChild(\"ground\");\nplaneEntity.transform.setRotation(5, 0, 0);\nconst planeRenderer = planeEntity.addComponent(MeshRenderer);\nplaneRenderer.mesh = mesh;\nplaneRenderer.setMaterial(material);\n\nengine.resourceManager\n  .load<Texture2D>({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_CtuR7LW4C0AAAAAAAAAAAAAARQnAQ\",\n    type: AssetType.Texture2D\n  })\n  .then((texture) => {\n    material.baseTexture = texture;\n    material.tilingOffset.setValue(30, 30, 0, 0);\n    addGUI(texture);\n    engine.run();\n  });\n\nfunction addGUI(texture: Texture2D) {\n  const filterMap: Record<TextureFilterMode, string> = {\n    [TextureFilterMode.Point]: \"Point\",\n    [TextureFilterMode.Bilinear]: \"Bilinear\",\n    [TextureFilterMode.Trilinear]: \"Trilinear\"\n  };\n  const state = {\n    filterMode: filterMap[texture.filterMode]\n  };\n  gui.add(state, \"filterMode\", Object.values(filterMap)).onChange((v) => {\n    for (let key in filterMap) {\n      const value = filterMap[key];\n      if (v === value) {\n        texture.filterMode = Number(key);\n      }\n    }\n  });\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Filter Mode\n * @category Texture\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  RenderFace<span class=\"token punctuation\">,</span>\n  Texture2D<span class=\"token punctuation\">,</span>\n  TextureFilterMode<span class=\"token punctuation\">,</span>\n  UnlitMaterial<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create Plane</span>\n<span class=\"token keyword\">const</span> mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createPlane</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnlitMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmaterial<span class=\"token punctuation\">.</span>renderFace <span class=\"token operator\">=</span> RenderFace<span class=\"token punctuation\">.</span>Double<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> planeEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ground\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nplaneEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setRotation</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> planeRenderer <span class=\"token operator\">=</span> planeEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nplaneRenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> mesh<span class=\"token punctuation\">;</span>\nplaneRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_CtuR7LW4C0AAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    material<span class=\"token punctuation\">.</span>baseTexture <span class=\"token operator\">=</span> texture<span class=\"token punctuation\">;</span>\n    material<span class=\"token punctuation\">.</span>tilingOffset<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addGUI</span><span class=\"token punctuation\">(</span>texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">addGUI</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture<span class=\"token operator\">:</span> Texture2D</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> filterMap<span class=\"token operator\">:</span> Record<span class=\"token operator\">&lt;</span>TextureFilterMode<span class=\"token punctuation\">,</span> string<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span>TextureFilterMode<span class=\"token punctuation\">.</span>Point<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Point\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span>TextureFilterMode<span class=\"token punctuation\">.</span>Bilinear<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Bilinear\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span>TextureFilterMode<span class=\"token punctuation\">.</span>Trilinear<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Trilinear\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    filterMode<span class=\"token operator\">:</span> filterMap<span class=\"token punctuation\">[</span>texture<span class=\"token punctuation\">.</span>filterMode<span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"filterMode\"</span><span class=\"token punctuation\">,</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span>filterMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> key <span class=\"token keyword\">in</span> filterMap<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> filterMap<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>v <span class=\"token operator\">===</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        texture<span class=\"token punctuation\">.</span>filterMode <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@tweenjs/tween.js\", \"@oasis-engine/physics-lite\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@tweenjs/tween.js\"), require(\"@oasis-engine/physics-lite\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global.TWEEN, global[\"@oasisEngine/physicsLite\"]);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, TWEEN, _physicsLite) {\n  \"use strict\";\n\n  TWEEN = _interopRequireWildcard(TWEEN);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  var EnumBirdState;\n\n  (function (EnumBirdState) {\n    EnumBirdState[EnumBirdState[\"Alive\"] = 0] = \"Alive\";\n    EnumBirdState[EnumBirdState[\"Dead\"] = 1] = \"Dead\";\n  })(EnumBirdState || (EnumBirdState = {}));\n\n  var EnumGameState;\n  /** The y coordinate of the ground collision detection. */\n\n  (function (EnumGameState) {\n    EnumGameState[EnumGameState[\"Idel\"] = 0] = \"Idel\";\n    EnumGameState[EnumGameState[\"Start\"] = 1] = \"Start\";\n    EnumGameState[EnumGameState[\"End\"] = 2] = \"End\";\n  })(EnumGameState || (EnumGameState = {}));\n\n  var groundY = -3.1;\n  var GameEvent = {\n    fly: \"fly\",\n    stateChange: \"stateChange\",\n    showGui: \"showGui\",\n    checkHitGui: \"checkHitGui\",\n    checkHit: \"checkHit\",\n    gameOver: \"gameOver\",\n    addScore: \"addScore\",\n    reStartGame: \"reStartGame\"\n  };\n  var gameResArray;\n  /**\n   * We can customize the size of the interface that is finally presented to the player.\n   * @param designWidth - Design width\n   * @param designHeight - Design height\n   */\n\n  function fitWithHeight(aspectRatio) {\n    var canvas = document.getElementById(\"canvas\");\n    var parentEle = canvas.parentElement;\n    var style = canvas.style;\n    var designHeight = parentEle.clientHeight;\n    var designWidth = designHeight * aspectRatio;\n    style.width = designWidth + \"px\";\n    style.height = designHeight + \"px\";\n    style.marginLeft = (parentEle.clientWidth - designWidth) / 2 + \"px\";\n  } // Design size.\n\n\n  fitWithHeight(768 / 896); // Create engine object.\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\", _physicsLite.LitePhysics);\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // Create camera.\n\n  var cameraEntity = rootEntity.createChild(\"camera\");\n  cameraEntity.transform.setPosition(0.3, 0, 5);\n  var camera = cameraEntity.addComponent(_oasisEngine.Camera); // 2D is more suitable for orthographic cameras.\n\n  camera.isOrthographic = true;\n  camera.orthographicSize = 4.5; // Load the resources needed by the game.\n\n  engine.resourceManager.load([{\n    // Background.\n    url: \"https://gw.alipayobjects.com/zos/OasisHub/315000157/5244/background.png\",\n    type: _oasisEngine.AssetType.Texture2D\n  }, {\n    // Pipe.\n    url: \"https://gw.alipayobjects.com/zos/OasisHub/315000157/5987/pipe.png\",\n    type: _oasisEngine.AssetType.Texture2D\n  }, {\n    // Ground.\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Sj7OS4YJHDIAAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }, {\n    // \bBird.\n    url: \"https://gw.alipayobjects.com/zos/OasisHub/315000157/8356/bird.png\",\n    type: _oasisEngine.AssetType.Texture2D\n  }, {\n    // Restart.\n    url: \"https://gw.alipayobjects.com/zos/OasisHub/315000157/6695/restart.png\",\n    type: _oasisEngine.AssetType.Texture2D\n  }, {\n    // Number.\n    url: \"https://gw.alipayobjects.com/zos/OasisHub/315000157/8709/527-number.png\",\n    type: _oasisEngine.AssetType.Texture2D\n  }]).then(function (texture2DArr) {\n    // Record the resources.\n    gameResArray = texture2DArr; // Initialize location information and component information.\n    // Background.\n\n    var nodeBg = rootEntity.createChild(\"nodeBg\");\n    nodeBg.transform.setPosition(0.3, 0, -10);\n    nodeBg.addComponent(_oasisEngine.SpriteRenderer).sprite = new _oasisEngine.Sprite(engine, texture2DArr[0], null, null, 100); // Pipe.\n\n    var nodePipe = rootEntity.createChild(\"nodePipe\");\n    nodePipe.transform.setPosition(0, 0, -3);\n    nodePipe.addComponent(ScriptPipe); // Ground.\n\n    var nodeGround = rootEntity.createChild(\"nodeGround\");\n    nodeGround.transform.setPosition(0.3, -4.125, -2);\n    nodeGround.transform.setRotation(90, 0, 0);\n    var groundRenderer = nodeGround.addComponent(_oasisEngine.MeshRenderer);\n    groundRenderer.mesh = _oasisEngine.PrimitiveMesh.createPlane(engine, 7.68, 1.28);\n    var groundMaterial = new _oasisEngine.UnlitMaterial(engine);\n    groundRenderer.setMaterial(groundMaterial);\n    groundMaterial.baseTexture = texture2DArr[2];\n    groundMaterial.tilingOffset.setValue(21, 1, 0, 0);\n    nodeGround.addComponent(ScriptGround); // Bird.\n\n    var nodeBird = rootEntity.createChild(\"nodeBird\");\n    nodeBird.transform.setPosition(-1, 1.15, 0);\n    nodeBird.addComponent(_oasisEngine.SpriteRenderer).sprite = new _oasisEngine.Sprite(engine, texture2DArr[3], null, null, 100);\n    nodeBird.addComponent(ScriptBird); // Death Effect.\n\n    var nodeDeathEff = rootEntity.createChild(\"nodeEff\");\n    nodeDeathEff.transform.setPosition(0, 0, -1);\n    nodeDeathEff.transform.setRotation(90, 0, 0);\n    var effRenderer = nodeDeathEff.addComponent(_oasisEngine.MeshRenderer);\n    effRenderer.mesh = _oasisEngine.PrimitiveMesh.createPlane(engine, 20, 20);\n    var material = new _oasisEngine.UnlitMaterial(engine);\n    effRenderer.setMaterial(material); // Can be transparent.\n\n    material.isTransparent = true;\n    material.baseColor.setValue(0, 0, 0, 0);\n    nodeDeathEff.addComponent(ScriptDeathEff); // GUI.\n\n    var nodeGui = rootEntity.createChild(\"nodeGui\");\n    nodeGui.transform.setPosition(0.3, 0, 1); // Restart.\n\n    var nodeRestart = nodeGui.createChild(\"nodeRestart\");\n    nodeRestart.addComponent(_oasisEngine.SpriteRenderer).sprite = new _oasisEngine.Sprite(engine, texture2DArr[4], null, null, 100); // Score.\n\n    var nodeScore = nodeGui.createChild(\"nodeScore\");\n    nodeScore.transform.setPosition(0, 3.2, 0);\n    nodeScore.transform.setScale(0.3, 0.3, 0.3);\n    nodeScore.addComponent(ScriptScore);\n    nodeGui.addComponent(ScriptGUI); // GameCtrl controls the global game.\n\n    rootEntity.addComponent(GameCtrl);\n  });\n  engine.run();\n\n  var ScriptPipe = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(ScriptPipe, _Script);\n\n    function ScriptPipe() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _Script.call.apply(_Script, [this].concat(args)) || this;\n      _this._originPipe = void 0;\n      _this._nowPipeArr = [];\n      _this._pipePool = [];\n      _this._curStartTimeStamp = void 0;\n      _this._pipeHideX = 4.6;\n      _this._pipeVerticalDis = 10.8;\n      _this._pipeHorizontalDis = 4;\n      _this._pipeRandomPosY = 3.5;\n      _this._pipeDebutTime = 3000;\n      _this._pipeHorizontalV = 0.003;\n      return _this;\n    }\n\n    var _proto = ScriptPipe.prototype;\n\n    _proto.onAwake = function onAwake() {\n      var _this2 = this;\n\n      // Init originPipe.\n      var pipe = this._originPipe = new _oasisEngine.Entity(engine);\n      var node1 = pipe.createChild(\"node1\");\n      var node2 = pipe.createChild(\"node2\");\n      var verticalDis = this._pipeVerticalDis;\n      node1.transform.setPosition(0, -verticalDis / 2, 0);\n      node2.transform.setPosition(0, verticalDis / 2, 0);\n      node2.transform.setScale(1, -1, 1);\n      node1.addComponent(_oasisEngine.SpriteRenderer).sprite = new _oasisEngine.Sprite(engine, gameResArray[1], null, null, 100);\n      node2.addComponent(_oasisEngine.SpriteRenderer).sprite = new _oasisEngine.Sprite(engine, gameResArray[1], null, null, 100);\n\n      this._pipePool.push(pipe); // Control the performance of the pipe according to the change of the game state.\n\n\n      engine.on(GameEvent.stateChange, function (gameState) {\n        switch (gameState) {\n          case EnumGameState.Idel:\n            _this2.enabled = false;\n\n            _this2._destroyPipe();\n\n            break;\n\n          case EnumGameState.Start:\n            _this2.enabled = true;\n            _this2._curStartTimeStamp = engine.time.nowTime;\n            break;\n\n          case EnumGameState.End:\n            _this2.enabled = false;\n            break;\n        }\n      }); // When checkHit is monitored, check the collision between the pipe and the bird.\n\n      engine.on(GameEvent.checkHit, function (birdY) {\n        var len = _this2._nowPipeArr.length;\n\n        for (var i = 0; i < len; i++) {\n          var pipePos = _this2._nowPipeArr[i].transform.position;\n\n          if (Math.abs(pipePos.x) < 0.9) {\n            if (Math.abs(pipePos.y - birdY) > 1.2) {\n              engine.dispatch(GameEvent.gameOver);\n            }\n\n            break;\n          }\n        }\n      });\n    }\n    /**\n     * Three things will be done here every frame：\n     *    1.Adjust the generation of the pipe.\n     *    2.Adjust the position of the pipe.\n     *    3.Judge whether to get a point.\n     * @param deltaTime - The deltaTime when the script update\n     */\n    ;\n\n    _proto.onUpdate = function onUpdate(deltaTime) {\n      var debutTime = this._pipeDebutTime; // The water pipe will be displayed after the start of the game pipeDebutTime.\n\n      if (engine.time.nowTime - this._curStartTimeStamp >= debutTime) {\n        var bAddScore = false; // After deltaTime, the distance the pipe has moved.\n\n        var changeVal = deltaTime * this._pipeHorizontalV;\n        var pipeLen = this._nowPipeArr.length;\n        var horizontalDis = this._pipeHorizontalDis,\n            randomPosY = this._pipeRandomPosY,\n            hideX = this._pipeHideX; // Adjust the position of all pipes.\n\n        if (pipeLen > 0) {\n          for (var i = pipeLen - 1; i >= 0; i--) {\n            var pipe = this._nowPipeArr[i];\n            var pipeTrans = pipe.transform;\n            var pipePos = pipeTrans.position;\n\n            if (pipePos.x < -hideX) {\n              // The invisible pipe can be destroyed.\n              this._destroyPipe(i);\n            } else {\n              if (!bAddScore && pipePos.x > -1 && pipePos.x - changeVal <= -1) {\n                // Get a point.\n                engine.dispatch(GameEvent.addScore);\n                bAddScore = true;\n              }\n\n              pipeTrans.setPosition(pipePos.x - changeVal, pipePos.y, pipePos.z);\n            } // Judge whether the pipe needs to be regenerated according to the X coordinate.\n\n\n            if (i == pipeLen - 1 && pipePos.x <= hideX - horizontalDis) {\n              this._createPipe(hideX, randomPosY * Math.random() - randomPosY / 2 + 0.8, 0);\n            }\n          }\n        } else {\n          // Need to regenerate a pipe.\n          this._createPipe(hideX, randomPosY * Math.random() - randomPosY / 2 + 0.8, 0);\n        }\n      }\n    };\n\n    _proto._createPipe = function _createPipe(posX, posY, posZ) {\n      var pipePool = this._pipePool;\n      var pipe = pipePool.length > 0 ? pipePool.pop() : this._originPipe.clone();\n      pipe.transform.setPosition(posX, posY, posZ);\n      this.entity.addChild(pipe);\n\n      this._nowPipeArr.push(pipe);\n    }\n    /**\n     * It’s not really destroyed, we just put it in the pool.\n     * @param pipeIndex - If pipeIndex is less than 0, we recycle all pipes\n     */\n    ;\n\n    _proto._destroyPipe = function _destroyPipe(pipeIndex) {\n      if (pipeIndex === void 0) {\n        pipeIndex = -1;\n      }\n\n      var entity = this.entity,\n          _pipePool = this._pipePool,\n          _nowPipeArr = this._nowPipeArr;\n\n      var removePipe = function removePipe(pipe) {\n        entity.removeChild(pipe);\n\n        _pipePool.push(pipe);\n      };\n\n      if (pipeIndex >= 0) {\n        removePipe(_nowPipeArr[pipeIndex]);\n\n        _nowPipeArr.splice(pipeIndex, 1);\n      } else {\n        for (var index = _nowPipeArr.length - 1; index >= 0; index--) {\n          removePipe(_nowPipeArr[index]);\n        }\n\n        _nowPipeArr.length = 0;\n      }\n    };\n\n    return ScriptPipe;\n  }(_oasisEngine.Script);\n\n  var ScriptScore = /*#__PURE__*/function (_Script2) {\n    _inheritsLoose(ScriptScore, _Script2);\n\n    function ScriptScore() {\n      var _this3;\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this3 = _Script2.call.apply(_Script2, [this].concat(args)) || this;\n      _this3._spriteArray = [];\n      _this3._numInv = 2;\n      _this3._scoreEntitys = [];\n      _this3._scoreRenderer = [];\n      _this3._myScore = 0;\n      return _this3;\n    }\n\n    var _proto2 = ScriptScore.prototype;\n\n    _proto2.onAwake = function onAwake() {\n      var _this4 = this;\n\n      // Init spriteArray.\n      var spriteArray = this._spriteArray; // Cut digital resources into ten.\n\n      for (var i = 0; i < 10; i++) {\n        spriteArray.push(new _oasisEngine.Sprite(engine, gameResArray[5], new _oasisEngine.Rect(i * 0.1, 0, 0.1, 1), null, 75));\n      }\n\n      engine.on(GameEvent.addScore, function () {\n        ++_this4._myScore;\n\n        _this4._showScore(\"\" + _this4._myScore);\n      }); // Control the performance of the score according to the change of the game state.\n\n      engine.on(GameEvent.stateChange, function (gameState) {\n        switch (gameState) {\n          case EnumGameState.Idel:\n            _this4.entity.isActive = false;\n            break;\n\n          case EnumGameState.Start:\n            _this4.entity.isActive = true;\n            _this4._myScore = 0;\n\n            _this4._showScore(\"0\");\n\n            break;\n\n          case EnumGameState.End:\n            break;\n        }\n      });\n    };\n\n    _proto2._showScore = function _showScore(scoreNumStr) {\n      var scoreLen = scoreNumStr.length;\n      var entity = this.entity,\n          inv = this._numInv,\n          scoreEntitys = this._scoreEntitys,\n          spriteArray = this._spriteArray,\n          scoreRenderers = this._scoreRenderer;\n      var nowEntityLen = scoreEntitys.length;\n      var scoreEntity;\n      var scoreRenderer; // If the entity is not enough, new one.\n\n      if (scoreLen > nowEntityLen) {\n        for (var i = nowEntityLen; i < scoreLen; i++) {\n          scoreEntity = new _oasisEngine.Entity(engine);\n          scoreRenderer = scoreEntity.addComponent(_oasisEngine.SpriteRenderer);\n          scoreRenderers.push(scoreRenderer);\n          scoreEntitys.push(scoreEntity);\n          entity.addChild(scoreEntity);\n        }\n      } // At the moment nowEntityLen >= scoreLen.\n\n\n      nowEntityLen = scoreEntitys.length;\n      var startX = (1 - scoreLen) * inv / 2;\n\n      for (var _i = 0; _i < nowEntityLen; _i++) {\n        scoreEntity = scoreEntitys[_i];\n\n        if (_i >= scoreLen) {\n          scoreEntity.isActive = false;\n        } else {\n          scoreEntity.isActive = true;\n          scoreEntity.transform.setPosition(startX + _i * inv, 0, 0);\n          scoreRenderers[_i].sprite = spriteArray[parseInt(scoreNumStr[_i])];\n        }\n      }\n    };\n\n    return ScriptScore;\n  }(_oasisEngine.Script);\n\n  var ScriptGround = /*#__PURE__*/function (_Script3) {\n    _inheritsLoose(ScriptGround, _Script3);\n\n    function ScriptGround() {\n      var _this5;\n\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      _this5 = _Script3.call.apply(_Script3, [this].concat(args)) || this;\n      _this5._groundMaterial = void 0;\n      _this5._groundHorizontalV = 0.0082;\n      return _this5;\n    }\n\n    var _proto3 = ScriptGround.prototype;\n\n    _proto3.onAwake = function onAwake() {\n      var _this6 = this;\n\n      this._groundMaterial = this.entity.getComponent(_oasisEngine.MeshRenderer).getMaterial(); // Control the performance of the ground according to the change of the game state.\n\n      engine.on(GameEvent.stateChange, function (gameState) {\n        switch (gameState) {\n          case EnumGameState.Idel:\n          case EnumGameState.Start:\n            _this6.enabled = true;\n            break;\n\n          case EnumGameState.End:\n            _this6.enabled = false;\n            break;\n\n          default:\n            break;\n        }\n      }); // When checkHit is monitored, check the collision between the ground and the bird.\n\n      engine.on(GameEvent.checkHit, function (birdY) {\n        birdY < groundY && engine.dispatch(GameEvent.gameOver);\n      });\n    };\n\n    _proto3.onUpdate = function onUpdate(deltaTime) {\n      // After deltaTime, the distance the ground has moved.\n      this._groundMaterial.tilingOffset.z += deltaTime * this._groundHorizontalV;\n    };\n\n    return ScriptGround;\n  }(_oasisEngine.Script);\n\n  var GameCtrl = /*#__PURE__*/function (_Script4) {\n    _inheritsLoose(GameCtrl, _Script4);\n\n    function GameCtrl() {\n      var _this7;\n\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      _this7 = _Script4.call.apply(_Script4, [this].concat(args)) || this;\n      _this7._gameState = void 0;\n      return _this7;\n    }\n\n    var _proto4 = GameCtrl.prototype;\n\n    _proto4.onAwake = function onAwake() {\n      var _this8 = this;\n\n      engine.on(GameEvent.reStartGame, function () {\n        _this8._setGameState(EnumGameState.Idel);\n      });\n      engine.on(GameEvent.gameOver, function () {\n        _this8._setGameState(EnumGameState.End);\n      });\n      var boxCollider = this.entity.addComponent(_oasisEngine.StaticCollider);\n      var boxColliderShape = new _oasisEngine.BoxColliderShape();\n      boxColliderShape.setSize(10, 10, 0.001);\n      boxCollider.addShape(boxColliderShape);\n    };\n\n    _proto4.onStart = function onStart() {\n      // Give a state at the beginning.\n      this._setGameState(EnumGameState.Idel);\n    };\n\n    _proto4.onUpdate = function onUpdate() {\n      // Update TWEEN.\n      TWEEN.update();\n    };\n\n    _proto4.onPointerDown = function onPointerDown() {\n      switch (this._gameState) {\n        case EnumGameState.Idel:\n          this._setGameState(EnumGameState.Start);\n\n          engine.dispatch(GameEvent.fly);\n          break;\n\n        case EnumGameState.Start:\n          engine.dispatch(GameEvent.fly);\n          break;\n\n        default:\n          break;\n      }\n    }\n    /**\n     * The status will be distributed to all objects in the game.\n     * @param state - EnumGameState\n     */\n    ;\n\n    _proto4._setGameState = function _setGameState(state) {\n      if (this._gameState != state) {\n        this._gameState = state;\n        engine.dispatch(GameEvent.stateChange, state);\n      }\n    };\n\n    return GameCtrl;\n  }(_oasisEngine.Script);\n\n  var ScriptGUI = /*#__PURE__*/function (_Script5) {\n    _inheritsLoose(ScriptGUI, _Script5);\n\n    function ScriptGUI() {\n      return _Script5.apply(this, arguments) || this;\n    }\n\n    var _proto5 = ScriptGUI.prototype;\n\n    _proto5.onAwake = function onAwake() {\n      var _this9 = this;\n\n      var entity = this.entity;\n      var resetBtnNode = entity.findByName(\"nodeRestart\"); // Add BoxCollider.\n\n      var boxCollider = resetBtnNode.addComponent(_oasisEngine.StaticCollider);\n      var boxColliderShape = new _oasisEngine.BoxColliderShape();\n      boxColliderShape.setSize(2.14, 0.75, 0.001);\n      boxCollider.addShape(boxColliderShape);\n\n      resetBtnNode.addComponent(_oasisEngine.Script).onPointerClick = function () {\n        _this9.engine.dispatch(GameEvent.reStartGame);\n      }; // Control the performance of the GUI according to the change of the game state.\n\n\n      engine.on(GameEvent.stateChange, function (gameState) {\n        switch (gameState) {\n          case EnumGameState.Idel:\n          case EnumGameState.Start:\n            resetBtnNode.isActive = false;\n            break;\n\n          case EnumGameState.End:\n            break;\n\n          default:\n            break;\n        }\n      });\n      engine.on(GameEvent.showGui, function () {\n        resetBtnNode.isActive = true;\n      });\n    };\n\n    return ScriptGUI;\n  }(_oasisEngine.Script);\n\n  var ScriptBird = /*#__PURE__*/function (_Script6) {\n    _inheritsLoose(ScriptBird, _Script6);\n\n    function ScriptBird() {\n      var _this10;\n\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      _this10 = _Script6.call.apply(_Script6, [this].concat(args)) || this;\n      _this10._regions = [new _oasisEngine.Vector2(0, 0), new _oasisEngine.Vector2(1 / 3, 0), new _oasisEngine.Vector2(2 / 3, 0)];\n      _this10._reciprocalSliceWidth = 1 / 3;\n      _this10._reciprocalSliceHeight = 1;\n      _this10._frameInterval = 150;\n      _this10._totalFrames = 3;\n      _this10._maxDropV = -8;\n      _this10._gravity = -35;\n      _this10._startFlyV = 10;\n      _this10._cumulativeTime = 0;\n      _this10._birdState = EnumBirdState.Alive;\n      _this10._sprite = void 0;\n      _this10._curFrameIndex = void 0;\n      _this10._startY = void 0;\n      _this10._flyStartTime = void 0;\n      _this10._gameState = void 0;\n      _this10._yoyoTween = void 0;\n      _this10._dropTween = void 0;\n      return _this10;\n    }\n\n    var _proto6 = ScriptBird.prototype;\n\n    _proto6.onAwake = function onAwake() {\n      this._initDataAndUI();\n\n      this._initTween();\n\n      this._initListener();\n    };\n\n    _proto6.onUpdate = function onUpdate(deltaTime) {\n      // Update the performance of the bird.\n      switch (this._birdState) {\n        case EnumBirdState.Alive:\n          var _frameInterval = this._frameInterval,\n              _totalFrames = this._totalFrames;\n          this._cumulativeTime += deltaTime;\n\n          if (this._cumulativeTime >= _frameInterval) {\n            // Need update frameIndex.\n            var addFrameCount = Math.floor(this._cumulativeTime / _frameInterval);\n            this._cumulativeTime -= addFrameCount * _frameInterval;\n\n            this._setFrameIndex((this._curFrameIndex + addFrameCount) % _totalFrames);\n          } // Update bird's location information.\n\n\n          if (this._gameState == EnumGameState.Start) {\n            // Free fall and uniform motion are superimposed to obtain the current position.\n            var endY;\n            var _maxDropV = this._maxDropV,\n                _startFlyV = this._startFlyV,\n                _gravity = this._gravity;\n            var transform = this.entity.transform;\n            var position = transform.position; // How much time has passed.\n\n            var subTime = (engine.time.nowTime - this._flyStartTime) / 1000; // How long has it been in free fall.\n\n            var addToMaxUseTime = (_maxDropV - _startFlyV) / _gravity;\n\n            if (subTime <= addToMaxUseTime) {\n              // Free fall.\n              endY = (_startFlyV + (_startFlyV + subTime * _gravity)) * subTime / 2 + this._startY;\n            } else {\n              // Falling at a constant speed.\n              endY = (_maxDropV + _startFlyV) * addToMaxUseTime / 2 + _maxDropV * (subTime - addToMaxUseTime) + this._startY;\n            }\n\n            transform.setPosition(position.x, endY, position.z);\n          }\n\n          break;\n\n        case EnumBirdState.Dead:\n          this._setFrameIndex(0);\n\n          break;\n      }\n    };\n\n    _proto6.onLateUpdate = function onLateUpdate() {\n      // After updating the position, check the collision.\n      engine.dispatch(GameEvent.checkHit, this.entity.transform.position.y);\n    };\n\n    _proto6._initDataAndUI = function _initDataAndUI() {\n      var entity = this.entity;\n      var renderer = entity.getComponent(_oasisEngine.SpriteRenderer);\n      renderer.sprite = this._sprite = new _oasisEngine.Sprite(engine, gameResArray[3], null, null, 100);\n\n      this._setFrameIndex(0);\n    };\n\n    _proto6._initTween = function _initTween() {\n      var transform = this.entity.transform;\n      var rotation = transform.rotation;\n      var position = transform.position;\n      this._yoyoTween = new TWEEN.Tween(position).to({\n        y: 0.25\n      }, 380).repeat(Infinity).onUpdate(function (target) {\n        transform.position = target;\n      }).yoyo(true).easing(TWEEN.Easing.Sinusoidal.InOut);\n      this._dropTween = new TWEEN.Tween(rotation).to({\n        z: -90\n      }, 380).onUpdate(function (target) {\n        transform.rotation = target;\n      }).delay(520);\n    };\n\n    _proto6._initListener = function _initListener() {\n      var _this11 = this;\n\n      var transform = this.entity.transform;\n      engine.on(GameEvent.fly, function () {\n        // Record start time and location.\n        _this11._startY = transform.position.y;\n        _this11._flyStartTime = engine.time.nowTime; // Flying performance.\n\n        _this11._yoyoTween.stop();\n\n        _this11._dropTween.stop();\n\n        transform.setRotation(transform.rotation.x, transform.rotation.y, 20);\n\n        _this11._dropTween.start();\n      }); // Control the performance of the bird according to the change of the game state.\n\n      engine.on(GameEvent.stateChange, function (gameState) {\n        _this11._gameState = gameState;\n\n        switch (gameState) {\n          case EnumGameState.Idel:\n            transform.setPosition(0, 0, 0);\n            transform.rotation = new _oasisEngine.Vector3(0, 0, 0);\n            _this11._birdState = EnumBirdState.Alive;\n\n            _this11._yoyoTween.start();\n\n            break;\n\n          case EnumGameState.Start:\n            break;\n\n          case EnumGameState.End:\n            _this11._birdState = EnumBirdState.Dead;\n            setTimeout(function () {\n              var position = transform.position,\n                  rotation = transform.rotation;\n              var birdPosY = position.y;\n\n              if (birdPosY > groundY) {\n                _this11._yoyoTween.stop();\n\n                _this11._dropTween.stop();\n\n                new TWEEN.Tween(rotation).duration((birdPosY - groundY) * 40).to({\n                  z: -90\n                }).onUpdate(function (target) {\n                  transform.rotation = target;\n                }).start();\n                new TWEEN.Tween(position).duration((birdPosY - groundY) * 120).to({\n                  y: groundY\n                }).onUpdate(function (target) {\n                  transform.position = target;\n                }).onComplete(function () {\n                  engine.dispatch(GameEvent.showGui);\n                }).start();\n              } else {\n                engine.dispatch(GameEvent.showGui);\n              }\n            }, 300);\n            break;\n        }\n      });\n    };\n\n    _proto6._setFrameIndex = function _setFrameIndex(frameIndex) {\n      if (this._curFrameIndex !== frameIndex) {\n        this._curFrameIndex = frameIndex;\n        var frameInfo = this._regions[frameIndex];\n        var region = this._sprite.region;\n        region.setValue(frameInfo.x, frameInfo.y, this._reciprocalSliceWidth, this._reciprocalSliceHeight);\n        this._sprite.region = region;\n      }\n    };\n\n    return ScriptBird;\n  }(_oasisEngine.Script);\n\n  var ScriptDeathEff = /*#__PURE__*/function (_Script7) {\n    _inheritsLoose(ScriptDeathEff, _Script7);\n\n    function ScriptDeathEff() {\n      return _Script7.apply(this, arguments) || this;\n    }\n\n    var _proto7 = ScriptDeathEff.prototype;\n\n    _proto7.onAwake = function onAwake() {\n      var entity = this.entity;\n      var renderer = entity.getComponent(_oasisEngine.MeshRenderer);\n      var material = renderer.getMaterial(); // init Tween.\n\n      var baseColor = material.baseColor;\n      var shockTween = new TWEEN.Tween(baseColor).to({\n        a: 1\n      }, 80).repeat(1).yoyo(true).delay(20);\n      engine.on(GameEvent.stateChange, function (gameState) {\n        switch (gameState) {\n          case EnumGameState.End:\n            shockTween.start();\n            break;\n        }\n      });\n    };\n\n    return ScriptDeathEff;\n  }(_oasisEngine.Script);\n});"},"name":"flappy-bird","title":"Flappy Bird","category":"2D","id":"d542eb4b-93ae-5cbf-a87a-75d839caa2fb","sourceCode":"/**\n * @title Flappy Bird\n * @category 2D\n */\nimport {\n  AssetType,\n  Camera,\n  Entity,\n  MeshRenderer,\n  PrimitiveMesh,\n  Rect,\n  Script,\n  Sprite,\n  SpriteRenderer,\n  Texture2D,\n  UnlitMaterial,\n  Vector2,\n  Vector3,\n  WebGLEngine,\n  StaticCollider,\n  BoxColliderShape\n} from \"oasis-engine\";\nimport * as TWEEN from \"@tweenjs/tween.js\";\nimport { LitePhysics } from \"@oasis-engine/physics-lite\";\n\nenum EnumBirdState {\n  Alive = 0,\n  Dead = 1\n}\n\nenum EnumGameState {\n  Idel = 0,\n  Start = 1,\n  End = 2\n}\n\n/** The y coordinate of the ground collision detection. */\nconst groundY = -3.1;\n\nconst GameEvent = {\n  fly: \"fly\",\n  stateChange: \"stateChange\",\n  showGui: \"showGui\",\n  checkHitGui: \"checkHitGui\",\n  checkHit: \"checkHit\",\n  gameOver: \"gameOver\",\n  addScore: \"addScore\",\n  reStartGame: \"reStartGame\"\n};\n\nlet gameResArray: Texture2D[];\n\n/**\n * We can customize the size of the interface that is finally presented to the player.\n * @param designWidth - Design width\n * @param designHeight - Design height\n */\nfunction fitWithHeight(aspectRatio: number) {\n  const canvas = document.getElementById(\"canvas\");\n  const parentEle = canvas.parentElement;\n  const style = canvas.style;\n  const designHeight = parentEle.clientHeight;\n  const designWidth = designHeight * aspectRatio;\n  style.width = designWidth + \"px\";\n  style.height = designHeight + \"px\";\n  style.marginLeft = (parentEle.clientWidth - designWidth) / 2 + \"px\";\n}\n\n// Design size.\nfitWithHeight(768 / 896);\n// Create engine object.\nconst engine = new WebGLEngine(\"canvas\", LitePhysics);\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// Create camera.\nconst cameraEntity = rootEntity.createChild(\"camera\");\ncameraEntity.transform.setPosition(0.3, 0, 5);\nconst camera = cameraEntity.addComponent(Camera);\n// 2D is more suitable for orthographic cameras.\ncamera.isOrthographic = true;\ncamera.orthographicSize = 4.5;\n\n// Load the resources needed by the game.\nengine.resourceManager\n  .load([\n    {\n      // Background.\n      url: \"https://gw.alipayobjects.com/zos/OasisHub/315000157/5244/background.png\",\n      type: AssetType.Texture2D\n    },\n    {\n      // Pipe.\n      url: \"https://gw.alipayobjects.com/zos/OasisHub/315000157/5987/pipe.png\",\n      type: AssetType.Texture2D\n    },\n    {\n      // Ground.\n      url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Sj7OS4YJHDIAAAAAAAAAAAAAARQnAQ\",\n      type: AssetType.Texture2D\n    },\n    {\n      // \bBird.\n      url: \"https://gw.alipayobjects.com/zos/OasisHub/315000157/8356/bird.png\",\n      type: AssetType.Texture2D\n    },\n    {\n      // Restart.\n      url: \"https://gw.alipayobjects.com/zos/OasisHub/315000157/6695/restart.png\",\n      type: AssetType.Texture2D\n    },\n    {\n      // Number.\n      url: \"https://gw.alipayobjects.com/zos/OasisHub/315000157/8709/527-number.png\",\n      type: AssetType.Texture2D\n    }\n  ])\n  .then((texture2DArr: Texture2D[]) => {\n    // Record the resources.\n    gameResArray = texture2DArr;\n    // Initialize location information and component information.\n    // Background.\n    const nodeBg = rootEntity.createChild(\"nodeBg\");\n    nodeBg.transform.setPosition(0.3, 0, -10);\n    nodeBg.addComponent(SpriteRenderer).sprite = new Sprite(engine, texture2DArr[0], null, null, 100);\n\n    // Pipe.\n    const nodePipe = rootEntity.createChild(\"nodePipe\");\n    nodePipe.transform.setPosition(0, 0, -3);\n    nodePipe.addComponent(ScriptPipe);\n\n    // Ground.\n    const nodeGround = rootEntity.createChild(\"nodeGround\");\n    nodeGround.transform.setPosition(0.3, -4.125, -2);\n    nodeGround.transform.setRotation(90, 0, 0);\n    const groundRenderer = nodeGround.addComponent(MeshRenderer);\n    groundRenderer.mesh = PrimitiveMesh.createPlane(engine, 7.68, 1.28);\n    const groundMaterial = new UnlitMaterial(engine);\n    groundRenderer.setMaterial(groundMaterial);\n    groundMaterial.baseTexture = texture2DArr[2];\n    groundMaterial.tilingOffset.setValue(21, 1, 0, 0);\n    nodeGround.addComponent(ScriptGround);\n\n    // Bird.\n    const nodeBird = rootEntity.createChild(\"nodeBird\");\n    nodeBird.transform.setPosition(-1, 1.15, 0);\n    nodeBird.addComponent(SpriteRenderer).sprite = new Sprite(engine, texture2DArr[3], null, null, 100);\n    nodeBird.addComponent(ScriptBird);\n\n    // Death Effect.\n    const nodeDeathEff = rootEntity.createChild(\"nodeEff\");\n    nodeDeathEff.transform.setPosition(0, 0, -1);\n    nodeDeathEff.transform.setRotation(90, 0, 0);\n    const effRenderer = nodeDeathEff.addComponent(MeshRenderer);\n    effRenderer.mesh = PrimitiveMesh.createPlane(engine, 20, 20);\n    const material = new UnlitMaterial(engine);\n    effRenderer.setMaterial(material);\n    // Can be transparent.\n    material.isTransparent = true;\n    material.baseColor.setValue(0, 0, 0, 0);\n    nodeDeathEff.addComponent(ScriptDeathEff);\n\n    // GUI.\n    const nodeGui = rootEntity.createChild(\"nodeGui\");\n    nodeGui.transform.setPosition(0.3, 0, 1);\n    // Restart.\n    const nodeRestart = nodeGui.createChild(\"nodeRestart\");\n    nodeRestart.addComponent(SpriteRenderer).sprite = new Sprite(engine, texture2DArr[4], null, null, 100);\n    // Score.\n    const nodeScore = nodeGui.createChild(\"nodeScore\");\n    nodeScore.transform.setPosition(0, 3.2, 0);\n    nodeScore.transform.setScale(0.3, 0.3, 0.3);\n    nodeScore.addComponent(ScriptScore);\n    nodeGui.addComponent(ScriptGUI);\n\n    // GameCtrl controls the global game.\n    rootEntity.addComponent(GameCtrl);\n  });\n\nengine.run();\n\nclass ScriptPipe extends Script {\n  /** When there is no pipe in the pool, use this instance to clone. */\n  private _originPipe: Entity;\n  /** All current pipes. */\n  private _nowPipeArr: Array<Entity> = [];\n  /** Pool for reuse. */\n  private _pipePool: Array<Entity> = [];\n  /** Timestamp of the start of the game. */\n  private _curStartTimeStamp: number;\n  /**  Hide when the x coordinate of the pipe is less than -4.6. */\n  private _pipeHideX: number = 4.6;\n  /**  Vertical distance of pipe. */\n  private _pipeVerticalDis: number = 10.8;\n  /**  Horizontal distance of pipe. */\n  private _pipeHorizontalDis: number = 4;\n  /**  Random location range generated by pipes. */\n  private _pipeRandomPosY: number = 3.5;\n  /**  Water pipe debut time(ms). */\n  private _pipeDebutTime: number = 3000;\n  /**  Horizontal movement speed. */\n  private _pipeHorizontalV: number = 0.003;\n\n  onAwake() {\n    // Init originPipe.\n    const pipe = (this._originPipe = new Entity(engine));\n    const node1 = pipe.createChild(\"node1\");\n    const node2 = pipe.createChild(\"node2\");\n    const verticalDis = this._pipeVerticalDis;\n    node1.transform.setPosition(0, -verticalDis / 2, 0);\n    node2.transform.setPosition(0, verticalDis / 2, 0);\n    node2.transform.setScale(1, -1, 1);\n    node1.addComponent(SpriteRenderer).sprite = new Sprite(engine, gameResArray[1], null, null, 100);\n    node2.addComponent(SpriteRenderer).sprite = new Sprite(engine, gameResArray[1], null, null, 100);\n    this._pipePool.push(pipe);\n\n    // Control the performance of the pipe according to the change of the game state.\n    engine.on(GameEvent.stateChange, (gameState: EnumGameState) => {\n      switch (gameState) {\n        case EnumGameState.Idel:\n          this.enabled = false;\n          this._destroyPipe();\n          break;\n        case EnumGameState.Start:\n          this.enabled = true;\n          this._curStartTimeStamp = engine.time.nowTime;\n          break;\n        case EnumGameState.End:\n          this.enabled = false;\n          break;\n      }\n    });\n\n    // When checkHit is monitored, check the collision between the pipe and the bird.\n    engine.on(GameEvent.checkHit, (birdY: number) => {\n      var len = this._nowPipeArr.length;\n      for (var i = 0; i < len; i++) {\n        var pipePos = this._nowPipeArr[i].transform.position;\n        if (Math.abs(pipePos.x) < 0.9) {\n          if (Math.abs(pipePos.y - birdY) > 1.2) {\n            engine.dispatch(GameEvent.gameOver);\n          }\n          break;\n        }\n      }\n    });\n  }\n\n  /**\n   * Three things will be done here every frame：\n   *    1.Adjust the generation of the pipe.\n   *    2.Adjust the position of the pipe.\n   *    3.Judge whether to get a point.\n   * @param deltaTime - The deltaTime when the script update\n   */\n  onUpdate(deltaTime: number) {\n    const debutTime = this._pipeDebutTime;\n    // The water pipe will be displayed after the start of the game pipeDebutTime.\n    if (engine.time.nowTime - this._curStartTimeStamp >= debutTime) {\n      let bAddScore = false;\n      // After deltaTime, the distance the pipe has moved.\n      const changeVal = deltaTime * this._pipeHorizontalV;\n      const pipeLen = this._nowPipeArr.length;\n      const { _pipeHorizontalDis: horizontalDis, _pipeRandomPosY: randomPosY, _pipeHideX: hideX } = this;\n      // Adjust the position of all pipes.\n      if (pipeLen > 0) {\n        for (let i = pipeLen - 1; i >= 0; i--) {\n          const pipe = this._nowPipeArr[i];\n          const pipeTrans = pipe.transform;\n          const pipePos = pipeTrans.position;\n          if (pipePos.x < -hideX) {\n            // The invisible pipe can be destroyed.\n            this._destroyPipe(i);\n          } else {\n            if (!bAddScore && pipePos.x > -1 && pipePos.x - changeVal <= -1) {\n              // Get a point.\n              engine.dispatch(GameEvent.addScore);\n              bAddScore = true;\n            }\n            pipeTrans.setPosition(pipePos.x - changeVal, pipePos.y, pipePos.z);\n          }\n          // Judge whether the pipe needs to be regenerated according to the X coordinate.\n          if (i == pipeLen - 1 && pipePos.x <= hideX - horizontalDis) {\n            this._createPipe(hideX, randomPosY * Math.random() - randomPosY / 2 + 0.8, 0);\n          }\n        }\n      } else {\n        // Need to regenerate a pipe.\n        this._createPipe(hideX, randomPosY * Math.random() - randomPosY / 2 + 0.8, 0);\n      }\n    }\n  }\n\n  private _createPipe(posX: number, posY: number, posZ: number) {\n    const pipePool = this._pipePool;\n    const pipe = pipePool.length > 0 ? pipePool.pop() : this._originPipe.clone();\n    pipe.transform.setPosition(posX, posY, posZ);\n    this.entity.addChild(pipe);\n    this._nowPipeArr.push(pipe);\n  }\n\n  /**\n   * It’s not really destroyed, we just put it in the pool.\n   * @param pipeIndex - If pipeIndex is less than 0, we recycle all pipes\n   */\n  private _destroyPipe(pipeIndex: number = -1) {\n    const { entity, _pipePool, _nowPipeArr } = this;\n    const removePipe = (pipe: Entity) => {\n      entity.removeChild(pipe);\n      _pipePool.push(pipe);\n    };\n    if (pipeIndex >= 0) {\n      removePipe(_nowPipeArr[pipeIndex]);\n      _nowPipeArr.splice(pipeIndex, 1);\n    } else {\n      for (let index = _nowPipeArr.length - 1; index >= 0; index--) {\n        removePipe(_nowPipeArr[index]);\n      }\n      _nowPipeArr.length = 0;\n    }\n  }\n}\n\nclass ScriptScore extends Script {\n  /** The sprite array used by the score（0～9）. */\n  private _spriteArray: Sprite[] = [];\n  /** Interval between each number. */\n  private _numInv = 2;\n  /** Each number in the score. */\n  private _scoreEntitys: Entity[] = [];\n  private _scoreRenderer: SpriteRenderer[] = [];\n  private _myScore = 0;\n\n  onAwake() {\n    // Init spriteArray.\n    const spriteArray = this._spriteArray;\n    // Cut digital resources into ten.\n    for (var i = 0; i < 10; i++) {\n      spriteArray.push(new Sprite(engine, gameResArray[5], new Rect(i * 0.1, 0, 0.1, 1), null, 75));\n    }\n\n    engine.on(GameEvent.addScore, () => {\n      ++this._myScore;\n      this._showScore(\"\" + this._myScore);\n    });\n\n    // Control the performance of the score according to the change of the game state.\n    engine.on(GameEvent.stateChange, (gameState: EnumGameState) => {\n      switch (gameState) {\n        case EnumGameState.Idel:\n          this.entity.isActive = false;\n          break;\n        case EnumGameState.Start:\n          this.entity.isActive = true;\n          this._myScore = 0;\n          this._showScore(\"0\");\n          break;\n        case EnumGameState.End:\n          break;\n      }\n    });\n  }\n\n  private _showScore(scoreNumStr: string) {\n    const scoreLen = scoreNumStr.length;\n    const {\n      entity,\n      _numInv: inv,\n      _scoreEntitys: scoreEntitys,\n      _spriteArray: spriteArray,\n      _scoreRenderer: scoreRenderers\n    } = this;\n    var nowEntityLen = scoreEntitys.length;\n    let scoreEntity: Entity;\n    let scoreRenderer: SpriteRenderer;\n    // If the entity is not enough, new one.\n    if (scoreLen > nowEntityLen) {\n      for (let i = nowEntityLen; i < scoreLen; i++) {\n        scoreEntity = new Entity(engine);\n        scoreRenderer = scoreEntity.addComponent(SpriteRenderer);\n        scoreRenderers.push(scoreRenderer);\n        scoreEntitys.push(scoreEntity);\n        entity.addChild(scoreEntity);\n      }\n    }\n\n    // At the moment nowEntityLen >= scoreLen.\n    nowEntityLen = scoreEntitys.length;\n    const startX = ((1 - scoreLen) * inv) / 2;\n    for (let i = 0; i < nowEntityLen; i++) {\n      scoreEntity = scoreEntitys[i];\n      if (i >= scoreLen) {\n        scoreEntity.isActive = false;\n      } else {\n        scoreEntity.isActive = true;\n        scoreEntity.transform.setPosition(startX + i * inv, 0, 0);\n        scoreRenderers[i].sprite = spriteArray[parseInt(scoreNumStr[i])];\n      }\n    }\n  }\n}\n\nclass ScriptGround extends Script {\n  /** Swap two pieces of ground to achieve constant movement. */\n  private _groundMaterial: UnlitMaterial;\n  /** Horizontal movement speed. */\n  private _groundHorizontalV: number = 0.0082;\n\n  onAwake() {\n    this._groundMaterial = <UnlitMaterial>this.entity.getComponent(MeshRenderer).getMaterial();\n    // Control the performance of the ground according to the change of the game state.\n    engine.on(GameEvent.stateChange, (gameState: EnumGameState) => {\n      switch (gameState) {\n        case EnumGameState.Idel:\n        case EnumGameState.Start:\n          this.enabled = true;\n          break;\n        case EnumGameState.End:\n          this.enabled = false;\n          break;\n        default:\n          break;\n      }\n    });\n\n    // When checkHit is monitored, check the collision between the ground and the bird.\n    engine.on(GameEvent.checkHit, (birdY) => {\n      birdY < groundY && engine.dispatch(GameEvent.gameOver);\n    });\n  }\n\n  onUpdate(deltaTime: number) {\n    // After deltaTime, the distance the ground has moved.\n    this._groundMaterial.tilingOffset.z += deltaTime * this._groundHorizontalV;\n  }\n}\n\nclass GameCtrl extends Script {\n  private _gameState: EnumGameState;\n\n  onAwake() {\n    engine.on(GameEvent.reStartGame, () => {\n      this._setGameState(EnumGameState.Idel);\n    });\n\n    engine.on(GameEvent.gameOver, () => {\n      this._setGameState(EnumGameState.End);\n    });\n\n    const boxCollider: StaticCollider = this.entity.addComponent(StaticCollider);\n    const boxColliderShape = new BoxColliderShape();\n    boxColliderShape.setSize(10, 10, 0.001);\n    boxCollider.addShape(boxColliderShape);\n  }\n\n  onStart() {\n    // Give a state at the beginning.\n    this._setGameState(EnumGameState.Idel);\n  }\n\n  onUpdate() {\n    // Update TWEEN.\n    TWEEN.update();\n  }\n\n  onPointerDown() {\n    switch (this._gameState) {\n      case EnumGameState.Idel:\n        this._setGameState(EnumGameState.Start);\n        engine.dispatch(GameEvent.fly);\n        break;\n      case EnumGameState.Start:\n        engine.dispatch(GameEvent.fly);\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * The status will be distributed to all objects in the game.\n   * @param state - EnumGameState\n   */\n  private _setGameState(state: EnumGameState) {\n    if (this._gameState != state) {\n      this._gameState = state;\n      engine.dispatch(GameEvent.stateChange, state);\n    }\n  }\n}\n\nclass ScriptGUI extends Script {\n  onAwake() {\n    const { entity } = this;\n    const resetBtnNode = entity.findByName(\"nodeRestart\");\n\n    // Add BoxCollider.\n    const boxCollider: StaticCollider = resetBtnNode.addComponent(StaticCollider);\n    const boxColliderShape = new BoxColliderShape();\n    boxColliderShape.setSize(2.14, 0.75, 0.001);\n    boxCollider.addShape(boxColliderShape);\n    resetBtnNode.addComponent(Script).onPointerClick = () => {\n      this.engine.dispatch(GameEvent.reStartGame);\n    };\n\n    // Control the performance of the GUI according to the change of the game state.\n    engine.on(GameEvent.stateChange, (gameState: EnumGameState) => {\n      switch (gameState) {\n        case EnumGameState.Idel:\n        case EnumGameState.Start:\n          resetBtnNode.isActive = false;\n          break;\n        case EnumGameState.End:\n          break;\n        default:\n          break;\n      }\n    });\n\n    engine.on(GameEvent.showGui, () => {\n      resetBtnNode.isActive = true;\n    });\n  }\n}\n\nclass ScriptBird extends Script {\n  /** Offsets of sprite sheet animation. */\n  private _regions: Vector2[] = [new Vector2(0, 0), new Vector2(1 / 3, 0), new Vector2(2 / 3, 0)];\n  /** Reciprocal Of SliceWidth. */\n  private _reciprocalSliceWidth: number = 1 / 3;\n  /** Reciprocal Of SliceHeight. */\n  private _reciprocalSliceHeight: number = 1;\n  /** Frame interval time, the unit of time is ms. */\n  private _frameInterval = 150;\n  /** Total frames. */\n  private _totalFrames = 3;\n  /** Maximum downward speed */\n  private _maxDropV = -8;\n  /** Acceleration of gravity */\n  private _gravity = -35;\n  /** Initial upward speed given during fly */\n  private _startFlyV = 10;\n\n  private _cumulativeTime: number = 0;\n  private _birdState = EnumBirdState.Alive;\n\n  private _sprite: Sprite;\n  private _curFrameIndex: number;\n  private _startY: number;\n  private _flyStartTime: number;\n  private _gameState: EnumGameState;\n  private _yoyoTween;\n  private _dropTween;\n\n  onAwake() {\n    this._initDataAndUI();\n    this._initTween();\n    this._initListener();\n  }\n\n  onUpdate(deltaTime: number) {\n    // Update the performance of the bird.\n    switch (this._birdState) {\n      case EnumBirdState.Alive:\n        const { _frameInterval, _totalFrames } = this;\n        this._cumulativeTime += deltaTime;\n        if (this._cumulativeTime >= _frameInterval) {\n          // Need update frameIndex.\n          const addFrameCount = Math.floor(this._cumulativeTime / _frameInterval);\n          this._cumulativeTime -= addFrameCount * _frameInterval;\n          this._setFrameIndex((this._curFrameIndex + addFrameCount) % _totalFrames);\n        }\n\n        // Update bird's location information.\n        if (this._gameState == EnumGameState.Start) {\n          // Free fall and uniform motion are superimposed to obtain the current position.\n          let endY;\n          const { _maxDropV, _startFlyV, _gravity } = this;\n          const transform = this.entity.transform;\n          const position = transform.position;\n          // How much time has passed.\n          const subTime = (engine.time.nowTime - this._flyStartTime) / 1000;\n          // How long has it been in free fall.\n          const addToMaxUseTime = (_maxDropV - _startFlyV) / _gravity;\n          if (subTime <= addToMaxUseTime) {\n            // Free fall.\n            endY = ((_startFlyV + (_startFlyV + subTime * _gravity)) * subTime) / 2 + this._startY;\n          } else {\n            // Falling at a constant speed.\n            endY =\n              ((_maxDropV + _startFlyV) * addToMaxUseTime) / 2 + _maxDropV * (subTime - addToMaxUseTime) + this._startY;\n          }\n          transform.setPosition(position.x, endY, position.z);\n        }\n        break;\n      case EnumBirdState.Dead:\n        this._setFrameIndex(0);\n        break;\n    }\n  }\n\n  onLateUpdate() {\n    // After updating the position, check the collision.\n    engine.dispatch(GameEvent.checkHit, this.entity.transform.position.y);\n  }\n\n  private _initDataAndUI() {\n    const { entity } = this;\n    const renderer = entity.getComponent(SpriteRenderer);\n    renderer.sprite = this._sprite = new Sprite(engine, gameResArray[3], null, null, 100);\n    this._setFrameIndex(0);\n  }\n\n  private _initTween() {\n    const transform = this.entity.transform;\n    const rotation = transform.rotation;\n    const position = transform.position;\n    this._yoyoTween = new TWEEN.Tween(position)\n      .to({ y: 0.25 }, 380)\n      .repeat(Infinity)\n      .onUpdate((target) => {\n        transform.position = target;\n      })\n      .yoyo(true)\n      .easing(TWEEN.Easing.Sinusoidal.InOut);\n    this._dropTween = new TWEEN.Tween(rotation)\n      .to({ z: -90 }, 380)\n      .onUpdate((target) => {\n        transform.rotation = target;\n      })\n      .delay(520);\n  }\n\n  private _initListener() {\n    const transform = this.entity.transform;\n    engine.on(GameEvent.fly, () => {\n      // Record start time and location.\n      this._startY = transform.position.y;\n      this._flyStartTime = engine.time.nowTime;\n      // Flying performance.\n      this._yoyoTween.stop();\n      this._dropTween.stop();\n      transform.setRotation(transform.rotation.x, transform.rotation.y, 20);\n      this._dropTween.start();\n    });\n\n    // Control the performance of the bird according to the change of the game state.\n    engine.on(GameEvent.stateChange, (gameState: EnumGameState) => {\n      this._gameState = gameState;\n      switch (gameState) {\n        case EnumGameState.Idel:\n          transform.setPosition(0, 0, 0);\n          transform.rotation = new Vector3(0, 0, 0);\n          this._birdState = EnumBirdState.Alive;\n          this._yoyoTween.start();\n          break;\n        case EnumGameState.Start:\n          break;\n        case EnumGameState.End:\n          this._birdState = EnumBirdState.Dead;\n          setTimeout(() => {\n            const { position, rotation } = transform;\n            const birdPosY = position.y;\n            if (birdPosY > groundY) {\n              this._yoyoTween.stop();\n              this._dropTween.stop();\n              new TWEEN.Tween(rotation)\n                .duration((birdPosY - groundY) * 40)\n                .to({ z: -90 })\n                .onUpdate((target) => {\n                  transform.rotation = target;\n                })\n                .start();\n              new TWEEN.Tween(position)\n                .duration((birdPosY - groundY) * 120)\n                .to({ y: groundY })\n                .onUpdate((target) => {\n                  transform.position = target;\n                })\n                .onComplete(() => {\n                  engine.dispatch(GameEvent.showGui);\n                })\n                .start();\n            } else {\n              engine.dispatch(GameEvent.showGui);\n            }\n          }, 300);\n          break;\n      }\n    });\n  }\n\n  private _setFrameIndex(frameIndex: number) {\n    if (this._curFrameIndex !== frameIndex) {\n      this._curFrameIndex = frameIndex;\n      const frameInfo = this._regions[frameIndex];\n      const region = this._sprite.region;\n      region.setValue(frameInfo.x, frameInfo.y, this._reciprocalSliceWidth, this._reciprocalSliceHeight);\n      this._sprite.region = region;\n    }\n  }\n}\n\nclass ScriptDeathEff extends Script {\n  onAwake() {\n    const entity = this.entity;\n    const renderer = entity.getComponent(MeshRenderer);\n    const material = <UnlitMaterial>renderer.getMaterial();\n\n    // init Tween.\n    const baseColor = material.baseColor;\n    const shockTween = new TWEEN.Tween(baseColor).to({ a: 1 }, 80).repeat(1).yoyo(true).delay(20);\n    engine.on(GameEvent.stateChange, (gameState: EnumGameState) => {\n      switch (gameState) {\n        case EnumGameState.End:\n          shockTween.start();\n          break;\n      }\n    });\n  }\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Flappy Bird\n * @category 2D\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  Entity<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  Rect<span class=\"token punctuation\">,</span>\n  Script<span class=\"token punctuation\">,</span>\n  Sprite<span class=\"token punctuation\">,</span>\n  SpriteRenderer<span class=\"token punctuation\">,</span>\n  Texture2D<span class=\"token punctuation\">,</span>\n  UnlitMaterial<span class=\"token punctuation\">,</span>\n  Vector2<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine<span class=\"token punctuation\">,</span>\n  StaticCollider<span class=\"token punctuation\">,</span>\n  BoxColliderShape\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> <span class=\"token constant\">TWEEN</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@tweenjs/tween.js\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> LitePhysics <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/physics-lite\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">enum</span> EnumBirdState <span class=\"token punctuation\">{</span>\n  Alive <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  Dead <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">enum</span> EnumGameState <span class=\"token punctuation\">{</span>\n  Idel <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  Start <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  End <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/** The y coordinate of the ground collision detection. */</span>\n<span class=\"token keyword\">const</span> groundY <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">3.1</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> GameEvent <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  fly<span class=\"token operator\">:</span> <span class=\"token string\">\"fly\"</span><span class=\"token punctuation\">,</span>\n  stateChange<span class=\"token operator\">:</span> <span class=\"token string\">\"stateChange\"</span><span class=\"token punctuation\">,</span>\n  showGui<span class=\"token operator\">:</span> <span class=\"token string\">\"showGui\"</span><span class=\"token punctuation\">,</span>\n  checkHitGui<span class=\"token operator\">:</span> <span class=\"token string\">\"checkHitGui\"</span><span class=\"token punctuation\">,</span>\n  checkHit<span class=\"token operator\">:</span> <span class=\"token string\">\"checkHit\"</span><span class=\"token punctuation\">,</span>\n  gameOver<span class=\"token operator\">:</span> <span class=\"token string\">\"gameOver\"</span><span class=\"token punctuation\">,</span>\n  addScore<span class=\"token operator\">:</span> <span class=\"token string\">\"addScore\"</span><span class=\"token punctuation\">,</span>\n  reStartGame<span class=\"token operator\">:</span> <span class=\"token string\">\"reStartGame\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> gameResArray<span class=\"token operator\">:</span> Texture2D<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * We can customize the size of the interface that is finally presented to the player.\n * @param designWidth - Design width\n * @param designHeight - Design height\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">fitWithHeight</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">aspectRatio<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> parentEle <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span>parentElement<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> style <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> designHeight <span class=\"token operator\">=</span> parentEle<span class=\"token punctuation\">.</span>clientHeight<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> designWidth <span class=\"token operator\">=</span> designHeight <span class=\"token operator\">*</span> aspectRatio<span class=\"token punctuation\">;</span>\n  style<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> designWidth <span class=\"token operator\">+</span> <span class=\"token string\">\"px\"</span><span class=\"token punctuation\">;</span>\n  style<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> designHeight <span class=\"token operator\">+</span> <span class=\"token string\">\"px\"</span><span class=\"token punctuation\">;</span>\n  style<span class=\"token punctuation\">.</span>marginLeft <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>parentEle<span class=\"token punctuation\">.</span>clientWidth <span class=\"token operator\">-</span> designWidth<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"px\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Design size.</span>\n<span class=\"token function\">fitWithHeight</span><span class=\"token punctuation\">(</span><span class=\"token number\">768</span> <span class=\"token operator\">/</span> <span class=\"token number\">896</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Create engine object.</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">,</span> LitePhysics<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera.</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> camera <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 2D is more suitable for orthographic cameras.</span>\ncamera<span class=\"token punctuation\">.</span>isOrthographic <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\ncamera<span class=\"token punctuation\">.</span>orthographicSize <span class=\"token operator\">=</span> <span class=\"token number\">4.5</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Load the resources needed by the game.</span>\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Background.</span>\n      url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/zos/OasisHub/315000157/5244/background.png\"</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Pipe.</span>\n      url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/zos/OasisHub/315000157/5987/pipe.png\"</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Ground.</span>\n      url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Sj7OS4YJHDIAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// \bBird.</span>\n      url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/zos/OasisHub/315000157/8356/bird.png\"</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Restart.</span>\n      url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/zos/OasisHub/315000157/6695/restart.png\"</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Number.</span>\n      url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/zos/OasisHub/315000157/8709/527-number.png\"</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture2DArr<span class=\"token operator\">:</span> Texture2D<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Record the resources.</span>\n    gameResArray <span class=\"token operator\">=</span> texture2DArr<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Initialize location information and component information.</span>\n    <span class=\"token comment\">// Background.</span>\n    <span class=\"token keyword\">const</span> nodeBg <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"nodeBg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    nodeBg<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    nodeBg<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>sprite <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> texture2DArr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Pipe.</span>\n    <span class=\"token keyword\">const</span> nodePipe <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"nodePipe\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    nodePipe<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    nodePipe<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>ScriptPipe<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Ground.</span>\n    <span class=\"token keyword\">const</span> nodeGround <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"nodeGround\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    nodeGround<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">4.125</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    nodeGround<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setRotation</span><span class=\"token punctuation\">(</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> groundRenderer <span class=\"token operator\">=</span> nodeGround<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    groundRenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createPlane</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">7.68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.28</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> groundMaterial <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnlitMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    groundRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>groundMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    groundMaterial<span class=\"token punctuation\">.</span>baseTexture <span class=\"token operator\">=</span> texture2DArr<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    groundMaterial<span class=\"token punctuation\">.</span>tilingOffset<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">21</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    nodeGround<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>ScriptGround<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Bird.</span>\n    <span class=\"token keyword\">const</span> nodeBird <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"nodeBird\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    nodeBird<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    nodeBird<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>sprite <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> texture2DArr<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    nodeBird<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>ScriptBird<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Death Effect.</span>\n    <span class=\"token keyword\">const</span> nodeDeathEff <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"nodeEff\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    nodeDeathEff<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    nodeDeathEff<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setRotation</span><span class=\"token punctuation\">(</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> effRenderer <span class=\"token operator\">=</span> nodeDeathEff<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    effRenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createPlane</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnlitMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    effRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Can be transparent.</span>\n    material<span class=\"token punctuation\">.</span>isTransparent <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    material<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    nodeDeathEff<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>ScriptDeathEff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// GUI.</span>\n    <span class=\"token keyword\">const</span> nodeGui <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"nodeGui\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    nodeGui<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Restart.</span>\n    <span class=\"token keyword\">const</span> nodeRestart <span class=\"token operator\">=</span> nodeGui<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"nodeRestart\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    nodeRestart<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>sprite <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> texture2DArr<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Score.</span>\n    <span class=\"token keyword\">const</span> nodeScore <span class=\"token operator\">=</span> nodeGui<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"nodeScore\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    nodeScore<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    nodeScore<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    nodeScore<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>ScriptScore<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    nodeGui<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>ScriptGUI<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// GameCtrl controls the global game.</span>\n    rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>GameCtrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ScriptPipe</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/** When there is no pipe in the pool, use this instance to clone. */</span>\n  <span class=\"token keyword\">private</span> _originPipe<span class=\"token operator\">:</span> Entity<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/** All current pipes. */</span>\n  <span class=\"token keyword\">private</span> _nowPipeArr<span class=\"token operator\">:</span> Array<span class=\"token operator\">&lt;</span>Entity<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/** Pool for reuse. */</span>\n  <span class=\"token keyword\">private</span> _pipePool<span class=\"token operator\">:</span> Array<span class=\"token operator\">&lt;</span>Entity<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/** Timestamp of the start of the game. */</span>\n  <span class=\"token keyword\">private</span> _curStartTimeStamp<span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/**  Hide when the x coordinate of the pipe is less than -4.6. */</span>\n  <span class=\"token keyword\">private</span> _pipeHideX<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">4.6</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/**  Vertical distance of pipe. */</span>\n  <span class=\"token keyword\">private</span> _pipeVerticalDis<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">10.8</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/**  Horizontal distance of pipe. */</span>\n  <span class=\"token keyword\">private</span> _pipeHorizontalDis<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/**  Random location range generated by pipes. */</span>\n  <span class=\"token keyword\">private</span> _pipeRandomPosY<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">3.5</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/**  Water pipe debut time(ms). */</span>\n  <span class=\"token keyword\">private</span> _pipeDebutTime<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/**  Horizontal movement speed. */</span>\n  <span class=\"token keyword\">private</span> _pipeHorizontalV<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">0.003</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">onAwake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Init originPipe.</span>\n    <span class=\"token keyword\">const</span> pipe <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_originPipe <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Entity</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> node1 <span class=\"token operator\">=</span> pipe<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"node1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> node2 <span class=\"token operator\">=</span> pipe<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"node2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> verticalDis <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_pipeVerticalDis<span class=\"token punctuation\">;</span>\n    node1<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>verticalDis <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    node2<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> verticalDis <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    node2<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    node1<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>sprite <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> gameResArray<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    node2<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>sprite <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> gameResArray<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_pipePool<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>pipe<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Control the performance of the pipe according to the change of the game state.</span>\n    engine<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>GameEvent<span class=\"token punctuation\">.</span>stateChange<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">gameState<span class=\"token operator\">:</span> EnumGameState</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>gameState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">case</span> EnumGameState<span class=\"token punctuation\">.</span>Idel<span class=\"token operator\">:</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_destroyPipe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> EnumGameState<span class=\"token punctuation\">.</span>Start<span class=\"token operator\">:</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_curStartTimeStamp <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">.</span>nowTime<span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> EnumGameState<span class=\"token punctuation\">.</span>End<span class=\"token operator\">:</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// When checkHit is monitored, check the collision between the pipe and the bird.</span>\n    engine<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>GameEvent<span class=\"token punctuation\">.</span>checkHit<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">birdY<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> len <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_nowPipeArr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> len<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> pipePos <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_nowPipeArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>pipePos<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.9</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>pipePos<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> birdY<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1.2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            engine<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span>GameEvent<span class=\"token punctuation\">.</span>gameOver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/**\n   * Three things will be done here every frame：\n   *    1.Adjust the generation of the pipe.\n   *    2.Adjust the position of the pipe.\n   *    3.Judge whether to get a point.\n   * @param deltaTime - The deltaTime when the script update\n   */</span>\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">deltaTime<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> debutTime <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_pipeDebutTime<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// The water pipe will be displayed after the start of the game pipeDebutTime.</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">.</span>nowTime <span class=\"token operator\">-</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_curStartTimeStamp <span class=\"token operator\">>=</span> debutTime<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> bAddScore <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// After deltaTime, the distance the pipe has moved.</span>\n      <span class=\"token keyword\">const</span> changeVal <span class=\"token operator\">=</span> deltaTime <span class=\"token operator\">*</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_pipeHorizontalV<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> pipeLen <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_nowPipeArr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> _pipeHorizontalDis<span class=\"token operator\">:</span> horizontalDis<span class=\"token punctuation\">,</span> _pipeRandomPosY<span class=\"token operator\">:</span> randomPosY<span class=\"token punctuation\">,</span> _pipeHideX<span class=\"token operator\">:</span> hideX <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// Adjust the position of all pipes.</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pipeLen <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> pipeLen <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> pipe <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_nowPipeArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">const</span> pipeTrans <span class=\"token operator\">=</span> pipe<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">const</span> pipePos <span class=\"token operator\">=</span> pipeTrans<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pipePos<span class=\"token punctuation\">.</span>x <span class=\"token operator\">&lt;</span> <span class=\"token operator\">-</span>hideX<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// The invisible pipe can be destroyed.</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_destroyPipe</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bAddScore <span class=\"token operator\">&amp;&amp;</span> pipePos<span class=\"token punctuation\">.</span>x <span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> pipePos<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> changeVal <span class=\"token operator\">&lt;=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token comment\">// Get a point.</span>\n              engine<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span>GameEvent<span class=\"token punctuation\">.</span>addScore<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              bAddScore <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            pipeTrans<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>pipePos<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> changeVal<span class=\"token punctuation\">,</span> pipePos<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> pipePos<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n          <span class=\"token comment\">// Judge whether the pipe needs to be regenerated according to the X coordinate.</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> pipeLen <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> pipePos<span class=\"token punctuation\">.</span>x <span class=\"token operator\">&lt;=</span> hideX <span class=\"token operator\">-</span> horizontalDis<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_createPipe</span><span class=\"token punctuation\">(</span>hideX<span class=\"token punctuation\">,</span> randomPosY <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> randomPosY <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Need to regenerate a pipe.</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_createPipe</span><span class=\"token punctuation\">(</span>hideX<span class=\"token punctuation\">,</span> randomPosY <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> randomPosY <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">private</span> <span class=\"token function\">_createPipe</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">posX<span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span> posY<span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span> posZ<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> pipePool <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_pipePool<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> pipe <span class=\"token operator\">=</span> pipePool<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> pipePool<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_originPipe<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    pipe<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>posX<span class=\"token punctuation\">,</span> posY<span class=\"token punctuation\">,</span> posZ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>pipe<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_nowPipeArr<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>pipe<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/**\n   * It’s not really destroyed, we just put it in the pool.\n   * @param pipeIndex - If pipeIndex is less than 0, we recycle all pipes\n   */</span>\n  <span class=\"token keyword\">private</span> <span class=\"token function\">_destroyPipe</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pipeIndex<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> entity<span class=\"token punctuation\">,</span> _pipePool<span class=\"token punctuation\">,</span> _nowPipeArr <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">removePipe</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">pipe<span class=\"token operator\">:</span> Entity</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      entity<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>pipe<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      _pipePool<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>pipe<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pipeIndex <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">removePipe</span><span class=\"token punctuation\">(</span>_nowPipeArr<span class=\"token punctuation\">[</span>pipeIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      _nowPipeArr<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>pipeIndex<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> index <span class=\"token operator\">=</span> _nowPipeArr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> index <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">removePipe</span><span class=\"token punctuation\">(</span>_nowPipeArr<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      _nowPipeArr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ScriptScore</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/** The sprite array used by the score（0～9）. */</span>\n  <span class=\"token keyword\">private</span> _spriteArray<span class=\"token operator\">:</span> Sprite<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/** Interval between each number. */</span>\n  <span class=\"token keyword\">private</span> _numInv <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/** Each number in the score. */</span>\n  <span class=\"token keyword\">private</span> _scoreEntitys<span class=\"token operator\">:</span> Entity<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> _scoreRenderer<span class=\"token operator\">:</span> SpriteRenderer<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> _myScore <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">onAwake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Init spriteArray.</span>\n    <span class=\"token keyword\">const</span> spriteArray <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_spriteArray<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Cut digital resources into ten.</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      spriteArray<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> gameResArray<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Rect</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">*</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">75</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    engine<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>GameEvent<span class=\"token punctuation\">.</span>addScore<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token operator\">++</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_myScore<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_showScore</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_myScore<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Control the performance of the score according to the change of the game state.</span>\n    engine<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>GameEvent<span class=\"token punctuation\">.</span>stateChange<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">gameState<span class=\"token operator\">:</span> EnumGameState</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>gameState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">case</span> EnumGameState<span class=\"token punctuation\">.</span>Idel<span class=\"token operator\">:</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span>isActive <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> EnumGameState<span class=\"token punctuation\">.</span>Start<span class=\"token operator\">:</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span>isActive <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_myScore <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_showScore</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> EnumGameState<span class=\"token punctuation\">.</span>End<span class=\"token operator\">:</span>\n          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">private</span> <span class=\"token function\">_showScore</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">scoreNumStr<span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> scoreLen <span class=\"token operator\">=</span> scoreNumStr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n      entity<span class=\"token punctuation\">,</span>\n      _numInv<span class=\"token operator\">:</span> inv<span class=\"token punctuation\">,</span>\n      _scoreEntitys<span class=\"token operator\">:</span> scoreEntitys<span class=\"token punctuation\">,</span>\n      _spriteArray<span class=\"token operator\">:</span> spriteArray<span class=\"token punctuation\">,</span>\n      _scoreRenderer<span class=\"token operator\">:</span> scoreRenderers\n    <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> nowEntityLen <span class=\"token operator\">=</span> scoreEntitys<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> scoreEntity<span class=\"token operator\">:</span> Entity<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> scoreRenderer<span class=\"token operator\">:</span> SpriteRenderer<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// If the entity is not enough, new one.</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>scoreLen <span class=\"token operator\">></span> nowEntityLen<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> nowEntityLen<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> scoreLen<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        scoreEntity <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Entity</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        scoreRenderer <span class=\"token operator\">=</span> scoreEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        scoreRenderers<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>scoreRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        scoreEntitys<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>scoreEntity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        entity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>scoreEntity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// At the moment nowEntityLen >= scoreLen.</span>\n    nowEntityLen <span class=\"token operator\">=</span> scoreEntitys<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> startX <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">-</span> scoreLen<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> inv<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> nowEntityLen<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      scoreEntity <span class=\"token operator\">=</span> scoreEntitys<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">>=</span> scoreLen<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        scoreEntity<span class=\"token punctuation\">.</span>isActive <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        scoreEntity<span class=\"token punctuation\">.</span>isActive <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        scoreEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>startX <span class=\"token operator\">+</span> i <span class=\"token operator\">*</span> inv<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        scoreRenderers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>sprite <span class=\"token operator\">=</span> spriteArray<span class=\"token punctuation\">[</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>scoreNumStr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ScriptGround</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/** Swap two pieces of ground to achieve constant movement. */</span>\n  <span class=\"token keyword\">private</span> _groundMaterial<span class=\"token operator\">:</span> UnlitMaterial<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/** Horizontal movement speed. */</span>\n  <span class=\"token keyword\">private</span> _groundHorizontalV<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">0.0082</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">onAwake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_groundMaterial <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>UnlitMaterial<span class=\"token operator\">></span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMaterial</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Control the performance of the ground according to the change of the game state.</span>\n    engine<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>GameEvent<span class=\"token punctuation\">.</span>stateChange<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">gameState<span class=\"token operator\">:</span> EnumGameState</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>gameState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">case</span> EnumGameState<span class=\"token punctuation\">.</span>Idel<span class=\"token operator\">:</span>\n        <span class=\"token keyword\">case</span> EnumGameState<span class=\"token punctuation\">.</span>Start<span class=\"token operator\">:</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> EnumGameState<span class=\"token punctuation\">.</span>End<span class=\"token operator\">:</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// When checkHit is monitored, check the collision between the ground and the bird.</span>\n    engine<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>GameEvent<span class=\"token punctuation\">.</span>checkHit<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">birdY</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      birdY <span class=\"token operator\">&lt;</span> groundY <span class=\"token operator\">&amp;&amp;</span> engine<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span>GameEvent<span class=\"token punctuation\">.</span>gameOver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">deltaTime<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// After deltaTime, the distance the ground has moved.</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_groundMaterial<span class=\"token punctuation\">.</span>tilingOffset<span class=\"token punctuation\">.</span>z <span class=\"token operator\">+=</span> deltaTime <span class=\"token operator\">*</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_groundHorizontalV<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">GameCtrl</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> _gameState<span class=\"token operator\">:</span> EnumGameState<span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">onAwake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    engine<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>GameEvent<span class=\"token punctuation\">.</span>reStartGame<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_setGameState</span><span class=\"token punctuation\">(</span>EnumGameState<span class=\"token punctuation\">.</span>Idel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    engine<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>GameEvent<span class=\"token punctuation\">.</span>gameOver<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_setGameState</span><span class=\"token punctuation\">(</span>EnumGameState<span class=\"token punctuation\">.</span>End<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> boxCollider<span class=\"token operator\">:</span> StaticCollider <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>StaticCollider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> boxColliderShape <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BoxColliderShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    boxColliderShape<span class=\"token punctuation\">.</span><span class=\"token function\">setSize</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.001</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    boxCollider<span class=\"token punctuation\">.</span><span class=\"token function\">addShape</span><span class=\"token punctuation\">(</span>boxColliderShape<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">onStart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Give a state at the beginning.</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_setGameState</span><span class=\"token punctuation\">(</span>EnumGameState<span class=\"token punctuation\">.</span>Idel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Update TWEEN.</span>\n    <span class=\"token constant\">TWEEN</span><span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">onPointerDown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_gameState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">case</span> EnumGameState<span class=\"token punctuation\">.</span>Idel<span class=\"token operator\">:</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_setGameState</span><span class=\"token punctuation\">(</span>EnumGameState<span class=\"token punctuation\">.</span>Start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        engine<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span>GameEvent<span class=\"token punctuation\">.</span>fly<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">case</span> EnumGameState<span class=\"token punctuation\">.</span>Start<span class=\"token operator\">:</span>\n        engine<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span>GameEvent<span class=\"token punctuation\">.</span>fly<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/**\n   * The status will be distributed to all objects in the game.\n   * @param state - EnumGameState\n   */</span>\n  <span class=\"token keyword\">private</span> <span class=\"token function\">_setGameState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token operator\">:</span> EnumGameState</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_gameState <span class=\"token operator\">!=</span> state<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_gameState <span class=\"token operator\">=</span> state<span class=\"token punctuation\">;</span>\n      engine<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span>GameEvent<span class=\"token punctuation\">.</span>stateChange<span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ScriptGUI</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">onAwake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> entity <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> resetBtnNode <span class=\"token operator\">=</span> entity<span class=\"token punctuation\">.</span><span class=\"token function\">findByName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"nodeRestart\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Add BoxCollider.</span>\n    <span class=\"token keyword\">const</span> boxCollider<span class=\"token operator\">:</span> StaticCollider <span class=\"token operator\">=</span> resetBtnNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>StaticCollider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> boxColliderShape <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BoxColliderShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    boxColliderShape<span class=\"token punctuation\">.</span><span class=\"token function\">setSize</span><span class=\"token punctuation\">(</span><span class=\"token number\">2.14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.001</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    boxCollider<span class=\"token punctuation\">.</span><span class=\"token function\">addShape</span><span class=\"token punctuation\">(</span>boxColliderShape<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    resetBtnNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Script<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onPointerClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>engine<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span>GameEvent<span class=\"token punctuation\">.</span>reStartGame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Control the performance of the GUI according to the change of the game state.</span>\n    engine<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>GameEvent<span class=\"token punctuation\">.</span>stateChange<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">gameState<span class=\"token operator\">:</span> EnumGameState</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>gameState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">case</span> EnumGameState<span class=\"token punctuation\">.</span>Idel<span class=\"token operator\">:</span>\n        <span class=\"token keyword\">case</span> EnumGameState<span class=\"token punctuation\">.</span>Start<span class=\"token operator\">:</span>\n          resetBtnNode<span class=\"token punctuation\">.</span>isActive <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> EnumGameState<span class=\"token punctuation\">.</span>End<span class=\"token operator\">:</span>\n          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    engine<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>GameEvent<span class=\"token punctuation\">.</span>showGui<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      resetBtnNode<span class=\"token punctuation\">.</span>isActive <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ScriptBird</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/** Offsets of sprite sheet animation. */</span>\n  <span class=\"token keyword\">private</span> _regions<span class=\"token operator\">:</span> Vector2<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector2</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector2</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">/</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector2</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">/</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/** Reciprocal Of SliceWidth. */</span>\n  <span class=\"token keyword\">private</span> _reciprocalSliceWidth<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">/</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/** Reciprocal Of SliceHeight. */</span>\n  <span class=\"token keyword\">private</span> _reciprocalSliceHeight<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/** Frame interval time, the unit of time is ms. */</span>\n  <span class=\"token keyword\">private</span> _frameInterval <span class=\"token operator\">=</span> <span class=\"token number\">150</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/** Total frames. */</span>\n  <span class=\"token keyword\">private</span> _totalFrames <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/** Maximum downward speed */</span>\n  <span class=\"token keyword\">private</span> _maxDropV <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/** Acceleration of gravity */</span>\n  <span class=\"token keyword\">private</span> _gravity <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">35</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/** Initial upward speed given during fly */</span>\n  <span class=\"token keyword\">private</span> _startFlyV <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">private</span> _cumulativeTime<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> _birdState <span class=\"token operator\">=</span> EnumBirdState<span class=\"token punctuation\">.</span>Alive<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">private</span> _sprite<span class=\"token operator\">:</span> Sprite<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> _curFrameIndex<span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> _startY<span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> _flyStartTime<span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> _gameState<span class=\"token operator\">:</span> EnumGameState<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> _yoyoTween<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> _dropTween<span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">onAwake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_initDataAndUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_initTween</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_initListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">deltaTime<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Update the performance of the bird.</span>\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_birdState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">case</span> EnumBirdState<span class=\"token punctuation\">.</span>Alive<span class=\"token operator\">:</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> _frameInterval<span class=\"token punctuation\">,</span> _totalFrames <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_cumulativeTime <span class=\"token operator\">+=</span> deltaTime<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_cumulativeTime <span class=\"token operator\">>=</span> _frameInterval<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token comment\">// Need update frameIndex.</span>\n          <span class=\"token keyword\">const</span> addFrameCount <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_cumulativeTime <span class=\"token operator\">/</span> _frameInterval<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_cumulativeTime <span class=\"token operator\">-=</span> addFrameCount <span class=\"token operator\">*</span> _frameInterval<span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_setFrameIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_curFrameIndex <span class=\"token operator\">+</span> addFrameCount<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> _totalFrames<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// Update bird's location information.</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_gameState <span class=\"token operator\">==</span> EnumGameState<span class=\"token punctuation\">.</span>Start<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token comment\">// Free fall and uniform motion are superimposed to obtain the current position.</span>\n          <span class=\"token keyword\">let</span> endY<span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> _maxDropV<span class=\"token punctuation\">,</span> _startFlyV<span class=\"token punctuation\">,</span> _gravity <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">const</span> transform <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">const</span> position <span class=\"token operator\">=</span> transform<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">;</span>\n          <span class=\"token comment\">// How much time has passed.</span>\n          <span class=\"token keyword\">const</span> subTime <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">.</span>nowTime <span class=\"token operator\">-</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_flyStartTime<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\n          <span class=\"token comment\">// How long has it been in free fall.</span>\n          <span class=\"token keyword\">const</span> addToMaxUseTime <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>_maxDropV <span class=\"token operator\">-</span> _startFlyV<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> _gravity<span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>subTime <span class=\"token operator\">&lt;=</span> addToMaxUseTime<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// Free fall.</span>\n            endY <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_startFlyV <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>_startFlyV <span class=\"token operator\">+</span> subTime <span class=\"token operator\">*</span> _gravity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> subTime<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_startY<span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// Falling at a constant speed.</span>\n            endY <span class=\"token operator\">=</span>\n              <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_maxDropV <span class=\"token operator\">+</span> _startFlyV<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> addToMaxUseTime<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> _maxDropV <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>subTime <span class=\"token operator\">-</span> addToMaxUseTime<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_startY<span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n          transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> endY<span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">case</span> EnumBirdState<span class=\"token punctuation\">.</span>Dead<span class=\"token operator\">:</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_setFrameIndex</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">onLateUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// After updating the position, check the collision.</span>\n    engine<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span>GameEvent<span class=\"token punctuation\">.</span>checkHit<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">private</span> <span class=\"token function\">_initDataAndUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> entity <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> renderer <span class=\"token operator\">=</span> entity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    renderer<span class=\"token punctuation\">.</span>sprite <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_sprite <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> gameResArray<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_setFrameIndex</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">private</span> <span class=\"token function\">_initTween</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> transform <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> rotation <span class=\"token operator\">=</span> transform<span class=\"token punctuation\">.</span>rotation<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> position <span class=\"token operator\">=</span> transform<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_yoyoTween <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TWEEN<span class=\"token punctuation\">.</span>Tween</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> y<span class=\"token operator\">:</span> <span class=\"token number\">0.25</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">380</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span><span class=\"token number\">Infinity</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">target</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> target<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">yoyo</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">easing</span><span class=\"token punctuation\">(</span><span class=\"token constant\">TWEEN</span><span class=\"token punctuation\">.</span>Easing<span class=\"token punctuation\">.</span>Sinusoidal<span class=\"token punctuation\">.</span>InOut<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_dropTween <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TWEEN<span class=\"token punctuation\">.</span>Tween</span><span class=\"token punctuation\">(</span>rotation<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> z<span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">90</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">380</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">target</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        transform<span class=\"token punctuation\">.</span>rotation <span class=\"token operator\">=</span> target<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">520</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">private</span> <span class=\"token function\">_initListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> transform <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">;</span>\n    engine<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>GameEvent<span class=\"token punctuation\">.</span>fly<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Record start time and location.</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_startY <span class=\"token operator\">=</span> transform<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_flyStartTime <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">.</span>nowTime<span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// Flying performance.</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_yoyoTween<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_dropTween<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      transform<span class=\"token punctuation\">.</span><span class=\"token function\">setRotation</span><span class=\"token punctuation\">(</span>transform<span class=\"token punctuation\">.</span>rotation<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> transform<span class=\"token punctuation\">.</span>rotation<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_dropTween<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Control the performance of the bird according to the change of the game state.</span>\n    engine<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>GameEvent<span class=\"token punctuation\">.</span>stateChange<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">gameState<span class=\"token operator\">:</span> EnumGameState</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_gameState <span class=\"token operator\">=</span> gameState<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>gameState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">case</span> EnumGameState<span class=\"token punctuation\">.</span>Idel<span class=\"token operator\">:</span>\n          transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          transform<span class=\"token punctuation\">.</span>rotation <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_birdState <span class=\"token operator\">=</span> EnumBirdState<span class=\"token punctuation\">.</span>Alive<span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_yoyoTween<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> EnumGameState<span class=\"token punctuation\">.</span>Start<span class=\"token operator\">:</span>\n          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> EnumGameState<span class=\"token punctuation\">.</span>End<span class=\"token operator\">:</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_birdState <span class=\"token operator\">=</span> EnumBirdState<span class=\"token punctuation\">.</span>Dead<span class=\"token punctuation\">;</span>\n          <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> position<span class=\"token punctuation\">,</span> rotation <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> transform<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">const</span> birdPosY <span class=\"token operator\">=</span> position<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>birdPosY <span class=\"token operator\">></span> groundY<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_yoyoTween<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_dropTween<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token keyword\">new</span> <span class=\"token class-name\">TWEEN<span class=\"token punctuation\">.</span>Tween</span><span class=\"token punctuation\">(</span>rotation<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">duration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>birdPosY <span class=\"token operator\">-</span> groundY<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">40</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> z<span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">90</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">target</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                  transform<span class=\"token punctuation\">.</span>rotation <span class=\"token operator\">=</span> target<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              <span class=\"token keyword\">new</span> <span class=\"token class-name\">TWEEN<span class=\"token punctuation\">.</span>Tween</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">duration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>birdPosY <span class=\"token operator\">-</span> groundY<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">120</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> y<span class=\"token operator\">:</span> groundY <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">target</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                  transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> target<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">onComplete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                  engine<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span>GameEvent<span class=\"token punctuation\">.</span>showGui<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n              engine<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span>GameEvent<span class=\"token punctuation\">.</span>showGui<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">private</span> <span class=\"token function\">_setFrameIndex</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">frameIndex<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_curFrameIndex <span class=\"token operator\">!==</span> frameIndex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_curFrameIndex <span class=\"token operator\">=</span> frameIndex<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> frameInfo <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_regions<span class=\"token punctuation\">[</span>frameIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> region <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_sprite<span class=\"token punctuation\">.</span>region<span class=\"token punctuation\">;</span>\n      region<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>frameInfo<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> frameInfo<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_reciprocalSliceWidth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_reciprocalSliceHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_sprite<span class=\"token punctuation\">.</span>region <span class=\"token operator\">=</span> region<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ScriptDeathEff</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">onAwake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> entity <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> renderer <span class=\"token operator\">=</span> entity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>UnlitMaterial<span class=\"token operator\">></span>renderer<span class=\"token punctuation\">.</span><span class=\"token function\">getMaterial</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// init Tween.</span>\n    <span class=\"token keyword\">const</span> baseColor <span class=\"token operator\">=</span> material<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> shockTween <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TWEEN<span class=\"token punctuation\">.</span>Tween</span><span class=\"token punctuation\">(</span>baseColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> a<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">yoyo</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    engine<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>GameEvent<span class=\"token punctuation\">.</span>stateChange<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">gameState<span class=\"token operator\">:</span> EnumGameState</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>gameState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">case</span> EnumGameState<span class=\"token punctuation\">.</span>End<span class=\"token operator\">:</span>\n          shockTween<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@oasis-engine/physics-lite\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@oasis-engine/physics-lite\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global[\"@oasisEngine/physicsLite\"]);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, _physicsLite) {\n  \"use strict\";\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\", _physicsLite.LitePhysics);\n  engine.canvas.resizeByClientSize();\n  var invCanvasWidth = 1 / engine.canvas.width;\n  var invCanvasHeight = 1 / engine.canvas.height; // @ts-ignore\n\n  var inputManager = engine.inputManager;\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(\"root\");\n  scene.ambientLight.diffuseSolidColor.setValue(1, 1, 1, 1);\n  scene.ambientLight.diffuseIntensity = 1.2; // init camera\n\n  var cameraEntity = rootEntity.createChild(\"camera\");\n  var camera = cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.transform.setPosition(10, 10, 10);\n  cameraEntity.transform.lookAt(new _oasisEngine.Vector3(0, 0, 0)); // init point light\n\n  var light = rootEntity.createChild(\"light1\");\n  light.transform.setPosition(-8, -2, 8);\n  light.addComponent(_oasisEngine.PointLight).intensity = 0.12;\n  light = rootEntity.createChild(\"light2\");\n  light.transform.setPosition(8, -2, 0);\n  light.addComponent(_oasisEngine.PointLight).intensity = 0.12;\n\n  var PanScript = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(PanScript, _Script);\n\n    function PanScript() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _Script.call.apply(_Script, [this].concat(args)) || this;\n      _this.startPointerPos = new _oasisEngine.Vector3();\n      _this.tempVec2 = new _oasisEngine.Vector2();\n      _this.tempVec3 = new _oasisEngine.Vector3();\n      _this.tempVec4 = new _oasisEngine.Vector4();\n      _this.zValue = 0;\n      return _this;\n    }\n\n    var _proto = PanScript.prototype;\n\n    _proto.onPointerDown = function onPointerDown() {\n      // get depth\n      camera.worldToViewportPoint(this.entity.transform.worldPosition, this.tempVec4).z;\n      this.zValue = (this.tempVec4.z + 1) / 2;\n      var tempVec2 = this.tempVec2,\n          tempVec3 = this.tempVec3; // @ts-ignore\n\n      this.getMergePointer(inputManager.pointers, tempVec2);\n      tempVec3.setValue(tempVec2.x * invCanvasWidth, tempVec2.y * invCanvasHeight, this.zValue);\n      camera.viewportToWorldPoint(tempVec3, this.startPointerPos);\n    };\n\n    _proto.onPointerDrag = function onPointerDrag() {\n      var tempVec2 = this.tempVec2,\n          tempVec3 = this.tempVec3,\n          startPointerPos = this.startPointerPos;\n      var transform = this.entity.transform; // @ts-ignore\n\n      this.getMergePointer(inputManager.pointers, tempVec2);\n      this.tempVec3.setValue(tempVec2.x * invCanvasWidth, tempVec2.y * invCanvasHeight, this.zValue);\n      camera.viewportToWorldPoint(tempVec3, tempVec3);\n\n      _oasisEngine.Vector3.subtract(tempVec3, startPointerPos, startPointerPos);\n\n      transform.worldPosition = transform.worldPosition.add(startPointerPos);\n      tempVec3.cloneTo(startPointerPos);\n    };\n\n    _proto.getMergePointer = function getMergePointer(pointers, out) {\n      pointers[0].position.cloneTo(out);\n      var len = pointers.length;\n\n      for (var i = 1; i < len; i++) {\n        var pos = pointers[i].position;\n        out.x += pos.x;\n        out.y += pos.y;\n      }\n    };\n\n    return PanScript;\n  }(_oasisEngine.Script);\n\n  var ClickScript = /*#__PURE__*/function (_Script2) {\n    _inheritsLoose(ClickScript, _Script2);\n\n    function ClickScript() {\n      var _this2;\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this2 = _Script2.call.apply(_Script2, [this].concat(args)) || this;\n      _this2.material = void 0;\n      return _this2;\n    }\n\n    var _proto2 = ClickScript.prototype;\n\n    _proto2.onStart = function onStart() {\n      this.material = this.entity.getComponent(_oasisEngine.MeshRenderer).getInstanceMaterial();\n    };\n\n    _proto2.onPointerClick = function onPointerClick() {\n      this.material.baseColor.setValue(Math.random(), Math.random(), Math.random(), 1.0);\n    };\n\n    return ClickScript;\n  }(_oasisEngine.Script);\n\n  var EnterExitScript = /*#__PURE__*/function (_Script3) {\n    _inheritsLoose(EnterExitScript, _Script3);\n\n    function EnterExitScript() {\n      var _this3;\n\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      _this3 = _Script3.call.apply(_Script3, [this].concat(args)) || this;\n      _this3.material = void 0;\n      return _this3;\n    }\n\n    var _proto3 = EnterExitScript.prototype;\n\n    _proto3.onStart = function onStart() {\n      this.material = this.entity.getComponent(_oasisEngine.MeshRenderer).getInstanceMaterial();\n    };\n\n    _proto3.onPointerEnter = function onPointerEnter() {\n      this.material.baseColor.setValue(Math.random(), Math.random(), Math.random(), 1.0);\n    };\n\n    _proto3.onPointerExit = function onPointerExit() {\n      this.material.baseColor.setValue(Math.random(), Math.random(), Math.random(), 1.0);\n    };\n\n    return EnterExitScript;\n  }(_oasisEngine.Script);\n\n  function createBox(x, y, z) {\n    // create box test entity\n    var cubeSize = 2.0;\n    var boxEntity = rootEntity.createChild(\"BoxEntity\");\n    boxEntity.transform.setPosition(x, y, z);\n    var boxMtl = new _oasisEngine.BlinnPhongMaterial(engine);\n    var boxRenderer = boxEntity.addComponent(_oasisEngine.MeshRenderer);\n    boxMtl.baseColor.setValue(0.6, 0.3, 0.3, 1.0);\n    boxRenderer.mesh = _oasisEngine.PrimitiveMesh.createCuboid(engine, cubeSize, cubeSize, cubeSize);\n    boxRenderer.setMaterial(boxMtl);\n    var boxCollider = boxEntity.addComponent(_oasisEngine.StaticCollider);\n    var boxColliderShape = new _oasisEngine.BoxColliderShape();\n    boxColliderShape.setSize(cubeSize, cubeSize, cubeSize);\n    boxCollider.addShape(boxColliderShape);\n    return boxEntity;\n  }\n\n  createBox(0, 0, 0).addComponent(PanScript);\n  createBox(3, 0, -3).addComponent(ClickScript);\n  createBox(-3, 0, 3).addComponent(EnterExitScript); // Run engine\n\n  engine.run();\n});"},"name":"input-pointer","title":"input-pointer","category":"input","id":"5c74a2c5-5712-56ee-b501-9e0463fb2e3b","sourceCode":"/**\n * @title input-pointer\n * @category input\n */\nimport {\n  Camera,\n  MeshRenderer,\n  PrimitiveMesh,\n  Script,\n  WebGLEngine,\n  StaticCollider,\n  BoxColliderShape,\n  PointLight,\n  BlinnPhongMaterial,\n  Vector3,\n  Vector2,\n  Vector4,\n  Entity,\n  Pointer\n} from \"oasis-engine\";\nimport { LitePhysics } from \"@oasis-engine/physics-lite\";\n\nconst engine = new WebGLEngine(\"canvas\", LitePhysics);\nengine.canvas.resizeByClientSize();\nconst invCanvasWidth = 1 / engine.canvas.width;\nconst invCanvasHeight = 1 / engine.canvas.height;\n// @ts-ignore\nconst inputManager = engine.inputManager;\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity(\"root\");\n\nscene.ambientLight.diffuseSolidColor.setValue(1, 1, 1, 1);\nscene.ambientLight.diffuseIntensity = 1.2;\n\n// init camera\nconst cameraEntity = rootEntity.createChild(\"camera\");\nconst camera = cameraEntity.addComponent(Camera);\ncameraEntity.transform.setPosition(10, 10, 10);\ncameraEntity.transform.lookAt(new Vector3(0, 0, 0));\n\n// init point light\nlet light = rootEntity.createChild(\"light1\");\nlight.transform.setPosition(-8, -2, 8);\nlight.addComponent(PointLight).intensity = 0.12;\n\nlight = rootEntity.createChild(\"light2\");\nlight.transform.setPosition(8, -2, 0);\nlight.addComponent(PointLight).intensity = 0.12;\n\nclass PanScript extends Script {\n  private startPointerPos = new Vector3();\n  private tempVec2: Vector2 = new Vector2();\n  private tempVec3: Vector3 = new Vector3();\n  private tempVec4: Vector4 = new Vector4();\n  private zValue: number = 0;\n\n  onPointerDown() {\n    // get depth\n    camera.worldToViewportPoint(this.entity.transform.worldPosition, this.tempVec4).z;\n    this.zValue = (this.tempVec4.z + 1) / 2;\n    const { tempVec2, tempVec3 } = this;\n    // @ts-ignore\n    this.getMergePointer(inputManager.pointers, tempVec2);\n    tempVec3.setValue(tempVec2.x * invCanvasWidth, tempVec2.y * invCanvasHeight, this.zValue);\n    camera.viewportToWorldPoint(tempVec3, this.startPointerPos);\n  }\n\n  onPointerDrag() {\n    const { tempVec2, tempVec3, startPointerPos } = this;\n    const { transform } = this.entity;\n    // @ts-ignore\n    this.getMergePointer(inputManager.pointers, tempVec2);\n    this.tempVec3.setValue(tempVec2.x * invCanvasWidth, tempVec2.y * invCanvasHeight, this.zValue);\n    camera.viewportToWorldPoint(tempVec3, tempVec3);\n    Vector3.subtract(tempVec3, startPointerPos, startPointerPos);\n    transform.worldPosition = transform.worldPosition.add(startPointerPos);\n    tempVec3.cloneTo(startPointerPos);\n  }\n\n  getMergePointer(pointers: Pointer[], out: Vector2) {\n    pointers[0].position.cloneTo(out);\n    const len = pointers.length;\n    for (let i = 1; i < len; i++) {\n      const pos = pointers[i].position;\n      out.x += pos.x;\n      out.y += pos.y;\n    }\n  }\n}\n\nclass ClickScript extends Script {\n  private material: BlinnPhongMaterial;\n  onStart() {\n    this.material = <BlinnPhongMaterial>this.entity.getComponent(MeshRenderer).getInstanceMaterial();\n  }\n\n  onPointerClick() {\n    this.material.baseColor.setValue(Math.random(), Math.random(), Math.random(), 1.0);\n  }\n}\n\nclass EnterExitScript extends Script {\n  private material: BlinnPhongMaterial;\n  onStart() {\n    this.material = <BlinnPhongMaterial>this.entity.getComponent(MeshRenderer).getInstanceMaterial();\n  }\n\n  onPointerEnter() {\n    this.material.baseColor.setValue(Math.random(), Math.random(), Math.random(), 1.0);\n  }\n\n  onPointerExit() {\n    this.material.baseColor.setValue(Math.random(), Math.random(), Math.random(), 1.0);\n  }\n}\n\nfunction createBox(x: number, y: number, z: number): Entity {\n  // create box test entity\n  const cubeSize = 2.0;\n  const boxEntity = rootEntity.createChild(\"BoxEntity\");\n  boxEntity.transform.setPosition(x, y, z);\n\n  const boxMtl = new BlinnPhongMaterial(engine);\n  const boxRenderer = boxEntity.addComponent(MeshRenderer);\n  boxMtl.baseColor.setValue(0.6, 0.3, 0.3, 1.0);\n  boxRenderer.mesh = PrimitiveMesh.createCuboid(engine, cubeSize, cubeSize, cubeSize);\n  boxRenderer.setMaterial(boxMtl);\n\n  const boxCollider: StaticCollider = boxEntity.addComponent(StaticCollider);\n  const boxColliderShape = new BoxColliderShape();\n  boxColliderShape.setSize(cubeSize, cubeSize, cubeSize);\n  boxCollider.addShape(boxColliderShape);\n  return boxEntity;\n}\ncreateBox(0, 0, 0).addComponent(PanScript);\ncreateBox(3, 0, -3).addComponent(ClickScript);\ncreateBox(-3, 0, 3).addComponent(EnterExitScript);\n\n// Run engine\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title input-pointer\n * @category input\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  Camera<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  Script<span class=\"token punctuation\">,</span>\n  WebGLEngine<span class=\"token punctuation\">,</span>\n  StaticCollider<span class=\"token punctuation\">,</span>\n  BoxColliderShape<span class=\"token punctuation\">,</span>\n  PointLight<span class=\"token punctuation\">,</span>\n  BlinnPhongMaterial<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  Vector2<span class=\"token punctuation\">,</span>\n  Vector4<span class=\"token punctuation\">,</span>\n  Entity<span class=\"token punctuation\">,</span>\n  Pointer\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> LitePhysics <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/physics-lite\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">,</span> LitePhysics<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> invCanvasWidth <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">/</span> engine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> invCanvasHeight <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">/</span> engine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// @ts-ignore</span>\n<span class=\"token keyword\">const</span> inputManager <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>inputManager<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nscene<span class=\"token punctuation\">.</span>ambientLight<span class=\"token punctuation\">.</span>diffuseSolidColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nscene<span class=\"token punctuation\">.</span>ambientLight<span class=\"token punctuation\">.</span>diffuseIntensity <span class=\"token operator\">=</span> <span class=\"token number\">1.2</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// init camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> camera <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// init point light</span>\n<span class=\"token keyword\">let</span> light <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"light1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlight<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlight<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>PointLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> <span class=\"token number\">0.12</span><span class=\"token punctuation\">;</span>\n\nlight <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"light2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlight<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlight<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>PointLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> <span class=\"token number\">0.12</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PanScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> startPointerPos <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> tempVec2<span class=\"token operator\">:</span> Vector2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> tempVec3<span class=\"token operator\">:</span> Vector3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> tempVec4<span class=\"token operator\">:</span> Vector4 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> zValue<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">onPointerDown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// get depth</span>\n    camera<span class=\"token punctuation\">.</span><span class=\"token function\">worldToViewportPoint</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>worldPosition<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tempVec4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>zValue <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tempVec4<span class=\"token punctuation\">.</span>z <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> tempVec2<span class=\"token punctuation\">,</span> tempVec3 <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// @ts-ignore</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMergePointer</span><span class=\"token punctuation\">(</span>inputManager<span class=\"token punctuation\">.</span>pointers<span class=\"token punctuation\">,</span> tempVec2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    tempVec3<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>tempVec2<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> invCanvasWidth<span class=\"token punctuation\">,</span> tempVec2<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> invCanvasHeight<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>zValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    camera<span class=\"token punctuation\">.</span><span class=\"token function\">viewportToWorldPoint</span><span class=\"token punctuation\">(</span>tempVec3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>startPointerPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">onPointerDrag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> tempVec2<span class=\"token punctuation\">,</span> tempVec3<span class=\"token punctuation\">,</span> startPointerPos <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> transform <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// @ts-ignore</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMergePointer</span><span class=\"token punctuation\">(</span>inputManager<span class=\"token punctuation\">.</span>pointers<span class=\"token punctuation\">,</span> tempVec2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tempVec3<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>tempVec2<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> invCanvasWidth<span class=\"token punctuation\">,</span> tempVec2<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> invCanvasHeight<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>zValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    camera<span class=\"token punctuation\">.</span><span class=\"token function\">viewportToWorldPoint</span><span class=\"token punctuation\">(</span>tempVec3<span class=\"token punctuation\">,</span> tempVec3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Vector3<span class=\"token punctuation\">.</span><span class=\"token function\">subtract</span><span class=\"token punctuation\">(</span>tempVec3<span class=\"token punctuation\">,</span> startPointerPos<span class=\"token punctuation\">,</span> startPointerPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    transform<span class=\"token punctuation\">.</span>worldPosition <span class=\"token operator\">=</span> transform<span class=\"token punctuation\">.</span>worldPosition<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>startPointerPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    tempVec3<span class=\"token punctuation\">.</span><span class=\"token function\">cloneTo</span><span class=\"token punctuation\">(</span>startPointerPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">getMergePointer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pointers<span class=\"token operator\">:</span> Pointer<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> out<span class=\"token operator\">:</span> Vector2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    pointers<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span><span class=\"token function\">cloneTo</span><span class=\"token punctuation\">(</span>out<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> len <span class=\"token operator\">=</span> pointers<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> len<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> pos <span class=\"token operator\">=</span> pointers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">;</span>\n      out<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+=</span> pos<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n      out<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+=</span> pos<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ClickScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> material<span class=\"token operator\">:</span> BlinnPhongMaterial<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">onStart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>material <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>BlinnPhongMaterial<span class=\"token operator\">></span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstanceMaterial</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">onPointerClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">EnterExitScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> material<span class=\"token operator\">:</span> BlinnPhongMaterial<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">onStart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>material <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>BlinnPhongMaterial<span class=\"token operator\">></span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstanceMaterial</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">onPointerEnter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">onPointerExit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">createBox</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span> z<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Entity <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// create box test entity</span>\n  <span class=\"token keyword\">const</span> cubeSize <span class=\"token operator\">=</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> boxEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BoxEntity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  boxEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> boxMtl <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> boxRenderer <span class=\"token operator\">=</span> boxEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  boxMtl<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  boxRenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> cubeSize<span class=\"token punctuation\">,</span> cubeSize<span class=\"token punctuation\">,</span> cubeSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  boxRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>boxMtl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> boxCollider<span class=\"token operator\">:</span> StaticCollider <span class=\"token operator\">=</span> boxEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>StaticCollider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> boxColliderShape <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BoxColliderShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  boxColliderShape<span class=\"token punctuation\">.</span><span class=\"token function\">setSize</span><span class=\"token punctuation\">(</span>cubeSize<span class=\"token punctuation\">,</span> cubeSize<span class=\"token punctuation\">,</span> cubeSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  boxCollider<span class=\"token punctuation\">.</span><span class=\"token function\">addShape</span><span class=\"token punctuation\">(</span>boxColliderShape<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> boxEntity<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">createBox</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>PanScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">createBox</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>ClickScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">createBox</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>EnterExitScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Run engine</span>\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title GLTF Loader\n   * @category Advance\n   */\n  _oasisEngine.Logger.enable();\n\n  var envList = {\n    sunset: \"https://gw.alipayobjects.com/os/bmw-prod/34986a5b-fa16-40f1-83c8-1885efe855d2.bin\",\n    pisa: \"https://gw.alipayobjects.com/os/bmw-prod/258a783d-0673-4b47-907a-da17b882feee.bin\",\n    foot: \"https://gw.alipayobjects.com/os/bmw-prod/f369110c-0e33-47eb-8296-756e9c80f254.bin\"\n  };\n\n  var Oasis = /*#__PURE__*/function () {\n    Oasis.guiToColor = function guiToColor(gui, color) {\n      color.setValue(gui[0] / 255, gui[1] / 255, gui[2] / 255, color.a);\n    };\n\n    Oasis.colorToGui = function colorToGui(color) {\n      if (color === void 0) {\n        color = new _oasisEngine.Color(1, 1, 1);\n      }\n\n      var v = [];\n      v[0] = color.r * 255;\n      v[1] = color.g * 255;\n      v[2] = color.b * 255;\n      return v;\n    };\n\n    function Oasis() {\n      var _this = this;\n\n      this.textures = {};\n      this.env = {};\n      this.engine = new _oasisEngine.WebGLEngine(\"canvas\");\n      this.scene = this.engine.sceneManager.activeScene;\n      this.skyMaterial = new _oasisEngine.SkyBoxMaterial(this.engine);\n      this.rootEntity = this.scene.createRootEntity(\"root\");\n      this.cameraEntity = this.rootEntity.createChild(\"camera\");\n      this.gltfRootEntity = this.rootEntity.createChild(\"gltf\");\n      this.lightEntity1 = this.rootEntity.createChild(\"direct_light1\");\n      this.lightEntity2 = this.rootEntity.createChild(\"direct_light2\");\n      this.camera = this.cameraEntity.addComponent(_oasisEngine.Camera);\n      this.controler = this.cameraEntity.addComponent(_controls.OrbitControl);\n      this.light1 = this.lightEntity1.addComponent(_oasisEngine.DirectLight);\n      this.light2 = this.lightEntity2.addComponent(_oasisEngine.DirectLight);\n      this.gui = new dat.GUI();\n      this.materialFolder = null;\n      this.animationFolder = null;\n      this.state = {\n        // Scene\n        background: false,\n        // Lights\n        env: \"sunset\",\n        envIntensity: 1,\n        addLights: true,\n        lightColor: Oasis.colorToGui(new _oasisEngine.Color(1, 1, 1)),\n        lightIntensity: 0.8,\n        // GLTF Model List\n        defaultGLTF: \"fox\",\n        gltfList: {\n          \"2CylinderEngine\": \"https://gw.alipayobjects.com/os/bmw-prod/48a1e8b3-06b4-4269-807d-79274e58283a.glb\",\n          alphaBlendModeTest: \"https://gw.alipayobjects.com/os/bmw-prod/d099b30b-59a3-42e4-99eb-b158afa8e65d.glb\",\n          animatedCube: \"https://gw.alipayobjects.com/os/bmw-prod/8cc524dd-2481-438d-8374-3c933adea3b6.gltf\",\n          antiqueCamera: \"https://gw.alipayobjects.com/os/bmw-prod/93196534-bab3-4559-ae9f-bcb3e36a6419.glb\",\n          avocado: \"https://gw.alipayobjects.com/os/bmw-prod/0f978c4d-1cd6-4cec-9a4c-b58c8186e063.glb\",\n          avocado_draco: \"https://gw.alipayobjects.com/os/bmw-prod/b3b73614-cf06-4f41-940d-c1bc04cf6410.gltf\",\n          avocado_specular: \"https://gw.alipayobjects.com/os/bmw-prod/3cf50452-0015-461e-a172-7ea1f8135e53.gltf\",\n          avocado_quantized: \"https://gw.alipayobjects.com/os/bmw-prod/6aff5409-8e82-4e77-a6ac-55b6adfd0cf5.gltf\",\n          barramundiFish: \"https://gw.alipayobjects.com/os/bmw-prod/79d7935c-404b-4d8d-9ad3-5f8c273f0e4a.glb\",\n          boomBox: \"https://gw.alipayobjects.com/os/bmw-prod/2e98b1c0-18e8-45d0-b54e-dcad6ef05e22.glb\",\n          boomBoxWithAxes: \"https://gw.alipayobjects.com/os/bmw-prod/96e1b8b2-9be6-4b64-98ea-8c008c6dc422.gltf\",\n          boxVertexColors: \"https://gw.alipayobjects.com/os/bmw-prod/6cff6fcb-5191-465e-9a38-dee42a07cc65.glb\",\n          brianStem: \"https://gw.alipayobjects.com/os/bmw-prod/e3b37dd9-9407-4b5c-91b3-c5880d081329.glb\",\n          buggy: \"https://gw.alipayobjects.com/os/bmw-prod/d6916a14-b004-42d5-86dd-d8520b719288.glb\",\n          cesiumMan: \"https://gw.alipayobjects.com/os/bmw-prod/3a7d9597-7354-4bef-b314-b84509bef9b6.glb\",\n          cesiumMilkTruck: \"https://gw.alipayobjects.com/os/bmw-prod/7701125a-7d0d-4281-a7d8-7f0dfc8d0792.glb\",\n          corset: \"https://gw.alipayobjects.com/os/bmw-prod/3deaa5a4-5b2a-4a0d-8512-a8c4377a08ff.glb\",\n          DamagedHelmet: \"https://gw.alipayobjects.com/os/bmw-prod/a1da72a4-023e-4bb1-9629-0f4b0f6b6fc4.glb\",\n          Duck: \"https://gw.alipayobjects.com/os/bmw-prod/6cb8f543-285c-491a-8cfd-57a1160dc9ab.glb\",\n          environmentTest: \"https://gw.alipayobjects.com/os/bmw-prod/7c7b887c-05d6-43dd-b354-216e738e81ed.gltf\",\n          flightHelmet: \"https://gw.alipayobjects.com/os/bmw-prod/d6dbf161-48e2-4e6d-bbca-c481ed9f1a2d.gltf\",\n          fox: \"https://gw.alipayobjects.com/os/bmw-prod/f40ef8dd-4c94-41d4-8fac-c1d2301b6e47.glb\",\n          animationInterpolationTest: \"https://gw.alipayobjects.com/os/bmw-prod/4f410ef2-20b4-494d-85f1-a806c5070bfb.glb\",\n          lantern: \"https://gw.alipayobjects.com/os/bmw-prod/9557420a-c622-4e9c-bb46-f7af8b19d7de.glb\",\n          materialsVariantsShoe: \"https://gw.alipayobjects.com/os/bmw-prod/b1a414bb-61ea-4667-94d2-ef6cf179ac0d.glb\",\n          metalRoughSpheres: \"https://gw.alipayobjects.com/os/bmw-prod/67b39ede-1c82-4321-8457-0ad83ca9413a.glb\",\n          normalTangentTest: \"https://gw.alipayobjects.com/os/bmw-prod/4bb1a66c-55e3-4898-97d7-a9cc0f239686.glb\",\n          normalTangentMirrorTest: \"https://gw.alipayobjects.com/os/bmw-prod/8335f555-2061-47f5-9252-366c6ebf882a.glb\",\n          orientationTest: \"https://gw.alipayobjects.com/os/bmw-prod/16cdf390-ac42-411c-9d2b-8e112dfd723b.glb\",\n          sparseTest: \"https://gw.alipayobjects.com/os/bmw-prod/f00de659-53ea-49d1-8f2c-d0a412542b80.gltf\",\n          specGlossVsMetalRough: \"https://gw.alipayobjects.com/os/bmw-prod/4643bd7b-f988-4144-8245-4a390023d92d.glb\",\n          sponza: \"https://gw.alipayobjects.com/os/bmw-prod/ca50859b-d736-4a3e-9fc3-241b0bd2afef.gltf\",\n          suzanne: \"https://gw.alipayobjects.com/os/bmw-prod/3869e495-2e04-4e80-9d22-13b37116379a.gltf\",\n          sheenChair: \"https://gw.alipayobjects.com/os/bmw-prod/34847225-bc1b-4bef-9cb9-6b9711ca2f8c.glb\",\n          sheenCloth: \"https://gw.alipayobjects.com/os/bmw-prod/4529d2e8-22a8-47af-9b38-8eaff835f6bf.gltf\",\n          textureCoordinateTest: \"https://gw.alipayobjects.com/os/bmw-prod/5fd23201-51dd-4eea-92d3-c4a72ecc1f2b.glb\",\n          textureEncodingTest: \"https://gw.alipayobjects.com/os/bmw-prod/b8795e57-3c2c-4412-b4f0-7ffa796e4917.glb\",\n          textureSettingTest: \"https://gw.alipayobjects.com/os/bmw-prod/a4b26d58-bd49-4051-8f05-0fe8b532e716.glb\",\n          textureTransformMultiTest: \"https://gw.alipayobjects.com/os/bmw-prod/8fa18786-5188-4c14-94d7-77bf6b8483f9.glb\",\n          textureTransform: \"https://gw.alipayobjects.com/os/bmw-prod/6c59d5d0-2e2e-4933-a737-006d431977fd.gltf\",\n          toyCar: \"https://gw.alipayobjects.com/os/bmw-prod/8138b7d7-45aa-494a-8aea-0c67598b96d2.glb\",\n          transmissionTest: \"https://gw.alipayobjects.com/os/bmw-prod/1dd51fe8-bdd3-42e4-99be-53de5dc106b8.glb\",\n          unlitTest: \"https://gw.alipayobjects.com/os/bmw-prod/06a855be-ac8c-4705-b5d7-659b8b391189.glb\",\n          vc: \"https://gw.alipayobjects.com/os/bmw-prod/b71c4212-25fb-41bb-af88-d79ce6d3cc58.glb\",\n          vertexColorTest: \"https://gw.alipayobjects.com/os/bmw-prod/8fc70cc6-66d8-43c8-b460-f7d2aaa9edcf.glb\",\n          waterBottle: \"https://gw.alipayobjects.com/os/bmw-prod/0f403530-96f5-455a-8a39-b31ac68b6ed5.glb\"\n        }\n      };\n      this._materials = [];\n      this._boundingBox = new _oasisEngine.BoundingBox();\n      this._center = new _oasisEngine.Vector3();\n      this._extent = new _oasisEngine.Vector3();\n      this.initResources().then(function () {\n        _this.initScene();\n\n        _this.addGLTFList();\n\n        _this.addSceneGUI();\n      });\n    }\n\n    var _proto = Oasis.prototype;\n\n    _proto.initResources = function initResources() {\n      var _this2 = this;\n\n      var names = Object.keys(envList);\n      return new Promise(function (resolve) {\n        _this2.engine.resourceManager.load(names.map(function (name) {\n          return {\n            type: _oasisEngine.AssetType.Env,\n            url: envList[name]\n          };\n        })).then(function (envs) {\n          envs.forEach(function (env, index) {\n            var name = names[index];\n            _this2.env[name] = env;\n\n            if (name === _this2.state.env) {\n              _this2.scene.ambientLight = env;\n              _this2.skyMaterial.textureCubeMap = env.specularTexture;\n              _this2.skyMaterial.textureDecodeRGBM = true;\n            }\n          });\n          resolve(true);\n        });\n      });\n    };\n\n    _proto.initScene = function initScene() {\n      this.engine.canvas.resizeByClientSize();\n      this.controler.minDistance = 0; // debug sync\n\n      if (this.state.background) {\n        this.scene.background.mode = _oasisEngine.BackgroundMode.Sky;\n      }\n\n      if (!this.state.addLights) {\n        this.light1.enabled = this.light2.enabled = false;\n      }\n\n      this.light1.intensity = this.light2.intensity = this.state.lightIntensity;\n      this.lightEntity1.transform.setRotation(30, 0, 0);\n      this.lightEntity2.transform.setRotation(-30, 180, 0);\n      this.scene.ambientLight.specularIntensity = this.state.envIntensity;\n      this.scene.background.sky.material = this.skyMaterial;\n      this.scene.background.sky.mesh = _oasisEngine.PrimitiveMesh.createCuboid(this.engine, 1, 1, 1);\n      this.engine.run();\n    };\n\n    _proto.addGLTFList = function addGLTFList() {\n      var _this3 = this;\n\n      this.loadGLTF(this.state.gltfList[this.state.defaultGLTF]);\n      this.gui.add(this.state, \"defaultGLTF\", Object.keys(this.state.gltfList)).name(\"GLTF List\").onChange(function (v) {\n        _this3.loadGLTF(_this3.state.gltfList[v]);\n      });\n    };\n\n    _proto.addSceneGUI = function addSceneGUI() {\n      var _this4 = this;\n\n      var gui = this.gui; // Display controls.\n\n      var dispFolder = gui.addFolder(\"Scene\");\n      dispFolder.add(this.state, \"background\").onChange(function (v) {\n        if (v) {\n          _this4.scene.background.mode = _oasisEngine.BackgroundMode.Sky;\n        } else {\n          _this4.scene.background.mode = _oasisEngine.BackgroundMode.SolidColor;\n        }\n      }); // Lighting controls.\n\n      var lightFolder = gui.addFolder(\"Lighting\");\n      lightFolder.add(this.state, \"env\", [].concat(Object.keys(this.env))).name(\"IBL\").onChange(function (v) {\n        _this4.scene.ambientLight = _this4.env[v];\n        _this4.skyMaterial.textureCubeMap = _this4.env[v].specularTexture;\n      });\n      lightFolder.add(this.state, \"addLights\").onChange(function (v) {\n        _this4.light1.enabled = _this4.light2.enabled = v;\n      }).name(\"直接光\");\n      lightFolder.addColor(this.state, \"lightColor\").onChange(function (v) {\n        Oasis.guiToColor(v, _this4.light1.color);\n        Oasis.guiToColor(v, _this4.light2.color);\n      });\n      lightFolder.add(this.state, \"lightIntensity\", 0, 2).onChange(function (v) {\n        _this4.light1.intensity = _this4.light2.intensity = v;\n      }).name(\"直接光强度\");\n    };\n\n    _proto.setCenter = function setCenter(renderers) {\n      var boundingBox = this._boundingBox;\n      var center = this._center;\n      var extent = this._extent;\n      boundingBox.min.setValue(0, 0, 0);\n      boundingBox.max.setValue(0, 0, 0);\n      renderers.forEach(function (renderer) {\n        _oasisEngine.BoundingBox.merge(renderer.bounds, boundingBox, boundingBox);\n      });\n      boundingBox.getExtent(extent);\n      var size = extent.length();\n      boundingBox.getCenter(center);\n      this.controler.target.setValue(center.x, center.y, center.z);\n      this.cameraEntity.transform.setPosition(center.x, center.y, size * 3);\n      this.camera.farClipPlane = size * 12;\n\n      if (this.camera.nearClipPlane > size) {\n        this.camera.nearClipPlane = size / 10;\n      } else {\n        this.camera.nearClipPlane = 0.1;\n      }\n\n      this.controler.maxDistance = size * 10;\n    };\n\n    _proto.loadGLTF = function loadGLTF(url) {\n      var _this5 = this;\n\n      this.destroyGLTF();\n      var isGLB = /.glb$/.test(url);\n      this.engine.resourceManager.load({\n        type: _oasisEngine.AssetType.Prefab,\n        url: url + \"#\" + Math.random() + \".\" + (isGLB ? \"glb\" : \"gltf\") // @todo: resourceManager cache bug\n\n      }).then(function (asset) {\n        var defaultSceneRoot = asset.defaultSceneRoot,\n            materials = asset.materials,\n            animations = asset.animations;\n        console.log(asset);\n        _this5.gltfRootEntity = defaultSceneRoot;\n\n        _this5.rootEntity.addChild(defaultSceneRoot);\n\n        var meshRenderers = [];\n        var skinnedMeshRenderers = [];\n        defaultSceneRoot.getComponentsIncludeChildren(_oasisEngine.MeshRenderer, meshRenderers);\n        defaultSceneRoot.getComponentsIncludeChildren(_oasisEngine.SkinnedMeshRenderer, skinnedMeshRenderers);\n\n        _this5.setCenter(meshRenderers.concat(skinnedMeshRenderers));\n\n        _this5.loadMaterialGUI(materials);\n\n        _this5.loadAnimationGUI(animations);\n      })[\"catch\"](function (e) {\n        console.error(e);\n      });\n    };\n\n    _proto.destroyGLTF = function destroyGLTF() {\n      this.gltfRootEntity.destroy();\n    };\n\n    _proto.loadMaterialGUI = function loadMaterialGUI(materials) {\n      var _this6 = this;\n\n      var gui = this.gui;\n\n      if (this.materialFolder) {\n        gui.removeFolder(this.materialFolder);\n        this.materialFolder = null;\n      }\n\n      if (!materials) {\n        materials = this._materials;\n      }\n\n      this._materials = materials;\n      if (!materials.length) return;\n      var folder = this.materialFolder = gui.addFolder(\"Material\");\n      var folderName = {};\n      materials.forEach(function (material) {\n        if (!(material instanceof _oasisEngine.PBRBaseMaterial) && !(material instanceof _oasisEngine.UnlitMaterial)) return;\n\n        if (!material.name) {\n          material.name = \"default\";\n        }\n\n        var state = {\n          opacity: material.baseColor.a,\n          baseColor: Oasis.colorToGui(material.baseColor),\n          emissiveColor: Oasis.colorToGui(material.emissiveColor),\n          specularColor: Oasis.colorToGui(material.specularColor),\n          baseTexture: material.baseTexture ? \"origin\" : \"\",\n          roughnessMetallicTexture: material.roughnessMetallicTexture ? \"origin\" : \"\",\n          normalTexture: material.normalTexture ? \"origin\" : \"\",\n          emissiveTexture: material.emissiveTexture ? \"origin\" : \"\",\n          occlusionTexture: material.occlusionTexture ? \"origin\" : \"\",\n          specularGlossinessTexture: material.specularGlossinessTexture ? \"origin\" : \"\"\n        };\n        var originTexture = {\n          baseTexture: material.baseTexture,\n          roughnessMetallicTexture: material.roughnessMetallicTexture,\n          normalTexture: material.normalTexture,\n          emissiveTexture: material.emissiveTexture,\n          occlusionTexture: material.occlusionTexture,\n          specularGlossinessTexture: material.specularGlossinessTexture\n        };\n        var f = folder.addFolder(folderName[material.name] ? material.name + \"_\" + (folderName[material.name] + 1) : material.name);\n        folderName[material.name] = folderName[material.name] == null ? 1 : folderName[material.name] + 1; // metallic\n\n        if (material instanceof _oasisEngine.PBRMaterial) {\n          var mode1 = f.addFolder(\"金属模式\");\n          mode1.add(material, \"metallic\", 0, 1).step(0.01);\n          mode1.add(material, \"roughness\", 0, 1).step(0.01);\n          mode1.add(state, \"roughnessMetallicTexture\", [\"None\", \"origin\"].concat(Object.keys(_this6.textures))).onChange(function (v) {\n            material.roughnessMetallicTexture = v === \"None\" ? null : _this6.textures[v] || originTexture.roughnessMetallicTexture;\n          });\n          mode1.open();\n        } // specular\n        else if (material instanceof _oasisEngine.PBRSpecularMaterial) {\n          var mode2 = f.addFolder(\"高光模式\");\n          mode2.add(material, \"glossiness\", 0, 1).step(0.01);\n          mode2.addColor(state, \"specularColor\").onChange(function (v) {\n            Oasis.guiToColor(v, material.specularColor);\n          });\n          mode2.add(state, \"specularGlossinessTexture\", [\"None\", \"origin\"].concat(Object.keys(_this6.textures))).onChange(function (v) {\n            material.specularGlossinessTexture = v === \"None\" ? null : _this6.textures[v] || originTexture.specularGlossinessTexture;\n          });\n          mode2.open();\n        } else if (material instanceof _oasisEngine.UnlitMaterial) {\n          f.add(state, \"baseTexture\", [\"None\", \"origin\"].concat(Object.keys(_this6.textures))).onChange(function (v) {\n            material.baseTexture = v === \"None\" ? null : _this6.textures[v] || originTexture.baseTexture;\n          });\n          f.addColor(state, \"baseColor\").onChange(function (v) {\n            Oasis.guiToColor(v, material.baseColor);\n          });\n        } // common\n\n\n        if (!(material instanceof _oasisEngine.UnlitMaterial)) {\n          var common = f.addFolder(\"通用\");\n          common.add(state, \"opacity\", 0, 1).step(0.01).onChange(function (v) {\n            material.baseColor.a = v;\n          });\n          common.add(material, \"isTransparent\");\n          common.add(material, \"alphaCutoff\", 0, 1).step(0.01);\n          common.addColor(state, \"baseColor\").onChange(function (v) {\n            Oasis.guiToColor(v, material.baseColor);\n          });\n          common.addColor(state, \"emissiveColor\").onChange(function (v) {\n            Oasis.guiToColor(v, material.emissiveColor);\n          });\n          common.add(state, \"baseTexture\", [\"None\", \"origin\"].concat(Object.keys(_this6.textures))).onChange(function (v) {\n            material.baseTexture = v === \"None\" ? null : _this6.textures[v] || originTexture.baseTexture;\n          });\n          common.add(state, \"normalTexture\", [\"None\", \"origin\"].concat(Object.keys(_this6.textures))).onChange(function (v) {\n            material.normalTexture = v === \"None\" ? null : _this6.textures[v] || originTexture.normalTexture;\n          });\n          common.add(state, \"emissiveTexture\", [\"None\", \"origin\"].concat(Object.keys(_this6.textures))).onChange(function (v) {\n            material.emissiveTexture = v === \"None\" ? null : _this6.textures[v] || originTexture.emissiveTexture;\n          });\n          common.add(state, \"occlusionTexture\", [\"None\", \"origin\"].concat(Object.keys(_this6.textures))).onChange(function (v) {\n            material.occlusionTexture = v === \"None\" ? null : _this6.textures[v] || originTexture.occlusionTexture;\n          });\n          common.open();\n        }\n      });\n    };\n\n    _proto.loadAnimationGUI = function loadAnimationGUI(animations) {\n      if (this.animationFolder) {\n        this.gui.removeFolder(this.animationFolder);\n        this.animationFolder = null;\n      }\n\n      if (animations != null && animations.length) {\n        this.animationFolder = this.gui.addFolder(\"Animation\");\n        this.animationFolder.open();\n        var animator = this.gltfRootEntity.getComponent(_oasisEngine.Animator);\n        animator.play(animations[0].name);\n        var state = {\n          animation: animations[0].name\n        };\n        this.animationFolder.add(state, \"animation\", [\"None\"].concat(animations.map(function (animation) {\n          return animation.name;\n        }))).onChange(function (name) {\n          if (name === \"None\") {\n            animator.speed = 0;\n          } else {\n            animator.speed = 1;\n            animator.play(name);\n          }\n        });\n      }\n    };\n\n    return Oasis;\n  }();\n\n  new Oasis();\n});"},"name":"gltf-loader","title":"GLTF Loader","category":"Advance","id":"201a5a32-f3d6-5a31-8ca6-0d20e89d6e08","sourceCode":"/**\n * @title GLTF Loader\n * @category Advance\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\nimport {\n  AmbientLight,\n  AnimationClip,\n  Animator,\n  AssetType,\n  BackgroundMode,\n  BoundingBox,\n  Camera,\n  Color,\n  DirectLight,\n  Entity,\n  GLTFResource,\n  Logger,\n  Material,\n  MeshRenderer,\n  PBRBaseMaterial,\n  PBRMaterial,\n  PBRSpecularMaterial,\n  PrimitiveMesh,\n  Renderer,\n  Scene,\n  SkinnedMeshRenderer,\n  SkyBoxMaterial,\n  Texture2D,\n  UnlitMaterial,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\n\nLogger.enable();\n\nconst envList = {\n  sunset: \"https://gw.alipayobjects.com/os/bmw-prod/34986a5b-fa16-40f1-83c8-1885efe855d2.bin\",\n  pisa: \"https://gw.alipayobjects.com/os/bmw-prod/258a783d-0673-4b47-907a-da17b882feee.bin\",\n  foot: \"https://gw.alipayobjects.com/os/bmw-prod/f369110c-0e33-47eb-8296-756e9c80f254.bin\"\n};\n\nclass Oasis {\n  static guiToColor(gui: number[], color: Color) {\n    color.setValue(gui[0] / 255, gui[1] / 255, gui[2] / 255, color.a);\n  }\n\n  static colorToGui(color: Color = new Color(1, 1, 1)): number[] {\n    const v = [];\n    v[0] = color.r * 255;\n    v[1] = color.g * 255;\n    v[2] = color.b * 255;\n    return v;\n  }\n\n  textures: Record<string, Texture2D> = {};\n  env: Record<string, AmbientLight> = {};\n\n  engine: WebGLEngine = new WebGLEngine(\"canvas\");\n  scene: Scene = this.engine.sceneManager.activeScene;\n  skyMaterial: SkyBoxMaterial = new SkyBoxMaterial(this.engine);\n\n  // Entity\n  rootEntity: Entity = this.scene.createRootEntity(\"root\");\n  cameraEntity: Entity = this.rootEntity.createChild(\"camera\");\n  gltfRootEntity: Entity = this.rootEntity.createChild(\"gltf\");\n  lightEntity1: Entity = this.rootEntity.createChild(\"direct_light1\");\n  lightEntity2: Entity = this.rootEntity.createChild(\"direct_light2\");\n\n  // Component\n  camera: Camera = this.cameraEntity.addComponent(Camera);\n  controler: OrbitControl = this.cameraEntity.addComponent(OrbitControl);\n  light1: DirectLight = this.lightEntity1.addComponent(DirectLight);\n  light2: DirectLight = this.lightEntity2.addComponent(DirectLight);\n\n  // Debug\n  gui = new dat.GUI();\n  materialFolder = null;\n  animationFolder = null;\n  state = {\n    // Scene\n    background: false,\n    // Lights\n    env: \"sunset\",\n    envIntensity: 1,\n    addLights: true,\n    lightColor: Oasis.colorToGui(new Color(1, 1, 1)),\n    lightIntensity: 0.8,\n    // GLTF Model List\n    defaultGLTF: \"fox\",\n    gltfList: {\n      \"2CylinderEngine\": \"https://gw.alipayobjects.com/os/bmw-prod/48a1e8b3-06b4-4269-807d-79274e58283a.glb\",\n      alphaBlendModeTest: \"https://gw.alipayobjects.com/os/bmw-prod/d099b30b-59a3-42e4-99eb-b158afa8e65d.glb\",\n      animatedCube: \"https://gw.alipayobjects.com/os/bmw-prod/8cc524dd-2481-438d-8374-3c933adea3b6.gltf\",\n      antiqueCamera: \"https://gw.alipayobjects.com/os/bmw-prod/93196534-bab3-4559-ae9f-bcb3e36a6419.glb\",\n      avocado: \"https://gw.alipayobjects.com/os/bmw-prod/0f978c4d-1cd6-4cec-9a4c-b58c8186e063.glb\",\n      avocado_draco: \"https://gw.alipayobjects.com/os/bmw-prod/b3b73614-cf06-4f41-940d-c1bc04cf6410.gltf\",\n      avocado_specular: \"https://gw.alipayobjects.com/os/bmw-prod/3cf50452-0015-461e-a172-7ea1f8135e53.gltf\",\n      avocado_quantized: \"https://gw.alipayobjects.com/os/bmw-prod/6aff5409-8e82-4e77-a6ac-55b6adfd0cf5.gltf\",\n      barramundiFish: \"https://gw.alipayobjects.com/os/bmw-prod/79d7935c-404b-4d8d-9ad3-5f8c273f0e4a.glb\",\n      boomBox: \"https://gw.alipayobjects.com/os/bmw-prod/2e98b1c0-18e8-45d0-b54e-dcad6ef05e22.glb\",\n      boomBoxWithAxes: \"https://gw.alipayobjects.com/os/bmw-prod/96e1b8b2-9be6-4b64-98ea-8c008c6dc422.gltf\",\n      boxVertexColors: \"https://gw.alipayobjects.com/os/bmw-prod/6cff6fcb-5191-465e-9a38-dee42a07cc65.glb\",\n      brianStem: \"https://gw.alipayobjects.com/os/bmw-prod/e3b37dd9-9407-4b5c-91b3-c5880d081329.glb\",\n      buggy: \"https://gw.alipayobjects.com/os/bmw-prod/d6916a14-b004-42d5-86dd-d8520b719288.glb\",\n      cesiumMan: \"https://gw.alipayobjects.com/os/bmw-prod/3a7d9597-7354-4bef-b314-b84509bef9b6.glb\",\n      cesiumMilkTruck: \"https://gw.alipayobjects.com/os/bmw-prod/7701125a-7d0d-4281-a7d8-7f0dfc8d0792.glb\",\n      corset: \"https://gw.alipayobjects.com/os/bmw-prod/3deaa5a4-5b2a-4a0d-8512-a8c4377a08ff.glb\",\n      DamagedHelmet: \"https://gw.alipayobjects.com/os/bmw-prod/a1da72a4-023e-4bb1-9629-0f4b0f6b6fc4.glb\",\n      Duck: \"https://gw.alipayobjects.com/os/bmw-prod/6cb8f543-285c-491a-8cfd-57a1160dc9ab.glb\",\n      environmentTest: \"https://gw.alipayobjects.com/os/bmw-prod/7c7b887c-05d6-43dd-b354-216e738e81ed.gltf\",\n      flightHelmet: \"https://gw.alipayobjects.com/os/bmw-prod/d6dbf161-48e2-4e6d-bbca-c481ed9f1a2d.gltf\",\n      fox: \"https://gw.alipayobjects.com/os/bmw-prod/f40ef8dd-4c94-41d4-8fac-c1d2301b6e47.glb\",\n      animationInterpolationTest: \"https://gw.alipayobjects.com/os/bmw-prod/4f410ef2-20b4-494d-85f1-a806c5070bfb.glb\",\n      lantern: \"https://gw.alipayobjects.com/os/bmw-prod/9557420a-c622-4e9c-bb46-f7af8b19d7de.glb\",\n      materialsVariantsShoe: \"https://gw.alipayobjects.com/os/bmw-prod/b1a414bb-61ea-4667-94d2-ef6cf179ac0d.glb\",\n      metalRoughSpheres: \"https://gw.alipayobjects.com/os/bmw-prod/67b39ede-1c82-4321-8457-0ad83ca9413a.glb\",\n      normalTangentTest: \"https://gw.alipayobjects.com/os/bmw-prod/4bb1a66c-55e3-4898-97d7-a9cc0f239686.glb\",\n      normalTangentMirrorTest: \"https://gw.alipayobjects.com/os/bmw-prod/8335f555-2061-47f5-9252-366c6ebf882a.glb\",\n      orientationTest: \"https://gw.alipayobjects.com/os/bmw-prod/16cdf390-ac42-411c-9d2b-8e112dfd723b.glb\",\n      sparseTest: \"https://gw.alipayobjects.com/os/bmw-prod/f00de659-53ea-49d1-8f2c-d0a412542b80.gltf\",\n      specGlossVsMetalRough: \"https://gw.alipayobjects.com/os/bmw-prod/4643bd7b-f988-4144-8245-4a390023d92d.glb\",\n      sponza: \"https://gw.alipayobjects.com/os/bmw-prod/ca50859b-d736-4a3e-9fc3-241b0bd2afef.gltf\",\n      suzanne: \"https://gw.alipayobjects.com/os/bmw-prod/3869e495-2e04-4e80-9d22-13b37116379a.gltf\",\n      sheenChair: \"https://gw.alipayobjects.com/os/bmw-prod/34847225-bc1b-4bef-9cb9-6b9711ca2f8c.glb\",\n      sheenCloth: \"https://gw.alipayobjects.com/os/bmw-prod/4529d2e8-22a8-47af-9b38-8eaff835f6bf.gltf\",\n      textureCoordinateTest: \"https://gw.alipayobjects.com/os/bmw-prod/5fd23201-51dd-4eea-92d3-c4a72ecc1f2b.glb\",\n      textureEncodingTest: \"https://gw.alipayobjects.com/os/bmw-prod/b8795e57-3c2c-4412-b4f0-7ffa796e4917.glb\",\n      textureSettingTest: \"https://gw.alipayobjects.com/os/bmw-prod/a4b26d58-bd49-4051-8f05-0fe8b532e716.glb\",\n      textureTransformMultiTest: \"https://gw.alipayobjects.com/os/bmw-prod/8fa18786-5188-4c14-94d7-77bf6b8483f9.glb\",\n      textureTransform: \"https://gw.alipayobjects.com/os/bmw-prod/6c59d5d0-2e2e-4933-a737-006d431977fd.gltf\",\n      toyCar: \"https://gw.alipayobjects.com/os/bmw-prod/8138b7d7-45aa-494a-8aea-0c67598b96d2.glb\",\n      transmissionTest: \"https://gw.alipayobjects.com/os/bmw-prod/1dd51fe8-bdd3-42e4-99be-53de5dc106b8.glb\",\n      unlitTest: \"https://gw.alipayobjects.com/os/bmw-prod/06a855be-ac8c-4705-b5d7-659b8b391189.glb\",\n      vc: \"https://gw.alipayobjects.com/os/bmw-prod/b71c4212-25fb-41bb-af88-d79ce6d3cc58.glb\",\n      vertexColorTest: \"https://gw.alipayobjects.com/os/bmw-prod/8fc70cc6-66d8-43c8-b460-f7d2aaa9edcf.glb\",\n      waterBottle: \"https://gw.alipayobjects.com/os/bmw-prod/0f403530-96f5-455a-8a39-b31ac68b6ed5.glb\"\n    }\n  };\n  _materials: Material[] = [];\n\n  // temporary\n  _boundingBox: BoundingBox = new BoundingBox();\n  _center: Vector3 = new Vector3();\n  _extent: Vector3 = new Vector3();\n\n  constructor() {\n    this.initResources().then(() => {\n      this.initScene();\n      this.addGLTFList();\n      this.addSceneGUI();\n    });\n  }\n\n  initResources() {\n    const names = Object.keys(envList);\n\n    return new Promise((resolve) => {\n      this.engine.resourceManager\n        .load(\n          names.map((name) => {\n            return {\n              type: AssetType.Env,\n              url: envList[name]\n            };\n          })\n        )\n        .then((envs: AmbientLight[]) => {\n          envs.forEach((env: AmbientLight, index) => {\n            const name = names[index];\n            this.env[name] = env;\n\n            if (name === this.state.env) {\n              this.scene.ambientLight = env;\n              this.skyMaterial.textureCubeMap = env.specularTexture;\n              this.skyMaterial.textureDecodeRGBM = true;\n            }\n          });\n          resolve(true);\n        });\n    });\n  }\n\n  initScene() {\n    this.engine.canvas.resizeByClientSize();\n    this.controler.minDistance = 0;\n\n    // debug sync\n    if (this.state.background) {\n      this.scene.background.mode = BackgroundMode.Sky;\n    }\n    if (!this.state.addLights) {\n      this.light1.enabled = this.light2.enabled = false;\n    }\n    this.light1.intensity = this.light2.intensity = this.state.lightIntensity;\n    this.lightEntity1.transform.setRotation(30, 0, 0);\n    this.lightEntity2.transform.setRotation(-30, 180, 0);\n    this.scene.ambientLight.specularIntensity = this.state.envIntensity;\n    this.scene.background.sky.material = this.skyMaterial;\n    this.scene.background.sky.mesh = PrimitiveMesh.createCuboid(this.engine, 1, 1, 1);\n    this.engine.run();\n  }\n\n  addGLTFList() {\n    this.loadGLTF(this.state.gltfList[this.state.defaultGLTF]);\n    this.gui\n      .add(this.state, \"defaultGLTF\", Object.keys(this.state.gltfList))\n      .name(\"GLTF List\")\n      .onChange((v) => {\n        this.loadGLTF(this.state.gltfList[v]);\n      });\n  }\n\n  addSceneGUI() {\n    const { gui } = this;\n    // Display controls.\n    const dispFolder = gui.addFolder(\"Scene\");\n    dispFolder.add(this.state, \"background\").onChange((v: boolean) => {\n      if (v) {\n        this.scene.background.mode = BackgroundMode.Sky;\n      } else {\n        this.scene.background.mode = BackgroundMode.SolidColor;\n      }\n    });\n\n    // Lighting controls.\n    const lightFolder = gui.addFolder(\"Lighting\");\n    lightFolder\n      .add(this.state, \"env\", [...Object.keys(this.env)])\n      .name(\"IBL\")\n      .onChange((v) => {\n        this.scene.ambientLight = this.env[v];\n        this.skyMaterial.textureCubeMap = this.env[v].specularTexture;\n      });\n\n    lightFolder\n      .add(this.state, \"addLights\")\n      .onChange((v) => {\n        this.light1.enabled = this.light2.enabled = v;\n      })\n      .name(\"直接光\");\n    lightFolder.addColor(this.state, \"lightColor\").onChange((v) => {\n      Oasis.guiToColor(v, this.light1.color);\n      Oasis.guiToColor(v, this.light2.color);\n    });\n    lightFolder\n      .add(this.state, \"lightIntensity\", 0, 2)\n      .onChange((v) => {\n        this.light1.intensity = this.light2.intensity = v;\n      })\n      .name(\"直接光强度\");\n  }\n\n  setCenter(renderers: Renderer[]) {\n    const boundingBox = this._boundingBox;\n    const center = this._center;\n    const extent = this._extent;\n\n    boundingBox.min.setValue(0, 0, 0);\n    boundingBox.max.setValue(0, 0, 0);\n\n    renderers.forEach((renderer) => {\n      BoundingBox.merge(renderer.bounds, boundingBox, boundingBox);\n    });\n    boundingBox.getExtent(extent);\n    const size = extent.length();\n\n    boundingBox.getCenter(center);\n    this.controler.target.setValue(center.x, center.y, center.z);\n    this.cameraEntity.transform.setPosition(center.x, center.y, size * 3);\n\n    this.camera.farClipPlane = size * 12;\n\n    if (this.camera.nearClipPlane > size) {\n      this.camera.nearClipPlane = size / 10;\n    } else {\n      this.camera.nearClipPlane = 0.1;\n    }\n\n    this.controler.maxDistance = size * 10;\n  }\n\n  loadGLTF(url: string) {\n    this.destroyGLTF();\n    const isGLB = /.glb$/.test(url);\n    this.engine.resourceManager\n      .load<GLTFResource>({\n        type: AssetType.Prefab,\n        url: `${url}#${Math.random()}.${isGLB ? \"glb\" : \"gltf\"}` // @todo: resourceManager cache bug\n      })\n      .then((asset) => {\n        const { defaultSceneRoot, materials, animations } = asset;\n        console.log(asset);\n        this.gltfRootEntity = defaultSceneRoot;\n        this.rootEntity.addChild(defaultSceneRoot);\n\n        const meshRenderers = [];\n        const skinnedMeshRenderers = [];\n        defaultSceneRoot.getComponentsIncludeChildren(MeshRenderer, meshRenderers);\n        defaultSceneRoot.getComponentsIncludeChildren(SkinnedMeshRenderer, skinnedMeshRenderers);\n\n        this.setCenter(meshRenderers.concat(skinnedMeshRenderers));\n        this.loadMaterialGUI(materials);\n        this.loadAnimationGUI(animations);\n      })\n      .catch((e) => {\n        console.error(e);\n      });\n  }\n\n  destroyGLTF() {\n    this.gltfRootEntity.destroy();\n  }\n\n  loadMaterialGUI(materials?: Material[]) {\n    const { gui } = this;\n    if (this.materialFolder) {\n      gui.removeFolder(this.materialFolder);\n      this.materialFolder = null;\n    }\n    if (!materials) {\n      materials = this._materials;\n    }\n    this._materials = materials;\n    if (!materials.length) return;\n\n    const folder = (this.materialFolder = gui.addFolder(\"Material\"));\n    const folderName = {};\n\n    materials.forEach((material) => {\n      if (!(material instanceof PBRBaseMaterial) && !(material instanceof UnlitMaterial)) return;\n      if (!material.name) {\n        material.name = \"default\";\n      }\n      const state = {\n        opacity: material.baseColor.a,\n        baseColor: Oasis.colorToGui(material.baseColor),\n        emissiveColor: Oasis.colorToGui((material as PBRBaseMaterial).emissiveColor),\n        specularColor: Oasis.colorToGui((material as PBRSpecularMaterial).specularColor),\n        baseTexture: material.baseTexture ? \"origin\" : \"\",\n        roughnessMetallicTexture: (material as PBRMaterial).roughnessMetallicTexture ? \"origin\" : \"\",\n        normalTexture: (material as PBRBaseMaterial).normalTexture ? \"origin\" : \"\",\n        emissiveTexture: (material as PBRBaseMaterial).emissiveTexture ? \"origin\" : \"\",\n        occlusionTexture: (material as PBRBaseMaterial).occlusionTexture ? \"origin\" : \"\",\n        specularGlossinessTexture: (material as PBRSpecularMaterial).specularGlossinessTexture ? \"origin\" : \"\"\n      };\n\n      const originTexture = {\n        baseTexture: material.baseTexture,\n        roughnessMetallicTexture: (material as PBRMaterial).roughnessMetallicTexture,\n        normalTexture: (material as PBRBaseMaterial).normalTexture,\n        emissiveTexture: (material as PBRBaseMaterial).emissiveTexture,\n        occlusionTexture: (material as PBRBaseMaterial).occlusionTexture,\n        specularGlossinessTexture: (material as PBRSpecularMaterial).specularGlossinessTexture\n      };\n\n      const f = folder.addFolder(\n        folderName[material.name] ? `${material.name}_${folderName[material.name] + 1}` : material.name\n      );\n\n      folderName[material.name] = folderName[material.name] == null ? 1 : folderName[material.name] + 1;\n\n      // metallic\n      if (material instanceof PBRMaterial) {\n        const mode1 = f.addFolder(\"金属模式\");\n        mode1.add(material, \"metallic\", 0, 1).step(0.01);\n        mode1.add(material, \"roughness\", 0, 1).step(0.01);\n        mode1\n          .add(state, \"roughnessMetallicTexture\", [\"None\", \"origin\", ...Object.keys(this.textures)])\n          .onChange((v) => {\n            material.roughnessMetallicTexture =\n              v === \"None\" ? null : this.textures[v] || originTexture.roughnessMetallicTexture;\n          });\n        mode1.open();\n      }\n      // specular\n      else if (material instanceof PBRSpecularMaterial) {\n        const mode2 = f.addFolder(\"高光模式\");\n        mode2.add(material, \"glossiness\", 0, 1).step(0.01);\n        mode2.addColor(state, \"specularColor\").onChange((v) => {\n          Oasis.guiToColor(v, material.specularColor);\n        });\n        mode2\n          .add(state, \"specularGlossinessTexture\", [\"None\", \"origin\", ...Object.keys(this.textures)])\n          .onChange((v) => {\n            material.specularGlossinessTexture =\n              v === \"None\" ? null : this.textures[v] || originTexture.specularGlossinessTexture;\n          });\n        mode2.open();\n      } else if (material instanceof UnlitMaterial) {\n        f.add(state, \"baseTexture\", [\"None\", \"origin\", ...Object.keys(this.textures)]).onChange((v) => {\n          material.baseTexture = v === \"None\" ? null : this.textures[v] || originTexture.baseTexture;\n        });\n\n        f.addColor(state, \"baseColor\").onChange((v) => {\n          Oasis.guiToColor(v, material.baseColor);\n        });\n      }\n\n      // common\n      if (!(material instanceof UnlitMaterial)) {\n        const common = f.addFolder(\"通用\");\n\n        common\n          .add(state, \"opacity\", 0, 1)\n          .step(0.01)\n          .onChange((v) => {\n            material.baseColor.a = v;\n          });\n        common.add(material, \"isTransparent\");\n        common.add(material, \"alphaCutoff\", 0, 1).step(0.01);\n\n        common.addColor(state, \"baseColor\").onChange((v) => {\n          Oasis.guiToColor(v, material.baseColor);\n        });\n        common.addColor(state, \"emissiveColor\").onChange((v) => {\n          Oasis.guiToColor(v, material.emissiveColor);\n        });\n        common.add(state, \"baseTexture\", [\"None\", \"origin\", ...Object.keys(this.textures)]).onChange((v) => {\n          material.baseTexture = v === \"None\" ? null : this.textures[v] || originTexture.baseTexture;\n        });\n        common.add(state, \"normalTexture\", [\"None\", \"origin\", ...Object.keys(this.textures)]).onChange((v) => {\n          material.normalTexture = v === \"None\" ? null : this.textures[v] || originTexture.normalTexture;\n        });\n        common.add(state, \"emissiveTexture\", [\"None\", \"origin\", ...Object.keys(this.textures)]).onChange((v) => {\n          material.emissiveTexture = v === \"None\" ? null : this.textures[v] || originTexture.emissiveTexture;\n        });\n        common.add(state, \"occlusionTexture\", [\"None\", \"origin\", ...Object.keys(this.textures)]).onChange((v) => {\n          material.occlusionTexture = v === \"None\" ? null : this.textures[v] || originTexture.occlusionTexture;\n        });\n        common.open();\n      }\n    });\n  }\n\n  loadAnimationGUI(animations: AnimationClip[]) {\n    if (this.animationFolder) {\n      this.gui.removeFolder(this.animationFolder);\n      this.animationFolder = null;\n    }\n\n    if (animations?.length) {\n      this.animationFolder = this.gui.addFolder(\"Animation\");\n      this.animationFolder.open();\n      const animator = this.gltfRootEntity.getComponent(Animator);\n      animator.play(animations[0].name);\n      const state = {\n        animation: animations[0].name\n      };\n      this.animationFolder\n        .add(state, \"animation\", [\"None\", ...animations.map((animation) => animation.name)])\n        .onChange((name) => {\n          if (name === \"None\") {\n            animator.speed = 0;\n          } else {\n            animator.speed = 1;\n            animator.play(name);\n          }\n        });\n    }\n  }\n}\n\nnew Oasis();\n","formatedCode":"<span class=\"token comment\">/**\n * @title GLTF Loader\n * @category Advance\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AmbientLight<span class=\"token punctuation\">,</span>\n  AnimationClip<span class=\"token punctuation\">,</span>\n  Animator<span class=\"token punctuation\">,</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  BackgroundMode<span class=\"token punctuation\">,</span>\n  BoundingBox<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  Color<span class=\"token punctuation\">,</span>\n  DirectLight<span class=\"token punctuation\">,</span>\n  Entity<span class=\"token punctuation\">,</span>\n  GLTFResource<span class=\"token punctuation\">,</span>\n  Logger<span class=\"token punctuation\">,</span>\n  Material<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  PBRBaseMaterial<span class=\"token punctuation\">,</span>\n  PBRMaterial<span class=\"token punctuation\">,</span>\n  PBRSpecularMaterial<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  Renderer<span class=\"token punctuation\">,</span>\n  Scene<span class=\"token punctuation\">,</span>\n  SkinnedMeshRenderer<span class=\"token punctuation\">,</span>\n  SkyBoxMaterial<span class=\"token punctuation\">,</span>\n  Texture2D<span class=\"token punctuation\">,</span>\n  UnlitMaterial<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\nLogger<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> envList <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  sunset<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/34986a5b-fa16-40f1-83c8-1885efe855d2.bin\"</span><span class=\"token punctuation\">,</span>\n  pisa<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/258a783d-0673-4b47-907a-da17b882feee.bin\"</span><span class=\"token punctuation\">,</span>\n  foot<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/f369110c-0e33-47eb-8296-756e9c80f254.bin\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Oasis</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> <span class=\"token function\">guiToColor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">gui<span class=\"token operator\">:</span> number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">:</span> Color</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    color<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>gui<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> gui<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> gui<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">static</span> <span class=\"token function\">colorToGui</span><span class=\"token punctuation\">(</span>color<span class=\"token operator\">:</span> Color <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> v <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span>r <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n    v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span>g <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n    v<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span>b <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> v<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  textures<span class=\"token operator\">:</span> Record<span class=\"token operator\">&lt;</span>string<span class=\"token punctuation\">,</span> Texture2D<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  env<span class=\"token operator\">:</span> Record<span class=\"token operator\">&lt;</span>string<span class=\"token punctuation\">,</span> AmbientLight<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  engine<span class=\"token operator\">:</span> WebGLEngine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  scene<span class=\"token operator\">:</span> Scene <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n  skyMaterial<span class=\"token operator\">:</span> SkyBoxMaterial <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SkyBoxMaterial</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Entity</span>\n  rootEntity<span class=\"token operator\">:</span> Entity <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraEntity<span class=\"token operator\">:</span> Entity <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gltfRootEntity<span class=\"token operator\">:</span> Entity <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gltf\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  lightEntity1<span class=\"token operator\">:</span> Entity <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"direct_light1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  lightEntity2<span class=\"token operator\">:</span> Entity <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"direct_light2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Component</span>\n  camera<span class=\"token operator\">:</span> Camera <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  controler<span class=\"token operator\">:</span> OrbitControl <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  light1<span class=\"token operator\">:</span> DirectLight <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lightEntity1<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  light2<span class=\"token operator\">:</span> DirectLight <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lightEntity2<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Debug</span>\n  gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  materialFolder <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  animationFolder <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Scene</span>\n    background<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// Lights</span>\n    env<span class=\"token operator\">:</span> <span class=\"token string\">\"sunset\"</span><span class=\"token punctuation\">,</span>\n    envIntensity<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    addLights<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    lightColor<span class=\"token operator\">:</span> Oasis<span class=\"token punctuation\">.</span><span class=\"token function\">colorToGui</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    lightIntensity<span class=\"token operator\">:</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// GLTF Model List</span>\n    defaultGLTF<span class=\"token operator\">:</span> <span class=\"token string\">\"fox\"</span><span class=\"token punctuation\">,</span>\n    gltfList<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"2CylinderEngine\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/48a1e8b3-06b4-4269-807d-79274e58283a.glb\"</span><span class=\"token punctuation\">,</span>\n      alphaBlendModeTest<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/d099b30b-59a3-42e4-99eb-b158afa8e65d.glb\"</span><span class=\"token punctuation\">,</span>\n      animatedCube<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/8cc524dd-2481-438d-8374-3c933adea3b6.gltf\"</span><span class=\"token punctuation\">,</span>\n      antiqueCamera<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/93196534-bab3-4559-ae9f-bcb3e36a6419.glb\"</span><span class=\"token punctuation\">,</span>\n      avocado<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/0f978c4d-1cd6-4cec-9a4c-b58c8186e063.glb\"</span><span class=\"token punctuation\">,</span>\n      avocado_draco<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/b3b73614-cf06-4f41-940d-c1bc04cf6410.gltf\"</span><span class=\"token punctuation\">,</span>\n      avocado_specular<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/3cf50452-0015-461e-a172-7ea1f8135e53.gltf\"</span><span class=\"token punctuation\">,</span>\n      avocado_quantized<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/6aff5409-8e82-4e77-a6ac-55b6adfd0cf5.gltf\"</span><span class=\"token punctuation\">,</span>\n      barramundiFish<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/79d7935c-404b-4d8d-9ad3-5f8c273f0e4a.glb\"</span><span class=\"token punctuation\">,</span>\n      boomBox<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/2e98b1c0-18e8-45d0-b54e-dcad6ef05e22.glb\"</span><span class=\"token punctuation\">,</span>\n      boomBoxWithAxes<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/96e1b8b2-9be6-4b64-98ea-8c008c6dc422.gltf\"</span><span class=\"token punctuation\">,</span>\n      boxVertexColors<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/6cff6fcb-5191-465e-9a38-dee42a07cc65.glb\"</span><span class=\"token punctuation\">,</span>\n      brianStem<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/e3b37dd9-9407-4b5c-91b3-c5880d081329.glb\"</span><span class=\"token punctuation\">,</span>\n      buggy<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/d6916a14-b004-42d5-86dd-d8520b719288.glb\"</span><span class=\"token punctuation\">,</span>\n      cesiumMan<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/3a7d9597-7354-4bef-b314-b84509bef9b6.glb\"</span><span class=\"token punctuation\">,</span>\n      cesiumMilkTruck<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/7701125a-7d0d-4281-a7d8-7f0dfc8d0792.glb\"</span><span class=\"token punctuation\">,</span>\n      corset<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/3deaa5a4-5b2a-4a0d-8512-a8c4377a08ff.glb\"</span><span class=\"token punctuation\">,</span>\n      DamagedHelmet<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/a1da72a4-023e-4bb1-9629-0f4b0f6b6fc4.glb\"</span><span class=\"token punctuation\">,</span>\n      Duck<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/6cb8f543-285c-491a-8cfd-57a1160dc9ab.glb\"</span><span class=\"token punctuation\">,</span>\n      environmentTest<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/7c7b887c-05d6-43dd-b354-216e738e81ed.gltf\"</span><span class=\"token punctuation\">,</span>\n      flightHelmet<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/d6dbf161-48e2-4e6d-bbca-c481ed9f1a2d.gltf\"</span><span class=\"token punctuation\">,</span>\n      fox<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/f40ef8dd-4c94-41d4-8fac-c1d2301b6e47.glb\"</span><span class=\"token punctuation\">,</span>\n      animationInterpolationTest<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/4f410ef2-20b4-494d-85f1-a806c5070bfb.glb\"</span><span class=\"token punctuation\">,</span>\n      lantern<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/9557420a-c622-4e9c-bb46-f7af8b19d7de.glb\"</span><span class=\"token punctuation\">,</span>\n      materialsVariantsShoe<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/b1a414bb-61ea-4667-94d2-ef6cf179ac0d.glb\"</span><span class=\"token punctuation\">,</span>\n      metalRoughSpheres<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/67b39ede-1c82-4321-8457-0ad83ca9413a.glb\"</span><span class=\"token punctuation\">,</span>\n      normalTangentTest<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/4bb1a66c-55e3-4898-97d7-a9cc0f239686.glb\"</span><span class=\"token punctuation\">,</span>\n      normalTangentMirrorTest<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/8335f555-2061-47f5-9252-366c6ebf882a.glb\"</span><span class=\"token punctuation\">,</span>\n      orientationTest<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/16cdf390-ac42-411c-9d2b-8e112dfd723b.glb\"</span><span class=\"token punctuation\">,</span>\n      sparseTest<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/f00de659-53ea-49d1-8f2c-d0a412542b80.gltf\"</span><span class=\"token punctuation\">,</span>\n      specGlossVsMetalRough<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/4643bd7b-f988-4144-8245-4a390023d92d.glb\"</span><span class=\"token punctuation\">,</span>\n      sponza<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/ca50859b-d736-4a3e-9fc3-241b0bd2afef.gltf\"</span><span class=\"token punctuation\">,</span>\n      suzanne<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/3869e495-2e04-4e80-9d22-13b37116379a.gltf\"</span><span class=\"token punctuation\">,</span>\n      sheenChair<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/34847225-bc1b-4bef-9cb9-6b9711ca2f8c.glb\"</span><span class=\"token punctuation\">,</span>\n      sheenCloth<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/4529d2e8-22a8-47af-9b38-8eaff835f6bf.gltf\"</span><span class=\"token punctuation\">,</span>\n      textureCoordinateTest<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/5fd23201-51dd-4eea-92d3-c4a72ecc1f2b.glb\"</span><span class=\"token punctuation\">,</span>\n      textureEncodingTest<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/b8795e57-3c2c-4412-b4f0-7ffa796e4917.glb\"</span><span class=\"token punctuation\">,</span>\n      textureSettingTest<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/a4b26d58-bd49-4051-8f05-0fe8b532e716.glb\"</span><span class=\"token punctuation\">,</span>\n      textureTransformMultiTest<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/8fa18786-5188-4c14-94d7-77bf6b8483f9.glb\"</span><span class=\"token punctuation\">,</span>\n      textureTransform<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/6c59d5d0-2e2e-4933-a737-006d431977fd.gltf\"</span><span class=\"token punctuation\">,</span>\n      toyCar<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/8138b7d7-45aa-494a-8aea-0c67598b96d2.glb\"</span><span class=\"token punctuation\">,</span>\n      transmissionTest<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/1dd51fe8-bdd3-42e4-99be-53de5dc106b8.glb\"</span><span class=\"token punctuation\">,</span>\n      unlitTest<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/06a855be-ac8c-4705-b5d7-659b8b391189.glb\"</span><span class=\"token punctuation\">,</span>\n      vc<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/b71c4212-25fb-41bb-af88-d79ce6d3cc58.glb\"</span><span class=\"token punctuation\">,</span>\n      vertexColorTest<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/8fc70cc6-66d8-43c8-b460-f7d2aaa9edcf.glb\"</span><span class=\"token punctuation\">,</span>\n      waterBottle<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/0f403530-96f5-455a-8a39-b31ac68b6ed5.glb\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  _materials<span class=\"token operator\">:</span> Material<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// temporary</span>\n  _boundingBox<span class=\"token operator\">:</span> BoundingBox <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BoundingBox</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  _center<span class=\"token operator\">:</span> Vector3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  _extent<span class=\"token operator\">:</span> Vector3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">initResources</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">initScene</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">addGLTFList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">addSceneGUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">initResources</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> names <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>envList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>engine<span class=\"token punctuation\">.</span>resourceManager\n        <span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>\n          names<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n              type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Env<span class=\"token punctuation\">,</span>\n              url<span class=\"token operator\">:</span> envList<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">envs<span class=\"token operator\">:</span> AmbientLight<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          envs<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">env<span class=\"token operator\">:</span> AmbientLight<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> names<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> env<span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>name <span class=\"token operator\">===</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>scene<span class=\"token punctuation\">.</span>ambientLight <span class=\"token operator\">=</span> env<span class=\"token punctuation\">;</span>\n              <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>skyMaterial<span class=\"token punctuation\">.</span>textureCubeMap <span class=\"token operator\">=</span> env<span class=\"token punctuation\">.</span>specularTexture<span class=\"token punctuation\">;</span>\n              <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>skyMaterial<span class=\"token punctuation\">.</span>textureDecodeRGBM <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">initScene</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>engine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>controler<span class=\"token punctuation\">.</span>minDistance <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// debug sync</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>background<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>scene<span class=\"token punctuation\">.</span>background<span class=\"token punctuation\">.</span>mode <span class=\"token operator\">=</span> BackgroundMode<span class=\"token punctuation\">.</span>Sky<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>addLights<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>light1<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>light2<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>light1<span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>light2<span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>lightIntensity<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lightEntity1<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setRotation</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lightEntity2<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setRotation</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">180</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>scene<span class=\"token punctuation\">.</span>ambientLight<span class=\"token punctuation\">.</span>specularIntensity <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>envIntensity<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>scene<span class=\"token punctuation\">.</span>background<span class=\"token punctuation\">.</span>sky<span class=\"token punctuation\">.</span>material <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>skyMaterial<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>scene<span class=\"token punctuation\">.</span>background<span class=\"token punctuation\">.</span>sky<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">addGLTFList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">loadGLTF</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>gltfList<span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>defaultGLTF<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gui\n      <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"defaultGLTF\"</span><span class=\"token punctuation\">,</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>gltfList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GLTF List\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">loadGLTF</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>gltfList<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">addSceneGUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> gui <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display controls.</span>\n    <span class=\"token keyword\">const</span> dispFolder <span class=\"token operator\">=</span> gui<span class=\"token punctuation\">.</span><span class=\"token function\">addFolder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Scene\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    dispFolder<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"background\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v<span class=\"token operator\">:</span> boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>scene<span class=\"token punctuation\">.</span>background<span class=\"token punctuation\">.</span>mode <span class=\"token operator\">=</span> BackgroundMode<span class=\"token punctuation\">.</span>Sky<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>scene<span class=\"token punctuation\">.</span>background<span class=\"token punctuation\">.</span>mode <span class=\"token operator\">=</span> BackgroundMode<span class=\"token punctuation\">.</span>SolidColor<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Lighting controls.</span>\n    <span class=\"token keyword\">const</span> lightFolder <span class=\"token operator\">=</span> gui<span class=\"token punctuation\">.</span><span class=\"token function\">addFolder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Lighting\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    lightFolder\n      <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"env\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"IBL\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>scene<span class=\"token punctuation\">.</span>ambientLight <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>skyMaterial<span class=\"token punctuation\">.</span>textureCubeMap <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>specularTexture<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    lightFolder\n      <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"addLights\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>light1<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>light2<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"直接光\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    lightFolder<span class=\"token punctuation\">.</span><span class=\"token function\">addColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"lightColor\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      Oasis<span class=\"token punctuation\">.</span><span class=\"token function\">guiToColor</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>light1<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      Oasis<span class=\"token punctuation\">.</span><span class=\"token function\">guiToColor</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>light2<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    lightFolder\n      <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"lightIntensity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>light1<span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>light2<span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"直接光强度\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">setCenter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">renderers<span class=\"token operator\">:</span> Renderer<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> boundingBox <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_boundingBox<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> center <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_center<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> extent <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_extent<span class=\"token punctuation\">;</span>\n\n    boundingBox<span class=\"token punctuation\">.</span>min<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    boundingBox<span class=\"token punctuation\">.</span>max<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    renderers<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">renderer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      BoundingBox<span class=\"token punctuation\">.</span><span class=\"token function\">merge</span><span class=\"token punctuation\">(</span>renderer<span class=\"token punctuation\">.</span>bounds<span class=\"token punctuation\">,</span> boundingBox<span class=\"token punctuation\">,</span> boundingBox<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    boundingBox<span class=\"token punctuation\">.</span><span class=\"token function\">getExtent</span><span class=\"token punctuation\">(</span>extent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> size <span class=\"token operator\">=</span> extent<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    boundingBox<span class=\"token punctuation\">.</span><span class=\"token function\">getCenter</span><span class=\"token punctuation\">(</span>center<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>controler<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>center<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> center<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> center<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>center<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> center<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> size <span class=\"token operator\">*</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>camera<span class=\"token punctuation\">.</span>farClipPlane <span class=\"token operator\">=</span> size <span class=\"token operator\">*</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>camera<span class=\"token punctuation\">.</span>nearClipPlane <span class=\"token operator\">></span> size<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>camera<span class=\"token punctuation\">.</span>nearClipPlane <span class=\"token operator\">=</span> size <span class=\"token operator\">/</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>camera<span class=\"token punctuation\">.</span>nearClipPlane <span class=\"token operator\">=</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>controler<span class=\"token punctuation\">.</span>maxDistance <span class=\"token operator\">=</span> size <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">loadGLTF</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">url<span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">destroyGLTF</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> isGLB <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">.glb$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>engine<span class=\"token punctuation\">.</span>resourceManager\n      <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>GLTFResource<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Prefab<span class=\"token punctuation\">,</span>\n        url<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">#</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>isGLB <span class=\"token operator\">?</span> <span class=\"token string\">\"glb\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"gltf\"</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token comment\">// @todo: resourceManager cache bug</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">asset</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> defaultSceneRoot<span class=\"token punctuation\">,</span> materials<span class=\"token punctuation\">,</span> animations <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> asset<span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>asset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gltfRootEntity <span class=\"token operator\">=</span> defaultSceneRoot<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>defaultSceneRoot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">const</span> meshRenderers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> skinnedMeshRenderers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        defaultSceneRoot<span class=\"token punctuation\">.</span><span class=\"token function\">getComponentsIncludeChildren</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">,</span> meshRenderers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        defaultSceneRoot<span class=\"token punctuation\">.</span><span class=\"token function\">getComponentsIncludeChildren</span><span class=\"token punctuation\">(</span>SkinnedMeshRenderer<span class=\"token punctuation\">,</span> skinnedMeshRenderers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setCenter</span><span class=\"token punctuation\">(</span>meshRenderers<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>skinnedMeshRenderers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">loadMaterialGUI</span><span class=\"token punctuation\">(</span>materials<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">loadAnimationGUI</span><span class=\"token punctuation\">(</span>animations<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">destroyGLTF</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gltfRootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">loadMaterialGUI</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">materials<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Material<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> gui <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>materialFolder<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      gui<span class=\"token punctuation\">.</span><span class=\"token function\">removeFolder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>materialFolder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>materialFolder <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>materials<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      materials <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_materials<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_materials <span class=\"token operator\">=</span> materials<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>materials<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> folder <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>materialFolder <span class=\"token operator\">=</span> gui<span class=\"token punctuation\">.</span><span class=\"token function\">addFolder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Material\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> folderName <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    materials<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">material</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>material <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">PBRBaseMaterial</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>material <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">UnlitMaterial</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>material<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        material<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"default\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        opacity<span class=\"token operator\">:</span> material<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">,</span>\n        baseColor<span class=\"token operator\">:</span> Oasis<span class=\"token punctuation\">.</span><span class=\"token function\">colorToGui</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        emissiveColor<span class=\"token operator\">:</span> Oasis<span class=\"token punctuation\">.</span><span class=\"token function\">colorToGui</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>material <span class=\"token keyword\">as</span> PBRBaseMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>emissiveColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        specularColor<span class=\"token operator\">:</span> Oasis<span class=\"token punctuation\">.</span><span class=\"token function\">colorToGui</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>material <span class=\"token keyword\">as</span> PBRSpecularMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>specularColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        baseTexture<span class=\"token operator\">:</span> material<span class=\"token punctuation\">.</span>baseTexture <span class=\"token operator\">?</span> <span class=\"token string\">\"origin\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n        roughnessMetallicTexture<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>material <span class=\"token keyword\">as</span> PBRMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>roughnessMetallicTexture <span class=\"token operator\">?</span> <span class=\"token string\">\"origin\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n        normalTexture<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>material <span class=\"token keyword\">as</span> PBRBaseMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>normalTexture <span class=\"token operator\">?</span> <span class=\"token string\">\"origin\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n        emissiveTexture<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>material <span class=\"token keyword\">as</span> PBRBaseMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>emissiveTexture <span class=\"token operator\">?</span> <span class=\"token string\">\"origin\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n        occlusionTexture<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>material <span class=\"token keyword\">as</span> PBRBaseMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>occlusionTexture <span class=\"token operator\">?</span> <span class=\"token string\">\"origin\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n        specularGlossinessTexture<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>material <span class=\"token keyword\">as</span> PBRSpecularMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>specularGlossinessTexture <span class=\"token operator\">?</span> <span class=\"token string\">\"origin\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">const</span> originTexture <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        baseTexture<span class=\"token operator\">:</span> material<span class=\"token punctuation\">.</span>baseTexture<span class=\"token punctuation\">,</span>\n        roughnessMetallicTexture<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>material <span class=\"token keyword\">as</span> PBRMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>roughnessMetallicTexture<span class=\"token punctuation\">,</span>\n        normalTexture<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>material <span class=\"token keyword\">as</span> PBRBaseMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>normalTexture<span class=\"token punctuation\">,</span>\n        emissiveTexture<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>material <span class=\"token keyword\">as</span> PBRBaseMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>emissiveTexture<span class=\"token punctuation\">,</span>\n        occlusionTexture<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>material <span class=\"token keyword\">as</span> PBRBaseMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>occlusionTexture<span class=\"token punctuation\">,</span>\n        specularGlossinessTexture<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>material <span class=\"token keyword\">as</span> PBRSpecularMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>specularGlossinessTexture\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">const</span> f <span class=\"token operator\">=</span> folder<span class=\"token punctuation\">.</span><span class=\"token function\">addFolder</span><span class=\"token punctuation\">(</span>\n        folderName<span class=\"token punctuation\">[</span>material<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>material<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">_</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>folderName<span class=\"token punctuation\">[</span>material<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token operator\">:</span> material<span class=\"token punctuation\">.</span>name\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      folderName<span class=\"token punctuation\">[</span>material<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> folderName<span class=\"token punctuation\">[</span>material<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> folderName<span class=\"token punctuation\">[</span>material<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// metallic</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>material <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">PBRMaterial</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> mode1 <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span><span class=\"token function\">addFolder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"金属模式\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mode1<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">,</span> <span class=\"token string\">\"metallic\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">step</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mode1<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">,</span> <span class=\"token string\">\"roughness\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">step</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mode1\n          <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"roughnessMetallicTexture\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"None\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"origin\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textures<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            material<span class=\"token punctuation\">.</span>roughnessMetallicTexture <span class=\"token operator\">=</span>\n              v <span class=\"token operator\">===</span> <span class=\"token string\">\"None\"</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textures<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> originTexture<span class=\"token punctuation\">.</span>roughnessMetallicTexture<span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mode1<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token comment\">// specular</span>\n      <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>material <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">PBRSpecularMaterial</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> mode2 <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span><span class=\"token function\">addFolder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"高光模式\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mode2<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">,</span> <span class=\"token string\">\"glossiness\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">step</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mode2<span class=\"token punctuation\">.</span><span class=\"token function\">addColor</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"specularColor\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          Oasis<span class=\"token punctuation\">.</span><span class=\"token function\">guiToColor</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> material<span class=\"token punctuation\">.</span>specularColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mode2\n          <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"specularGlossinessTexture\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"None\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"origin\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textures<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            material<span class=\"token punctuation\">.</span>specularGlossinessTexture <span class=\"token operator\">=</span>\n              v <span class=\"token operator\">===</span> <span class=\"token string\">\"None\"</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textures<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> originTexture<span class=\"token punctuation\">.</span>specularGlossinessTexture<span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mode2<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>material <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">UnlitMaterial</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        f<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"baseTexture\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"None\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"origin\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textures<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          material<span class=\"token punctuation\">.</span>baseTexture <span class=\"token operator\">=</span> v <span class=\"token operator\">===</span> <span class=\"token string\">\"None\"</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textures<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> originTexture<span class=\"token punctuation\">.</span>baseTexture<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        f<span class=\"token punctuation\">.</span><span class=\"token function\">addColor</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"baseColor\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          Oasis<span class=\"token punctuation\">.</span><span class=\"token function\">guiToColor</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> material<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token comment\">// common</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>material <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">UnlitMaterial</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> common <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span><span class=\"token function\">addFolder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"通用\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        common\n          <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"opacity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">step</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            material<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        common<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">,</span> <span class=\"token string\">\"isTransparent\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        common<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">,</span> <span class=\"token string\">\"alphaCutoff\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">step</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        common<span class=\"token punctuation\">.</span><span class=\"token function\">addColor</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"baseColor\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          Oasis<span class=\"token punctuation\">.</span><span class=\"token function\">guiToColor</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> material<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        common<span class=\"token punctuation\">.</span><span class=\"token function\">addColor</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"emissiveColor\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          Oasis<span class=\"token punctuation\">.</span><span class=\"token function\">guiToColor</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> material<span class=\"token punctuation\">.</span>emissiveColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        common<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"baseTexture\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"None\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"origin\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textures<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          material<span class=\"token punctuation\">.</span>baseTexture <span class=\"token operator\">=</span> v <span class=\"token operator\">===</span> <span class=\"token string\">\"None\"</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textures<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> originTexture<span class=\"token punctuation\">.</span>baseTexture<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        common<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"normalTexture\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"None\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"origin\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textures<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          material<span class=\"token punctuation\">.</span>normalTexture <span class=\"token operator\">=</span> v <span class=\"token operator\">===</span> <span class=\"token string\">\"None\"</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textures<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> originTexture<span class=\"token punctuation\">.</span>normalTexture<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        common<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"emissiveTexture\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"None\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"origin\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textures<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          material<span class=\"token punctuation\">.</span>emissiveTexture <span class=\"token operator\">=</span> v <span class=\"token operator\">===</span> <span class=\"token string\">\"None\"</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textures<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> originTexture<span class=\"token punctuation\">.</span>emissiveTexture<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        common<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"occlusionTexture\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"None\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"origin\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textures<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          material<span class=\"token punctuation\">.</span>occlusionTexture <span class=\"token operator\">=</span> v <span class=\"token operator\">===</span> <span class=\"token string\">\"None\"</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textures<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> originTexture<span class=\"token punctuation\">.</span>occlusionTexture<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        common<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">loadAnimationGUI</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">animations<span class=\"token operator\">:</span> AnimationClip<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>animationFolder<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gui<span class=\"token punctuation\">.</span><span class=\"token function\">removeFolder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>animationFolder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>animationFolder <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>animations<span class=\"token operator\">?.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>animationFolder <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gui<span class=\"token punctuation\">.</span><span class=\"token function\">addFolder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Animation\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>animationFolder<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> animator <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gltfRootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>Animator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      animator<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span>animations<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        animation<span class=\"token operator\">:</span> animations<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>animationFolder\n        <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"animation\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"None\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>animations<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">animation</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> animation<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>name <span class=\"token operator\">===</span> <span class=\"token string\">\"None\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            animator<span class=\"token punctuation\">.</span>speed <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            animator<span class=\"token punctuation\">.</span>speed <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            animator<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Oasis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title Light Type\n   * @category Light\n   */\n  var gui = new dat.GUI(); // Create engine object\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // Create Ground\n\n  var groundEntity = rootEntity.createChild(\"ground\");\n  var groundRenderer = groundEntity.addComponent(_oasisEngine.MeshRenderer);\n\n  var mesh = _oasisEngine.PrimitiveMesh.createPlane(engine, 100, 100);\n\n  var material = new _oasisEngine.BlinnPhongMaterial(engine);\n  material.renderFace = _oasisEngine.RenderFace.Double;\n  groundRenderer.mesh = mesh;\n  groundRenderer.setMaterial(material); // Create camera\n\n  var cameraNode = rootEntity.createChild(\"camera_node\");\n  cameraNode.transform.setPosition(0, 30, 50);\n  var camera = cameraNode.addComponent(_oasisEngine.Camera);\n  camera.farClipPlane = 200;\n  var control = cameraNode.addComponent(_controls.OrbitControl);\n  control.maxDistance = 100; // Create spot light\n\n  var lightEntity = rootEntity.createChild(\"light\");\n  var spotLight = lightEntity.addComponent(_oasisEngine.SpotLight);\n  var pointLight = lightEntity.addComponent(_oasisEngine.PointLight);\n  var directionalLight = lightEntity.addComponent(_oasisEngine.DirectLight);\n  var target = new _oasisEngine.Vector3(0, 0, 0);\n  var up = new _oasisEngine.Vector3(0, 1, 0);\n  var light = spotLight;\n  pointLight.enabled = false;\n  directionalLight.enabled = false;\n  lightEntity.transform.setPosition(20, 20, 0);\n  lightEntity.transform.lookAt(target, up);\n  var lightRenderer = lightEntity.addComponent(_oasisEngine.MeshRenderer);\n  lightRenderer.mesh = _oasisEngine.PrimitiveMesh.createSphere(engine, 1);\n  lightRenderer.setMaterial(new _oasisEngine.UnlitMaterial(engine)); // Debug\n\n  var debugInfo = {\n    type: \"SpotLight\",\n    angle: 30,\n    penumbra: 15,\n    x: 20,\n    y: 20,\n    z: 0\n  };\n  gui.add(debugInfo, \"type\", [\"DirectionalLight\", \"PointLight\", \"SpotLight\"]).onChange(function (v) {\n    light.enabled = false;\n    spotFolder.closed = true;\n\n    switch (v) {\n      case \"SpotLight\":\n        light = spotLight;\n        light.enabled = true;\n        spotFolder.closed = false;\n        break;\n\n      case \"DirectionalLight\":\n        light = directionalLight;\n        light.enabled = true;\n        break;\n\n      case \"PointLight\":\n        light = pointLight;\n        light.enabled = true;\n        break;\n    }\n  });\n  gui.add(light, \"distance\", 0, 100, 1);\n  var folder = gui.addFolder(\"位置\");\n  folder.open();\n  folder.add(debugInfo, \"x\", -100, 100).onChange(function (v) {\n    var last = lightEntity.transform.position;\n    lightEntity.transform.setPosition(v, last.y, last.z);\n    lightEntity.transform.lookAt(target, up);\n  });\n  folder.add(debugInfo, \"y\", 0, 100).onChange(function (v) {\n    var last = lightEntity.transform.position;\n    lightEntity.transform.setPosition(last.x, v, last.z);\n    lightEntity.transform.lookAt(target, up);\n  });\n  folder.add(debugInfo, \"z\", -100, 100).onChange(function (v) {\n    var last = lightEntity.transform.position;\n    lightEntity.transform.setPosition(last.x, last.y, v);\n    lightEntity.transform.lookAt(target, up);\n  });\n  var spotFolder = gui.addFolder(\"SpotLight\");\n  spotFolder.open();\n  spotFolder.add(debugInfo, \"angle\", 1, 90, 1).onChange(function (v) {\n    light.angle = v * Math.PI / 180;\n  });\n  spotFolder.add(debugInfo, \"penumbra\", 1, 90, 1).onChange(function (v) {\n    light.penumbra = v * Math.PI / 180;\n  }); // Run\n\n  engine.run();\n});"},"name":"light-type","title":"Light Type","category":"Light","id":"2d15cf04-fa75-5308-9d3a-98fe21f78c16","sourceCode":"/**\n * @title Light Type\n * @category Light\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\nimport {\n  BlinnPhongMaterial,\n  Camera,\n  DirectLight,\n  MeshRenderer,\n  PointLight,\n  PrimitiveMesh,\n  RenderFace,\n  SpotLight,\n  UnlitMaterial,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\nconst gui = new dat.GUI();\n\n// Create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// Create Ground\nconst groundEntity = rootEntity.createChild(\"ground\");\nconst groundRenderer = groundEntity.addComponent(MeshRenderer);\nconst mesh = PrimitiveMesh.createPlane(engine, 100, 100);\nconst material = new BlinnPhongMaterial(engine);\n\nmaterial.renderFace = RenderFace.Double;\ngroundRenderer.mesh = mesh;\ngroundRenderer.setMaterial(material);\n\n// Create camera\nconst cameraNode = rootEntity.createChild(\"camera_node\");\ncameraNode.transform.setPosition(0, 30, 50);\nconst camera = cameraNode.addComponent(Camera);\ncamera.farClipPlane = 200;\n\nconst control = cameraNode.addComponent(OrbitControl);\ncontrol.maxDistance = 100;\n\n// Create spot light\nconst lightEntity = rootEntity.createChild(\"light\");\nconst spotLight = lightEntity.addComponent(SpotLight);\nconst pointLight = lightEntity.addComponent(PointLight);\nconst directionalLight = lightEntity.addComponent(DirectLight);\nconst target = new Vector3(0, 0, 0);\nconst up = new Vector3(0, 1, 0);\n\nlet light: any = spotLight;\npointLight.enabled = false;\ndirectionalLight.enabled = false;\n\nlightEntity.transform.setPosition(20, 20, 0);\nlightEntity.transform.lookAt(target, up);\n\nconst lightRenderer = lightEntity.addComponent(MeshRenderer);\nlightRenderer.mesh = PrimitiveMesh.createSphere(engine, 1);\nlightRenderer.setMaterial(new UnlitMaterial(engine));\n\n// Debug\nconst debugInfo = {\n  type: \"SpotLight\",\n  angle: 30,\n  penumbra: 15,\n  x: 20,\n  y: 20,\n  z: 0\n};\n\ngui.add(debugInfo, \"type\", [\"DirectionalLight\", \"PointLight\", \"SpotLight\"]).onChange((v) => {\n  light.enabled = false;\n  spotFolder.closed = true;\n  switch (v) {\n    case \"SpotLight\":\n      light = spotLight;\n      light.enabled = true;\n      spotFolder.closed = false;\n      break;\n    case \"DirectionalLight\":\n      light = directionalLight;\n      light.enabled = true;\n      break;\n    case \"PointLight\":\n      light = pointLight;\n      light.enabled = true;\n      break;\n  }\n});\ngui.add(light, \"distance\", 0, 100, 1);\n\nconst folder = gui.addFolder(\"位置\");\nfolder.open();\nfolder.add(debugInfo, \"x\", -100, 100).onChange((v) => {\n  const last = lightEntity.transform.position;\n  lightEntity.transform.setPosition(v, last.y, last.z);\n  lightEntity.transform.lookAt(target, up);\n});\nfolder.add(debugInfo, \"y\", 0, 100).onChange((v) => {\n  const last = lightEntity.transform.position;\n  lightEntity.transform.setPosition(last.x, v, last.z);\n  lightEntity.transform.lookAt(target, up);\n});\nfolder.add(debugInfo, \"z\", -100, 100).onChange((v) => {\n  const last = lightEntity.transform.position;\n  lightEntity.transform.setPosition(last.x, last.y, v);\n  lightEntity.transform.lookAt(target, up);\n});\n\nconst spotFolder = gui.addFolder(\"SpotLight\");\nspotFolder.open();\n\nspotFolder.add(debugInfo, \"angle\", 1, 90, 1).onChange((v) => {\n  light.angle = (v * Math.PI) / 180;\n});\nspotFolder.add(debugInfo, \"penumbra\", 1, 90, 1).onChange((v) => {\n  light.penumbra = (v * Math.PI) / 180;\n});\n\n// Run\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Light Type\n * @category Light\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  BlinnPhongMaterial<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  DirectLight<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  PointLight<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  RenderFace<span class=\"token punctuation\">,</span>\n  SpotLight<span class=\"token punctuation\">,</span>\n  UnlitMaterial<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create Ground</span>\n<span class=\"token keyword\">const</span> groundEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ground\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> groundRenderer <span class=\"token operator\">=</span> groundEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createPlane</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmaterial<span class=\"token punctuation\">.</span>renderFace <span class=\"token operator\">=</span> RenderFace<span class=\"token punctuation\">.</span>Double<span class=\"token punctuation\">;</span>\ngroundRenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> mesh<span class=\"token punctuation\">;</span>\ngroundRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera</span>\n<span class=\"token keyword\">const</span> cameraNode <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> camera <span class=\"token operator\">=</span> cameraNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncamera<span class=\"token punctuation\">.</span>farClipPlane <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> control <span class=\"token operator\">=</span> cameraNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncontrol<span class=\"token punctuation\">.</span>maxDistance <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create spot light</span>\n<span class=\"token keyword\">const</span> lightEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"light\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> spotLight <span class=\"token operator\">=</span> lightEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpotLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> pointLight <span class=\"token operator\">=</span> lightEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>PointLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> directionalLight <span class=\"token operator\">=</span> lightEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> target <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> up <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> light<span class=\"token operator\">:</span> any <span class=\"token operator\">=</span> spotLight<span class=\"token punctuation\">;</span>\npointLight<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\ndirectionalLight<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\nlightEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> up<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> lightRenderer <span class=\"token operator\">=</span> lightEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightRenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createSphere</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">UnlitMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Debug</span>\n<span class=\"token keyword\">const</span> debugInfo <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  type<span class=\"token operator\">:</span> <span class=\"token string\">\"SpotLight\"</span><span class=\"token punctuation\">,</span>\n  angle<span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n  penumbra<span class=\"token operator\">:</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span>\n  x<span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n  y<span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n  z<span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\ngui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>debugInfo<span class=\"token punctuation\">,</span> <span class=\"token string\">\"type\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"DirectionalLight\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"PointLight\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"SpotLight\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  light<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  spotFolder<span class=\"token punctuation\">.</span>closed <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"SpotLight\"</span><span class=\"token operator\">:</span>\n      light <span class=\"token operator\">=</span> spotLight<span class=\"token punctuation\">;</span>\n      light<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n      spotFolder<span class=\"token punctuation\">.</span>closed <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"DirectionalLight\"</span><span class=\"token operator\">:</span>\n      light <span class=\"token operator\">=</span> directionalLight<span class=\"token punctuation\">;</span>\n      light<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">\"PointLight\"</span><span class=\"token operator\">:</span>\n      light <span class=\"token operator\">=</span> pointLight<span class=\"token punctuation\">;</span>\n      light<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>light<span class=\"token punctuation\">,</span> <span class=\"token string\">\"distance\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> folder <span class=\"token operator\">=</span> gui<span class=\"token punctuation\">.</span><span class=\"token function\">addFolder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"位置\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfolder<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfolder<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>debugInfo<span class=\"token punctuation\">,</span> <span class=\"token string\">\"x\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> last <span class=\"token operator\">=</span> lightEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">;</span>\n  lightEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> last<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> last<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  lightEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> up<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfolder<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>debugInfo<span class=\"token punctuation\">,</span> <span class=\"token string\">\"y\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> last <span class=\"token operator\">=</span> lightEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">;</span>\n  lightEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>last<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">,</span> last<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  lightEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> up<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfolder<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>debugInfo<span class=\"token punctuation\">,</span> <span class=\"token string\">\"z\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> last <span class=\"token operator\">=</span> lightEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">;</span>\n  lightEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>last<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> last<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  lightEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> up<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> spotFolder <span class=\"token operator\">=</span> gui<span class=\"token punctuation\">.</span><span class=\"token function\">addFolder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SpotLight\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nspotFolder<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nspotFolder<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>debugInfo<span class=\"token punctuation\">,</span> <span class=\"token string\">\"angle\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  light<span class=\"token punctuation\">.</span>angle <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">180</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nspotFolder<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>debugInfo<span class=\"token punctuation\">,</span> <span class=\"token string\">\"penumbra\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  light<span class=\"token punctuation\">.</span>penumbra <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">180</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Run</span>\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/baker\", \"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/baker\"), require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/baker\"], global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_baker, _controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title IBL Baker\n   * @category Material\n   */\n  _oasisEngine.Logger.enable();\n\n  var gui = new dat.GUI(); //-- create engine object\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var ambientLight = scene.ambientLight;\n  var rootEntity = scene.createRootEntity(); //Create camera\n\n  var cameraNode = rootEntity.createChild(\"camera_node\");\n  cameraNode.transform.position = new _oasisEngine.Vector3(0, 0, 10);\n  cameraNode.addComponent(_oasisEngine.Camera);\n  cameraNode.addComponent(_controls.OrbitControl);\n  Promise.all([engine.resourceManager.load({\n    urls: [\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5bs-Sb80qcUAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*rLUCT4VPBeEAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*LjSHTI5iSPoAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*pgCvTJ85RUYAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*0BKxR6jgRDAAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Pir4RoxLm3EAAAAAAAAAAAAAARQnAQ\"],\n    type: _oasisEngine.AssetType.TextureCube\n  }), engine.resourceManager.load({\n    url: \"https://gw.alipayobjects.com/os/bmw-prod/10c5d68d-8580-4bd9-8795-6f1035782b94.bin\",\n    // sunset_1K\n    // url: \"https://gw.alipayobjects.com/os/bmw-prod/20d58ffa-c7da-4c54-8980-4efaf91a0239.bin\",// pisa_1K\n    // url: \"https://gw.alipayobjects.com/os/bmw-prod/59b28d9f-7589-4d47-86b0-52c50b973b10.bin\", // footPrint_2K\n    type: \"HDR\"\n  })]).then(function (textures) {\n    var ldrCubeMap = textures[0];\n    var hdrCubeMap = textures[1];\n\n    var bakedLDRCubeMap = _baker.IBLBaker.fromTextureCubeMap(ldrCubeMap, _baker.DecodeMode.Gamma);\n\n    var bakedHDRCubeMap = _baker.IBLBaker.fromTextureCubeMap(hdrCubeMap, _baker.DecodeMode.RGBE);\n\n    ambientLight.specularTexture = bakedHDRCubeMap;\n    ambientLight.specularTextureDecodeRGBM = true;\n    var sh = new _oasisEngine.SphericalHarmonics3();\n\n    _baker.SphericalHarmonics3Baker.fromTextureCubeMap(bakedHDRCubeMap, _baker.DecodeMode.RGBM, sh);\n\n    ambientLight.diffuseMode = _oasisEngine.DiffuseMode.SphericalHarmonics;\n    ambientLight.diffuseSphericalHarmonics = sh;\n    engine.run();\n    debugIBL(bakedLDRCubeMap, bakedHDRCubeMap);\n  });\n\n  function debugIBL(bakedLDRCubeMap, bakedHDRCubeMap) {\n    _oasisEngine.Shader.create(\"ibl debug test\", \"\\n      attribute vec3 POSITION;\\n      attribute vec2 TEXCOORD_0;\\n  \\n      uniform mat4 u_MVPMat;\\n      varying vec2 v_uv;\\n  \\n      void main(){\\n        gl_Position = u_MVPMat * vec4(POSITION, 1.0);\\n        v_uv = TEXCOORD_0;\\n    }\\n    \", \"\\n      uniform sampler2D u_env;\\n      uniform int face;\\n      varying vec2 v_uv;\\n  \\n      vec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n       return vec4( value.rgb * value.a * maxRange, 1.0 );\\n       }\\n \\n  \\n      void main(){\\n        vec2 uv = v_uv;\\n        if(face == 2){\\n          uv.x = v_uv.y;\\n          uv.y= 1.0 - v_uv.x;\\n        }else if(face == 3){\\n          uv.x = 1.0 - v_uv.y;\\n          uv.y=  v_uv.x;\\n        }\\n \\n        gl_FragColor = RGBMToLinear(texture2D(u_env, uv), 5.0);\\n  \\n        gl_FragColor.rgb = pow(gl_FragColor.rgb, vec3(1.0 / 2.2));\\n      }\\n      \");\n\n    var debugTexture = bakedHDRCubeMap;\n    var size = debugTexture.width; // Create Sphere\n\n    var sphereEntity = rootEntity.createChild(\"box\");\n    sphereEntity.transform.setPosition(-1, 2, 0);\n    var sphereMaterial = new _oasisEngine.PBRMaterial(engine);\n    sphereMaterial.roughness = 0;\n    sphereMaterial.metallic = 1;\n    var renderer = sphereEntity.addComponent(_oasisEngine.MeshRenderer);\n    renderer.mesh = _oasisEngine.PrimitiveMesh.createSphere(engine, 1, 64);\n    renderer.setMaterial(sphereMaterial); // Create planes\n\n    var planes = new Array(6);\n    var planeMaterials = new Array(6);\n\n    for (var i = 0; i < 6; i++) {\n      var bakerEntity = rootEntity.createChild(\"IBL Baker Entity\");\n      bakerEntity.transform.setRotation(90, 0, 0);\n      var bakerMaterial = new _oasisEngine.Material(engine, _oasisEngine.Shader.find(\"ibl debug test\"));\n      bakerMaterial.renderState.rasterState.cullMode = _oasisEngine.CullMode.Off;\n      var bakerRenderer = bakerEntity.addComponent(_oasisEngine.MeshRenderer);\n      bakerRenderer.mesh = _oasisEngine.PrimitiveMesh.createPlane(engine, 2, 2);\n      bakerRenderer.setMaterial(bakerMaterial);\n      planes[i] = bakerEntity;\n      planeMaterials[i] = bakerMaterial;\n    }\n\n    planes[0].transform.setPosition(1, 0, 0); // PX\n\n    planes[1].transform.setPosition(-3, 0, 0); // NX\n\n    planes[2].transform.setPosition(1, 2, 0); // PY\n\n    planes[3].transform.setPosition(1, -2, 0); // NY\n\n    planes[4].transform.setPosition(-1, 0, 0); // PZ\n\n    planes[5].transform.setPosition(3, 0, 0); // NZ\n    //debug\n\n    gui.add(sphereMaterial, \"metallic\", 0, 1, 0.01);\n    gui.add(sphereMaterial, \"roughness\", 0, 1, 0.01);\n\n    function changeMip(mipLevel) {\n      var mipSize = size >> mipLevel;\n\n      for (var _i = 0; _i < 6; _i++) {\n        var material = planeMaterials[_i];\n        var data = new Uint8Array(mipSize * mipSize * 4);\n        var planeTexture = new _oasisEngine.Texture2D(engine, mipSize, mipSize, undefined, false); // no mipmap\n\n        debugTexture.getPixelBuffer(_oasisEngine.TextureCubeFace.PositiveX + _i, 0, 0, mipSize, mipSize, mipLevel, data);\n        planeTexture.setPixelBuffer(data);\n        material.shaderData.setTexture(\"u_env\", planeTexture);\n        material.shaderData.setInt(\"face\", _i);\n      }\n    }\n\n    changeMip(0);\n    var state = {\n      mipLevel: 0,\n      HDR: true\n    };\n    gui.add(state, \"mipLevel\", 0, debugTexture.mipmapCount - 1, 1).onChange(function (mipLevel) {\n      changeMip(mipLevel);\n    });\n    gui.add(state, \"HDR\").onChange(function (v) {\n      if (v) {\n        debugTexture = bakedHDRCubeMap;\n      } else {\n        debugTexture = bakedLDRCubeMap;\n      }\n\n      ambientLight.specularTexture = debugTexture;\n      changeMip(state.mipLevel);\n    });\n  }\n});"},"name":"ibl-baker","title":"IBL Baker","category":"Material","id":"3bf01fed-91f9-5807-9013-8603666efc39","sourceCode":"/**\n * @title IBL Baker\n * @category Material\n */\nimport { DecodeMode, IBLBaker, SphericalHarmonics3Baker } from \"@oasis-engine/baker\";\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\nimport {\n  AssetType,\n  Camera,\n  CullMode,\n  DiffuseMode,\n  Entity,\n  Logger,\n  Material,\n  MeshRenderer,\n  PBRMaterial,\n  PrimitiveMesh,\n  Shader,\n  SphericalHarmonics3,\n  Texture2D,\n  TextureCubeFace,\n  TextureCubeMap,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\nLogger.enable();\n\nconst gui = new dat.GUI();\n//-- create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst { ambientLight } = scene;\nconst rootEntity = scene.createRootEntity();\n\n//Create camera\nconst cameraNode = rootEntity.createChild(\"camera_node\");\ncameraNode.transform.position = new Vector3(0, 0, 10);\ncameraNode.addComponent(Camera);\ncameraNode.addComponent(OrbitControl);\nPromise.all([\n  engine.resourceManager.load<TextureCubeMap>({\n    urls: [\n      \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5bs-Sb80qcUAAAAAAAAAAAAAARQnAQ\",\n      \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*rLUCT4VPBeEAAAAAAAAAAAAAARQnAQ\",\n      \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*LjSHTI5iSPoAAAAAAAAAAAAAARQnAQ\",\n      \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*pgCvTJ85RUYAAAAAAAAAAAAAARQnAQ\",\n      \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*0BKxR6jgRDAAAAAAAAAAAAAAARQnAQ\",\n      \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Pir4RoxLm3EAAAAAAAAAAAAAARQnAQ\"\n    ],\n    type: AssetType.TextureCube\n  }),\n  engine.resourceManager.load<TextureCubeMap>({\n    url: \"https://gw.alipayobjects.com/os/bmw-prod/10c5d68d-8580-4bd9-8795-6f1035782b94.bin\", // sunset_1K\n    // url: \"https://gw.alipayobjects.com/os/bmw-prod/20d58ffa-c7da-4c54-8980-4efaf91a0239.bin\",// pisa_1K\n    // url: \"https://gw.alipayobjects.com/os/bmw-prod/59b28d9f-7589-4d47-86b0-52c50b973b10.bin\", // footPrint_2K\n    type: \"HDR\"\n  })\n]).then((textures: TextureCubeMap[]) => {\n  const ldrCubeMap = textures[0];\n  const hdrCubeMap = textures[1];\n  const bakedLDRCubeMap = IBLBaker.fromTextureCubeMap(ldrCubeMap, DecodeMode.Gamma) as any;\n  const bakedHDRCubeMap = IBLBaker.fromTextureCubeMap(hdrCubeMap, DecodeMode.RGBE) as any;\n\n  ambientLight.specularTexture = bakedHDRCubeMap;\n  ambientLight.specularTextureDecodeRGBM = true;\n\n  const sh = new SphericalHarmonics3();\n  SphericalHarmonics3Baker.fromTextureCubeMap(bakedHDRCubeMap, DecodeMode.RGBM, sh);\n  ambientLight.diffuseMode = DiffuseMode.SphericalHarmonics;\n  ambientLight.diffuseSphericalHarmonics = sh;\n\n  engine.run();\n\n  debugIBL(bakedLDRCubeMap, bakedHDRCubeMap);\n});\n\nfunction debugIBL(bakedLDRCubeMap: TextureCubeMap, bakedHDRCubeMap: TextureCubeMap) {\n  Shader.create(\n    \"ibl debug test\",\n    `\n      attribute vec3 POSITION;\n      attribute vec2 TEXCOORD_0;\n  \n      uniform mat4 u_MVPMat;\n      varying vec2 v_uv;\n  \n      void main(){\n        gl_Position = u_MVPMat * vec4(POSITION, 1.0);\n        v_uv = TEXCOORD_0;\n    }\n    `,\n    `\n      uniform sampler2D u_env;\n      uniform int face;\n      varying vec2 v_uv;\n  \n      vec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n       return vec4( value.rgb * value.a * maxRange, 1.0 );\n       }\n \n  \n      void main(){\n        vec2 uv = v_uv;\n        if(face == 2){\n          uv.x = v_uv.y;\n          uv.y= 1.0 - v_uv.x;\n        }else if(face == 3){\n          uv.x = 1.0 - v_uv.y;\n          uv.y=  v_uv.x;\n        }\n \n        gl_FragColor = RGBMToLinear(texture2D(u_env, uv), 5.0);\n  \n        gl_FragColor.rgb = pow(gl_FragColor.rgb, vec3(1.0 / 2.2));\n      }\n      `\n  );\n\n  let debugTexture = bakedHDRCubeMap;\n  const size = debugTexture.width;\n\n  // Create Sphere\n  const sphereEntity = rootEntity.createChild(\"box\");\n  sphereEntity.transform.setPosition(-1, 2, 0);\n  const sphereMaterial = new PBRMaterial(engine);\n  sphereMaterial.roughness = 0;\n  sphereMaterial.metallic = 1;\n  const renderer = sphereEntity.addComponent(MeshRenderer);\n  renderer.mesh = PrimitiveMesh.createSphere(engine, 1, 64);\n  renderer.setMaterial(sphereMaterial);\n\n  // Create planes\n  const planes = new Array<Entity>(6);\n  const planeMaterials = new Array<Material>(6);\n\n  for (let i = 0; i < 6; i++) {\n    const bakerEntity = rootEntity.createChild(\"IBL Baker Entity\");\n    bakerEntity.transform.setRotation(90, 0, 0);\n    const bakerMaterial = new Material(engine, Shader.find(\"ibl debug test\"));\n    bakerMaterial.renderState.rasterState.cullMode = CullMode.Off;\n    const bakerRenderer = bakerEntity.addComponent(MeshRenderer);\n    bakerRenderer.mesh = PrimitiveMesh.createPlane(engine, 2, 2);\n    bakerRenderer.setMaterial(bakerMaterial);\n    planes[i] = bakerEntity;\n    planeMaterials[i] = bakerMaterial;\n  }\n\n  planes[0].transform.setPosition(1, 0, 0); // PX\n  planes[1].transform.setPosition(-3, 0, 0); // NX\n  planes[2].transform.setPosition(1, 2, 0); // PY\n  planes[3].transform.setPosition(1, -2, 0); // NY\n  planes[4].transform.setPosition(-1, 0, 0); // PZ\n  planes[5].transform.setPosition(3, 0, 0); // NZ\n\n  //debug\n  gui.add(sphereMaterial, \"metallic\", 0, 1, 0.01);\n  gui.add(sphereMaterial, \"roughness\", 0, 1, 0.01);\n\n  function changeMip(mipLevel: number) {\n    const mipSize = size >> mipLevel;\n    for (let i = 0; i < 6; i++) {\n      const material = planeMaterials[i];\n      const data = new Uint8Array(mipSize * mipSize * 4);\n      const planeTexture = new Texture2D(engine, mipSize, mipSize, undefined, false); // no mipmap\n      debugTexture.getPixelBuffer(TextureCubeFace.PositiveX + i, 0, 0, mipSize, mipSize, mipLevel, data);\n      planeTexture.setPixelBuffer(data);\n      material.shaderData.setTexture(\"u_env\", planeTexture);\n      material.shaderData.setInt(\"face\", i);\n    }\n  }\n\n  changeMip(0);\n\n  const state = {\n    mipLevel: 0,\n    HDR: true\n  };\n\n  gui.add(state, \"mipLevel\", 0, debugTexture.mipmapCount - 1, 1).onChange((mipLevel: number) => {\n    changeMip(mipLevel);\n  });\n\n  gui.add(state, \"HDR\").onChange((v) => {\n    if (v) {\n      debugTexture = bakedHDRCubeMap;\n    } else {\n      debugTexture = bakedLDRCubeMap;\n    }\n\n    ambientLight.specularTexture = debugTexture;\n    changeMip(state.mipLevel);\n  });\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title IBL Baker\n * @category Material\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> DecodeMode<span class=\"token punctuation\">,</span> IBLBaker<span class=\"token punctuation\">,</span> SphericalHarmonics3Baker <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/baker\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  CullMode<span class=\"token punctuation\">,</span>\n  DiffuseMode<span class=\"token punctuation\">,</span>\n  Entity<span class=\"token punctuation\">,</span>\n  Logger<span class=\"token punctuation\">,</span>\n  Material<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  PBRMaterial<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  Shader<span class=\"token punctuation\">,</span>\n  SphericalHarmonics3<span class=\"token punctuation\">,</span>\n  Texture2D<span class=\"token punctuation\">,</span>\n  TextureCubeFace<span class=\"token punctuation\">,</span>\n  TextureCubeMap<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\nLogger<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//-- create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> ambientLight <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//Create camera</span>\n<span class=\"token keyword\">const</span> cameraNode <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nPromise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  engine<span class=\"token punctuation\">.</span>resourceManager<span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>TextureCubeMap<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    urls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5bs-Sb80qcUAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*rLUCT4VPBeEAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*LjSHTI5iSPoAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*pgCvTJ85RUYAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*0BKxR6jgRDAAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Pir4RoxLm3EAAAAAAAAAAAAAARQnAQ\"</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>TextureCube\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  engine<span class=\"token punctuation\">.</span>resourceManager<span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>TextureCubeMap<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/10c5d68d-8580-4bd9-8795-6f1035782b94.bin\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// sunset_1K</span>\n    <span class=\"token comment\">// url: \"https://gw.alipayobjects.com/os/bmw-prod/20d58ffa-c7da-4c54-8980-4efaf91a0239.bin\",// pisa_1K</span>\n    <span class=\"token comment\">// url: \"https://gw.alipayobjects.com/os/bmw-prod/59b28d9f-7589-4d47-86b0-52c50b973b10.bin\", // footPrint_2K</span>\n    type<span class=\"token operator\">:</span> <span class=\"token string\">\"HDR\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">textures<span class=\"token operator\">:</span> TextureCubeMap<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> ldrCubeMap <span class=\"token operator\">=</span> textures<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> hdrCubeMap <span class=\"token operator\">=</span> textures<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> bakedLDRCubeMap <span class=\"token operator\">=</span> IBLBaker<span class=\"token punctuation\">.</span><span class=\"token function\">fromTextureCubeMap</span><span class=\"token punctuation\">(</span>ldrCubeMap<span class=\"token punctuation\">,</span> DecodeMode<span class=\"token punctuation\">.</span>Gamma<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> bakedHDRCubeMap <span class=\"token operator\">=</span> IBLBaker<span class=\"token punctuation\">.</span><span class=\"token function\">fromTextureCubeMap</span><span class=\"token punctuation\">(</span>hdrCubeMap<span class=\"token punctuation\">,</span> DecodeMode<span class=\"token punctuation\">.</span><span class=\"token constant\">RGBE</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">;</span>\n\n  ambientLight<span class=\"token punctuation\">.</span>specularTexture <span class=\"token operator\">=</span> bakedHDRCubeMap<span class=\"token punctuation\">;</span>\n  ambientLight<span class=\"token punctuation\">.</span>specularTextureDecodeRGBM <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> sh <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SphericalHarmonics3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  SphericalHarmonics3Baker<span class=\"token punctuation\">.</span><span class=\"token function\">fromTextureCubeMap</span><span class=\"token punctuation\">(</span>bakedHDRCubeMap<span class=\"token punctuation\">,</span> DecodeMode<span class=\"token punctuation\">.</span><span class=\"token constant\">RGBM</span><span class=\"token punctuation\">,</span> sh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ambientLight<span class=\"token punctuation\">.</span>diffuseMode <span class=\"token operator\">=</span> DiffuseMode<span class=\"token punctuation\">.</span>SphericalHarmonics<span class=\"token punctuation\">;</span>\n  ambientLight<span class=\"token punctuation\">.</span>diffuseSphericalHarmonics <span class=\"token operator\">=</span> sh<span class=\"token punctuation\">;</span>\n\n  engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">debugIBL</span><span class=\"token punctuation\">(</span>bakedLDRCubeMap<span class=\"token punctuation\">,</span> bakedHDRCubeMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">debugIBL</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">bakedLDRCubeMap<span class=\"token operator\">:</span> TextureCubeMap<span class=\"token punctuation\">,</span> bakedHDRCubeMap<span class=\"token operator\">:</span> TextureCubeMap</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  Shader<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"ibl debug test\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n      attribute vec3 POSITION;\n      attribute vec2 TEXCOORD_0;\n  \n      uniform mat4 u_MVPMat;\n      varying vec2 v_uv;\n  \n      void main(){\n        gl_Position = u_MVPMat * vec4(POSITION, 1.0);\n        v_uv = TEXCOORD_0;\n    }\n    </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n      uniform sampler2D u_env;\n      uniform int face;\n      varying vec2 v_uv;\n  \n      vec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n       return vec4( value.rgb * value.a * maxRange, 1.0 );\n       }\n \n  \n      void main(){\n        vec2 uv = v_uv;\n        if(face == 2){\n          uv.x = v_uv.y;\n          uv.y= 1.0 - v_uv.x;\n        }else if(face == 3){\n          uv.x = 1.0 - v_uv.y;\n          uv.y=  v_uv.x;\n        }\n \n        gl_FragColor = RGBMToLinear(texture2D(u_env, uv), 5.0);\n  \n        gl_FragColor.rgb = pow(gl_FragColor.rgb, vec3(1.0 / 2.2));\n      }\n      </span><span class=\"token template-punctuation string\">`</span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">let</span> debugTexture <span class=\"token operator\">=</span> bakedHDRCubeMap<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> size <span class=\"token operator\">=</span> debugTexture<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create Sphere</span>\n  <span class=\"token keyword\">const</span> sphereEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"box\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  sphereEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> sphereMaterial <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PBRMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  sphereMaterial<span class=\"token punctuation\">.</span>roughness <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  sphereMaterial<span class=\"token punctuation\">.</span>metallic <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> renderer <span class=\"token operator\">=</span> sphereEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  renderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createSphere</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  renderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>sphereMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create planes</span>\n  <span class=\"token keyword\">const</span> planes <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token operator\">&lt;</span>Entity<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> planeMaterials <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token operator\">&lt;</span>Material<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> bakerEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"IBL Baker Entity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    bakerEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setRotation</span><span class=\"token punctuation\">(</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> bakerMaterial <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Material</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> Shader<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ibl debug test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    bakerMaterial<span class=\"token punctuation\">.</span>renderState<span class=\"token punctuation\">.</span>rasterState<span class=\"token punctuation\">.</span>cullMode <span class=\"token operator\">=</span> CullMode<span class=\"token punctuation\">.</span>Off<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> bakerRenderer <span class=\"token operator\">=</span> bakerEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    bakerRenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createPlane</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    bakerRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>bakerMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    planes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> bakerEntity<span class=\"token punctuation\">;</span>\n    planeMaterials<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> bakerMaterial<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  planes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// PX</span>\n  planes<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// NX</span>\n  planes<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// PY</span>\n  planes<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// NY</span>\n  planes<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// PZ</span>\n  planes<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// NZ</span>\n\n  <span class=\"token comment\">//debug</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>sphereMaterial<span class=\"token punctuation\">,</span> <span class=\"token string\">\"metallic\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>sphereMaterial<span class=\"token punctuation\">,</span> <span class=\"token string\">\"roughness\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">changeMip</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">mipLevel<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> mipSize <span class=\"token operator\">=</span> size <span class=\"token operator\">>></span> mipLevel<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> planeMaterials<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span>mipSize <span class=\"token operator\">*</span> mipSize <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> planeTexture <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Texture2D</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> mipSize<span class=\"token punctuation\">,</span> mipSize<span class=\"token punctuation\">,</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// no mipmap</span>\n      debugTexture<span class=\"token punctuation\">.</span><span class=\"token function\">getPixelBuffer</span><span class=\"token punctuation\">(</span>TextureCubeFace<span class=\"token punctuation\">.</span>PositiveX <span class=\"token operator\">+</span> i<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> mipSize<span class=\"token punctuation\">,</span> mipSize<span class=\"token punctuation\">,</span> mipLevel<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      planeTexture<span class=\"token punctuation\">.</span><span class=\"token function\">setPixelBuffer</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      material<span class=\"token punctuation\">.</span>shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setTexture</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_env\"</span><span class=\"token punctuation\">,</span> planeTexture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      material<span class=\"token punctuation\">.</span>shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"face\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">changeMip</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    mipLevel<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">HDR</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"mipLevel\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> debugTexture<span class=\"token punctuation\">.</span>mipmapCount <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">mipLevel<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">changeMip</span><span class=\"token punctuation\">(</span>mipLevel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"HDR\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      debugTexture <span class=\"token operator\">=</span> bakedHDRCubeMap<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      debugTexture <span class=\"token operator\">=</span> bakedLDRCubeMap<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    ambientLight<span class=\"token punctuation\">.</span>specularTexture <span class=\"token operator\">=</span> debugTexture<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">changeMip</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">.</span>mipLevel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"@oasis-engine/framebuffer-picker\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"@oasis-engine/framebuffer-picker\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global[\"@oasisEngine/framebufferPicker\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _framebufferPicker, _oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title Framebuffer Picker\n   * @category Advance\n   */\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootNode = scene.createRootEntity();\n  scene.ambientLight.diffuseSolidColor.setValue(1, 1, 1, 1); // Create camera\n\n  var cameraNode = rootNode.createChild(\"camera_node\");\n  cameraNode.transform.position = new _oasisEngine.Vector3(10, 10, 30);\n  var camera = cameraNode.addComponent(_oasisEngine.Camera);\n  var control = cameraNode.addComponent(_controls.OrbitControl);\n  control.target.setValue(0, 3, 0);\n  engine.resourceManager.load(\"https://gw.alipayobjects.com/os/bmw-prod/f40ef8dd-4c94-41d4-8fac-c1d2301b6e47.glb\").then(function (gltf) {\n    var defaultSceneRoot = gltf.defaultSceneRoot,\n        materials = gltf.materials;\n    var material = materials[0];\n    defaultSceneRoot.transform.setScale(0.1, 0.1, 0.1);\n    rootNode.addChild(defaultSceneRoot); // add framebuffer picker component\n\n    var framebufferPicker = rootNode.addComponent(_framebufferPicker.FramebufferPicker);\n    framebufferPicker.camera = camera;\n\n    framebufferPicker.onPick = function (obj) {\n      if (obj) {\n        var component = obj.component,\n            mesh = obj.mesh;\n        console.log(component, mesh);\n        material.baseColor.setValue(1, 0, 0, 1);\n      } else {\n        material.baseColor.setValue(1, 1, 1, 1);\n      }\n    };\n\n    document.getElementById(\"canvas\").addEventListener(\"mousedown\", function (e) {\n      framebufferPicker.pick(e.offsetX, e.offsetY);\n    });\n  }); // Run\n\n  engine.run();\n});"},"name":"framebuffer-picker","title":"Framebuffer Picker","category":"Advance","id":"2dbf822b-d1db-5fab-b2db-e273b423facb","sourceCode":"/**\n * @title Framebuffer Picker\n * @category Advance\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport { FramebufferPicker } from \"@oasis-engine/framebuffer-picker\";\nimport { Camera, GLTFResource, PBRMaterial, Vector3, WebGLEngine } from \"oasis-engine\";\n\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\nconst scene = engine.sceneManager.activeScene;\nconst rootNode = scene.createRootEntity();\nscene.ambientLight.diffuseSolidColor.setValue(1, 1, 1, 1);\n\n// Create camera\nconst cameraNode = rootNode.createChild(\"camera_node\");\ncameraNode.transform.position = new Vector3(10, 10, 30);\nconst camera = cameraNode.addComponent(Camera);\nconst control = cameraNode.addComponent(OrbitControl);\ncontrol.target.setValue(0, 3, 0);\n\nengine.resourceManager\n  .load<GLTFResource>(\"https://gw.alipayobjects.com/os/bmw-prod/f40ef8dd-4c94-41d4-8fac-c1d2301b6e47.glb\")\n  .then((gltf) => {\n    const { defaultSceneRoot, materials } = gltf;\n    const material = materials[0] as PBRMaterial;\n\n    defaultSceneRoot.transform.setScale(0.1, 0.1, 0.1);\n    rootNode.addChild(defaultSceneRoot);\n\n    // add framebuffer picker component\n    const framebufferPicker = rootNode.addComponent(FramebufferPicker);\n    framebufferPicker.camera = camera;\n    framebufferPicker.onPick = (obj) => {\n      if (obj) {\n        const { component, mesh } = obj;\n        console.log(component, mesh);\n        material.baseColor.setValue(1, 0, 0, 1);\n      } else {\n        material.baseColor.setValue(1, 1, 1, 1);\n      }\n    };\n\n    document.getElementById(\"canvas\").addEventListener(\"mousedown\", (e) => {\n      framebufferPicker.pick(e.offsetX, e.offsetY);\n    });\n  });\n\n// Run\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Framebuffer Picker\n * @category Advance\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> FramebufferPicker <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/framebuffer-picker\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Camera<span class=\"token punctuation\">,</span> GLTFResource<span class=\"token punctuation\">,</span> PBRMaterial<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootNode <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nscene<span class=\"token punctuation\">.</span>ambientLight<span class=\"token punctuation\">.</span>diffuseSolidColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera</span>\n<span class=\"token keyword\">const</span> cameraNode <span class=\"token operator\">=</span> rootNode<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> camera <span class=\"token operator\">=</span> cameraNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> control <span class=\"token operator\">=</span> cameraNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncontrol<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>GLTFResource<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/f40ef8dd-4c94-41d4-8fac-c1d2301b6e47.glb\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">gltf</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> defaultSceneRoot<span class=\"token punctuation\">,</span> materials <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> gltf<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> materials<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">as</span> PBRMaterial<span class=\"token punctuation\">;</span>\n\n    defaultSceneRoot<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    rootNode<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>defaultSceneRoot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// add framebuffer picker component</span>\n    <span class=\"token keyword\">const</span> framebufferPicker <span class=\"token operator\">=</span> rootNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>FramebufferPicker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    framebufferPicker<span class=\"token punctuation\">.</span>camera <span class=\"token operator\">=</span> camera<span class=\"token punctuation\">;</span>\n    framebufferPicker<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onPick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> component<span class=\"token punctuation\">,</span> mesh <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>component<span class=\"token punctuation\">,</span> mesh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        material<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        material<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      framebufferPicker<span class=\"token punctuation\">.</span><span class=\"token function\">pick</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>offsetX<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>offsetY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Run</span>\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title GLTF Basic\n   * @category Basic\n   */\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var rootEntity = engine.sceneManager.activeScene.createRootEntity();\n  var cameraEntity = rootEntity.createChild(\"camera\");\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.transform.setPosition(3, 3, 3);\n  cameraEntity.addComponent(_controls.OrbitControl);\n  engine.sceneManager.activeScene.ambientLight.diffuseSolidColor.setValue(1, 1, 1, 1);\n  engine.resourceManager.load(\"https://gw.alipayobjects.com/os/OasisHub/267000040/9994/%25E5%25BD%2592%25E6%25A1%25A3.gltf\").then(function (gltf) {\n    rootEntity.addChild(gltf.defaultSceneRoot);\n  });\n  engine.run();\n});"},"name":"gltf-basic","title":"GLTF Basic","category":"Basic","id":"e6701cf5-1c7c-5327-9442-bd2f36a3823e","sourceCode":"/**\n * @title GLTF Basic\n * @category Basic\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport { Camera, GLTFResource, WebGLEngine } from \"oasis-engine\";\n\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst rootEntity = engine.sceneManager.activeScene.createRootEntity();\n\nconst cameraEntity = rootEntity.createChild(\"camera\");\ncameraEntity.addComponent(Camera);\ncameraEntity.transform.setPosition(3, 3, 3);\ncameraEntity.addComponent(OrbitControl);\n\nengine.sceneManager.activeScene.ambientLight.diffuseSolidColor.setValue(1, 1, 1, 1);\n\nengine.resourceManager\n  .load<GLTFResource>(\"https://gw.alipayobjects.com/os/OasisHub/267000040/9994/%25E5%25BD%2592%25E6%25A1%25A3.gltf\")\n  .then((gltf) => {\n    rootEntity.addChild(gltf.defaultSceneRoot);\n  });\n\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title GLTF Basic\n * @category Basic\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Camera<span class=\"token punctuation\">,</span> GLTFResource<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span>ambientLight<span class=\"token punctuation\">.</span>diffuseSolidColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>GLTFResource<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://gw.alipayobjects.com/os/OasisHub/267000040/9994/%25E5%25BD%2592%25E6%25A1%25A3.gltf\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">gltf</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>gltf<span class=\"token punctuation\">.</span>defaultSceneRoot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@oasis-engine/controls\", \"@oasis-engine/physics-lite\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@oasis-engine/controls\"), require(\"@oasis-engine/physics-lite\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global[\"@oasisEngine/controls\"], global[\"@oasisEngine/physicsLite\"]);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, _controls, _physicsLite) {\n  \"use strict\";\n\n  /**\n   * @title Lite Raycast\n   * @category Physics\n   */\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\", _physicsLite.LitePhysics);\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(\"root\");\n  scene.ambientLight.diffuseSolidColor.setValue(1, 1, 1, 1);\n  scene.ambientLight.diffuseIntensity = 1.2; // init camera\n\n  var cameraEntity = rootEntity.createChild(\"camera\");\n  var camera = cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.transform.setPosition(10, 10, 10);\n  cameraEntity.addComponent(_controls.OrbitControl); // init point light\n\n  var lightEntity = rootEntity.createChild(\"light\");\n  lightEntity.transform.setPosition(0, 3, 0);\n  var pointLight = lightEntity.addComponent(_oasisEngine.PointLight);\n  pointLight.intensity = 0.3; // create sphere test entity\n\n  var radius = 1.25;\n  var sphereEntity = rootEntity.createChild(\"SphereEntity\");\n  sphereEntity.transform.setPosition(-3, 0, 0);\n  var sphereMtl = new _oasisEngine.BlinnPhongMaterial(engine);\n  var sphereRenderer = sphereEntity.addComponent(_oasisEngine.MeshRenderer);\n  sphereMtl.baseColor.setValue(0.7, 0.1, 0.1, 1.0);\n  sphereRenderer.mesh = _oasisEngine.PrimitiveMesh.createSphere(engine, radius);\n  sphereRenderer.setMaterial(sphereMtl);\n  var sphereCollider = sphereEntity.addComponent(_oasisEngine.StaticCollider);\n  var sphereColliderShape = new _oasisEngine.SphereColliderShape();\n  sphereColliderShape.radius = radius;\n  sphereCollider.addShape(sphereColliderShape); // create box test entity\n\n  var cubeSize = 2.0;\n  var boxEntity = rootEntity.createChild(\"BoxEntity\");\n  var boxMtl = new _oasisEngine.BlinnPhongMaterial(engine);\n  var boxRenderer = boxEntity.addComponent(_oasisEngine.MeshRenderer);\n  boxMtl.baseColor.setValue(0.1, 0.7, 0.1, 1.0);\n  boxRenderer.mesh = _oasisEngine.PrimitiveMesh.createCuboid(engine, cubeSize, cubeSize, cubeSize);\n  boxRenderer.setMaterial(boxMtl);\n  var boxCollider = boxEntity.addComponent(_oasisEngine.StaticCollider);\n  var boxColliderShape = new _oasisEngine.BoxColliderShape();\n  boxColliderShape.setSize(cubeSize, cubeSize, cubeSize);\n  boxCollider.addShape(boxColliderShape); // raycast logic\n\n  var pickedMeshRenderer;\n  var originalColor = new _oasisEngine.Color();\n  var point = new _oasisEngine.Vector2();\n  var ray = new _oasisEngine.Ray();\n  var hit = new _oasisEngine.HitResult();\n  window.addEventListener(\"mousedown\", function (event) {\n    point.setValue(event.pageX * window.devicePixelRatio, event.pageY * window.devicePixelRatio);\n    camera.screenPointToRay(point, ray);\n    var result = engine.physicsManager.raycast(ray, Number.MAX_VALUE, _oasisEngine.Layer.Everything, hit);\n\n    if (result) {\n      pickedMeshRenderer = hit.entity.getComponent(_oasisEngine.MeshRenderer);\n      var material = pickedMeshRenderer.getMaterial();\n      material.baseColor.cloneTo(originalColor);\n      material.baseColor.setValue(0.3, 0.3, 0.3, 1.0);\n    }\n  });\n  window.addEventListener(\"mouseup\", function () {\n    pickedMeshRenderer.getMaterial().baseColor = originalColor;\n  }); // Run engine\n\n  engine.run();\n});"},"name":"lite-raycast","title":"Lite Raycast","category":"Physics","id":"99800eb0-b89d-5179-86e6-c1a0e4051ffd","sourceCode":"/**\n * @title Lite Raycast\n * @category Physics\n */\nimport {\n  BlinnPhongMaterial,\n  BoxColliderShape,\n  Camera,\n  HitResult,\n  Layer,\n  MeshRenderer,\n  PrimitiveMesh,\n  Ray,\n  SphereColliderShape,\n  StaticCollider,\n  Vector2, Color,\n  PointLight,\n  WebGLEngine\n} from \"oasis-engine\";\nimport {OrbitControl} from \"@oasis-engine/controls\";\n\nimport { LitePhysics } from \"@oasis-engine/physics-lite\";\n\nconst engine = new WebGLEngine(\"canvas\", LitePhysics);\nengine.canvas.resizeByClientSize();\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity(\"root\");\n\nscene.ambientLight.diffuseSolidColor.setValue(1, 1, 1, 1);\nscene.ambientLight.diffuseIntensity = 1.2;\n\n// init camera\nconst cameraEntity = rootEntity.createChild(\"camera\");\nconst camera = cameraEntity.addComponent(Camera);\ncameraEntity.transform.setPosition(10, 10, 10);\ncameraEntity.addComponent(OrbitControl);\n\n// init point light\nconst lightEntity = rootEntity.createChild(\"light\");\nlightEntity.transform.setPosition(0, 3, 0);\nconst pointLight = lightEntity.addComponent(PointLight);\npointLight.intensity = 0.3;\n\n// create sphere test entity\nconst radius = 1.25;\nconst sphereEntity = rootEntity.createChild(\"SphereEntity\");\nsphereEntity.transform.setPosition(-3, 0, 0);\n\nconst sphereMtl = new BlinnPhongMaterial(engine);\nconst sphereRenderer = sphereEntity.addComponent(MeshRenderer);\nsphereMtl.baseColor.setValue(0.7, 0.1, 0.1, 1.0);\nsphereRenderer.mesh = PrimitiveMesh.createSphere(engine, radius);\nsphereRenderer.setMaterial(sphereMtl);\n\nconst sphereCollider = sphereEntity.addComponent(StaticCollider);\nconst sphereColliderShape = new SphereColliderShape();\nsphereColliderShape.radius = radius;\nsphereCollider.addShape(sphereColliderShape);\n\n// create box test entity\nconst cubeSize = 2.0;\nconst boxEntity = rootEntity.createChild(\"BoxEntity\");\n\nconst boxMtl = new BlinnPhongMaterial(engine);\nconst boxRenderer = boxEntity.addComponent(MeshRenderer);\nboxMtl.baseColor.setValue(0.1, 0.7, 0.1, 1.0);\nboxRenderer.mesh = PrimitiveMesh.createCuboid(engine, cubeSize, cubeSize, cubeSize);\nboxRenderer.setMaterial(boxMtl);\n\nconst boxCollider = boxEntity.addComponent(StaticCollider);\nconst boxColliderShape = new BoxColliderShape();\nboxColliderShape.setSize(cubeSize, cubeSize, cubeSize);\nboxCollider.addShape(boxColliderShape);\n\n// raycast logic\nlet pickedMeshRenderer: MeshRenderer;\nconst originalColor: Color = new Color();\nconst point = new Vector2();\nconst ray = new Ray();\nconst hit = new HitResult();\nwindow.addEventListener(\"mousedown\", (event: MouseEvent) => {\n  point.setValue(event.pageX * window.devicePixelRatio, event.pageY * window.devicePixelRatio);\n  camera.screenPointToRay(point, ray);\n\n  const result = engine.physicsManager.raycast(ray, Number.MAX_VALUE, Layer.Everything, hit);\n  if (result) {\n    pickedMeshRenderer = hit.entity.getComponent(MeshRenderer);\n    const material = (<BlinnPhongMaterial>pickedMeshRenderer.getMaterial());\n    material.baseColor.cloneTo(originalColor);\n    material.baseColor.setValue(0.3, 0.3, 0.3, 1.0);\n  }\n});\n\nwindow.addEventListener(\"mouseup\", () => {\n  (<BlinnPhongMaterial>pickedMeshRenderer.getMaterial()).baseColor = originalColor;\n});\n\n// Run engine\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Lite Raycast\n * @category Physics\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  BlinnPhongMaterial<span class=\"token punctuation\">,</span>\n  BoxColliderShape<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  HitResult<span class=\"token punctuation\">,</span>\n  Layer<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  Ray<span class=\"token punctuation\">,</span>\n  SphereColliderShape<span class=\"token punctuation\">,</span>\n  StaticCollider<span class=\"token punctuation\">,</span>\n  Vector2<span class=\"token punctuation\">,</span> Color<span class=\"token punctuation\">,</span>\n  PointLight<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>OrbitControl<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> LitePhysics <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/physics-lite\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">,</span> LitePhysics<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nscene<span class=\"token punctuation\">.</span>ambientLight<span class=\"token punctuation\">.</span>diffuseSolidColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nscene<span class=\"token punctuation\">.</span>ambientLight<span class=\"token punctuation\">.</span>diffuseIntensity <span class=\"token operator\">=</span> <span class=\"token number\">1.2</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// init camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> camera <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// init point light</span>\n<span class=\"token keyword\">const</span> lightEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"light\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> pointLight <span class=\"token operator\">=</span> lightEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>PointLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npointLight<span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// create sphere test entity</span>\n<span class=\"token keyword\">const</span> radius <span class=\"token operator\">=</span> <span class=\"token number\">1.25</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> sphereEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SphereEntity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsphereEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> sphereMtl <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> sphereRenderer <span class=\"token operator\">=</span> sphereEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsphereMtl<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsphereRenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createSphere</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsphereRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>sphereMtl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> sphereCollider <span class=\"token operator\">=</span> sphereEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>StaticCollider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> sphereColliderShape <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SphereColliderShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsphereColliderShape<span class=\"token punctuation\">.</span>radius <span class=\"token operator\">=</span> radius<span class=\"token punctuation\">;</span>\nsphereCollider<span class=\"token punctuation\">.</span><span class=\"token function\">addShape</span><span class=\"token punctuation\">(</span>sphereColliderShape<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// create box test entity</span>\n<span class=\"token keyword\">const</span> cubeSize <span class=\"token operator\">=</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> boxEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BoxEntity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> boxMtl <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> boxRenderer <span class=\"token operator\">=</span> boxEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nboxMtl<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nboxRenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> cubeSize<span class=\"token punctuation\">,</span> cubeSize<span class=\"token punctuation\">,</span> cubeSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nboxRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>boxMtl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> boxCollider <span class=\"token operator\">=</span> boxEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>StaticCollider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> boxColliderShape <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BoxColliderShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nboxColliderShape<span class=\"token punctuation\">.</span><span class=\"token function\">setSize</span><span class=\"token punctuation\">(</span>cubeSize<span class=\"token punctuation\">,</span> cubeSize<span class=\"token punctuation\">,</span> cubeSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nboxCollider<span class=\"token punctuation\">.</span><span class=\"token function\">addShape</span><span class=\"token punctuation\">(</span>boxColliderShape<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// raycast logic</span>\n<span class=\"token keyword\">let</span> pickedMeshRenderer<span class=\"token operator\">:</span> MeshRenderer<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> originalColor<span class=\"token operator\">:</span> Color <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> point <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> ray <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Ray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> hit <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HitResult</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event<span class=\"token operator\">:</span> MouseEvent</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  point<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>pageX <span class=\"token operator\">*</span> window<span class=\"token punctuation\">.</span>devicePixelRatio<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">.</span>pageY <span class=\"token operator\">*</span> window<span class=\"token punctuation\">.</span>devicePixelRatio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  camera<span class=\"token punctuation\">.</span><span class=\"token function\">screenPointToRay</span><span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">,</span> ray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>physicsManager<span class=\"token punctuation\">.</span><span class=\"token function\">raycast</span><span class=\"token punctuation\">(</span>ray<span class=\"token punctuation\">,</span> Number<span class=\"token punctuation\">.</span><span class=\"token constant\">MAX_VALUE</span><span class=\"token punctuation\">,</span> Layer<span class=\"token punctuation\">.</span>Everything<span class=\"token punctuation\">,</span> hit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    pickedMeshRenderer <span class=\"token operator\">=</span> hit<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>BlinnPhongMaterial<span class=\"token operator\">></span>pickedMeshRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">getMaterial</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    material<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">.</span><span class=\"token function\">cloneTo</span><span class=\"token punctuation\">(</span>originalColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    material<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mouseup\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>BlinnPhongMaterial<span class=\"token operator\">></span>pickedMeshRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">getMaterial</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>baseColor <span class=\"token operator\">=</span> originalColor<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Run engine</span>\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\", \"@oasis-engine/lottie\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"), require(\"@oasis-engine/lottie\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine, global[\"engine-lottie\"]);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine, _lottie) {\n  \"use strict\";\n\n  /**\n   * @title Lottie Benchmark\n   * @category Benchmark\n   */\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var root = engine.sceneManager.activeScene.createRootEntity();\n  var cameraEntity = root.createChild(\"camera\");\n  var camera = cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.transform.setPosition(0, 0, 30);\n  cameraEntity.addComponent(_controls.OrbitControl);\n  engine.resourceManager.load({\n    urls: ['https://gw.alipayobjects.com/os/bmw-prod/9ad65a42-9171-47ab-9218-54cf175f6201.json', 'https://gw.alipayobjects.com/os/bmw-prod/58cde292-8675-4299-b400-d98029b48ac7.atlas'],\n    type: 'lottie'\n  }).then(function (lottieEntity) {\n    for (var i = -4; i < 5; i++) {\n      for (var j = -5; j < 6; j++) {\n        var clone = lottieEntity.clone();\n        clone.transform.setPosition(i * 2, j * 2, 0);\n        root.addChild(clone);\n        var lottie = clone.getComponent(_lottie.LottieAnimation);\n        lottie.isLooping = true;\n        lottie.speed = 0.2 + Math.random() * 2;\n        lottie.play();\n      }\n    }\n  });\n  engine.run();\n});"},"name":"lottie-benchmark","title":"Lottie Benchmark","category":"Benchmark","id":"a624a691-e9aa-577b-b750-5e753d330243","sourceCode":"/**\n * @title Lottie Benchmark\n * @category Benchmark\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport { Camera, Entity, WebGLEngine } from \"oasis-engine\";\nimport { LottieAnimation } from \"@oasis-engine/lottie\";\n\nconst engine = new WebGLEngine(\"canvas\");\n\nengine.canvas.resizeByClientSize();\n\nconst root = engine.sceneManager.activeScene.createRootEntity();\n\nconst cameraEntity = root.createChild(\"camera\");\nconst camera = cameraEntity.addComponent(Camera);\ncameraEntity.transform.setPosition(0, 0, 30);\ncameraEntity.addComponent(OrbitControl);\n\nengine.resourceManager.load<Entity>({\n  urls: [\n    'https://gw.alipayobjects.com/os/bmw-prod/9ad65a42-9171-47ab-9218-54cf175f6201.json',\n    'https://gw.alipayobjects.com/os/bmw-prod/58cde292-8675-4299-b400-d98029b48ac7.atlas',\n  ],\n  type: 'lottie'\n}).then((lottieEntity) => {\n  for (let i = -4; i < 5; i++) {\n    for (let j = -5; j < 6; j++) {\n      const clone = lottieEntity.clone();\n      clone.transform.setPosition(i * 2, j * 2, 0);\n      root.addChild(clone);\n      const lottie = clone.getComponent(LottieAnimation);\n      lottie.isLooping = true;\n      lottie.speed = 0.2 + Math.random() * 2;\n      lottie.play();\n    }\n  }\n});\n\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Lottie Benchmark\n * @category Benchmark\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Camera<span class=\"token punctuation\">,</span> Entity<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> LottieAnimation <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/lottie\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> root<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> camera <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager<span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Entity<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  urls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'https://gw.alipayobjects.com/os/bmw-prod/9ad65a42-9171-47ab-9218-54cf175f6201.json'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://gw.alipayobjects.com/os/bmw-prod/58cde292-8675-4299-b400-d98029b48ac7.atlas'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  type<span class=\"token operator\">:</span> <span class=\"token string\">'lottie'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">lottieEntity</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> j <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> clone <span class=\"token operator\">=</span> lottieEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      clone<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> j <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      root<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>clone<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> lottie <span class=\"token operator\">=</span> clone<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>LottieAnimation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      lottie<span class=\"token punctuation\">.</span>isLooping <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n      lottie<span class=\"token punctuation\">.</span>speed <span class=\"token operator\">=</span> <span class=\"token number\">0.2</span> <span class=\"token operator\">+</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n      lottie<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\", \"@oasis-engine/lottie\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"), require(\"@oasis-engine/lottie\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine, global[\"engine-lottie\"]);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine, _lottie) {\n  \"use strict\";\n\n  /**\n   * @title Lottie 3D Rotation\n   * @category 2D\n   */\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity();\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 0, 5);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl);\n  engine.resourceManager.load({\n    urls: [\"https://gw.alipayobjects.com/os/bmw-prod/70bed2d5-7284-44bf-9df6-638f66945ffd.json\", \"https://gw.alipayobjects.com/os/bmw-prod/a2853204-2d4a-48e5-9cb7-b89de8dcc7bf.atlas\"],\n    type: 'lottie'\n  }).then(function (lottieEntity) {\n    rootEntity.addChild(lottieEntity);\n    var lottie = lottieEntity.getComponent(_lottie.LottieAnimation);\n    lottie.isLooping = true;\n    lottieEntity.transform.setScale(0.5, 0.5, 0.5);\n    lottie.play();\n  });\n  engine.run();\n});"},"name":"lottie-3d-rotation","title":"Lottie 3D Rotation","category":"2D","id":"b7eb712e-d623-5788-a1d8-37dba9f41410","sourceCode":"/**\n * @title Lottie 3D Rotation\n * @category 2D\n */\n import { OrbitControl } from \"@oasis-engine/controls\";\n import { Camera, Entity, WebGLEngine } from \"oasis-engine\";\n import { LottieAnimation } from \"@oasis-engine/lottie\";\n \n const engine = new WebGLEngine(\"canvas\");\n engine.canvas.resizeByClientSize();\n \n const scene = engine.sceneManager.activeScene;\n const rootEntity = scene.createRootEntity();\n \n const cameraEntity = rootEntity.createChild(\"Camera\");\n cameraEntity.transform.setPosition(0, 0, 5);\n cameraEntity.addComponent(Camera);\n cameraEntity.addComponent(OrbitControl);\n \n engine.resourceManager.load<Entity>({\n  urls: [\n    \"https://gw.alipayobjects.com/os/bmw-prod/70bed2d5-7284-44bf-9df6-638f66945ffd.json\",\n    \"https://gw.alipayobjects.com/os/bmw-prod/a2853204-2d4a-48e5-9cb7-b89de8dcc7bf.atlas\"\n  ],\n  type: 'lottie'\n}).then((lottieEntity) => {\n  rootEntity.addChild(lottieEntity);\n  const lottie = lottieEntity.getComponent(LottieAnimation);\n  lottie.isLooping = true;\n  lottieEntity.transform.setScale(0.5, 0.5, 0.5);\n  lottie.play();\n});\n \n engine.run();","formatedCode":"<span class=\"token comment\">/**\n * @title Lottie 3D Rotation\n * @category 2D\n */</span>\n <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Camera<span class=\"token punctuation\">,</span> Entity<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> LottieAnimation <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/lottie\"</span><span class=\"token punctuation\">;</span>\n \n <span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n engine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n <span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n <span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n cameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n engine<span class=\"token punctuation\">.</span>resourceManager<span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Entity<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  urls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/70bed2d5-7284-44bf-9df6-638f66945ffd.json\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/a2853204-2d4a-48e5-9cb7-b89de8dcc7bf.atlas\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  type<span class=\"token operator\">:</span> <span class=\"token string\">'lottie'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">lottieEntity</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>lottieEntity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> lottie <span class=\"token operator\">=</span> lottieEntity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>LottieAnimation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  lottie<span class=\"token punctuation\">.</span>isLooping <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  lottieEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  lottie<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@oasis-engine/controls\", \"@oasis-engine/physics-lite\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@oasis-engine/controls\"), require(\"@oasis-engine/physics-lite\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global[\"@oasisEngine/controls\"], global[\"@oasisEngine/physicsLite\"]);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, _controls, _physicsLite) {\n  \"use strict\";\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\", _physicsLite.LitePhysics);\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(\"root\");\n  scene.ambientLight.diffuseSolidColor.setValue(1, 1, 1, 1);\n  scene.ambientLight.diffuseIntensity = 1.2; // init camera\n\n  var cameraEntity = rootEntity.createChild(\"camera\");\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.transform.setPosition(10, 10, 10);\n  cameraEntity.addComponent(_controls.OrbitControl); // init point light\n\n  var light = rootEntity.createChild(\"light\");\n  light.transform.setPosition(0, 3, 0);\n  var pointLight = light.addComponent(_oasisEngine.PointLight);\n  pointLight.intensity = 0.3; // create box test entity\n\n  var cubeSize = 2.0;\n  var boxEntity = rootEntity.createChild(\"BoxEntity\");\n  var boxMtl = new _oasisEngine.BlinnPhongMaterial(engine);\n  var boxRenderer = boxEntity.addComponent(_oasisEngine.MeshRenderer);\n  boxMtl.baseColor.setValue(0.6, 0.3, 0.3, 1.0);\n  boxRenderer.mesh = _oasisEngine.PrimitiveMesh.createCuboid(engine, cubeSize, cubeSize, cubeSize);\n  boxRenderer.setMaterial(boxMtl);\n  var boxCollider = boxEntity.addComponent(_oasisEngine.StaticCollider);\n  var boxColliderShape = new _oasisEngine.BoxColliderShape();\n  boxColliderShape.setSize(cubeSize, cubeSize, cubeSize);\n  boxCollider.addShape(boxColliderShape); // create sphere test entity\n\n  var radius = 1.25;\n  var sphereEntity = rootEntity.createChild(\"SphereEntity\");\n  sphereEntity.transform.setPosition(-5, 0, 0);\n  var sphereMtl = new _oasisEngine.BlinnPhongMaterial(engine);\n  var sphereRenderer = sphereEntity.addComponent(_oasisEngine.MeshRenderer);\n  sphereMtl.baseColor.setValue(Math.random(), Math.random(), Math.random(), 1.0);\n  sphereRenderer.mesh = _oasisEngine.PrimitiveMesh.createSphere(engine, radius);\n  sphereRenderer.setMaterial(sphereMtl);\n  var sphereCollider = sphereEntity.addComponent(_oasisEngine.DynamicCollider);\n  var sphereColliderShape = new _oasisEngine.SphereColliderShape();\n  sphereColliderShape.radius = radius;\n  sphereCollider.addShape(sphereColliderShape);\n\n  var MoveScript = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(MoveScript, _Script);\n\n    function MoveScript() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _Script.call.apply(_Script, [this].concat(args)) || this;\n      _this.pos = new _oasisEngine.Vector3(-5, 0, 0);\n      _this.vel = 0.005;\n      _this.velSign = -1;\n      return _this;\n    }\n\n    var _proto = MoveScript.prototype;\n\n    _proto.onUpdate = function onUpdate(deltaTime) {\n      _Script.prototype.onUpdate.call(this, deltaTime);\n\n      if (this.pos.x >= 5) {\n        this.velSign = -1;\n      }\n\n      if (this.pos.x <= -5) {\n        this.velSign = 1;\n      }\n\n      this.pos.x += deltaTime * this.vel * this.velSign;\n      this.entity.transform.position = this.pos;\n    };\n\n    return MoveScript;\n  }(_oasisEngine.Script); // Collision Detection\n\n\n  var CollisionScript = /*#__PURE__*/function (_Script2) {\n    _inheritsLoose(CollisionScript, _Script2);\n\n    function CollisionScript() {\n      return _Script2.apply(this, arguments) || this;\n    }\n\n    var _proto2 = CollisionScript.prototype;\n\n    _proto2.onTriggerExit = function onTriggerExit() {\n      sphereRenderer.getMaterial().baseColor.setValue(Math.random(), Math.random(), Math.random(), 1.0);\n    };\n\n    _proto2.onTriggerStay = function onTriggerStay() {\n      console.log(\"lalala\");\n    };\n\n    _proto2.onTriggerEnter = function onTriggerEnter() {\n      sphereRenderer.getMaterial().baseColor.setValue(Math.random(), Math.random(), Math.random(), 1.0);\n    };\n\n    return CollisionScript;\n  }(_oasisEngine.Script);\n\n  sphereEntity.addComponent(CollisionScript);\n  sphereEntity.addComponent(MoveScript); // Run engine\n\n  engine.run();\n});"},"name":"lite-collision-detection","title":"Lite Collision Detection","category":"Physics","id":"a720684c-afee-5fe6-9ac5-527c915f95bb","sourceCode":"/**\n * @title Lite Collision Detection\n * @category Physics\n */\nimport {\n  WebGLEngine, SphereColliderShape,\n  BoxColliderShape, Vector3,\n  MeshRenderer, BlinnPhongMaterial, PointLight,\n  PrimitiveMesh, Camera, StaticCollider, Script, DynamicCollider\n} from \"oasis-engine\";\nimport {OrbitControl} from \"@oasis-engine/controls\";\n\nimport { LitePhysics } from \"@oasis-engine/physics-lite\";\n\nconst engine = new WebGLEngine(\"canvas\", LitePhysics);\nengine.canvas.resizeByClientSize();\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity(\"root\");\n\nscene.ambientLight.diffuseSolidColor.setValue(1, 1, 1, 1);\nscene.ambientLight.diffuseIntensity = 1.2;\n\n// init camera\nconst cameraEntity = rootEntity.createChild(\"camera\");\ncameraEntity.addComponent(Camera);\ncameraEntity.transform.setPosition(10, 10, 10);\ncameraEntity.addComponent(OrbitControl);\n\n// init point light\nconst light = rootEntity.createChild(\"light\");\nlight.transform.setPosition(0, 3, 0);\nconst pointLight = light.addComponent(PointLight);\npointLight.intensity = 0.3;\n\n// create box test entity\nconst cubeSize = 2.0;\nconst boxEntity = rootEntity.createChild(\"BoxEntity\");\n\nconst boxMtl = new BlinnPhongMaterial(engine);\nconst boxRenderer = boxEntity.addComponent(MeshRenderer);\nboxMtl.baseColor.setValue(0.6, 0.3, 0.3, 1.0);\nboxRenderer.mesh = PrimitiveMesh.createCuboid(engine, cubeSize, cubeSize, cubeSize);\nboxRenderer.setMaterial(boxMtl);\n\nconst boxCollider = boxEntity.addComponent(StaticCollider);\nconst boxColliderShape = new BoxColliderShape()\nboxColliderShape.setSize(cubeSize, cubeSize, cubeSize);\nboxCollider.addShape(boxColliderShape);\n\n// create sphere test entity\nconst radius = 1.25;\nconst sphereEntity = rootEntity.createChild(\"SphereEntity\");\nsphereEntity.transform.setPosition(-5, 0, 0);\n\nconst sphereMtl = new BlinnPhongMaterial(engine);\nconst sphereRenderer = sphereEntity.addComponent(MeshRenderer);\nsphereMtl.baseColor.setValue(Math.random(), Math.random(), Math.random(), 1.0);\nsphereRenderer.mesh = PrimitiveMesh.createSphere(engine, radius);\nsphereRenderer.setMaterial(sphereMtl);\n\nconst sphereCollider = sphereEntity.addComponent(DynamicCollider);\nconst sphereColliderShape = new SphereColliderShape();\nsphereColliderShape.radius = radius;\nsphereCollider.addShape(sphereColliderShape);\n\nclass MoveScript extends Script {\n  pos: Vector3 = new Vector3(-5, 0, 0);\n  vel: number = 0.005;\n  velSign: number = -1;\n\n  onUpdate(deltaTime: number) {\n    super.onUpdate(deltaTime);\n    if (this.pos.x >= 5) {\n      this.velSign = -1;\n    }\n    if (this.pos.x <= -5) {\n      this.velSign = 1;\n    }\n    this.pos.x += deltaTime * this.vel * this.velSign;\n\n    this.entity.transform.position = this.pos;\n  }\n}\n\n// Collision Detection\nclass CollisionScript extends Script {\n  onTriggerExit() {\n    (<BlinnPhongMaterial>sphereRenderer.getMaterial()).baseColor.setValue(Math.random(), Math.random(), Math.random(), 1.0)\n  }\n\n  onTriggerStay() {\n    console.log(\"lalala\")\n  }\n\n  onTriggerEnter() {\n    (<BlinnPhongMaterial>sphereRenderer.getMaterial()).baseColor.setValue(Math.random(), Math.random(), Math.random(), 1.0)\n  }\n}\n\nsphereEntity.addComponent(CollisionScript);\nsphereEntity.addComponent(MoveScript);\n\n// Run engine\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Lite Collision Detection\n * @category Physics\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  WebGLEngine<span class=\"token punctuation\">,</span> SphereColliderShape<span class=\"token punctuation\">,</span>\n  BoxColliderShape<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span> BlinnPhongMaterial<span class=\"token punctuation\">,</span> PointLight<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> StaticCollider<span class=\"token punctuation\">,</span> Script<span class=\"token punctuation\">,</span> DynamicCollider\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>OrbitControl<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> LitePhysics <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/physics-lite\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">,</span> LitePhysics<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nscene<span class=\"token punctuation\">.</span>ambientLight<span class=\"token punctuation\">.</span>diffuseSolidColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nscene<span class=\"token punctuation\">.</span>ambientLight<span class=\"token punctuation\">.</span>diffuseIntensity <span class=\"token operator\">=</span> <span class=\"token number\">1.2</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// init camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// init point light</span>\n<span class=\"token keyword\">const</span> light <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"light\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlight<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> pointLight <span class=\"token operator\">=</span> light<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>PointLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npointLight<span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// create box test entity</span>\n<span class=\"token keyword\">const</span> cubeSize <span class=\"token operator\">=</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> boxEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BoxEntity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> boxMtl <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> boxRenderer <span class=\"token operator\">=</span> boxEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nboxMtl<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nboxRenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> cubeSize<span class=\"token punctuation\">,</span> cubeSize<span class=\"token punctuation\">,</span> cubeSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nboxRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>boxMtl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> boxCollider <span class=\"token operator\">=</span> boxEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>StaticCollider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> boxColliderShape <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BoxColliderShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nboxColliderShape<span class=\"token punctuation\">.</span><span class=\"token function\">setSize</span><span class=\"token punctuation\">(</span>cubeSize<span class=\"token punctuation\">,</span> cubeSize<span class=\"token punctuation\">,</span> cubeSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nboxCollider<span class=\"token punctuation\">.</span><span class=\"token function\">addShape</span><span class=\"token punctuation\">(</span>boxColliderShape<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// create sphere test entity</span>\n<span class=\"token keyword\">const</span> radius <span class=\"token operator\">=</span> <span class=\"token number\">1.25</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> sphereEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SphereEntity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsphereEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> sphereMtl <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> sphereRenderer <span class=\"token operator\">=</span> sphereEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsphereMtl<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsphereRenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createSphere</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsphereRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>sphereMtl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> sphereCollider <span class=\"token operator\">=</span> sphereEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DynamicCollider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> sphereColliderShape <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SphereColliderShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsphereColliderShape<span class=\"token punctuation\">.</span>radius <span class=\"token operator\">=</span> radius<span class=\"token punctuation\">;</span>\nsphereCollider<span class=\"token punctuation\">.</span><span class=\"token function\">addShape</span><span class=\"token punctuation\">(</span>sphereColliderShape<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MoveScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  pos<span class=\"token operator\">:</span> Vector3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  vel<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">0.005</span><span class=\"token punctuation\">;</span>\n  velSign<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">deltaTime<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span>deltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pos<span class=\"token punctuation\">.</span>x <span class=\"token operator\">>=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>velSign <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pos<span class=\"token punctuation\">.</span>x <span class=\"token operator\">&lt;=</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>velSign <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pos<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+=</span> deltaTime <span class=\"token operator\">*</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>vel <span class=\"token operator\">*</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>velSign<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pos<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Collision Detection</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">CollisionScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">onTriggerExit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>BlinnPhongMaterial<span class=\"token operator\">></span>sphereRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">getMaterial</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">onTriggerStay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lalala\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">onTriggerEnter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>BlinnPhongMaterial<span class=\"token operator\">></span>sphereRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">getMaterial</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nsphereEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>CollisionScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsphereEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MoveScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Run engine</span>\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\", \"@oasis-engine/lottie\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"), require(\"@oasis-engine/lottie\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine, global[\"engine-lottie\"]);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine, _lottie) {\n  \"use strict\";\n\n  /**\n   * @title Lottie Animation\n   * @category 2D\n   */\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var root = engine.sceneManager.activeScene.createRootEntity();\n  var cameraEntity = root.createChild(\"camera\");\n  var camera = cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.transform.setPosition(0, 0, 10);\n  cameraEntity.addComponent(_controls.OrbitControl);\n  engine.resourceManager.load({\n    urls: [\"https://gw.alipayobjects.com/os/bmw-prod/b46be138-e48b-4957-8071-7229661aba53.json\", \"https://gw.alipayobjects.com/os/bmw-prod/6447fc36-db32-4834-9579-24fe33534f55.atlas\"],\n    type: 'lottie'\n  }).then(function (lottieEntity) {\n    root.addChild(lottieEntity);\n    var lottie = lottieEntity.getComponent(_lottie.LottieAnimation);\n    lottie.isLooping = true;\n    lottie.play();\n  });\n  engine.run();\n});"},"name":"lottie","title":"Lottie Animation","category":"2D","id":"ee23ee61-9c14-5ae4-8fa5-36c22015ac78","sourceCode":"/**\n * @title Lottie Animation\n * @category 2D\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport { Camera, Entity, WebGLEngine } from \"oasis-engine\";\nimport { LottieAnimation } from \"@oasis-engine/lottie\";\n\nconst engine = new WebGLEngine(\"canvas\");\n\nengine.canvas.resizeByClientSize();\n\nconst root = engine.sceneManager.activeScene.createRootEntity();\n\nconst cameraEntity = root.createChild(\"camera\");\nconst camera = cameraEntity.addComponent(Camera);\ncameraEntity.transform.setPosition(0, 0, 10);\ncameraEntity.addComponent(OrbitControl);\n\nengine.resourceManager.load<Entity>({\n  urls: [\n    \"https://gw.alipayobjects.com/os/bmw-prod/b46be138-e48b-4957-8071-7229661aba53.json\",\n    \"https://gw.alipayobjects.com/os/bmw-prod/6447fc36-db32-4834-9579-24fe33534f55.atlas\"\n  ],\n  type: 'lottie'\n}).then((lottieEntity) => {\n  root.addChild(lottieEntity);\n  const lottie = lottieEntity.getComponent(LottieAnimation);\n  lottie.isLooping = true;\n  lottie.play();\n});\n\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Lottie Animation\n * @category 2D\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Camera<span class=\"token punctuation\">,</span> Entity<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> LottieAnimation <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/lottie\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> root<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> camera <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager<span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Entity<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  urls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/b46be138-e48b-4957-8071-7229661aba53.json\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/6447fc36-db32-4834-9579-24fe33534f55.atlas\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  type<span class=\"token operator\">:</span> <span class=\"token string\">'lottie'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">lottieEntity</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  root<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>lottieEntity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> lottie <span class=\"token operator\">=</span> lottieEntity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>LottieAnimation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  lottie<span class=\"token punctuation\">.</span>isLooping <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  lottie<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine) {\n  \"use strict\";\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  init();\n\n  function init() {\n    // Create engine\n    var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n    engine.canvas.resizeByClientSize(); // Create root entity\n\n    var rootEntity = engine.sceneManager.activeScene.createRootEntity(); // Create camera\n\n    var cameraEntity = rootEntity.createChild(\"Camera\");\n    cameraEntity.transform.setPosition(0, 10, 10);\n    cameraEntity.transform.lookAt(new _oasisEngine.Vector3(0, 8, 0));\n    var camera = cameraEntity.addComponent(_oasisEngine.Camera);\n    camera.farClipPlane = 2000;\n    camera.fieldOfView = 55;\n    createPlane(engine, rootEntity);\n    engine.run();\n  }\n  /**\n   * Create a plane as a child of entity.\n   */\n\n\n  function createPlane(engine, entity) {\n    engine.resourceManager.load({\n      url: \"https://gw.alipayobjects.com/mdn/rms_2e421e/afts/img/A*fRtNTKrsq3YAAAAAAAAAAAAAARQnAQ\",\n      type: _oasisEngine.AssetType.Texture2D\n    }).then(function (texture) {\n      var planeEntity = entity.createChild(\"plane\");\n      var meshRenderer = planeEntity.addComponent(_oasisEngine.MeshRenderer);\n      var material = new _oasisEngine.Material(engine, shader); // planeEntity.transform.setRotation(-90, 0, 0);\n\n      meshRenderer.mesh = _oasisEngine.PrimitiveMesh.createPlane(engine, 1245, 1245, 100, 100, false);\n      meshRenderer.setMaterial(material);\n      planeEntity.addComponent(PlaneAnimation);\n      var shaderData = material.shaderData;\n      shaderData.setTexture(\"u_baseColor\", texture);\n      shaderData.setColor(\"u_fogColor\", new _oasisEngine.Color(0.25, 0.25, 0.25, 1));\n      shaderData.setFloat(\"u_fogDensity\", 0.004);\n      shaderData.setColor(\"u_color\", new _oasisEngine.Color(86 / 255, 182 / 255, 194 / 255, 1));\n    });\n  }\n  /**\n   * Plane animation script.\n   */\n\n\n  var PlaneAnimation = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(PlaneAnimation, _Script);\n\n    function PlaneAnimation() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _Script.call.apply(_Script, [this].concat(args)) || this;\n      _this._planeMesh = void 0;\n      _this._initZ = void 0;\n      _this._counter = 0;\n      return _this;\n    }\n\n    var _proto = PlaneAnimation.prototype;\n\n    /**\n     * @override\n     * Called when be enabled first time, only once.\n     */\n    _proto.onAwake = function onAwake() {\n      var renderer = this.entity.getComponent(_oasisEngine.MeshRenderer);\n      var mesh = renderer.mesh;\n      var vertexCount = mesh.vertexCount;\n      var positions = mesh.getPositions();\n      var initY = new Array(vertexCount);\n\n      for (var i = 0; i < vertexCount; i++) {\n        var position = positions[i];\n        position.y += Math.random() * 10 - 10;\n        initY[i] = position.y;\n      }\n\n      this._initZ = initY;\n      this._planeMesh = mesh;\n    }\n    /**\n     * @override\n     * The main loop, called frame by frame.\n     * @param deltaTime - The deltaTime when the script update.\n     */\n    ;\n\n    _proto.onUpdate = function onUpdate(deltaTime) {\n      var mesh = this._planeMesh;\n      var counter = this._counter,\n          initZ = this._initZ;\n      var positions = mesh.getPositions();\n\n      for (var i = 0, n = positions.length; i < n; i++) {\n        var position = positions[i];\n        position.y = Math.sin(i + counter * 0.00002) * (initZ[i] - initZ[i] * 0.6);\n        counter += 0.1;\n      }\n\n      mesh.setPositions(positions);\n      mesh.uploadData(false);\n      this._counter = counter;\n    };\n\n    return PlaneAnimation;\n  }(_oasisEngine.Script);\n\n  var shader = _oasisEngine.Shader.create(\"test-plane\", \"uniform mat4 u_MVPMat;\\n    attribute vec4 POSITION;\\n    attribute vec2 TEXCOORD_0;\\n    \\n    uniform mat4 u_MVMat;\\n    \\n    varying vec2 v_uv;\\n    varying vec3 v_position;\\n    \\n    void main() {\\n      v_uv = TEXCOORD_0;\\n      v_position = (u_MVMat * POSITION).xyz;\\n      gl_Position = u_MVPMat * POSITION;\\n    }\", \"\\n    uniform sampler2D u_baseColor;\\n    uniform vec4 u_color;\\n    uniform vec4 u_fogColor;\\n    uniform float u_fogDensity;\\n    \\n    varying vec2 v_uv;\\n    varying vec3 v_position;\\n    \\n\\n    vec4 linearToGamma(vec4 linearIn){\\n      return vec4( pow(linearIn.rgb, vec3(1.0 / 2.2)), linearIn.a);\\n    }\\n    \\n    void main() {\\n      vec4 color = texture2D(u_baseColor, v_uv) * u_color;\\n      float fogDistance = length(v_position);\\n      float fogAmount = 1. - exp2(-u_fogDensity * u_fogDensity * fogDistance * fogDistance * 1.442695);\\n      fogAmount = clamp(fogAmount, 0., 1.);\\n      gl_FragColor = mix(color, u_fogColor, fogAmount); \\n\\n      #ifndef OASIS_COLORSPACE_GAMMA\\n        gl_FragColor = linearToGamma(gl_FragColor);\\n      #endif\\n    }\\n    \");\n});"},"name":"model-mesh","title":"Model Mesh","category":"Mesh","id":"1477c3bc-6a05-58af-bae5-abe39cd2bb11","sourceCode":"/**\n * @title Model Mesh\n * @category Mesh\n */\nimport {\n  AssetType,\n  Camera,\n  Color,\n  Engine,\n  Entity,\n  Material,\n  MeshRenderer,\n  ModelMesh,\n  PrimitiveMesh,\n  Script,\n  Shader,\n  Texture2D,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\n\ninit();\n\nfunction init(): void {\n  // Create engine\n  const engine = new WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n\n  // Create root entity\n  const rootEntity = engine.sceneManager.activeScene.createRootEntity();\n\n  // Create camera\n  const cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 10, 10);\n  cameraEntity.transform.lookAt(new Vector3(0, 8, 0));\n  const camera = cameraEntity.addComponent(Camera);\n  camera.farClipPlane = 2000;\n  camera.fieldOfView = 55;\n\n  createPlane(engine, rootEntity);\n  engine.run();\n}\n\n/**\n * Create a plane as a child of entity.\n */\nfunction createPlane(engine: Engine, entity: Entity): void {\n  engine.resourceManager\n    .load<Texture2D>({\n      url: \"https://gw.alipayobjects.com/mdn/rms_2e421e/afts/img/A*fRtNTKrsq3YAAAAAAAAAAAAAARQnAQ\",\n      type: AssetType.Texture2D\n    })\n    .then((texture) => {\n      const planeEntity = entity.createChild(\"plane\");\n      const meshRenderer = planeEntity.addComponent(MeshRenderer);\n      const material = new Material(engine, shader);\n\n      // planeEntity.transform.setRotation(-90, 0, 0);\n      meshRenderer.mesh = PrimitiveMesh.createPlane(engine, 1245, 1245, 100, 100, false);\n      meshRenderer.setMaterial(material);\n\n      planeEntity.addComponent(PlaneAnimation);\n\n      const { shaderData } = material;\n      shaderData.setTexture(\"u_baseColor\", texture);\n      shaderData.setColor(\"u_fogColor\", new Color(0.25, 0.25, 0.25, 1));\n      shaderData.setFloat(\"u_fogDensity\", 0.004);\n      shaderData.setColor(\"u_color\", new Color(86 / 255, 182 / 255, 194 / 255, 1));\n    });\n}\n\n/**\n * Plane animation script.\n */\nclass PlaneAnimation extends Script {\n  private _planeMesh: ModelMesh;\n  private _initZ: number[];\n  private _counter: number = 0;\n\n  /**\n   * @override\n   * Called when be enabled first time, only once.\n   */\n  onAwake(): void {\n    const renderer = this.entity.getComponent(MeshRenderer);\n    const mesh = <ModelMesh>renderer.mesh;\n    const { vertexCount } = mesh;\n    const positions = mesh.getPositions();\n    const initY = new Array<number>(vertexCount);\n\n    for (var i = 0; i < vertexCount; i++) {\n      const position = positions[i];\n      position.y += Math.random() * 10 - 10;\n      initY[i] = position.y;\n    }\n    this._initZ = initY;\n    this._planeMesh = mesh;\n  }\n\n  /**\n   * @override\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */\n  onUpdate(deltaTime: number): void {\n    const mesh = this._planeMesh;\n    let { _counter: counter, _initZ: initZ } = this;\n    const positions = mesh.getPositions();\n    for (let i = 0, n = positions.length; i < n; i++) {\n      const position = positions[i];\n      position.y = Math.sin(i + counter * 0.00002) * (initZ[i] - initZ[i] * 0.6);\n      counter += 0.1;\n    }\n    mesh.setPositions(positions);\n    mesh.uploadData(false);\n    this._counter = counter;\n  }\n}\n\nconst shader = Shader.create(\n  \"test-plane\",\n  `uniform mat4 u_MVPMat;\n    attribute vec4 POSITION;\n    attribute vec2 TEXCOORD_0;\n    \n    uniform mat4 u_MVMat;\n    \n    varying vec2 v_uv;\n    varying vec3 v_position;\n    \n    void main() {\n      v_uv = TEXCOORD_0;\n      v_position = (u_MVMat * POSITION).xyz;\n      gl_Position = u_MVPMat * POSITION;\n    }`,\n\n  `\n    uniform sampler2D u_baseColor;\n    uniform vec4 u_color;\n    uniform vec4 u_fogColor;\n    uniform float u_fogDensity;\n    \n    varying vec2 v_uv;\n    varying vec3 v_position;\n    \n\n    vec4 linearToGamma(vec4 linearIn){\n      return vec4( pow(linearIn.rgb, vec3(1.0 / 2.2)), linearIn.a);\n    }\n    \n    void main() {\n      vec4 color = texture2D(u_baseColor, v_uv) * u_color;\n      float fogDistance = length(v_position);\n      float fogAmount = 1. - exp2(-u_fogDensity * u_fogDensity * fogDistance * fogDistance * 1.442695);\n      fogAmount = clamp(fogAmount, 0., 1.);\n      gl_FragColor = mix(color, u_fogColor, fogAmount); \n\n      #ifndef OASIS_COLORSPACE_GAMMA\n        gl_FragColor = linearToGamma(gl_FragColor);\n      #endif\n    }\n    `\n);\n","formatedCode":"<span class=\"token comment\">/**\n * @title Model Mesh\n * @category Mesh\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  Color<span class=\"token punctuation\">,</span>\n  Engine<span class=\"token punctuation\">,</span>\n  Entity<span class=\"token punctuation\">,</span>\n  Material<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  ModelMesh<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  Script<span class=\"token punctuation\">,</span>\n  Shader<span class=\"token punctuation\">,</span>\n  Texture2D<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Create engine</span>\n  <span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  engine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create root entity</span>\n  <span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create camera</span>\n  <span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> camera <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  camera<span class=\"token punctuation\">.</span>farClipPlane <span class=\"token operator\">=</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">;</span>\n  camera<span class=\"token punctuation\">.</span>fieldOfView <span class=\"token operator\">=</span> <span class=\"token number\">55</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">createPlane</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> rootEntity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * Create a plane as a child of entity.\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">createPlane</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">engine<span class=\"token operator\">:</span> Engine<span class=\"token punctuation\">,</span> entity<span class=\"token operator\">:</span> Entity</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  engine<span class=\"token punctuation\">.</span>resourceManager\n    <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_2e421e/afts/img/A*fRtNTKrsq3YAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> planeEntity <span class=\"token operator\">=</span> entity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"plane\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> meshRenderer <span class=\"token operator\">=</span> planeEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Material</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> shader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// planeEntity.transform.setRotation(-90, 0, 0);</span>\n      meshRenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createPlane</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">1245</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1245</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      meshRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      planeEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>PlaneAnimation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> shaderData <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> material<span class=\"token punctuation\">;</span>\n      shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setTexture</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_baseColor\"</span><span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_fogColor\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_fogDensity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.004</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_color\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">86</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">182</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">194</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * Plane animation script.\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PlaneAnimation</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> _planeMesh<span class=\"token operator\">:</span> ModelMesh<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> _initZ<span class=\"token operator\">:</span> number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> _counter<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/**\n   * @override\n   * Called when be enabled first time, only once.\n   */</span>\n  <span class=\"token function\">onAwake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> renderer <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> mesh <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>ModelMesh<span class=\"token operator\">></span>renderer<span class=\"token punctuation\">.</span>mesh<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> vertexCount <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> mesh<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> positions <span class=\"token operator\">=</span> mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getPositions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> initY <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token operator\">&lt;</span>number<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>vertexCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> vertexCount<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> position <span class=\"token operator\">=</span> positions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      position<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">-</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n      initY<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> position<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_initZ <span class=\"token operator\">=</span> initY<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_planeMesh <span class=\"token operator\">=</span> mesh<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/**\n   * @override\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */</span>\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span>deltaTime<span class=\"token operator\">:</span> number<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> mesh <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_planeMesh<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> <span class=\"token punctuation\">{</span> _counter<span class=\"token operator\">:</span> counter<span class=\"token punctuation\">,</span> _initZ<span class=\"token operator\">:</span> initZ <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> positions <span class=\"token operator\">=</span> mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getPositions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> n <span class=\"token operator\">=</span> positions<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> position <span class=\"token operator\">=</span> positions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      position<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> counter <span class=\"token operator\">*</span> <span class=\"token number\">0.00002</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>initZ<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> initZ<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      counter <span class=\"token operator\">+=</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    mesh<span class=\"token punctuation\">.</span><span class=\"token function\">setPositions</span><span class=\"token punctuation\">(</span>positions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    mesh<span class=\"token punctuation\">.</span><span class=\"token function\">uploadData</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_counter <span class=\"token operator\">=</span> counter<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> shader <span class=\"token operator\">=</span> Shader<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"test-plane\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">uniform mat4 u_MVPMat;\n    attribute vec4 POSITION;\n    attribute vec2 TEXCOORD_0;\n    \n    uniform mat4 u_MVMat;\n    \n    varying vec2 v_uv;\n    varying vec3 v_position;\n    \n    void main() {\n      v_uv = TEXCOORD_0;\n      v_position = (u_MVMat * POSITION).xyz;\n      gl_Position = u_MVPMat * POSITION;\n    }</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n    uniform sampler2D u_baseColor;\n    uniform vec4 u_color;\n    uniform vec4 u_fogColor;\n    uniform float u_fogDensity;\n    \n    varying vec2 v_uv;\n    varying vec3 v_position;\n    \n\n    vec4 linearToGamma(vec4 linearIn){\n      return vec4( pow(linearIn.rgb, vec3(1.0 / 2.2)), linearIn.a);\n    }\n    \n    void main() {\n      vec4 color = texture2D(u_baseColor, v_uv) * u_color;\n      float fogDistance = length(v_position);\n      float fogAmount = 1. - exp2(-u_fogDensity * u_fogDensity * fogDistance * fogDistance * 1.442695);\n      fogAmount = clamp(fogAmount, 0., 1.);\n      gl_FragColor = mix(color, u_fogColor, fogAmount); \n\n      #ifndef OASIS_COLORSPACE_GAMMA\n        gl_FragColor = linearToGamma(gl_FragColor);\n      #endif\n    }\n    </span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@oasis-engine/controls\", \"@oasis-engine/spine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@oasis-engine/controls\"), require(\"@oasis-engine/spine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global[\"@oasisEngine/controls\"], global.oasisSpine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, _controls, _spine) {\n  \"use strict\";\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  /**\n   * Script for rotate.\n   */\n  var RotateScript = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(RotateScript, _Script);\n\n    function RotateScript() {\n      return _Script.apply(this, arguments) || this;\n    }\n\n    var _proto = RotateScript.prototype;\n\n    /**\n     * @override\n     * The main loop, called frame by frame.\n     * @param deltaTime - The deltaTime when the script update.\n     */\n    _proto.onUpdate = function onUpdate(deltaTime) {\n      this.entity.transform.rotate(0.0, 0.6, 0);\n    };\n\n    return RotateScript;\n  }(_oasisEngine.Script);\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var background = scene.background;\n  var rootEntity = scene.createRootEntity(); // init full screen camera\n\n  var cameraEntity = rootEntity.createChild(\"fullscreen-camera\");\n  var camera = cameraEntity.addComponent(_oasisEngine.Camera);\n  camera.cullingMask = _oasisEngine.Layer.Layer0;\n  camera.clearFlags = _oasisEngine.CameraClearFlags.DepthColor;\n  cameraEntity.transform.setPosition(10, 10, 10);\n  cameraEntity.transform.lookAt(new _oasisEngine.Vector3(0, 0, 0));\n  cameraEntity.addComponent(_controls.OrbitControl);\n  var lightEntity = rootEntity.createChild(\"Light\");\n  lightEntity.transform.setRotation(-30, 0, 0);\n  lightEntity.addComponent(_oasisEngine.DirectLight); // init cube\n\n  var cubeEntity = rootEntity.createChild(\"cube\");\n  cubeEntity.transform.setPosition(-3, 0, 3);\n  var renderer = cubeEntity.addComponent(_oasisEngine.MeshRenderer);\n  renderer.mesh = _oasisEngine.PrimitiveMesh.createCuboid(engine, 2, 2, 2);\n  var material = new _oasisEngine.BlinnPhongMaterial(engine);\n  material.baseColor = new _oasisEngine.Color(1, 0.25, 0.25, 1);\n  renderer.setMaterial(material);\n  cubeEntity.addComponent(RotateScript); //----------------------------------------------------------------------------------------------------------------------\n  // init window camera\n\n  var windowEntity = scene.createRootEntity();\n  windowEntity.layer = _oasisEngine.Layer.Layer1;\n  var windowCameraEntity = windowEntity.createChild(\"window-camera\");\n  var windowCamera = windowCameraEntity.addComponent(_oasisEngine.Camera);\n  windowCamera.cullingMask = _oasisEngine.Layer.Layer1;\n  windowCamera.viewport.setValue(0.5, 0.2, 0.3, 0.6);\n  windowCamera.clearFlags = _oasisEngine.CameraClearFlags.Depth;\n  windowCamera.farClipPlane = 200;\n  windowCameraEntity.transform.setPosition(0, 3, 20);\n  engine.run();\n  engine.resourceManager.load({\n    urls: [\"https://gw.alipayobjects.com/os/OasisHub/a66ef194-6bc8-4325-9a59-6ea9097225b1/1620888427489.json\", \"https://gw.alipayobjects.com/os/OasisHub/a1e3e67b-a783-4832-ba1b-37a95bd55291/1620888427490.atlas\", \"https://gw.alipayobjects.com/zos/OasisHub/a3ca8f62-1068-43a5-bb64-5c9a0f823dde/1620888427490.png\"],\n    type: \"spine\"\n  }).then(function (spineEntity) {\n    spineEntity.layer = _oasisEngine.Layer.Layer1;\n    windowEntity.addChild(spineEntity);\n    var spineAnimation = spineEntity.getComponent(_spine.SpineAnimation);\n    spineAnimation.state.setAnimation(0, \"walk\", true);\n    spineAnimation.scale = 0.01;\n  });\n  engine.resourceManager.load({\n    urls: [\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5w6_Rr6ML6IAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*TiT2TbN5cG4AAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*8GF6Q4LZefUAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*D5pdRqUHC3IAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_FooTIp6pNIAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*CYGZR7ogZfoAAAAAAAAAAAAAARQnAQ\"],\n    type: _oasisEngine.AssetType.TextureCube\n  }).then(function (cubeMap1) {\n    // Add skybox background\n    background.mode = _oasisEngine.BackgroundMode.Sky;\n    var skyMaterial = background.sky.material = new _oasisEngine.SkyBoxMaterial(engine);\n    skyMaterial.textureCubeMap = cubeMap1;\n    background.sky.mesh = _oasisEngine.PrimitiveMesh.createCuboid(engine, 2, 2, 2);\n  });\n});"},"name":"multi-camera","title":"Multi Camera","category":"Camera","id":"76b87b7c-419c-53b0-aba8-cdc6c6deaa9b","sourceCode":"/**\n * @title Multi Camera\n * @category Camera\n */\n\nimport {\n  CameraClearFlags,\n  DirectLight,\n  AssetType,\n  Entity,\n  Camera,\n  WebGLEngine,\n  Vector3,\n  MeshRenderer,\n  BlinnPhongMaterial,\n  Color,\n  BackgroundMode,\n  SkyBoxMaterial,\n  PrimitiveMesh,\n  Layer,\n  Script,\n  TextureCubeMap\n} from \"oasis-engine\";\nimport {OrbitControl} from \"@oasis-engine/controls\";\nimport {SpineAnimation} from \"@oasis-engine/spine\";\n\n/**\n * Script for rotate.\n */\nclass RotateScript extends Script {\n  /**\n   * @override\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */\n  onUpdate(deltaTime: number): void {\n    this.entity.transform.rotate(0.0, 0.6, 0);\n  }\n}\n\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\nconst scene = engine.sceneManager.activeScene;\nconst {background} = scene;\nconst rootEntity = scene.createRootEntity();\n\n// init full screen camera\nconst cameraEntity = rootEntity.createChild(\"fullscreen-camera\");\nconst camera = cameraEntity.addComponent(Camera);\ncamera.cullingMask = Layer.Layer0;\ncamera.clearFlags = CameraClearFlags.DepthColor;\ncameraEntity.transform.setPosition(10, 10, 10);\ncameraEntity.transform.lookAt(new Vector3(0, 0, 0));\ncameraEntity.addComponent(OrbitControl);\n\nconst lightEntity = rootEntity.createChild(\"Light\");\nlightEntity.transform.setRotation(-30, 0, 0);\nlightEntity.addComponent(DirectLight);\n\n// init cube\nconst cubeEntity = rootEntity.createChild(\"cube\");\ncubeEntity.transform.setPosition(-3, 0, 3);\nconst renderer = cubeEntity.addComponent(MeshRenderer);\nrenderer.mesh = PrimitiveMesh.createCuboid(engine, 2, 2, 2);\nconst material = new BlinnPhongMaterial(engine);\nmaterial.baseColor = new Color(1, 0.25, 0.25, 1);\nrenderer.setMaterial(material);\ncubeEntity.addComponent(RotateScript);\n\n//----------------------------------------------------------------------------------------------------------------------\n// init window camera\nconst windowEntity = scene.createRootEntity();\nwindowEntity.layer = Layer.Layer1;\nconst windowCameraEntity = windowEntity.createChild(\"window-camera\");\nconst windowCamera = windowCameraEntity.addComponent(Camera);\nwindowCamera.cullingMask = Layer.Layer1;\nwindowCamera.viewport.setValue(0.5, 0.2, 0.3, 0.6);\nwindowCamera.clearFlags = CameraClearFlags.Depth;\nwindowCamera.farClipPlane = 200;\nwindowCameraEntity.transform.setPosition(0, 3, 20);\n\nengine.run();\n\nengine.resourceManager\n  .load({\n    urls: [\n      \"https://gw.alipayobjects.com/os/OasisHub/a66ef194-6bc8-4325-9a59-6ea9097225b1/1620888427489.json\",\n      \"https://gw.alipayobjects.com/os/OasisHub/a1e3e67b-a783-4832-ba1b-37a95bd55291/1620888427490.atlas\",\n      \"https://gw.alipayobjects.com/zos/OasisHub/a3ca8f62-1068-43a5-bb64-5c9a0f823dde/1620888427490.png\"\n    ],\n    type: \"spine\"\n  })\n  .then((spineEntity: Entity) => {\n    spineEntity.layer = Layer.Layer1;\n    windowEntity.addChild(spineEntity);\n    const spineAnimation = spineEntity.getComponent(SpineAnimation);\n    spineAnimation.state.setAnimation(0, \"walk\", true);\n    spineAnimation.scale = 0.01;\n  });\n\nengine.resourceManager\n  .load<TextureCubeMap>({\n      urls: [\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5w6_Rr6ML6IAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*TiT2TbN5cG4AAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*8GF6Q4LZefUAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*D5pdRqUHC3IAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_FooTIp6pNIAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*CYGZR7ogZfoAAAAAAAAAAAAAARQnAQ\"\n      ],\n      type: AssetType.TextureCube\n    }\n  )\n  .then((cubeMap1) => {\n    // Add skybox background\n    background.mode = BackgroundMode.Sky;\n    const skyMaterial = (background.sky.material = new SkyBoxMaterial(engine));\n    skyMaterial.textureCubeMap = cubeMap1;\n    background.sky.mesh = PrimitiveMesh.createCuboid(engine, 2, 2, 2);\n  })\n","formatedCode":"<span class=\"token comment\">/**\n * @title Multi Camera\n * @category Camera\n */</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  CameraClearFlags<span class=\"token punctuation\">,</span>\n  DirectLight<span class=\"token punctuation\">,</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  Entity<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  WebGLEngine<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  BlinnPhongMaterial<span class=\"token punctuation\">,</span>\n  Color<span class=\"token punctuation\">,</span>\n  BackgroundMode<span class=\"token punctuation\">,</span>\n  SkyBoxMaterial<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  Layer<span class=\"token punctuation\">,</span>\n  Script<span class=\"token punctuation\">,</span>\n  TextureCubeMap\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>OrbitControl<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>SpineAnimation<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/spine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Script for rotate.\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">RotateScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/**\n   * @override\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */</span>\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span>deltaTime<span class=\"token operator\">:</span> number<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>background<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// init full screen camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fullscreen-camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> camera <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncamera<span class=\"token punctuation\">.</span>cullingMask <span class=\"token operator\">=</span> Layer<span class=\"token punctuation\">.</span>Layer0<span class=\"token punctuation\">;</span>\ncamera<span class=\"token punctuation\">.</span>clearFlags <span class=\"token operator\">=</span> CameraClearFlags<span class=\"token punctuation\">.</span>DepthColor<span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> lightEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Light\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setRotation</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// init cube</span>\n<span class=\"token keyword\">const</span> cubeEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cube\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncubeEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> renderer <span class=\"token operator\">=</span> cubeEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmaterial<span class=\"token punctuation\">.</span>baseColor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncubeEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>RotateScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//----------------------------------------------------------------------------------------------------------------------</span>\n<span class=\"token comment\">// init window camera</span>\n<span class=\"token keyword\">const</span> windowEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nwindowEntity<span class=\"token punctuation\">.</span>layer <span class=\"token operator\">=</span> Layer<span class=\"token punctuation\">.</span>Layer1<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> windowCameraEntity <span class=\"token operator\">=</span> windowEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"window-camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> windowCamera <span class=\"token operator\">=</span> windowCameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nwindowCamera<span class=\"token punctuation\">.</span>cullingMask <span class=\"token operator\">=</span> Layer<span class=\"token punctuation\">.</span>Layer1<span class=\"token punctuation\">;</span>\nwindowCamera<span class=\"token punctuation\">.</span>viewport<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nwindowCamera<span class=\"token punctuation\">.</span>clearFlags <span class=\"token operator\">=</span> CameraClearFlags<span class=\"token punctuation\">.</span>Depth<span class=\"token punctuation\">;</span>\nwindowCamera<span class=\"token punctuation\">.</span>farClipPlane <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">;</span>\nwindowCameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    urls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/os/OasisHub/a66ef194-6bc8-4325-9a59-6ea9097225b1/1620888427489.json\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/os/OasisHub/a1e3e67b-a783-4832-ba1b-37a95bd55291/1620888427490.atlas\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/zos/OasisHub/a3ca8f62-1068-43a5-bb64-5c9a0f823dde/1620888427490.png\"</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> <span class=\"token string\">\"spine\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">spineEntity<span class=\"token operator\">:</span> Entity</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    spineEntity<span class=\"token punctuation\">.</span>layer <span class=\"token operator\">=</span> Layer<span class=\"token punctuation\">.</span>Layer1<span class=\"token punctuation\">;</span>\n    windowEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>spineEntity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> spineAnimation <span class=\"token operator\">=</span> spineEntity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>SpineAnimation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    spineAnimation<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span><span class=\"token function\">setAnimation</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"walk\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    spineAnimation<span class=\"token punctuation\">.</span>scale <span class=\"token operator\">=</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>TextureCubeMap<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      urls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5w6_Rr6ML6IAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*TiT2TbN5cG4AAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*8GF6Q4LZefUAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*D5pdRqUHC3IAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_FooTIp6pNIAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*CYGZR7ogZfoAAAAAAAAAAAAAARQnAQ\"</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>TextureCube\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cubeMap1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Add skybox background</span>\n    background<span class=\"token punctuation\">.</span>mode <span class=\"token operator\">=</span> BackgroundMode<span class=\"token punctuation\">.</span>Sky<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> skyMaterial <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>background<span class=\"token punctuation\">.</span>sky<span class=\"token punctuation\">.</span>material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SkyBoxMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    skyMaterial<span class=\"token punctuation\">.</span>textureCubeMap <span class=\"token operator\">=</span> cubeMap1<span class=\"token punctuation\">;</span>\n    background<span class=\"token punctuation\">.</span>sky<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title OBJ Loader Use Model Mesh\n   * @category Mesh\n   */\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // init camera\n\n  var cameraEntity = rootEntity.createChild(\"camera\");\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl);\n  cameraEntity.transform.setPosition(0.5, 0.5, 0.5);\n  cameraEntity.transform.lookAt(new _oasisEngine.Vector3(0, 0, 0)); // init light\n\n  rootEntity.addComponent(_oasisEngine.DirectLight);\n  fetch(\"https://gw.alipayobjects.com/os/bmw-prod/b885a803-5315-44f0-af54-6787ec47ed1b.obj\").then(function (res) {\n    return res.text();\n  }).then(function (objText) {\n    var lines = objText.split(/\\n/);\n    var positions = [];\n    var indices = [];\n    lines.map(function (lineText) {\n      return lineText.split(\" \");\n    }).forEach(function (parseTexts) {\n      if (parseTexts[0] === \"v\") {\n        positions.push(new _oasisEngine.Vector3(parseFloat(parseTexts[1]), parseFloat(parseTexts[2]), parseFloat(parseTexts[3])));\n      } else if (parseTexts[0] === \"f\") {\n        indices.push(parseInt(parseTexts[1]) - 1, parseInt(parseTexts[2]) - 1, parseInt(parseTexts[3]) - 1);\n      }\n    });\n    var mesh = new _oasisEngine.ModelMesh(engine);\n    mesh.setPositions(positions);\n    mesh.setIndices(Uint16Array.from(indices));\n    mesh.addSubMesh(0, indices.length, _oasisEngine.MeshTopology.Triangles);\n    mesh.uploadData(false); // init cube\n\n    var cubeEntity = rootEntity.createChild(\"cube\");\n    var renderer = cubeEntity.addComponent(_oasisEngine.MeshRenderer);\n    renderer.mesh = mesh;\n    var material = new _oasisEngine.BlinnPhongMaterial(engine);\n    material.baseColor = new _oasisEngine.Color(1, 0.25, 0.25, 1);\n    renderer.setMaterial(material);\n  });\n  engine.run();\n});"},"name":"obj-loader","title":"OBJ Loader Use Model Mesh","category":"Mesh","id":"a44bf202-1546-5e99-8895-98d5d49b7ec5","sourceCode":"/**\n * @title OBJ Loader Use Model Mesh\n * @category Mesh\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport {\n  BlinnPhongMaterial,\n  Camera,\n  Color,\n  DirectLight,\n  MeshRenderer,\n  MeshTopology,\n  ModelMesh,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\n\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// init camera\nconst cameraEntity = rootEntity.createChild(\"camera\");\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\ncameraEntity.transform.setPosition(0.5, 0.5, 0.5);\ncameraEntity.transform.lookAt(new Vector3(0, 0, 0));\n\n// init light\nrootEntity.addComponent(DirectLight);\n\nfetch(\"https://gw.alipayobjects.com/os/bmw-prod/b885a803-5315-44f0-af54-6787ec47ed1b.obj\")\n  .then((res) => res.text())\n  .then((objText) => {\n    const lines = objText.split(/\\n/);\n    const positions = [];\n    const indices: number[] = [];\n    lines\n      .map((lineText) => lineText.split(\" \"))\n      .forEach((parseTexts) => {\n        if (parseTexts[0] === \"v\") {\n          positions.push(new Vector3(parseFloat(parseTexts[1]), parseFloat(parseTexts[2]), parseFloat(parseTexts[3])));\n        } else if (parseTexts[0] === \"f\") {\n          indices.push(parseInt(parseTexts[1]) - 1, parseInt(parseTexts[2]) - 1, parseInt(parseTexts[3]) - 1);\n        }\n      });\n\n    const mesh = new ModelMesh(engine);\n    mesh.setPositions(positions);\n    mesh.setIndices(Uint16Array.from(indices));\n    mesh.addSubMesh(0, indices.length, MeshTopology.Triangles);\n    mesh.uploadData(false);\n\n    // init cube\n    const cubeEntity = rootEntity.createChild(\"cube\");\n    const renderer = cubeEntity.addComponent(MeshRenderer);\n    renderer.mesh = mesh;\n    const material = new BlinnPhongMaterial(engine);\n    material.baseColor = new Color(1, 0.25, 0.25, 1);\n    renderer.setMaterial(material);\n  });\n\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title OBJ Loader Use Model Mesh\n * @category Mesh\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  BlinnPhongMaterial<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  Color<span class=\"token punctuation\">,</span>\n  DirectLight<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  MeshTopology<span class=\"token punctuation\">,</span>\n  ModelMesh<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// init camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// init light</span>\nrootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/b885a803-5315-44f0-af54-6787ec47ed1b.obj\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> res<span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">objText</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> lines <span class=\"token operator\">=</span> objText<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\n</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> positions <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> indices<span class=\"token operator\">:</span> number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    lines\n      <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">lineText</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> lineText<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">parseTexts</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>parseTexts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"v\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          positions<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>parseTexts<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>parseTexts<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>parseTexts<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>parseTexts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"f\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          indices<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>parseTexts<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>parseTexts<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>parseTexts<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> mesh <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ModelMesh</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    mesh<span class=\"token punctuation\">.</span><span class=\"token function\">setPositions</span><span class=\"token punctuation\">(</span>positions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    mesh<span class=\"token punctuation\">.</span><span class=\"token function\">setIndices</span><span class=\"token punctuation\">(</span>Uint16Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>indices<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    mesh<span class=\"token punctuation\">.</span><span class=\"token function\">addSubMesh</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> indices<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> MeshTopology<span class=\"token punctuation\">.</span>Triangles<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    mesh<span class=\"token punctuation\">.</span><span class=\"token function\">uploadData</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// init cube</span>\n    <span class=\"token keyword\">const</span> cubeEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cube\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> renderer <span class=\"token operator\">=</span> cubeEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    renderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> mesh<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    material<span class=\"token punctuation\">.</span>baseColor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    renderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title Ortho Controls\n   * @category Camera\n   */\n  // Create engine object\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // Create camera\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 0, 50);\n  var camera = cameraEntity.addComponent(_oasisEngine.Camera);\n  camera.isOrthographic = true; // Add camera control.\n\n  var cameraControl = cameraEntity.addComponent(_controls.OrthoControl);\n  var mainElement = engine.canvas._webCanvas;\n  mainElement.addEventListener(\"wheel\", function (e) {\n    // @ts-ignore\n    if (e.deltaY < 0) {\n      cameraControl.zoomIn();\n    } else {\n      cameraControl.zoomOut();\n    }\n  }, false);\n  mainElement.addEventListener(\"mousedown\", function (e) {\n    // @ts-ignore\n    cameraControl.panStart(e.clientX, e.clientY);\n  });\n  mainElement.addEventListener(\"mousemove\", function (e) {\n    // @ts-ignore\n    cameraControl.panMove(e.clientX, e.clientY);\n  });\n  mainElement.addEventListener(\"mouseup\", function (e) {\n    // @ts-ignore\n    cameraControl.panEnd();\n  });\n  engine.resourceManager.load({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*KjnzTpE8LdAAAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }).then(function (texture) {\n    // Create sprite entity.\n    var spriteEntity = rootEntity.createChild(\"sprite\");\n    var spriteRenderer = spriteEntity.addComponent(_oasisEngine.SpriteRenderer);\n    spriteRenderer.sprite = new _oasisEngine.Sprite(engine, texture);\n  });\n  engine.run();\n});"},"name":"ortho-control","title":"Ortho Controls","category":"Camera","id":"e25950bb-995f-5149-b98d-3407ae30b1d9","sourceCode":"/**\n * @title Ortho Controls\n * @category Camera\n */\nimport { OrthoControl } from \"@oasis-engine/controls\";\nimport { AssetType, Camera, Sprite, SpriteRenderer, Texture2D, WebGLEngine } from \"oasis-engine\";\n\n// Create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// Create camera\nconst cameraEntity = rootEntity.createChild(\"Camera\");\ncameraEntity.transform.setPosition(0, 0, 50);\nconst camera = cameraEntity.addComponent(Camera);\ncamera.isOrthographic = true;\n\n// Add camera control.\nconst cameraControl = cameraEntity.addComponent(OrthoControl);\nconst mainElement = engine.canvas._webCanvas;\nmainElement.addEventListener(\n  \"wheel\",\n  (e) => {\n    // @ts-ignore\n    if (e.deltaY < 0) {\n      cameraControl.zoomIn();\n    } else {\n      cameraControl.zoomOut();\n    }\n  },\n  false\n);\nmainElement.addEventListener(\"mousedown\", (e) => {\n  // @ts-ignore\n  cameraControl.panStart(e.clientX, e.clientY);\n});\nmainElement.addEventListener(\"mousemove\", (e) => {\n  // @ts-ignore\n  cameraControl.panMove(e.clientX, e.clientY);\n});\nmainElement.addEventListener(\"mouseup\", (e) => {\n  // @ts-ignore\n  cameraControl.panEnd();\n});\n\nengine.resourceManager\n  .load<Texture2D>({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*KjnzTpE8LdAAAAAAAAAAAAAAARQnAQ\",\n    type: AssetType.Texture2D\n  })\n  .then((texture) => {\n    // Create sprite entity.\n    const spriteEntity = rootEntity.createChild(\"sprite\");\n    const spriteRenderer = spriteEntity.addComponent(SpriteRenderer);\n    spriteRenderer.sprite = new Sprite(engine, texture);\n  });\n\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Ortho Controls\n * @category Camera\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrthoControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AssetType<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> Sprite<span class=\"token punctuation\">,</span> SpriteRenderer<span class=\"token punctuation\">,</span> Texture2D<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> camera <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncamera<span class=\"token punctuation\">.</span>isOrthographic <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Add camera control.</span>\n<span class=\"token keyword\">const</span> cameraControl <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrthoControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> mainElement <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>_webCanvas<span class=\"token punctuation\">;</span>\nmainElement<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"wheel\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// @ts-ignore</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>deltaY <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      cameraControl<span class=\"token punctuation\">.</span><span class=\"token function\">zoomIn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      cameraControl<span class=\"token punctuation\">.</span><span class=\"token function\">zoomOut</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmainElement<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// @ts-ignore</span>\n  cameraControl<span class=\"token punctuation\">.</span><span class=\"token function\">panStart</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>clientX<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>clientY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmainElement<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousemove\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// @ts-ignore</span>\n  cameraControl<span class=\"token punctuation\">.</span><span class=\"token function\">panMove</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>clientX<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>clientY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmainElement<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mouseup\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// @ts-ignore</span>\n  cameraControl<span class=\"token punctuation\">.</span><span class=\"token function\">panEnd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*KjnzTpE8LdAAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Create sprite entity.</span>\n    <span class=\"token keyword\">const</span> spriteEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sprite\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> spriteRenderer <span class=\"token operator\">=</span> spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    spriteRenderer<span class=\"token punctuation\">.</span>sprite <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@oasis-engine/controls\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@oasis-engine/controls\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global[\"@oasisEngine/controls\"]);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, _controls) {\n  \"use strict\";\n\n  /**\n   * @title Multi Viewport\n   * @category Camera\n   */\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var background = scene.background;\n  var rootEntity = scene.createRootEntity(); // init camera\n\n  var leftCameraEntity = rootEntity.createChild(\"left-camera\");\n  var leftCamera = leftCameraEntity.addComponent(_oasisEngine.Camera);\n  leftCamera.viewport.setValue(0, 0, 0.5, 1);\n  leftCamera.clearFlags = _oasisEngine.CameraClearFlags.Depth;\n  leftCameraEntity.transform.setPosition(10, 10, 10);\n  leftCameraEntity.transform.lookAt(new _oasisEngine.Vector3(0, 0, 0));\n  leftCameraEntity.addComponent(_controls.OrbitControl);\n  var rightCameraEntity = rootEntity.createChild(\"right-camera\");\n  var rightCamera = rightCameraEntity.addComponent(_oasisEngine.Camera);\n  rightCamera.viewport.setValue(0.5, 0, 0.5, 1);\n  rightCamera.clearFlags = _oasisEngine.CameraClearFlags.Depth;\n  rightCameraEntity.transform.setPosition(10, 10, 10);\n  rightCameraEntity.transform.lookAt(new _oasisEngine.Vector3(0, 0, 0));\n  rightCameraEntity.addComponent(_controls.OrbitControl);\n  var lightEntity = rootEntity.createChild(\"Light\");\n  lightEntity.transform.setRotation(-30, 0, 0);\n  lightEntity.addComponent(_oasisEngine.DirectLight); // init cube\n\n  var cubeEntity = rootEntity.createChild(\"cube\");\n  var renderer = cubeEntity.addComponent(_oasisEngine.MeshRenderer);\n  renderer.mesh = _oasisEngine.PrimitiveMesh.createCuboid(engine, 1, 1, 1);\n  var material = new _oasisEngine.BlinnPhongMaterial(engine);\n  material.baseColor = new _oasisEngine.Color(1, 0.25, 0.25, 1);\n  renderer.setMaterial(material);\n  engine.run();\n  engine.resourceManager.load({\n    urls: [\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5w6_Rr6ML6IAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*TiT2TbN5cG4AAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*8GF6Q4LZefUAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*D5pdRqUHC3IAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_FooTIp6pNIAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*CYGZR7ogZfoAAAAAAAAAAAAAARQnAQ\"],\n    type: _oasisEngine.AssetType.TextureCube\n  }).then(function (cubeMap1) {\n    // Add skybox background\n    background.mode = _oasisEngine.BackgroundMode.Sky;\n    var skyMaterial = background.sky.material = new _oasisEngine.SkyBoxMaterial(engine);\n    skyMaterial.textureCubeMap = cubeMap1;\n    background.sky.mesh = _oasisEngine.PrimitiveMesh.createCuboid(engine, 2, 2, 2);\n  });\n});"},"name":"multi-viewport","title":"Multi Viewport","category":"Camera","id":"58cf04f5-621d-52a6-9a70-5eb3c4804d2f","sourceCode":"/**\n * @title Multi Viewport\n * @category Camera\n */\n\nimport {\n  WebGLEngine,\n  CameraClearFlags,\n  DirectLight,\n  AssetType,\n  Camera,\n  Vector3,\n  MeshRenderer,\n  BlinnPhongMaterial,\n  Color,\n  BackgroundMode,\n  SkyBoxMaterial,\n  PrimitiveMesh,\n  TextureCubeMap\n} from \"oasis-engine\";\nimport {OrbitControl} from \"@oasis-engine/controls\";\n\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\nconst scene = engine.sceneManager.activeScene;\nconst {background} = scene;\nconst rootEntity = scene.createRootEntity();\n\n// init camera\nconst leftCameraEntity = rootEntity.createChild(\"left-camera\");\nconst leftCamera = leftCameraEntity.addComponent(Camera);\nleftCamera.viewport.setValue(0, 0, 0.5, 1);\nleftCamera.clearFlags = CameraClearFlags.Depth;\nleftCameraEntity.transform.setPosition(10, 10, 10);\nleftCameraEntity.transform.lookAt(new Vector3(0, 0, 0));\nleftCameraEntity.addComponent(OrbitControl);\n\nconst rightCameraEntity = rootEntity.createChild(\"right-camera\");\nconst rightCamera = rightCameraEntity.addComponent(Camera);\nrightCamera.viewport.setValue(0.5, 0, 0.5, 1);\nrightCamera.clearFlags = CameraClearFlags.Depth;\nrightCameraEntity.transform.setPosition(10, 10, 10);\nrightCameraEntity.transform.lookAt(new Vector3(0, 0, 0));\nrightCameraEntity.addComponent(OrbitControl);\n\nconst lightEntity = rootEntity.createChild(\"Light\");\nlightEntity.transform.setRotation(-30, 0, 0);\nlightEntity.addComponent(DirectLight);\n\n// init cube\nconst cubeEntity = rootEntity.createChild(\"cube\");\nconst renderer = cubeEntity.addComponent(MeshRenderer);\nrenderer.mesh = PrimitiveMesh.createCuboid(engine, 1, 1, 1);\nconst material = new BlinnPhongMaterial(engine);\nmaterial.baseColor = new Color(1, 0.25, 0.25, 1);\nrenderer.setMaterial(material);\n\nengine.run();\n\nengine.resourceManager\n  .load<TextureCubeMap>({\n      urls: [\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5w6_Rr6ML6IAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*TiT2TbN5cG4AAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*8GF6Q4LZefUAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*D5pdRqUHC3IAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_FooTIp6pNIAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*CYGZR7ogZfoAAAAAAAAAAAAAARQnAQ\"\n      ],\n      type: AssetType.TextureCube\n    }\n  )\n  .then((cubeMap1) => {\n    // Add skybox background\n    background.mode = BackgroundMode.Sky;\n    const skyMaterial = (background.sky.material = new SkyBoxMaterial(engine));\n    skyMaterial.textureCubeMap = cubeMap1;\n    background.sky.mesh = PrimitiveMesh.createCuboid(engine, 2, 2, 2);\n  })\n","formatedCode":"<span class=\"token comment\">/**\n * @title Multi Viewport\n * @category Camera\n */</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  WebGLEngine<span class=\"token punctuation\">,</span>\n  CameraClearFlags<span class=\"token punctuation\">,</span>\n  DirectLight<span class=\"token punctuation\">,</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  BlinnPhongMaterial<span class=\"token punctuation\">,</span>\n  Color<span class=\"token punctuation\">,</span>\n  BackgroundMode<span class=\"token punctuation\">,</span>\n  SkyBoxMaterial<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  TextureCubeMap\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>OrbitControl<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>background<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// init camera</span>\n<span class=\"token keyword\">const</span> leftCameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"left-camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> leftCamera <span class=\"token operator\">=</span> leftCameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nleftCamera<span class=\"token punctuation\">.</span>viewport<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nleftCamera<span class=\"token punctuation\">.</span>clearFlags <span class=\"token operator\">=</span> CameraClearFlags<span class=\"token punctuation\">.</span>Depth<span class=\"token punctuation\">;</span>\nleftCameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nleftCameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nleftCameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> rightCameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"right-camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rightCamera <span class=\"token operator\">=</span> rightCameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrightCamera<span class=\"token punctuation\">.</span>viewport<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrightCamera<span class=\"token punctuation\">.</span>clearFlags <span class=\"token operator\">=</span> CameraClearFlags<span class=\"token punctuation\">.</span>Depth<span class=\"token punctuation\">;</span>\nrightCameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrightCameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrightCameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> lightEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Light\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setRotation</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// init cube</span>\n<span class=\"token keyword\">const</span> cubeEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cube\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> renderer <span class=\"token operator\">=</span> cubeEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmaterial<span class=\"token punctuation\">.</span>baseColor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>TextureCubeMap<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      urls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5w6_Rr6ML6IAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*TiT2TbN5cG4AAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*8GF6Q4LZefUAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*D5pdRqUHC3IAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_FooTIp6pNIAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*CYGZR7ogZfoAAAAAAAAAAAAAARQnAQ\"</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>TextureCube\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cubeMap1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Add skybox background</span>\n    background<span class=\"token punctuation\">.</span>mode <span class=\"token operator\">=</span> BackgroundMode<span class=\"token punctuation\">.</span>Sky<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> skyMaterial <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>background<span class=\"token punctuation\">.</span>sky<span class=\"token punctuation\">.</span>material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SkyBoxMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    skyMaterial<span class=\"token punctuation\">.</span>textureCubeMap <span class=\"token operator\">=</span> cubeMap1<span class=\"token punctuation\">;</span>\n    background<span class=\"token punctuation\">.</span>sky<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title Particle Renderer\n   * @category Particle\n   */\n  // import { OrbitControl } from \"@oasis-engine/controls\";\n  //-- create engine object\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); //-- create camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_entity\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 0, 50);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  engine.run();\n  var particleEntity = rootEntity.createChild(\"particle\");\n  var particles = particleEntity.addComponent(_oasisEngine.ParticleRenderer);\n  engine.resourceManager.load({\n    url: \"https://gw.alipayobjects.com/mdn/rms_d27172/afts/img/A*kxloQYq2YDEAAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }).then(function (resource) {\n    particles.maxCount = 100;\n    particles.startTimeRandomness = 10;\n    particles.lifetime = 4;\n    particles.position = new _oasisEngine.Vector3(0, 20, 0);\n    particles.positionRandomness = new _oasisEngine.Vector3(100, 0, 0);\n    particles.velocity = new _oasisEngine.Vector3(0, -3, 0);\n    particles.velocityRandomness = new _oasisEngine.Vector3(1, 2, 0);\n    particles.accelerationRandomness = new _oasisEngine.Vector3(0, 1, 0);\n    particles.velocityRandomness = new _oasisEngine.Vector3(-1, -1, -1);\n    particles.rotateVelocity = 1;\n    particles.rotateVelocityRandomness = 1;\n    particles.size = 1;\n    particles.sizeRandomness = 0.8;\n    particles.color = new _oasisEngine.Color(0.5, 0.5, 0.5);\n    particles.colorRandomness = 1;\n    particles.isFadeIn = true;\n    particles.isFadeOut = true;\n    particles.texture = resource;\n    particles.start();\n  });\n});"},"name":"particle-renderer","title":"Particle Renderer","category":"Particle","id":"dd4d12c2-d951-5240-87e7-c59e106364bc","sourceCode":"/**\n * @title Particle Renderer\n * @category Particle\n */\n// import { OrbitControl } from \"@oasis-engine/controls\";\nimport { AssetType, Camera, Color, ParticleRenderer, Texture2D, Vector3, WebGLEngine } from \"oasis-engine\";\n\n//-- create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n//-- create camera\nconst cameraEntity = rootEntity.createChild(\"camera_entity\");\ncameraEntity.transform.position = new Vector3(0, 0, 50);\ncameraEntity.addComponent(Camera);\n\nengine.run();\n\nconst particleEntity = rootEntity.createChild(\"particle\");\n\nlet particles: ParticleRenderer = particleEntity.addComponent(ParticleRenderer);\n\nengine.resourceManager\n  .load<Texture2D>({\n    url: \"https://gw.alipayobjects.com/mdn/rms_d27172/afts/img/A*kxloQYq2YDEAAAAAAAAAAAAAARQnAQ\",\n    type: AssetType.Texture2D\n  })\n  .then((resource) => {\n    particles.maxCount = 100;\n    particles.startTimeRandomness = 10;\n    particles.lifetime = 4;\n    particles.position = new Vector3(0, 20, 0);\n    particles.positionRandomness = new Vector3(100, 0, 0);\n    particles.velocity = new Vector3(0, -3, 0);\n    particles.velocityRandomness = new Vector3(1, 2, 0);\n    particles.accelerationRandomness = new Vector3(0, 1, 0);\n    particles.velocityRandomness = new Vector3(-1, -1, -1);\n    particles.rotateVelocity = 1;\n    particles.rotateVelocityRandomness = 1;\n    particles.size = 1;\n    particles.sizeRandomness = 0.8;\n    particles.color = new Color(0.5, 0.5, 0.5);\n    particles.colorRandomness = 1;\n    particles.isFadeIn = true;\n    particles.isFadeOut = true;\n    particles.texture = resource;\n    particles.start();\n  });\n","formatedCode":"<span class=\"token comment\">/**\n * @title Particle Renderer\n * @category Particle\n */</span>\n<span class=\"token comment\">// import { OrbitControl } from \"@oasis-engine/controls\";</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AssetType<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> Color<span class=\"token punctuation\">,</span> ParticleRenderer<span class=\"token punctuation\">,</span> Texture2D<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_entity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> particleEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"particle\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> particles<span class=\"token operator\">:</span> ParticleRenderer <span class=\"token operator\">=</span> particleEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>ParticleRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_d27172/afts/img/A*kxloQYq2YDEAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resource</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    particles<span class=\"token punctuation\">.</span>maxCount <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>startTimeRandomness <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>lifetime <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>positionRandomness <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>velocity <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>velocityRandomness <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>accelerationRandomness <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>velocityRandomness <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>rotateVelocity <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>rotateVelocityRandomness <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>sizeRandomness <span class=\"token operator\">=</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>colorRandomness <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>isFadeIn <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>isFadeOut <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>texture <span class=\"token operator\">=</span> resource<span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"dat.gui\", \"oasis-engine\", \"@oasis-engine/controls\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"dat.gui\"), require(\"oasis-engine\"), require(\"@oasis-engine/controls\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.dat, global.oasisEngine, global[\"@oasisEngine/controls\"]);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_dat, _oasisEngine, _controls) {\n  \"use strict\";\n\n  /**\n   * @title Orthographic Camera\n   * @category Camera\n   */\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var rootEntity = engine.sceneManager.activeScene.createRootEntity(); // init camera\n\n  var cameraEntity = rootEntity.createChild(\"camera\");\n  var camera = cameraEntity.addComponent(_oasisEngine.Camera);\n  camera.nearClipPlane = 0.1;\n  cameraEntity.transform.setPosition(10, 2, 10);\n  cameraEntity.transform.lookAt(new _oasisEngine.Vector3(0, 0, 0));\n  cameraEntity.addComponent(_controls.OrbitControl);\n  var lightEntity = rootEntity.createChild(\"Light\");\n  lightEntity.transform.setRotation(-30, 0, 0);\n  lightEntity.addComponent(_oasisEngine.DirectLight); // init cube\n\n  createCube(0, 0, 0);\n  createCube(6.5, 0, 6.5);\n  createCube(-6.5, 0, -6.5);\n  addGUI();\n  engine.run();\n\n  function createCube(x, y, z) {\n    var cubeEntity = rootEntity.createChild(\"cube\");\n    var renderer = cubeEntity.addComponent(_oasisEngine.MeshRenderer);\n    var material = new _oasisEngine.BlinnPhongMaterial(engine);\n    cubeEntity.transform.setPosition(x, y, z);\n    material.baseColor = new _oasisEngine.Color(1, 0.25, 0.25, 1);\n    renderer.setMaterial(material);\n    renderer.mesh = _oasisEngine.PrimitiveMesh.createCuboid(engine, 1, 1, 1);\n  }\n\n  function addGUI() {\n    var gui = new _dat.GUI();\n    var cameraFolder = gui.addFolder(\"camera orthogonal switch\");\n    cameraFolder.open();\n    camera.isOrthographic = true;\n    cameraFolder.add(camera, \"isOrthographic\");\n  }\n});"},"name":"ortho-switch","title":"Orthographic Camera","category":"Camera","id":"1ba1447f-30ed-5f6f-bf11-775fec55f058","sourceCode":"/**\n * @title Orthographic Camera\n * @category Camera\n */\nimport {GUI} from \"dat.gui\";\nimport {\n  WebGLEngine,\n  Camera,\n  MeshRenderer,\n  PrimitiveMesh,\n  BlinnPhongMaterial,\n  Color,\n  Vector3,\n  DirectLight\n} from \"oasis-engine\";\nimport {OrbitControl} from \"@oasis-engine/controls\";\n\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\nconst rootEntity = engine.sceneManager.activeScene.createRootEntity();\n\n// init camera\nconst cameraEntity = rootEntity.createChild(\"camera\");\nconst camera = cameraEntity.addComponent(Camera);\ncamera.nearClipPlane = 0.1;\ncameraEntity.transform.setPosition(10, 2, 10);\ncameraEntity.transform.lookAt(new Vector3(0, 0, 0));\ncameraEntity.addComponent(OrbitControl);\n\nconst lightEntity = rootEntity.createChild(\"Light\");\nlightEntity.transform.setRotation(-30, 0, 0);\nlightEntity.addComponent(DirectLight);\n\n// init cube\ncreateCube(0, 0, 0);\ncreateCube(6.5, 0, 6.5);\ncreateCube(-6.5, 0, -6.5);\naddGUI();\n\nengine.run();\n\nfunction createCube(x: number, y: number, z: number) {\n  const cubeEntity = rootEntity.createChild(\"cube\");\n  const renderer = cubeEntity.addComponent(MeshRenderer);\n  const material = new BlinnPhongMaterial(engine);\n  cubeEntity.transform.setPosition(x, y, z);\n  material.baseColor = new Color(1, 0.25, 0.25, 1);\n  renderer.setMaterial(material);\n  renderer.mesh = PrimitiveMesh.createCuboid(engine, 1, 1, 1);\n}\n\nfunction addGUI() {\n  const gui = new GUI();\n  const cameraFolder = gui.addFolder(\"camera orthogonal switch\");\n  cameraFolder.open();\n  camera.isOrthographic = true;\n  cameraFolder.add(camera, \"isOrthographic\");\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Orthographic Camera\n * @category Camera\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span><span class=\"token constant\">GUI</span><span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  WebGLEngine<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  BlinnPhongMaterial<span class=\"token punctuation\">,</span>\n  Color<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  DirectLight\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>OrbitControl<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// init camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> camera <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncamera<span class=\"token punctuation\">.</span>nearClipPlane <span class=\"token operator\">=</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> lightEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Light\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setRotation</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// init cube</span>\n<span class=\"token function\">createCube</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">createCube</span><span class=\"token punctuation\">(</span><span class=\"token number\">6.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">createCube</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">6.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">6.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">addGUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">createCube</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span> z<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> cubeEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cube\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> renderer <span class=\"token operator\">=</span> cubeEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cubeEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  material<span class=\"token punctuation\">.</span>baseColor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  renderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  renderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">addGUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> cameraFolder <span class=\"token operator\">=</span> gui<span class=\"token punctuation\">.</span><span class=\"token function\">addFolder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera orthogonal switch\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraFolder<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  camera<span class=\"token punctuation\">.</span>isOrthographic <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  cameraFolder<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>camera<span class=\"token punctuation\">,</span> <span class=\"token string\">\"isOrthographic\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title Particle Sprite Sheet\n   * @category Particle\n   */\n  //-- create engine object\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); //-- create camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_entity\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 0, 50);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  var controls = cameraEntity.addComponent(_controls.OrbitControl);\n  controls.autoRotate = true;\n  controls.autoRotateSpeed = Math.PI / 5;\n  engine.run();\n  var particleEntity = rootEntity.createChild(\"particle\");\n  var particles = particleEntity.addComponent(_oasisEngine.ParticleRenderer);\n  var spriteSheet = [{\n    x: 0,\n    y: 0,\n    w: 100,\n    h: 95,\n    offX: 0,\n    offY: 0,\n    sourceW: 100,\n    sourceH: 95\n  }, {\n    x: 100,\n    y: 0,\n    w: 48,\n    h: 46,\n    offX: 0,\n    offY: 0,\n    sourceW: 48,\n    sourceH: 46\n  }, {\n    x: 148,\n    y: 0,\n    w: 97,\n    h: 90,\n    offX: 0,\n    offY: 0,\n    sourceW: 97,\n    sourceH: 90\n  }, {\n    x: 245,\n    y: 0,\n    w: 148,\n    h: 128,\n    offX: 0,\n    offY: 0,\n    sourceW: 148,\n    sourceH: 128\n  }, {\n    x: 393,\n    y: 0,\n    w: 118,\n    h: 249,\n    offX: 0,\n    offY: 0,\n    sourceW: 118,\n    sourceH: 249\n  }, {\n    x: 100,\n    y: 90,\n    w: 124,\n    h: 94,\n    offX: 0,\n    offY: 0,\n    sourceW: 124,\n    sourceH: 94\n  }, {\n    x: 0,\n    y: 184,\n    w: 249,\n    h: 185,\n    offX: 0,\n    offY: 0,\n    sourceW: 249,\n    sourceH: 185\n  }, {\n    x: 0,\n    y: 95,\n    w: 86,\n    h: 83,\n    offX: 0,\n    offY: 0,\n    sourceW: 86,\n    sourceH: 83\n  }];\n  engine.resourceManager.load({\n    url: \"https://gw.alipayobjects.com/mdn/rms_d27172/afts/img/A*_oorR5SrpXcAAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }).then(function (resource) {\n    particles.maxCount = 400;\n    particles.startTimeRandomness = 5;\n    particles.position = new _oasisEngine.Vector3(0, -10, 0);\n    particles.velocity = new _oasisEngine.Vector3(0, 20, 0);\n    particles.velocityRandomness = new _oasisEngine.Vector3(10, 2, 10);\n    particles.acceleration = new _oasisEngine.Vector3(0, -10, 0);\n    particles.accelerationRandomness = new _oasisEngine.Vector3(2, 4, 5);\n    particles.rotateVelocity = 1;\n    particles.rotateVelocityRandomness = 1;\n    particles.size = 1;\n    particles.sizeRandomness = 1;\n    particles.color = new _oasisEngine.Color(0.5, 0.5, 0.5);\n    particles.colorRandomness = 1;\n    particles.isFadeIn = true;\n    particles.isFadeOut = true;\n    particles.texture = resource;\n    particles.spriteSheet = spriteSheet;\n    particles.blendMode = _oasisEngine.ParticleRendererBlendMode.Additive;\n    particles.start();\n  });\n});"},"name":"particle-sprite-sheet","title":"Particle Sprite Sheet","category":"Particle","id":"d4628d7f-18c9-53fe-bf55-bd662da8202f","sourceCode":"/**\n * @title Particle Sprite Sheet\n * @category Particle\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport {\n  AssetType,\n  Camera,\n  Color,\n  ParticleRenderer,\n  ParticleRendererBlendMode,\n  Texture2D,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\n\n//-- create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n//-- create camera\nconst cameraEntity = rootEntity.createChild(\"camera_entity\");\ncameraEntity.transform.position = new Vector3(0, 0, 50);\ncameraEntity.addComponent(Camera);\nconst controls = cameraEntity.addComponent(OrbitControl);\ncontrols.autoRotate = true;\ncontrols.autoRotateSpeed = Math.PI / 5;\n\nengine.run();\n\nconst particleEntity = rootEntity.createChild(\"particle\");\n\nlet particles: ParticleRenderer = particleEntity.addComponent(ParticleRenderer);\n\nconst spriteSheet = [\n  {\n    x: 0,\n    y: 0,\n    w: 100,\n    h: 95,\n    offX: 0,\n    offY: 0,\n    sourceW: 100,\n    sourceH: 95\n  },\n  {\n    x: 100,\n    y: 0,\n    w: 48,\n    h: 46,\n    offX: 0,\n    offY: 0,\n    sourceW: 48,\n    sourceH: 46\n  },\n  {\n    x: 148,\n    y: 0,\n    w: 97,\n    h: 90,\n    offX: 0,\n    offY: 0,\n    sourceW: 97,\n    sourceH: 90\n  },\n  {\n    x: 245,\n    y: 0,\n    w: 148,\n    h: 128,\n    offX: 0,\n    offY: 0,\n    sourceW: 148,\n    sourceH: 128\n  },\n  {\n    x: 393,\n    y: 0,\n    w: 118,\n    h: 249,\n    offX: 0,\n    offY: 0,\n    sourceW: 118,\n    sourceH: 249\n  },\n  {\n    x: 100,\n    y: 90,\n    w: 124,\n    h: 94,\n    offX: 0,\n    offY: 0,\n    sourceW: 124,\n    sourceH: 94\n  },\n  {\n    x: 0,\n    y: 184,\n    w: 249,\n    h: 185,\n    offX: 0,\n    offY: 0,\n    sourceW: 249,\n    sourceH: 185\n  },\n  {\n    x: 0,\n    y: 95,\n    w: 86,\n    h: 83,\n    offX: 0,\n    offY: 0,\n    sourceW: 86,\n    sourceH: 83\n  }\n];\n\nengine.resourceManager\n  .load<Texture2D>({\n    url: \"https://gw.alipayobjects.com/mdn/rms_d27172/afts/img/A*_oorR5SrpXcAAAAAAAAAAAAAARQnAQ\",\n    type: AssetType.Texture2D\n  })\n  .then((resource) => {\n    particles.maxCount = 400;\n    particles.startTimeRandomness = 5;\n    particles.position = new Vector3(0, -10, 0);\n    particles.velocity = new Vector3(0, 20, 0);\n    particles.velocityRandomness = new Vector3(10, 2, 10);\n    particles.acceleration = new Vector3(0, -10, 0);\n    particles.accelerationRandomness = new Vector3(2, 4, 5);\n    particles.rotateVelocity = 1;\n    particles.rotateVelocityRandomness = 1;\n    particles.size = 1;\n    particles.sizeRandomness = 1;\n    particles.color = new Color(0.5, 0.5, 0.5);\n    particles.colorRandomness = 1;\n    particles.isFadeIn = true;\n    particles.isFadeOut = true;\n    particles.texture = resource;\n    particles.spriteSheet = spriteSheet;\n    particles.blendMode = ParticleRendererBlendMode.Additive;\n    particles.start();\n  });\n","formatedCode":"<span class=\"token comment\">/**\n * @title Particle Sprite Sheet\n * @category Particle\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  Color<span class=\"token punctuation\">,</span>\n  ParticleRenderer<span class=\"token punctuation\">,</span>\n  ParticleRendererBlendMode<span class=\"token punctuation\">,</span>\n  Texture2D<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_entity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> controls <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncontrols<span class=\"token punctuation\">.</span>autoRotate <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\ncontrols<span class=\"token punctuation\">.</span>autoRotateSpeed <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span> <span class=\"token operator\">/</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> particleEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"particle\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> particles<span class=\"token operator\">:</span> ParticleRenderer <span class=\"token operator\">=</span> particleEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>ParticleRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> spriteSheet <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    x<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    y<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    w<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n    h<span class=\"token operator\">:</span> <span class=\"token number\">95</span><span class=\"token punctuation\">,</span>\n    offX<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    offY<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    sourceW<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n    sourceH<span class=\"token operator\">:</span> <span class=\"token number\">95</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    x<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n    y<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    w<span class=\"token operator\">:</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span>\n    h<span class=\"token operator\">:</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span>\n    offX<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    offY<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    sourceW<span class=\"token operator\">:</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span>\n    sourceH<span class=\"token operator\">:</span> <span class=\"token number\">46</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    x<span class=\"token operator\">:</span> <span class=\"token number\">148</span><span class=\"token punctuation\">,</span>\n    y<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    w<span class=\"token operator\">:</span> <span class=\"token number\">97</span><span class=\"token punctuation\">,</span>\n    h<span class=\"token operator\">:</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span>\n    offX<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    offY<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    sourceW<span class=\"token operator\">:</span> <span class=\"token number\">97</span><span class=\"token punctuation\">,</span>\n    sourceH<span class=\"token operator\">:</span> <span class=\"token number\">90</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    x<span class=\"token operator\">:</span> <span class=\"token number\">245</span><span class=\"token punctuation\">,</span>\n    y<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    w<span class=\"token operator\">:</span> <span class=\"token number\">148</span><span class=\"token punctuation\">,</span>\n    h<span class=\"token operator\">:</span> <span class=\"token number\">128</span><span class=\"token punctuation\">,</span>\n    offX<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    offY<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    sourceW<span class=\"token operator\">:</span> <span class=\"token number\">148</span><span class=\"token punctuation\">,</span>\n    sourceH<span class=\"token operator\">:</span> <span class=\"token number\">128</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    x<span class=\"token operator\">:</span> <span class=\"token number\">393</span><span class=\"token punctuation\">,</span>\n    y<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    w<span class=\"token operator\">:</span> <span class=\"token number\">118</span><span class=\"token punctuation\">,</span>\n    h<span class=\"token operator\">:</span> <span class=\"token number\">249</span><span class=\"token punctuation\">,</span>\n    offX<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    offY<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    sourceW<span class=\"token operator\">:</span> <span class=\"token number\">118</span><span class=\"token punctuation\">,</span>\n    sourceH<span class=\"token operator\">:</span> <span class=\"token number\">249</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    x<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n    y<span class=\"token operator\">:</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span>\n    w<span class=\"token operator\">:</span> <span class=\"token number\">124</span><span class=\"token punctuation\">,</span>\n    h<span class=\"token operator\">:</span> <span class=\"token number\">94</span><span class=\"token punctuation\">,</span>\n    offX<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    offY<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    sourceW<span class=\"token operator\">:</span> <span class=\"token number\">124</span><span class=\"token punctuation\">,</span>\n    sourceH<span class=\"token operator\">:</span> <span class=\"token number\">94</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    x<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    y<span class=\"token operator\">:</span> <span class=\"token number\">184</span><span class=\"token punctuation\">,</span>\n    w<span class=\"token operator\">:</span> <span class=\"token number\">249</span><span class=\"token punctuation\">,</span>\n    h<span class=\"token operator\">:</span> <span class=\"token number\">185</span><span class=\"token punctuation\">,</span>\n    offX<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    offY<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    sourceW<span class=\"token operator\">:</span> <span class=\"token number\">249</span><span class=\"token punctuation\">,</span>\n    sourceH<span class=\"token operator\">:</span> <span class=\"token number\">185</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    x<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    y<span class=\"token operator\">:</span> <span class=\"token number\">95</span><span class=\"token punctuation\">,</span>\n    w<span class=\"token operator\">:</span> <span class=\"token number\">86</span><span class=\"token punctuation\">,</span>\n    h<span class=\"token operator\">:</span> <span class=\"token number\">83</span><span class=\"token punctuation\">,</span>\n    offX<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    offY<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    sourceW<span class=\"token operator\">:</span> <span class=\"token number\">86</span><span class=\"token punctuation\">,</span>\n    sourceH<span class=\"token operator\">:</span> <span class=\"token number\">83</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_d27172/afts/img/A*_oorR5SrpXcAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resource</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    particles<span class=\"token punctuation\">.</span>maxCount <span class=\"token operator\">=</span> <span class=\"token number\">400</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>startTimeRandomness <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>velocity <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>velocityRandomness <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>acceleration <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>accelerationRandomness <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>rotateVelocity <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>rotateVelocityRandomness <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>sizeRandomness <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>colorRandomness <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>isFadeIn <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>isFadeOut <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>texture <span class=\"token operator\">=</span> resource<span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>spriteSheet <span class=\"token operator\">=</span> spriteSheet<span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>blendMode <span class=\"token operator\">=</span> ParticleRendererBlendMode<span class=\"token punctuation\">.</span>Additive<span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title PBR Base\n   * @category Material\n   */\n  //-- create engine object\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var ambientLight = scene.ambientLight,\n      background = scene.background;\n  var rootEntity = scene.createRootEntity();\n  var gui = new dat.GUI();\n  var envFolder = gui.addFolder(\"EnvironmentMapLight\");\n  envFolder.add(ambientLight, \"specularIntensity\", 0, 1);\n  envFolder.add(ambientLight, \"diffuseIntensity\", 0, 1);\n  var directLightNode = rootEntity.createChild(\"dir_light\");\n  var directLight = directLightNode.addComponent(_oasisEngine.DirectLight);\n  var dirFolder = gui.addFolder(\"DirectionalLight1\");\n  directLight.intensity = 0.5;\n  dirFolder.add(directLight, \"enabled\");\n  dirFolder.add(directLight, \"intensity\", 0, 1);\n  directLightNode.transform.setPosition(5, 5, 5);\n  directLightNode.transform.lookAt(new _oasisEngine.Vector3(0, 0, 0)); //Create camera\n\n  var cameraNode = rootEntity.createChild(\"camera_node\");\n  cameraNode.transform.position = new _oasisEngine.Vector3(0.25, 0.5, 1.5);\n  cameraNode.addComponent(_oasisEngine.Camera);\n  var control = cameraNode.addComponent(_controls.OrbitControl);\n  control.target.setValue(0.25, 0.25, 0); // Create sky\n\n  var sky = background.sky;\n  var skyMaterial = new _oasisEngine.SkyBoxMaterial(engine);\n  background.mode = _oasisEngine.BackgroundMode.Sky;\n  sky.material = skyMaterial;\n  sky.mesh = _oasisEngine.PrimitiveMesh.createCuboid(engine, 1, 1, 1);\n  Promise.all([engine.resourceManager.load(\"https://gw.alipayobjects.com/os/bmw-prod/477b0093-7ee8-41af-a0dd-836608a4f130.gltf\").then(function (gltf) {\n    var defaultSceneRoot = gltf.defaultSceneRoot,\n        entities = gltf.entities,\n        materials = gltf.materials;\n    rootEntity.addChild(defaultSceneRoot);\n    defaultSceneRoot.transform.setScale(100, 100, 100);\n    console.log(gltf); // entities[57].isActive = false;\n  }), engine.resourceManager.load({\n    type: _oasisEngine.AssetType.Env,\n    url: \"https://gw.alipayobjects.com/os/bmw-prod/34986a5b-fa16-40f1-83c8-1885efe855d2.bin\"\n  }).then(function (ambientLight) {\n    scene.ambientLight = ambientLight;\n    skyMaterial.textureCubeMap = ambientLight.specularTexture;\n    skyMaterial.textureDecodeRGBM = true;\n  })]).then(function () {\n    engine.run();\n  });\n});"},"name":"pbr-base","title":"PBR Base","category":"Material","id":"a778faa3-8665-5f68-8dd3-df194525f333","sourceCode":"/**\n * @title PBR Base\n * @category Material\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\nimport {\n  AmbientLight,\n  AssetType,\n  BackgroundMode,\n  Camera,\n  DirectLight,\n  GLTFResource,\n  PrimitiveMesh,\n  SkyBoxMaterial,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\n\n//-- create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst { ambientLight, background } = scene;\nconst rootEntity = scene.createRootEntity();\n\nconst gui = new dat.GUI();\nconst envFolder = gui.addFolder(\"EnvironmentMapLight\");\nenvFolder.add(ambientLight, \"specularIntensity\", 0, 1);\nenvFolder.add(ambientLight, \"diffuseIntensity\", 0, 1);\n\nconst directLightNode = rootEntity.createChild(\"dir_light\");\nconst directLight = directLightNode.addComponent(DirectLight);\nconst dirFolder = gui.addFolder(\"DirectionalLight1\");\ndirectLight.intensity = 0.5;\ndirFolder.add(directLight, \"enabled\");\ndirFolder.add(directLight, \"intensity\", 0, 1);\ndirectLightNode.transform.setPosition(5, 5, 5);\ndirectLightNode.transform.lookAt(new Vector3(0, 0, 0));\n\n//Create camera\nconst cameraNode = rootEntity.createChild(\"camera_node\");\ncameraNode.transform.position = new Vector3(0.25, 0.5, 1.5);\ncameraNode.addComponent(Camera);\nconst control = cameraNode.addComponent(OrbitControl);\ncontrol.target.setValue(0.25, 0.25, 0);\n\n// Create sky\nconst sky = background.sky;\nconst skyMaterial = new SkyBoxMaterial(engine);\nbackground.mode = BackgroundMode.Sky;\nsky.material = skyMaterial;\nsky.mesh = PrimitiveMesh.createCuboid(engine, 1, 1, 1);\n\nPromise.all([\n  engine.resourceManager\n    .load<GLTFResource>(\"https://gw.alipayobjects.com/os/bmw-prod/477b0093-7ee8-41af-a0dd-836608a4f130.gltf\")\n    .then((gltf) => {\n      const { defaultSceneRoot, entities, materials } = gltf;\n      rootEntity.addChild(defaultSceneRoot);\n      defaultSceneRoot.transform.setScale(100, 100, 100);\n      console.log(gltf);\n      // entities[57].isActive = false;\n    }),\n  engine.resourceManager\n    .load<AmbientLight>({\n      type: AssetType.Env,\n      url: \"https://gw.alipayobjects.com/os/bmw-prod/34986a5b-fa16-40f1-83c8-1885efe855d2.bin\"\n    })\n    .then((ambientLight) => {\n      scene.ambientLight = ambientLight;\n      skyMaterial.textureCubeMap = ambientLight.specularTexture;\n      skyMaterial.textureDecodeRGBM = true;\n    })\n]).then(() => {\n  engine.run();\n});\n","formatedCode":"<span class=\"token comment\">/**\n * @title PBR Base\n * @category Material\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AmbientLight<span class=\"token punctuation\">,</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  BackgroundMode<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  DirectLight<span class=\"token punctuation\">,</span>\n  GLTFResource<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  SkyBoxMaterial<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> ambientLight<span class=\"token punctuation\">,</span> background <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> envFolder <span class=\"token operator\">=</span> gui<span class=\"token punctuation\">.</span><span class=\"token function\">addFolder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"EnvironmentMapLight\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nenvFolder<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>ambientLight<span class=\"token punctuation\">,</span> <span class=\"token string\">\"specularIntensity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nenvFolder<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>ambientLight<span class=\"token punctuation\">,</span> <span class=\"token string\">\"diffuseIntensity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> directLightNode <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dir_light\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> directLight <span class=\"token operator\">=</span> directLightNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> dirFolder <span class=\"token operator\">=</span> gui<span class=\"token punctuation\">.</span><span class=\"token function\">addFolder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DirectionalLight1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndirectLight<span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\ndirFolder<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>directLight<span class=\"token punctuation\">,</span> <span class=\"token string\">\"enabled\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndirFolder<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>directLight<span class=\"token punctuation\">,</span> <span class=\"token string\">\"intensity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndirectLightNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndirectLightNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//Create camera</span>\n<span class=\"token keyword\">const</span> cameraNode <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> control <span class=\"token operator\">=</span> cameraNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncontrol<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create sky</span>\n<span class=\"token keyword\">const</span> sky <span class=\"token operator\">=</span> background<span class=\"token punctuation\">.</span>sky<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> skyMaterial <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SkyBoxMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nbackground<span class=\"token punctuation\">.</span>mode <span class=\"token operator\">=</span> BackgroundMode<span class=\"token punctuation\">.</span>Sky<span class=\"token punctuation\">;</span>\nsky<span class=\"token punctuation\">.</span>material <span class=\"token operator\">=</span> skyMaterial<span class=\"token punctuation\">;</span>\nsky<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nPromise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  engine<span class=\"token punctuation\">.</span>resourceManager\n    <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>GLTFResource<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/477b0093-7ee8-41af-a0dd-836608a4f130.gltf\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">gltf</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> defaultSceneRoot<span class=\"token punctuation\">,</span> entities<span class=\"token punctuation\">,</span> materials <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> gltf<span class=\"token punctuation\">;</span>\n      rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>defaultSceneRoot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      defaultSceneRoot<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>gltf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// entities[57].isActive = false;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  engine<span class=\"token punctuation\">.</span>resourceManager\n    <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>AmbientLight<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Env<span class=\"token punctuation\">,</span>\n      url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/34986a5b-fa16-40f1-83c8-1885efe855d2.bin\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ambientLight</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      scene<span class=\"token punctuation\">.</span>ambientLight <span class=\"token operator\">=</span> ambientLight<span class=\"token punctuation\">;</span>\n      skyMaterial<span class=\"token punctuation\">.</span>textureCubeMap <span class=\"token operator\">=</span> ambientLight<span class=\"token punctuation\">.</span>specularTexture<span class=\"token punctuation\">;</span>\n      skyMaterial<span class=\"token punctuation\">.</span>textureDecodeRGBM <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title PBR Helmet\n   * @category Material\n   */\n  _oasisEngine.Logger.enable(); //-- create engine object\n\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var ambientLight = scene.ambientLight,\n      background = scene.background;\n  var rootEntity = scene.createRootEntity();\n  var directLightNode = rootEntity.createChild(\"dir_light\");\n  var directLightNode2 = rootEntity.createChild(\"dir_light2\");\n  directLightNode.addComponent(_oasisEngine.DirectLight);\n  directLightNode2.addComponent(_oasisEngine.DirectLight);\n  directLightNode.transform.setRotation(30, 0, 0);\n  directLightNode2.transform.setRotation(-30, 180, 0); //Create camera\n\n  var cameraNode = rootEntity.createChild(\"camera_node\");\n  cameraNode.transform.setPosition(0, 0, 5);\n  cameraNode.addComponent(_oasisEngine.Camera);\n  cameraNode.addComponent(_controls.OrbitControl); // Create sky\n\n  var sky = background.sky;\n  var skyMaterial = new _oasisEngine.SkyBoxMaterial(engine);\n  background.mode = _oasisEngine.BackgroundMode.Sky;\n  sky.material = skyMaterial;\n  sky.mesh = _oasisEngine.PrimitiveMesh.createCuboid(engine, 1, 1, 1);\n  Promise.all([engine.resourceManager.load(\"https://gw.alipayobjects.com/os/bmw-prod/150e44f6-7810-4c45-8029-3575d36aff30.gltf\").then(function (gltf) {\n    var entity = rootEntity.createChild(\"\");\n    entity.addChild(gltf.defaultSceneRoot);\n    console.log(gltf);\n  }), engine.resourceManager.load({\n    type: _oasisEngine.AssetType.Env,\n    url: \"https://gw.alipayobjects.com/os/bmw-prod/f369110c-0e33-47eb-8296-756e9c80f254.bin\"\n  }).then(function (ambientLight) {\n    scene.ambientLight = ambientLight;\n    skyMaterial.textureCubeMap = ambientLight.specularTexture;\n    skyMaterial.textureDecodeRGBM = true;\n  })]).then(function () {\n    engine.run();\n  });\n});"},"name":"pbr-helmet","title":"PBR Helmet","category":"Material","id":"63a71f46-98b5-55ed-bb81-43c6953e6cbe","sourceCode":"/**\n * @title PBR Helmet\n * @category Material\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport {\n  AmbientLight,\n  AssetType,\n  BackgroundMode,\n  Camera,\n  DirectLight,\n  GLTFResource,\n  Logger,\n  PrimitiveMesh,\n  SkyBoxMaterial,\n  WebGLEngine\n} from \"oasis-engine\";\nLogger.enable();\n//-- create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst { ambientLight, background } = scene;\nconst rootEntity = scene.createRootEntity();\n\nconst directLightNode = rootEntity.createChild(\"dir_light\");\nconst directLightNode2 = rootEntity.createChild(\"dir_light2\");\ndirectLightNode.addComponent(DirectLight);\ndirectLightNode2.addComponent(DirectLight);\ndirectLightNode.transform.setRotation(30, 0, 0);\ndirectLightNode2.transform.setRotation(-30, 180, 0);\n\n//Create camera\nconst cameraNode = rootEntity.createChild(\"camera_node\");\ncameraNode.transform.setPosition(0, 0, 5);\ncameraNode.addComponent(Camera);\ncameraNode.addComponent(OrbitControl);\n\n// Create sky\nconst sky = background.sky;\nconst skyMaterial = new SkyBoxMaterial(engine);\nbackground.mode = BackgroundMode.Sky;\n\nsky.material = skyMaterial;\nsky.mesh = PrimitiveMesh.createCuboid(engine, 1, 1, 1);\n\nPromise.all([\n  engine.resourceManager\n    .load<GLTFResource>(\"https://gw.alipayobjects.com/os/bmw-prod/150e44f6-7810-4c45-8029-3575d36aff30.gltf\")\n    .then((gltf) => {\n      const entity = rootEntity.createChild(\"\");\n      entity.addChild(gltf.defaultSceneRoot);\n      console.log(gltf);\n    }),\n  engine.resourceManager\n    .load<AmbientLight>({\n      type: AssetType.Env,\n      url: \"https://gw.alipayobjects.com/os/bmw-prod/f369110c-0e33-47eb-8296-756e9c80f254.bin\"\n    })\n    .then((ambientLight) => {\n      scene.ambientLight = ambientLight;\n      skyMaterial.textureCubeMap = ambientLight.specularTexture;\n      skyMaterial.textureDecodeRGBM = true;\n    })\n]).then(() => {\n  engine.run();\n});\n","formatedCode":"<span class=\"token comment\">/**\n * @title PBR Helmet\n * @category Material\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AmbientLight<span class=\"token punctuation\">,</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  BackgroundMode<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  DirectLight<span class=\"token punctuation\">,</span>\n  GLTFResource<span class=\"token punctuation\">,</span>\n  Logger<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  SkyBoxMaterial<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\nLogger<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//-- create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> ambientLight<span class=\"token punctuation\">,</span> background <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> directLightNode <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dir_light\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> directLightNode2 <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dir_light2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndirectLightNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndirectLightNode2<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndirectLightNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setRotation</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndirectLightNode2<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setRotation</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">180</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//Create camera</span>\n<span class=\"token keyword\">const</span> cameraNode <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create sky</span>\n<span class=\"token keyword\">const</span> sky <span class=\"token operator\">=</span> background<span class=\"token punctuation\">.</span>sky<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> skyMaterial <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SkyBoxMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nbackground<span class=\"token punctuation\">.</span>mode <span class=\"token operator\">=</span> BackgroundMode<span class=\"token punctuation\">.</span>Sky<span class=\"token punctuation\">;</span>\n\nsky<span class=\"token punctuation\">.</span>material <span class=\"token operator\">=</span> skyMaterial<span class=\"token punctuation\">;</span>\nsky<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nPromise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  engine<span class=\"token punctuation\">.</span>resourceManager\n    <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>GLTFResource<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/150e44f6-7810-4c45-8029-3575d36aff30.gltf\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">gltf</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> entity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      entity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>gltf<span class=\"token punctuation\">.</span>defaultSceneRoot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>gltf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  engine<span class=\"token punctuation\">.</span>resourceManager\n    <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>AmbientLight<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Env<span class=\"token punctuation\">,</span>\n      url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/f369110c-0e33-47eb-8296-756e9c80f254.bin\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ambientLight</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      scene<span class=\"token punctuation\">.</span>ambientLight <span class=\"token operator\">=</span> ambientLight<span class=\"token punctuation\">;</span>\n      skyMaterial<span class=\"token punctuation\">.</span>textureCubeMap <span class=\"token operator\">=</span> ambientLight<span class=\"token punctuation\">.</span>specularTexture<span class=\"token punctuation\">;</span>\n      skyMaterial<span class=\"token punctuation\">.</span>textureDecodeRGBM <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@oasis-engine/math\", \"@oasis-engine/controls\", \"@oasis-engine/physics-physx\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@oasis-engine/math\"), require(\"@oasis-engine/controls\"), require(\"@oasis-engine/physics-physx\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global[\"@oasisEngine/math\"], global[\"@oasisEngine/controls\"], global.PHYSX);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, _math, _controls, _physicsPhysx) {\n  \"use strict\";\n\n  /**\n   * @title PhysX Raycast\n   * @category Physics\n   */\n  _physicsPhysx.PhysXPhysics.init().then(function () {\n    var engine = new _oasisEngine.WebGLEngine(\"canvas\", _physicsPhysx.PhysXPhysics);\n    engine.canvas.resizeByClientSize();\n    var scene = engine.sceneManager.activeScene;\n    var rootEntity = scene.createRootEntity(); // init camera\n\n    var cameraEntity = rootEntity.createChild(\"camera\");\n    cameraEntity.addComponent(_oasisEngine.Camera);\n    var pos = cameraEntity.transform.position;\n    pos.setValue(10, 10, 10);\n    cameraEntity.transform.position = pos;\n    cameraEntity.addComponent(_controls.OrbitControl); // init light\n\n    scene.ambientLight.diffuseSolidColor.setValue(1, 1, 1, 1);\n    scene.ambientLight.diffuseIntensity = 1.2;\n    var light = rootEntity.createChild(\"light\");\n    light.transform.position = new _math.Vector3(0, 5, 0);\n    var p = light.addComponent(_oasisEngine.PointLight);\n    p.intensity = 0.3;\n    init();\n    window.addEventListener(\"mousedown\", function (event) {\n      var ray = new _oasisEngine.Ray();\n      cameraEntity.getComponent(_oasisEngine.Camera).screenPointToRay(new _math.Vector2(event.pageX * window.devicePixelRatio, event.pageY * window.devicePixelRatio), ray);\n      var hit = new _oasisEngine.HitResult();\n      var result = engine.physicsManager.raycast(ray, Number.MAX_VALUE, _oasisEngine.Layer.Layer0, hit);\n\n      if (result) {\n        var mtl = new _oasisEngine.BlinnPhongMaterial(engine);\n        var color = mtl.baseColor;\n        color.r = Math.random();\n        color.g = Math.random();\n        color.b = Math.random();\n        color.a = 1.0;\n        var meshes = [];\n        hit.entity.getComponentsIncludeChildren(_oasisEngine.MeshRenderer, meshes);\n        meshes.forEach(function (mesh) {\n          mesh.setMaterial(mtl);\n        });\n      }\n    });\n    window.addEventListener(\"mousedown\", function (event) {\n      if (event.button === 2) {\n        if (Math.random() > 0.5) {\n          addSphere(0.5, new _math.Vector3(Math.floor(Math.random() * 6) - 2.5, 5, Math.floor(Math.random() * 6) - 2.5), new _math.Quaternion(0, 0, 0.3, 0.7));\n        } else {\n          addCapsule(0.5, 2.0, new _math.Vector3(Math.floor(Math.random() * 6) - 2.5, 5, Math.floor(Math.random() * 6) - 2.5), new _math.Quaternion(0, 0, 0.3, 0.7));\n        }\n      }\n    });\n    engine.run(); //--------------------------------------------------------------------------------------------------------------------\n    // init scene\n\n    function init() {\n      addPlane(new _math.Vector3(30, 0.1, 30), new _math.Vector3(), new _math.Quaternion()); // eslint-disable-next-line no-plusplus\n\n      for (var i = 0; i < 5; i++) {\n        // eslint-disable-next-line no-plusplus\n        for (var j = 0; j < 5; j++) {\n          addBox(new _math.Vector3(1, 1, 1), new _math.Vector3(-2.5 + i + 0.1 * i, Math.floor(Math.random() * 6) + 1, -2.5 + j + 0.1 * j), new _math.Quaternion(0, 0, 0.3, 0.7));\n        }\n      }\n    } //--------------------------------------------------------------------------------------------------------------------\n\n\n    function addPlane(size, position, rotation) {\n      var mtl = new _oasisEngine.BlinnPhongMaterial(engine);\n      mtl.baseColor.setValue(0.03179807202597362, 0.3939682161541871, 0.41177952549087604, 1);\n      var planeEntity = rootEntity.createChild();\n      planeEntity.layer = _oasisEngine.Layer.Layer1;\n      var renderer = planeEntity.addComponent(_oasisEngine.MeshRenderer);\n      renderer.mesh = _oasisEngine.PrimitiveMesh.createCuboid(engine, size.x, size.y, size.z);\n      renderer.setMaterial(mtl);\n      planeEntity.transform.position = position;\n      planeEntity.transform.rotationQuaternion = rotation;\n      var physicsPlane = new _oasisEngine.PlaneColliderShape();\n      physicsPlane.setPosition(0, size.y, 0);\n      var planeCollider = planeEntity.addComponent(_oasisEngine.StaticCollider);\n      planeCollider.addShape(physicsPlane);\n      return planeEntity;\n    }\n\n    function addBox(size, position, rotation) {\n      var mtl = new _oasisEngine.BlinnPhongMaterial(engine);\n      mtl.baseColor.setValue(Math.random(), Math.random(), Math.random(), 1.0);\n      var boxEntity = rootEntity.createChild();\n      var renderer = boxEntity.addComponent(_oasisEngine.MeshRenderer);\n      renderer.mesh = _oasisEngine.PrimitiveMesh.createCuboid(engine, size.x, size.y, size.z);\n      renderer.setMaterial(mtl);\n      boxEntity.transform.position = position;\n      boxEntity.transform.rotationQuaternion = rotation;\n      var physicsBox = new _oasisEngine.BoxColliderShape();\n      physicsBox.size = size;\n      physicsBox.isTrigger = false;\n      var boxCollider = boxEntity.addComponent(_oasisEngine.StaticCollider);\n      boxCollider.addShape(physicsBox);\n      return boxEntity;\n    }\n\n    function addSphere(radius, position, rotation) {\n      var mtl = new _oasisEngine.BlinnPhongMaterial(engine);\n      mtl.baseColor.setValue(Math.random(), Math.random(), Math.random(), 1.0);\n      var sphereEntity = rootEntity.createChild();\n      var renderer = sphereEntity.addComponent(_oasisEngine.MeshRenderer);\n      renderer.mesh = _oasisEngine.PrimitiveMesh.createSphere(engine, radius);\n      renderer.setMaterial(mtl);\n      sphereEntity.transform.position = position;\n      sphereEntity.transform.rotationQuaternion = rotation;\n      var physicsSphere = new _oasisEngine.SphereColliderShape();\n      physicsSphere.radius = radius;\n      var sphereCollider = sphereEntity.addComponent(_oasisEngine.DynamicCollider);\n      sphereCollider.addShape(physicsSphere);\n      return sphereEntity;\n    }\n\n    function addCapsule(radius, height, position, rotation) {\n      var mtl = new _oasisEngine.BlinnPhongMaterial(engine);\n      mtl.baseColor.setValue(Math.random(), Math.random(), Math.random(), 1.0);\n      var capsuleEntity = rootEntity.createChild();\n      var renderer = capsuleEntity.addComponent(_oasisEngine.MeshRenderer);\n      renderer.mesh = _oasisEngine.PrimitiveMesh.createCapsule(engine, radius, height, 20);\n      renderer.setMaterial(mtl);\n      capsuleEntity.transform.position = position;\n      capsuleEntity.transform.rotationQuaternion = rotation;\n      var physicsCapsule = new _oasisEngine.CapsuleColliderShape();\n      physicsCapsule.radius = radius;\n      physicsCapsule.height = height;\n      var capsuleCollider = capsuleEntity.addComponent(_oasisEngine.DynamicCollider);\n      capsuleCollider.addShape(physicsCapsule);\n      return capsuleEntity;\n    }\n  });\n});"},"name":"physx-raycast","title":"PhysX Raycast","category":"Physics","id":"2c10317f-af4a-5270-b6aa-68005ea43397","sourceCode":"/**\n * @title PhysX Raycast\n * @category Physics\n */\n\nimport {\n  BlinnPhongMaterial,\n  BoxColliderShape,\n  Camera,\n  CapsuleColliderShape,\n  Entity,\n  HitResult,\n  Layer,\n  MeshRenderer,\n  PlaneColliderShape,\n  PointLight,\n  PrimitiveMesh,\n  Ray,\n  SphereColliderShape,\n  StaticCollider,\n  DynamicCollider,\n  WebGLEngine\n} from \"oasis-engine\";\nimport { Quaternion, Vector2, Vector3 } from \"@oasis-engine/math\";\nimport { OrbitControl } from \"@oasis-engine/controls\";\n\nimport { PhysXPhysics } from \"@oasis-engine/physics-physx\";\n\nPhysXPhysics.init().then(() => {\n  const engine = new WebGLEngine(\"canvas\", PhysXPhysics);\n\n  engine.canvas.resizeByClientSize();\n  const scene = engine.sceneManager.activeScene;\n  const rootEntity = scene.createRootEntity();\n\n  // init camera\n  const cameraEntity = rootEntity.createChild(\"camera\");\n  cameraEntity.addComponent(Camera);\n  const pos = cameraEntity.transform.position;\n  pos.setValue(10, 10, 10);\n  cameraEntity.transform.position = pos;\n  cameraEntity.addComponent(OrbitControl);\n\n  // init light\n  scene.ambientLight.diffuseSolidColor.setValue(1, 1, 1, 1);\n  scene.ambientLight.diffuseIntensity = 1.2;\n\n  const light = rootEntity.createChild(\"light\");\n  light.transform.position = new Vector3(0, 5, 0);\n  const p = light.addComponent(PointLight);\n  p.intensity = 0.3;\n\n  init();\n\n  window.addEventListener(\"mousedown\", (event: MouseEvent) => {\n    const ray = new Ray();\n    cameraEntity.getComponent(Camera).screenPointToRay(\n      new Vector2(event.pageX * window.devicePixelRatio, event.pageY * window.devicePixelRatio), ray);\n\n    const hit = new HitResult();\n    const result = engine.physicsManager.raycast(ray, Number.MAX_VALUE, Layer.Layer0, hit);\n    if (result) {\n      const mtl = new BlinnPhongMaterial(engine);\n      const color = mtl.baseColor;\n      color.r = Math.random();\n      color.g = Math.random();\n      color.b = Math.random();\n      color.a = 1.0;\n\n      const meshes: MeshRenderer[] = [];\n      hit.entity.getComponentsIncludeChildren(MeshRenderer, meshes);\n      meshes.forEach((mesh: MeshRenderer) => {\n        mesh.setMaterial(mtl);\n      });\n    }\n  });\n\n  window.addEventListener(\"mousedown\", (event: MouseEvent) => {\n    if (event.button === 2) {\n      if (Math.random() > 0.5) {\n        addSphere(0.5, new Vector3(\n          Math.floor(Math.random() * 6) - 2.5,\n          5,\n          Math.floor(Math.random() * 6) - 2.5\n        ), new Quaternion(0, 0, 0.3, 0.7));\n      } else {\n        addCapsule(0.5, 2.0, new Vector3(\n          Math.floor(Math.random() * 6) - 2.5,\n          5,\n          Math.floor(Math.random() * 6) - 2.5\n        ), new Quaternion(0, 0, 0.3, 0.7));\n      }\n    }\n  });\n\n  engine.run();\n\n  //--------------------------------------------------------------------------------------------------------------------\n  // init scene\n  function init() {\n    addPlane(new Vector3(30, 0.1, 30), new Vector3, new Quaternion);\n    // eslint-disable-next-line no-plusplus\n    for (let i = 0; i < 5; i++) {\n      // eslint-disable-next-line no-plusplus\n      for (let j = 0; j < 5; j++) {\n        addBox(new Vector3(1, 1, 1), new Vector3(\n          -2.5 + i + 0.1 * i,\n          Math.floor(Math.random() * 6) + 1,\n          -2.5 + j + 0.1 * j\n        ), new Quaternion(0, 0, 0.3, 0.7));\n      }\n    }\n  }\n\n  //--------------------------------------------------------------------------------------------------------------------\n  function addPlane(size: Vector3, position: Vector3, rotation: Quaternion): Entity {\n    const mtl = new BlinnPhongMaterial(engine);\n    mtl.baseColor.setValue(0.03179807202597362, 0.3939682161541871, 0.41177952549087604, 1);\n    const planeEntity = rootEntity.createChild();\n    planeEntity.layer = Layer.Layer1;\n\n    const renderer = planeEntity.addComponent(MeshRenderer);\n    renderer.mesh = PrimitiveMesh.createCuboid(engine, size.x, size.y, size.z);\n    renderer.setMaterial(mtl);\n    planeEntity.transform.position = position;\n    planeEntity.transform.rotationQuaternion = rotation;\n\n    const physicsPlane = new PlaneColliderShape();\n    physicsPlane.setPosition(0, size.y, 0);\n    const planeCollider = planeEntity.addComponent(StaticCollider);\n    planeCollider.addShape(physicsPlane);\n\n    return planeEntity;\n  }\n\n  function addBox(size: Vector3, position: Vector3, rotation: Quaternion): Entity {\n    const mtl = new BlinnPhongMaterial(engine);\n    mtl.baseColor.setValue(Math.random(), Math.random(), Math.random(), 1.0);\n    const boxEntity = rootEntity.createChild();\n    const renderer = boxEntity.addComponent(MeshRenderer);\n\n    renderer.mesh = PrimitiveMesh.createCuboid(engine, size.x, size.y, size.z);\n    renderer.setMaterial(mtl);\n    boxEntity.transform.position = position;\n    boxEntity.transform.rotationQuaternion = rotation;\n\n    const physicsBox = new BoxColliderShape();\n    physicsBox.size = size;\n    physicsBox.isTrigger = false;\n    const boxCollider = boxEntity.addComponent(StaticCollider);\n    boxCollider.addShape(physicsBox);\n\n    return boxEntity;\n  }\n\n  function addSphere(radius: number, position: Vector3, rotation: Quaternion): Entity {\n    const mtl = new BlinnPhongMaterial(engine);\n    mtl.baseColor.setValue(Math.random(), Math.random(), Math.random(), 1.0);\n    const sphereEntity = rootEntity.createChild();\n    const renderer = sphereEntity.addComponent(MeshRenderer);\n\n    renderer.mesh = PrimitiveMesh.createSphere(engine, radius);\n    renderer.setMaterial(mtl);\n    sphereEntity.transform.position = position;\n    sphereEntity.transform.rotationQuaternion = rotation;\n\n    const physicsSphere = new SphereColliderShape();\n    physicsSphere.radius = radius;\n    const sphereCollider = sphereEntity.addComponent(DynamicCollider);\n    sphereCollider.addShape(physicsSphere);\n\n    return sphereEntity;\n  }\n\n  function addCapsule(radius: number, height: number, position: Vector3, rotation: Quaternion): Entity {\n    const mtl = new BlinnPhongMaterial(engine);\n    mtl.baseColor.setValue(Math.random(), Math.random(), Math.random(), 1.0);\n    const capsuleEntity = rootEntity.createChild();\n    const renderer = capsuleEntity.addComponent(MeshRenderer);\n\n    renderer.mesh = PrimitiveMesh.createCapsule(engine, radius, height, 20)\n    renderer.setMaterial(mtl);\n    capsuleEntity.transform.position = position;\n    capsuleEntity.transform.rotationQuaternion = rotation;\n\n    const physicsCapsule = new CapsuleColliderShape();\n    physicsCapsule.radius = radius;\n    physicsCapsule.height = height;\n    const capsuleCollider = capsuleEntity.addComponent(DynamicCollider);\n    capsuleCollider.addShape(physicsCapsule);\n\n    return capsuleEntity;\n  }\n});\n","formatedCode":"<span class=\"token comment\">/**\n * @title PhysX Raycast\n * @category Physics\n */</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  BlinnPhongMaterial<span class=\"token punctuation\">,</span>\n  BoxColliderShape<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  CapsuleColliderShape<span class=\"token punctuation\">,</span>\n  Entity<span class=\"token punctuation\">,</span>\n  HitResult<span class=\"token punctuation\">,</span>\n  Layer<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  PlaneColliderShape<span class=\"token punctuation\">,</span>\n  PointLight<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  Ray<span class=\"token punctuation\">,</span>\n  SphereColliderShape<span class=\"token punctuation\">,</span>\n  StaticCollider<span class=\"token punctuation\">,</span>\n  DynamicCollider<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Quaternion<span class=\"token punctuation\">,</span> Vector2<span class=\"token punctuation\">,</span> Vector3 <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/math\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> PhysXPhysics <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/physics-physx\"</span><span class=\"token punctuation\">;</span>\n\nPhysXPhysics<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">,</span> PhysXPhysics<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  engine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// init camera</span>\n  <span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> pos <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">;</span>\n  pos<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> pos<span class=\"token punctuation\">;</span>\n  cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// init light</span>\n  scene<span class=\"token punctuation\">.</span>ambientLight<span class=\"token punctuation\">.</span>diffuseSolidColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  scene<span class=\"token punctuation\">.</span>ambientLight<span class=\"token punctuation\">.</span>diffuseIntensity <span class=\"token operator\">=</span> <span class=\"token number\">1.2</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> light <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"light\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  light<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> p <span class=\"token operator\">=</span> light<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>PointLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  p<span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event<span class=\"token operator\">:</span> MouseEvent</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> ray <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Ray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">screenPointToRay</span><span class=\"token punctuation\">(</span>\n      <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector2</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>pageX <span class=\"token operator\">*</span> window<span class=\"token punctuation\">.</span>devicePixelRatio<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">.</span>pageY <span class=\"token operator\">*</span> window<span class=\"token punctuation\">.</span>devicePixelRatio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> hit <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HitResult</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>physicsManager<span class=\"token punctuation\">.</span><span class=\"token function\">raycast</span><span class=\"token punctuation\">(</span>ray<span class=\"token punctuation\">,</span> Number<span class=\"token punctuation\">.</span><span class=\"token constant\">MAX_VALUE</span><span class=\"token punctuation\">,</span> Layer<span class=\"token punctuation\">.</span>Layer0<span class=\"token punctuation\">,</span> hit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> mtl <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> color <span class=\"token operator\">=</span> mtl<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">;</span>\n      color<span class=\"token punctuation\">.</span>r <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      color<span class=\"token punctuation\">.</span>g <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      color<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      color<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">const</span> meshes<span class=\"token operator\">:</span> MeshRenderer<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      hit<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponentsIncludeChildren</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">,</span> meshes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      meshes<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">mesh<span class=\"token operator\">:</span> MeshRenderer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        mesh<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>mtl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event<span class=\"token operator\">:</span> MouseEvent</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>button <span class=\"token operator\">===</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">addSphere</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span>\n          Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">2.5</span><span class=\"token punctuation\">,</span>\n          <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n          Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">2.5</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Quaternion</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">addCapsule</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span>\n          Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">2.5</span><span class=\"token punctuation\">,</span>\n          <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n          Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">2.5</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Quaternion</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">//--------------------------------------------------------------------------------------------------------------------</span>\n  <span class=\"token comment\">// init scene</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">addPlane</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Quaternion</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// eslint-disable-next-line no-plusplus</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// eslint-disable-next-line no-plusplus</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">addBox</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span>\n          <span class=\"token operator\">-</span><span class=\"token number\">2.5</span> <span class=\"token operator\">+</span> i <span class=\"token operator\">+</span> <span class=\"token number\">0.1</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">,</span>\n          Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n          <span class=\"token operator\">-</span><span class=\"token number\">2.5</span> <span class=\"token operator\">+</span> j <span class=\"token operator\">+</span> <span class=\"token number\">0.1</span> <span class=\"token operator\">*</span> j\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Quaternion</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">//--------------------------------------------------------------------------------------------------------------------</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">addPlane</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">size<span class=\"token operator\">:</span> Vector3<span class=\"token punctuation\">,</span> position<span class=\"token operator\">:</span> Vector3<span class=\"token punctuation\">,</span> rotation<span class=\"token operator\">:</span> Quaternion</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Entity <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> mtl <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    mtl<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.03179807202597362</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.3939682161541871</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.41177952549087604</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> planeEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    planeEntity<span class=\"token punctuation\">.</span>layer <span class=\"token operator\">=</span> Layer<span class=\"token punctuation\">.</span>Layer1<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> renderer <span class=\"token operator\">=</span> planeEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    renderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    renderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>mtl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    planeEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> position<span class=\"token punctuation\">;</span>\n    planeEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>rotationQuaternion <span class=\"token operator\">=</span> rotation<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> physicsPlane <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PlaneColliderShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    physicsPlane<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> planeCollider <span class=\"token operator\">=</span> planeEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>StaticCollider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    planeCollider<span class=\"token punctuation\">.</span><span class=\"token function\">addShape</span><span class=\"token punctuation\">(</span>physicsPlane<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> planeEntity<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">addBox</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">size<span class=\"token operator\">:</span> Vector3<span class=\"token punctuation\">,</span> position<span class=\"token operator\">:</span> Vector3<span class=\"token punctuation\">,</span> rotation<span class=\"token operator\">:</span> Quaternion</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Entity <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> mtl <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    mtl<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> boxEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> renderer <span class=\"token operator\">=</span> boxEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    renderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    renderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>mtl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    boxEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> position<span class=\"token punctuation\">;</span>\n    boxEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>rotationQuaternion <span class=\"token operator\">=</span> rotation<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> physicsBox <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BoxColliderShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    physicsBox<span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> size<span class=\"token punctuation\">;</span>\n    physicsBox<span class=\"token punctuation\">.</span>isTrigger <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> boxCollider <span class=\"token operator\">=</span> boxEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>StaticCollider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    boxCollider<span class=\"token punctuation\">.</span><span class=\"token function\">addShape</span><span class=\"token punctuation\">(</span>physicsBox<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> boxEntity<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">addSphere</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">radius<span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span> position<span class=\"token operator\">:</span> Vector3<span class=\"token punctuation\">,</span> rotation<span class=\"token operator\">:</span> Quaternion</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Entity <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> mtl <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    mtl<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> sphereEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> renderer <span class=\"token operator\">=</span> sphereEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    renderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createSphere</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    renderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>mtl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    sphereEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> position<span class=\"token punctuation\">;</span>\n    sphereEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>rotationQuaternion <span class=\"token operator\">=</span> rotation<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> physicsSphere <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SphereColliderShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    physicsSphere<span class=\"token punctuation\">.</span>radius <span class=\"token operator\">=</span> radius<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> sphereCollider <span class=\"token operator\">=</span> sphereEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DynamicCollider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    sphereCollider<span class=\"token punctuation\">.</span><span class=\"token function\">addShape</span><span class=\"token punctuation\">(</span>physicsSphere<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> sphereEntity<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">addCapsule</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">radius<span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span> height<span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span> position<span class=\"token operator\">:</span> Vector3<span class=\"token punctuation\">,</span> rotation<span class=\"token operator\">:</span> Quaternion</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Entity <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> mtl <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    mtl<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> capsuleEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> renderer <span class=\"token operator\">=</span> capsuleEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    renderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCapsule</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> radius<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\n    renderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>mtl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    capsuleEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> position<span class=\"token punctuation\">;</span>\n    capsuleEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>rotationQuaternion <span class=\"token operator\">=</span> rotation<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> physicsCapsule <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CapsuleColliderShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    physicsCapsule<span class=\"token punctuation\">.</span>radius <span class=\"token operator\">=</span> radius<span class=\"token punctuation\">;</span>\n    physicsCapsule<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> height<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> capsuleCollider <span class=\"token operator\">=</span> capsuleEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DynamicCollider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    capsuleCollider<span class=\"token punctuation\">.</span><span class=\"token function\">addShape</span><span class=\"token punctuation\">(</span>physicsCapsule<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> capsuleEntity<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@oasis-engine/controls\", \"@oasis-engine/physics-physx\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@oasis-engine/controls\"), require(\"@oasis-engine/physics-physx\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global[\"@oasisEngine/controls\"], global.PHYSX);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, _controls, _physicsPhysx) {\n  \"use strict\";\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  _physicsPhysx.PhysXPhysics.init().then(function () {\n    var engine = new _oasisEngine.WebGLEngine(\"canvas\", _physicsPhysx.PhysXPhysics);\n    engine.canvas.resizeByClientSize();\n    var scene = engine.sceneManager.activeScene;\n    var rootEntity = scene.createRootEntity(\"root\");\n    scene.ambientLight.diffuseSolidColor.setValue(1, 1, 1, 1);\n    scene.ambientLight.diffuseIntensity = 1.2; // init camera\n\n    var cameraEntity = rootEntity.createChild(\"camera\");\n    cameraEntity.addComponent(_oasisEngine.Camera);\n    cameraEntity.transform.setPosition(10, 10, 10);\n    cameraEntity.addComponent(_controls.OrbitControl); // init point light\n\n    var light = rootEntity.createChild(\"light\");\n    light.transform.setPosition(0, 3, 0);\n    var pointLight = light.addComponent(_oasisEngine.PointLight);\n    pointLight.intensity = 0.3; // create box test entity\n\n    var cubeSize = 2.0;\n    var boxEntity = rootEntity.createChild(\"BoxEntity\");\n    var boxMtl = new _oasisEngine.BlinnPhongMaterial(engine);\n    var boxRenderer = boxEntity.addComponent(_oasisEngine.MeshRenderer);\n    boxMtl.baseColor.setValue(0.6, 0.3, 0.3, 1.0);\n    boxRenderer.mesh = _oasisEngine.PrimitiveMesh.createCuboid(engine, cubeSize, cubeSize, cubeSize);\n    boxRenderer.setMaterial(boxMtl);\n    var physicsBox = new _oasisEngine.BoxColliderShape();\n    physicsBox.size = new _oasisEngine.Vector3(cubeSize, cubeSize, cubeSize);\n    physicsBox.material.staticFriction = 0.1;\n    physicsBox.material.dynamicFriction = 0.2;\n    physicsBox.material.bounciness = 1;\n    physicsBox.isTrigger = true;\n    var boxCollider = boxEntity.addComponent(_oasisEngine.StaticCollider);\n    boxCollider.addShape(physicsBox); // create sphere test entity\n\n    var radius = 1.25;\n    var sphereEntity = rootEntity.createChild(\"SphereEntity\");\n    sphereEntity.transform.setPosition(-2, 0, 0);\n    var sphereMtl = new _oasisEngine.BlinnPhongMaterial(engine);\n    var sphereRenderer = sphereEntity.addComponent(_oasisEngine.MeshRenderer);\n    sphereMtl.baseColor.setValue(Math.random(), Math.random(), Math.random(), 1.0);\n    sphereRenderer.mesh = _oasisEngine.PrimitiveMesh.createSphere(engine, radius);\n    sphereRenderer.setMaterial(sphereMtl);\n    var physicsSphere = new _oasisEngine.SphereColliderShape();\n    physicsSphere.radius = radius;\n    physicsSphere.material.staticFriction = 0.1;\n    physicsSphere.material.dynamicFriction = 0.2;\n    physicsSphere.material.bounciness = 1; // sphereEntity.transform.setScale(3,3,3);\n\n    var sphereCollider = sphereEntity.addComponent(_oasisEngine.DynamicCollider);\n    sphereCollider.addShape(physicsSphere);\n\n    var MoveScript = /*#__PURE__*/function (_Script) {\n      _inheritsLoose(MoveScript, _Script);\n\n      function MoveScript() {\n        var _this;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = _Script.call.apply(_Script, [this].concat(args)) || this;\n        _this.pos = new _oasisEngine.Vector3(-5, 0, 0);\n        _this.vel = 0.005;\n        _this.velSign = -1;\n        return _this;\n      }\n\n      var _proto = MoveScript.prototype;\n\n      _proto.onUpdate = function onUpdate(deltaTime) {\n        _Script.prototype.onUpdate.call(this, deltaTime);\n\n        if (this.pos.x >= 5) {\n          this.velSign = -1;\n        }\n\n        if (this.pos.x <= -5) {\n          this.velSign = 1;\n        }\n\n        this.pos.x += deltaTime * this.vel * this.velSign;\n        this.entity.transform.position = this.pos;\n      };\n\n      return MoveScript;\n    }(_oasisEngine.Script); // Collision Detection\n\n\n    var CollisionScript = /*#__PURE__*/function (_Script2) {\n      _inheritsLoose(CollisionScript, _Script2);\n\n      function CollisionScript() {\n        return _Script2.apply(this, arguments) || this;\n      }\n\n      var _proto2 = CollisionScript.prototype;\n\n      _proto2.onTriggerExit = function onTriggerExit(other) {\n        sphereRenderer.getMaterial().baseColor.setValue(Math.random(), Math.random(), Math.random(), 1.0);\n      };\n\n      _proto2.onTriggerEnter = function onTriggerEnter(other) {\n        sphereRenderer.getMaterial().baseColor.setValue(Math.random(), Math.random(), Math.random(), 1.0);\n      };\n\n      _proto2.onTriggerStay = function onTriggerStay(other) {\n        console.log(\"hahaha\");\n      };\n\n      return CollisionScript;\n    }(_oasisEngine.Script);\n\n    sphereEntity.addComponent(CollisionScript);\n    sphereEntity.addComponent(MoveScript); // Run engine\n\n    engine.run();\n  });\n});"},"name":"physx-collision-detection","title":"PhysX Collision Detection","category":"Physics","id":"d7f428ed-652f-5d07-bb9d-c2ffa9f340fd","sourceCode":"/**\n * @title PhysX Collision Detection\n * @category Physics\n */\n\nimport {\n  WebGLEngine, SphereColliderShape, DynamicCollider,\n  BoxColliderShape, Vector3,\n  MeshRenderer, BlinnPhongMaterial, PointLight,\n  PrimitiveMesh, Camera, Script, StaticCollider, ColliderShape\n} from \"oasis-engine\";\nimport { OrbitControl } from \"@oasis-engine/controls\";\n\nimport {\n  PhysXPhysics\n} from \"@oasis-engine/physics-physx\";\n\nPhysXPhysics.init().then(() => {\n  const engine = new WebGLEngine(\"canvas\", PhysXPhysics);\n\n  engine.canvas.resizeByClientSize();\n  const scene = engine.sceneManager.activeScene;\n  const rootEntity = scene.createRootEntity(\"root\");\n\n  scene.ambientLight.diffuseSolidColor.setValue(1, 1, 1, 1);\n  scene.ambientLight.diffuseIntensity = 1.2;\n\n  // init camera\n  const cameraEntity = rootEntity.createChild(\"camera\");\n  cameraEntity.addComponent(Camera);\n  cameraEntity.transform.setPosition(10, 10, 10);\n  cameraEntity.addComponent(OrbitControl);\n\n  // init point light\n  const light = rootEntity.createChild(\"light\");\n  light.transform.setPosition(0, 3, 0);\n  const pointLight = light.addComponent(PointLight);\n  pointLight.intensity = 0.3;\n\n  // create box test entity\n  const cubeSize = 2.0;\n  const boxEntity = rootEntity.createChild(\"BoxEntity\");\n\n  const boxMtl = new BlinnPhongMaterial(engine);\n  const boxRenderer = boxEntity.addComponent(MeshRenderer);\n  boxMtl.baseColor.setValue(0.6, 0.3, 0.3, 1.0);\n  boxRenderer.mesh = PrimitiveMesh.createCuboid(engine, cubeSize, cubeSize, cubeSize);\n  boxRenderer.setMaterial(boxMtl);\n\n  const physicsBox = new BoxColliderShape();\n  physicsBox.size = new Vector3(cubeSize, cubeSize, cubeSize);\n  physicsBox.material.staticFriction = 0.1;\n  physicsBox.material.dynamicFriction = 0.2;\n  physicsBox.material.bounciness = 1;\n  physicsBox.isTrigger = true;\n\n  const boxCollider = boxEntity.addComponent(StaticCollider);\n  boxCollider.addShape(physicsBox);\n\n  // create sphere test entity\n  const radius = 1.25;\n  const sphereEntity = rootEntity.createChild(\"SphereEntity\");\n  sphereEntity.transform.setPosition(-2, 0, 0);\n\n  const sphereMtl = new BlinnPhongMaterial(engine);\n  const sphereRenderer = sphereEntity.addComponent(MeshRenderer);\n  sphereMtl.baseColor.setValue(Math.random(), Math.random(), Math.random(), 1.0);\n  sphereRenderer.mesh = PrimitiveMesh.createSphere(engine, radius);\n  sphereRenderer.setMaterial(sphereMtl);\n\n  const physicsSphere = new SphereColliderShape();\n  physicsSphere.radius = radius;\n  physicsSphere.material.staticFriction = 0.1;\n  physicsSphere.material.dynamicFriction = 0.2;\n  physicsSphere.material.bounciness = 1;\n  // sphereEntity.transform.setScale(3,3,3);\n\n  const sphereCollider = sphereEntity.addComponent(DynamicCollider);\n  sphereCollider.addShape(physicsSphere);\n\n  class MoveScript extends Script {\n    pos: Vector3 = new Vector3(-5, 0, 0);\n    vel: number = 0.005;\n    velSign: number = -1;\n\n    onUpdate(deltaTime: number) {\n      super.onUpdate(deltaTime);\n      if (this.pos.x >= 5) {\n        this.velSign = -1;\n      }\n      if (this.pos.x <= -5) {\n        this.velSign = 1;\n      }\n      this.pos.x += deltaTime * this.vel * this.velSign;\n\n      this.entity.transform.position = this.pos;\n    }\n  }\n\n  // Collision Detection\n  class CollisionScript extends Script {\n    onTriggerExit(other: ColliderShape) {\n      (<BlinnPhongMaterial>sphereRenderer.getMaterial()).baseColor.setValue(Math.random(), Math.random(), Math.random(), 1.0);\n    }\n\n    onTriggerEnter(other: ColliderShape) {\n      (<BlinnPhongMaterial>sphereRenderer.getMaterial()).baseColor.setValue(Math.random(), Math.random(), Math.random(), 1.0);\n    }\n\n    onTriggerStay(other: ColliderShape) {\n      console.log(\"hahaha\");\n    }\n  }\n\n  sphereEntity.addComponent(CollisionScript);\n  sphereEntity.addComponent(MoveScript);\n\n  // Run engine\n  engine.run();\n\n});\n","formatedCode":"<span class=\"token comment\">/**\n * @title PhysX Collision Detection\n * @category Physics\n */</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  WebGLEngine<span class=\"token punctuation\">,</span> SphereColliderShape<span class=\"token punctuation\">,</span> DynamicCollider<span class=\"token punctuation\">,</span>\n  BoxColliderShape<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span> BlinnPhongMaterial<span class=\"token punctuation\">,</span> PointLight<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> Script<span class=\"token punctuation\">,</span> StaticCollider<span class=\"token punctuation\">,</span> ColliderShape\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  PhysXPhysics\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/physics-physx\"</span><span class=\"token punctuation\">;</span>\n\nPhysXPhysics<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">,</span> PhysXPhysics<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  engine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  scene<span class=\"token punctuation\">.</span>ambientLight<span class=\"token punctuation\">.</span>diffuseSolidColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  scene<span class=\"token punctuation\">.</span>ambientLight<span class=\"token punctuation\">.</span>diffuseIntensity <span class=\"token operator\">=</span> <span class=\"token number\">1.2</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// init camera</span>\n  <span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// init point light</span>\n  <span class=\"token keyword\">const</span> light <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"light\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  light<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> pointLight <span class=\"token operator\">=</span> light<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>PointLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  pointLight<span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// create box test entity</span>\n  <span class=\"token keyword\">const</span> cubeSize <span class=\"token operator\">=</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> boxEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BoxEntity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> boxMtl <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> boxRenderer <span class=\"token operator\">=</span> boxEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  boxMtl<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  boxRenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> cubeSize<span class=\"token punctuation\">,</span> cubeSize<span class=\"token punctuation\">,</span> cubeSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  boxRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>boxMtl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> physicsBox <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BoxColliderShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  physicsBox<span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span>cubeSize<span class=\"token punctuation\">,</span> cubeSize<span class=\"token punctuation\">,</span> cubeSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  physicsBox<span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">.</span>staticFriction <span class=\"token operator\">=</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">;</span>\n  physicsBox<span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">.</span>dynamicFriction <span class=\"token operator\">=</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">;</span>\n  physicsBox<span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">.</span>bounciness <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  physicsBox<span class=\"token punctuation\">.</span>isTrigger <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> boxCollider <span class=\"token operator\">=</span> boxEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>StaticCollider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  boxCollider<span class=\"token punctuation\">.</span><span class=\"token function\">addShape</span><span class=\"token punctuation\">(</span>physicsBox<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// create sphere test entity</span>\n  <span class=\"token keyword\">const</span> radius <span class=\"token operator\">=</span> <span class=\"token number\">1.25</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> sphereEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SphereEntity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  sphereEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> sphereMtl <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> sphereRenderer <span class=\"token operator\">=</span> sphereEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  sphereMtl<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  sphereRenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createSphere</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  sphereRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>sphereMtl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> physicsSphere <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SphereColliderShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  physicsSphere<span class=\"token punctuation\">.</span>radius <span class=\"token operator\">=</span> radius<span class=\"token punctuation\">;</span>\n  physicsSphere<span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">.</span>staticFriction <span class=\"token operator\">=</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">;</span>\n  physicsSphere<span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">.</span>dynamicFriction <span class=\"token operator\">=</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">;</span>\n  physicsSphere<span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">.</span>bounciness <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// sphereEntity.transform.setScale(3,3,3);</span>\n\n  <span class=\"token keyword\">const</span> sphereCollider <span class=\"token operator\">=</span> sphereEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DynamicCollider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  sphereCollider<span class=\"token punctuation\">.</span><span class=\"token function\">addShape</span><span class=\"token punctuation\">(</span>physicsSphere<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">class</span> <span class=\"token class-name\">MoveScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n    pos<span class=\"token operator\">:</span> Vector3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    vel<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">0.005</span><span class=\"token punctuation\">;</span>\n    velSign<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">deltaTime<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span>deltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pos<span class=\"token punctuation\">.</span>x <span class=\"token operator\">>=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>velSign <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pos<span class=\"token punctuation\">.</span>x <span class=\"token operator\">&lt;=</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>velSign <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pos<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+=</span> deltaTime <span class=\"token operator\">*</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>vel <span class=\"token operator\">*</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>velSign<span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pos<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Collision Detection</span>\n  <span class=\"token keyword\">class</span> <span class=\"token class-name\">CollisionScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">onTriggerExit</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">other<span class=\"token operator\">:</span> ColliderShape</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>BlinnPhongMaterial<span class=\"token operator\">></span>sphereRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">getMaterial</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">onTriggerEnter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">other<span class=\"token operator\">:</span> ColliderShape</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>BlinnPhongMaterial<span class=\"token operator\">></span>sphereRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">getMaterial</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">onTriggerStay</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">other<span class=\"token operator\">:</span> ColliderShape</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hahaha\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  sphereEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>CollisionScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  sphereEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MoveScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Run engine</span>\n  engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  init();\n\n  function init() {\n    // Create engine\n    var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n    engine.canvas.resizeByClientSize(); // Create root entity\n\n    var scene = engine.sceneManager.activeScene;\n    var rootEntity = scene.createRootEntity();\n    scene.ambientLight.diffuseSolidColor = new _oasisEngine.Color(0.6, 0.6, 0.6); // Create camera\n\n    var cameraEntity = rootEntity.createChild(\"Camera\");\n    cameraEntity.transform.setPosition(0, 0, 20);\n    cameraEntity.addComponent(_oasisEngine.Camera);\n    cameraEntity.addComponent(_controls.OrbitControl); // Create direct light\n\n    var lightEntity = rootEntity.createChild(\"DirectLight\");\n    var light = lightEntity.addComponent(_oasisEngine.DirectLight);\n    light.intensity = 0.6;\n    engine.resourceManager.load({\n      url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*ArCHTbfVPXUAAAAAAAAAAAAAARQnAQ\",\n      type: _oasisEngine.AssetType.Texture2D\n    }).then(function (texture) {\n      var distanceX = 2.5;\n      var distanceY = 2.4;\n      var position = new _oasisEngine.Vector3(); // Create material\n\n      var material = new _oasisEngine.BlinnPhongMaterial(engine);\n      material.renderFace = _oasisEngine.RenderFace.Double;\n      material.baseTexture = texture;\n\n      for (var i = 0; i < 3; i++) {\n        var posX = (i - 1) * distanceX; // Create cuboid\n\n        position.setValue(posX, distanceY * 3, 0);\n        generatePrimitiveEntity(rootEntity, \"cuboid\", position, material, _oasisEngine.PrimitiveMesh.createCuboid(engine)); // Create sphere\n\n        position.setValue(posX, distanceY * 2, 0);\n        generatePrimitiveEntity(rootEntity, \"sphere\", position, material, _oasisEngine.PrimitiveMesh.createSphere(engine)); // Create plane\n\n        position.setValue(posX, distanceY * 1, 0);\n        generatePrimitiveEntity(rootEntity, \"plane\", position, material, _oasisEngine.PrimitiveMesh.createPlane(engine)); // Create cylinder\n\n        position.setValue(posX, -distanceY * 0, 0);\n        generatePrimitiveEntity(rootEntity, \"cylinder\", position, material, _oasisEngine.PrimitiveMesh.createCylinder(engine)); // Create cone\n\n        position.setValue(posX, -distanceY * 1, 0);\n        generatePrimitiveEntity(rootEntity, \"cone\", position, material, _oasisEngine.PrimitiveMesh.createCone(engine)); // Create turos\n\n        position.setValue(posX, -distanceY * 2, 0);\n        generatePrimitiveEntity(rootEntity, \"torus\", position, material, _oasisEngine.PrimitiveMesh.createTorus(engine)); // Create capsule\n\n        position.setValue(posX, -distanceY * 3, 0);\n        generatePrimitiveEntity(rootEntity, \"capsule\", position, material, _oasisEngine.PrimitiveMesh.createCapsule(engine, 0.5, 1, 24, 1));\n      }\n    }); // Run engine\n\n    engine.run();\n  }\n  /**\n   * generate primitive mesh entity.\n   */\n\n\n  function generatePrimitiveEntity(rootEntity, name, position, material, mesh) {\n    var entity = rootEntity.createChild(name);\n    entity.transform.setPosition(position.x, position.y, position.z);\n    entity.addComponent(RotateScript);\n    var renderer = entity.addComponent(_oasisEngine.MeshRenderer);\n    renderer.mesh = mesh;\n    renderer.setMaterial(material);\n    return entity;\n  }\n  /**\n   * Script for rotate.\n   */\n\n\n  var RotateScript = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(RotateScript, _Script);\n\n    function RotateScript() {\n      return _Script.apply(this, arguments) || this;\n    }\n\n    var _proto = RotateScript.prototype;\n\n    /**\n     * @override\n     * The main loop, called frame by frame.\n     * @param deltaTime - The deltaTime when the script update.\n     */\n    _proto.onUpdate = function onUpdate(deltaTime) {\n      this.entity.transform.rotate(0.5, 0.6, 0);\n    };\n\n    return RotateScript;\n  }(_oasisEngine.Script);\n});"},"name":"primitive-mesh","title":"Primitive Mesh","category":"Mesh","id":"8e4fd869-fa04-582d-8e7b-04c66a649199","sourceCode":"/**\n * @title Primitive Mesh\n * @category Mesh\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport {\n  AssetType,\n  BlinnPhongMaterial,\n  Camera,\n  Color,\n  DirectLight,\n  Entity,\n  Material,\n  MeshRenderer,\n  ModelMesh,\n  PrimitiveMesh,\n  RenderFace,\n  Script,\n  Texture2D,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\n\ninit();\n\nfunction init(): void {\n  // Create engine\n  const engine = new WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n\n  // Create root entity\n  const scene = engine.sceneManager.activeScene;\n  const rootEntity = scene.createRootEntity();\n  scene.ambientLight.diffuseSolidColor = new Color(0.6, 0.6, 0.6);\n\n  // Create camera\n  const cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 0, 20);\n  cameraEntity.addComponent(Camera);\n  cameraEntity.addComponent(OrbitControl);\n\n  // Create direct light\n  const lightEntity = rootEntity.createChild(\"DirectLight\");\n  const light = lightEntity.addComponent(DirectLight);\n  light.intensity = 0.6;\n\n  engine.resourceManager\n    .load<Texture2D>({\n      url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*ArCHTbfVPXUAAAAAAAAAAAAAARQnAQ\",\n      type: AssetType.Texture2D\n    })\n    .then((texture) => {\n      const distanceX = 2.5;\n      const distanceY = 2.4;\n      const position = new Vector3();\n\n      // Create material\n      const material = new BlinnPhongMaterial(engine);\n      material.renderFace = RenderFace.Double;\n      material.baseTexture = texture;\n\n      for (let i = 0; i < 3; i++) {\n        const posX = (i - 1) * distanceX;\n\n        // Create cuboid\n        position.setValue(posX, distanceY * 3, 0);\n        generatePrimitiveEntity(rootEntity, \"cuboid\", position, material, PrimitiveMesh.createCuboid(engine));\n\n        // Create sphere\n        position.setValue(posX, distanceY * 2, 0);\n        generatePrimitiveEntity(rootEntity, \"sphere\", position, material, PrimitiveMesh.createSphere(engine));\n\n        // Create plane\n        position.setValue(posX, distanceY * 1, 0);\n        generatePrimitiveEntity(rootEntity, \"plane\", position, material, PrimitiveMesh.createPlane(engine));\n\n        // Create cylinder\n        position.setValue(posX, -distanceY * 0, 0);\n        generatePrimitiveEntity(rootEntity, \"cylinder\", position, material, PrimitiveMesh.createCylinder(engine));\n\n        // Create cone\n        position.setValue(posX, -distanceY * 1, 0);\n        generatePrimitiveEntity(rootEntity, \"cone\", position, material, PrimitiveMesh.createCone(engine));\n\n        // Create turos\n        position.setValue(posX, -distanceY * 2, 0);\n        generatePrimitiveEntity(rootEntity, \"torus\", position, material, PrimitiveMesh.createTorus(engine));\n\n        // Create capsule\n        position.setValue(posX, -distanceY * 3, 0);\n        generatePrimitiveEntity(\n          rootEntity,\n          \"capsule\",\n          position,\n          material,\n          PrimitiveMesh.createCapsule(engine, 0.5, 1, 24, 1)\n        );\n      }\n    });\n\n  // Run engine\n  engine.run();\n}\n\n/**\n * generate primitive mesh entity.\n */\nfunction generatePrimitiveEntity(\n  rootEntity: Entity,\n  name: string,\n  position: Vector3,\n  material: Material,\n  mesh: ModelMesh\n): Entity {\n  const entity = rootEntity.createChild(name);\n  entity.transform.setPosition(position.x, position.y, position.z);\n  entity.addComponent(RotateScript);\n  const renderer = entity.addComponent(MeshRenderer);\n  renderer.mesh = mesh;\n  renderer.setMaterial(material);\n\n  return entity;\n}\n\n/**\n * Script for rotate.\n */\nclass RotateScript extends Script {\n  /**\n   * @override\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */\n  onUpdate(deltaTime: number): void {\n    this.entity.transform.rotate(0.5, 0.6, 0);\n  }\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Primitive Mesh\n * @category Mesh\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  BlinnPhongMaterial<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  Color<span class=\"token punctuation\">,</span>\n  DirectLight<span class=\"token punctuation\">,</span>\n  Entity<span class=\"token punctuation\">,</span>\n  Material<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  ModelMesh<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  RenderFace<span class=\"token punctuation\">,</span>\n  Script<span class=\"token punctuation\">,</span>\n  Texture2D<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Create engine</span>\n  <span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  engine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create root entity</span>\n  <span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  scene<span class=\"token punctuation\">.</span>ambientLight<span class=\"token punctuation\">.</span>diffuseSolidColor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create camera</span>\n  <span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create direct light</span>\n  <span class=\"token keyword\">const</span> lightEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DirectLight\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> light <span class=\"token operator\">=</span> lightEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  light<span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">;</span>\n\n  engine<span class=\"token punctuation\">.</span>resourceManager\n    <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*ArCHTbfVPXUAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> distanceX <span class=\"token operator\">=</span> <span class=\"token number\">2.5</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> distanceY <span class=\"token operator\">=</span> <span class=\"token number\">2.4</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Create material</span>\n      <span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      material<span class=\"token punctuation\">.</span>renderFace <span class=\"token operator\">=</span> RenderFace<span class=\"token punctuation\">.</span>Double<span class=\"token punctuation\">;</span>\n      material<span class=\"token punctuation\">.</span>baseTexture <span class=\"token operator\">=</span> texture<span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> posX <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> distanceX<span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Create cuboid</span>\n        position<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>posX<span class=\"token punctuation\">,</span> distanceY <span class=\"token operator\">*</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">generatePrimitiveEntity</span><span class=\"token punctuation\">(</span>rootEntity<span class=\"token punctuation\">,</span> <span class=\"token string\">\"cuboid\"</span><span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">,</span> material<span class=\"token punctuation\">,</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Create sphere</span>\n        position<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>posX<span class=\"token punctuation\">,</span> distanceY <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">generatePrimitiveEntity</span><span class=\"token punctuation\">(</span>rootEntity<span class=\"token punctuation\">,</span> <span class=\"token string\">\"sphere\"</span><span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">,</span> material<span class=\"token punctuation\">,</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createSphere</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Create plane</span>\n        position<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>posX<span class=\"token punctuation\">,</span> distanceY <span class=\"token operator\">*</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">generatePrimitiveEntity</span><span class=\"token punctuation\">(</span>rootEntity<span class=\"token punctuation\">,</span> <span class=\"token string\">\"plane\"</span><span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">,</span> material<span class=\"token punctuation\">,</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createPlane</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Create cylinder</span>\n        position<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>posX<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>distanceY <span class=\"token operator\">*</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">generatePrimitiveEntity</span><span class=\"token punctuation\">(</span>rootEntity<span class=\"token punctuation\">,</span> <span class=\"token string\">\"cylinder\"</span><span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">,</span> material<span class=\"token punctuation\">,</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCylinder</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Create cone</span>\n        position<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>posX<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>distanceY <span class=\"token operator\">*</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">generatePrimitiveEntity</span><span class=\"token punctuation\">(</span>rootEntity<span class=\"token punctuation\">,</span> <span class=\"token string\">\"cone\"</span><span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">,</span> material<span class=\"token punctuation\">,</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCone</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Create turos</span>\n        position<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>posX<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>distanceY <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">generatePrimitiveEntity</span><span class=\"token punctuation\">(</span>rootEntity<span class=\"token punctuation\">,</span> <span class=\"token string\">\"torus\"</span><span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">,</span> material<span class=\"token punctuation\">,</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createTorus</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Create capsule</span>\n        position<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>posX<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>distanceY <span class=\"token operator\">*</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">generatePrimitiveEntity</span><span class=\"token punctuation\">(</span>\n          rootEntity<span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"capsule\"</span><span class=\"token punctuation\">,</span>\n          position<span class=\"token punctuation\">,</span>\n          material<span class=\"token punctuation\">,</span>\n          PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCapsule</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Run engine</span>\n  engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * generate primitive mesh entity.\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">generatePrimitiveEntity</span><span class=\"token punctuation\">(</span>\n  <span class=\"token parameter\">rootEntity<span class=\"token operator\">:</span> Entity<span class=\"token punctuation\">,</span>\n  name<span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span>\n  position<span class=\"token operator\">:</span> Vector3<span class=\"token punctuation\">,</span>\n  material<span class=\"token operator\">:</span> Material<span class=\"token punctuation\">,</span>\n  mesh<span class=\"token operator\">:</span> ModelMesh</span>\n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Entity <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> entity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  entity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>RotateScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> renderer <span class=\"token operator\">=</span> entity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  renderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> mesh<span class=\"token punctuation\">;</span>\n  renderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> entity<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * Script for rotate.\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">RotateScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/**\n   * @override\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */</span>\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span>deltaTime<span class=\"token operator\">:</span> number<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title Scene Basic\n   * @category Basic\n   */\n  // Import Modules\n  // Init Engine\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\"); // Adapter to screen\n\n  engine.canvas.resizeByClientSize(); // Get root entity of current scene\n\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(\"root\"); // Init Camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_entity\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 5, 10);\n  cameraEntity.transform.lookAt(new _oasisEngine.Vector3(0, 0, 0));\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  scene.background.solidColor.setValue(1, 1, 1, 1); // Create a entity to add light component\n\n  var lightEntity = rootEntity.createChild(\"light\"); // Create light component\n\n  var directLight = lightEntity.addComponent(_oasisEngine.DirectLight);\n  directLight.color = new _oasisEngine.Color(1.0, 1.0, 1.0);\n  directLight.intensity = 0.5; // Control light direction by entity's transform\n\n  lightEntity.transform.rotation = new _oasisEngine.Vector3(45, 45, 45); // Create Cube\n\n  var cubeEntity = rootEntity.createChild(\"cube\");\n  var cube = cubeEntity.addComponent(_oasisEngine.MeshRenderer);\n  cube.mesh = _oasisEngine.PrimitiveMesh.createCuboid(engine, 2, 2, 2);\n  cube.setMaterial(new _oasisEngine.BlinnPhongMaterial(engine)); // Run Engine\n\n  engine.run();\n});"},"name":"scene-basic","title":"Scene Basic","category":"Basic","id":"17813e22-7453-50ee-9722-25394aa5ff9b","sourceCode":"/**\n * @title Scene Basic\n * @category Basic\n */\n// Import Modules\nimport {\n  BlinnPhongMaterial,\n  Camera,\n  Color,\n  DirectLight,\n  MeshRenderer,\n  PrimitiveMesh,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\n\n// Init Engine\nconst engine = new WebGLEngine(\"canvas\");\n// Adapter to screen\nengine.canvas.resizeByClientSize();\n\n// Get root entity of current scene\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity(\"root\");\n\n// Init Camera\nlet cameraEntity = rootEntity.createChild(\"camera_entity\");\ncameraEntity.transform.position = new Vector3(0, 5, 10);\ncameraEntity.transform.lookAt(new Vector3(0, 0, 0));\ncameraEntity.addComponent(Camera);\nscene.background.solidColor.setValue(1, 1, 1, 1);\n\n// Create a entity to add light component\nlet lightEntity = rootEntity.createChild(\"light\");\n\n// Create light component\nlet directLight = lightEntity.addComponent(DirectLight);\ndirectLight.color = new Color(1.0, 1.0, 1.0);\ndirectLight.intensity = 0.5;\n\n// Control light direction by entity's transform\nlightEntity.transform.rotation = new Vector3(45, 45, 45);\n\n// Create Cube\nlet cubeEntity = rootEntity.createChild(\"cube\");\nlet cube = cubeEntity.addComponent(MeshRenderer);\ncube.mesh = PrimitiveMesh.createCuboid(engine, 2, 2, 2);\ncube.setMaterial(new BlinnPhongMaterial(engine));\n\n// Run Engine\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Scene Basic\n * @category Basic\n */</span>\n<span class=\"token comment\">// Import Modules</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  BlinnPhongMaterial<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  Color<span class=\"token punctuation\">,</span>\n  DirectLight<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Init Engine</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Adapter to screen</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Get root entity of current scene</span>\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Init Camera</span>\n<span class=\"token keyword\">let</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_entity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nscene<span class=\"token punctuation\">.</span>background<span class=\"token punctuation\">.</span>solidColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create a entity to add light component</span>\n<span class=\"token keyword\">let</span> lightEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"light\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create light component</span>\n<span class=\"token keyword\">let</span> directLight <span class=\"token operator\">=</span> lightEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndirectLight<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndirectLight<span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Control light direction by entity's transform</span>\nlightEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>rotation <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create Cube</span>\n<span class=\"token keyword\">let</span> cubeEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cube\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> cube <span class=\"token operator\">=</span> cubeEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncube<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncube<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Run Engine</span>\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  var gui = new dat.GUI(); //-- create engine object\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); //-- create camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_entity\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 0, 50);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  var control = cameraEntity.addComponent(_controls.FreeControl);\n  control.movementSpeed = 50;\n  engine.run(); // create two renderer\n\n  var cube = rootEntity.createChild(\"cube1\");\n  var cube2 = rootEntity.createChild(\"cube2\");\n  cube.transform.position = new _oasisEngine.Vector3(-10, 0, 0);\n  cube2.transform.position = new _oasisEngine.Vector3(10, 0, 0);\n  var lightNode = rootEntity.createChild(\"Light\");\n  lightNode.transform.setRotation(-45, 0, 0);\n  lightNode.addComponent(_oasisEngine.DirectLight);\n  var material = new _oasisEngine.BlinnPhongMaterial(engine);\n  material.baseColor = new _oasisEngine.Color(1, 0, 0, 1);\n  var material2 = new _oasisEngine.BlinnPhongMaterial(engine);\n  material2.baseColor = new _oasisEngine.Color(0, 0, 1, 1);\n\n  var geometry = _oasisEngine.PrimitiveMesh.createCuboid(engine, 5, 5, 5);\n\n  var sphereGeometry = _oasisEngine.PrimitiveMesh.createSphere(engine, 5);\n\n  var cubeRenderer = cube.addComponent(_oasisEngine.MeshRenderer);\n  var cubeRenderer2 = cube2.addComponent(_oasisEngine.MeshRenderer);\n  cubeRenderer.mesh = geometry;\n  cubeRenderer.setMaterial(material);\n  cubeRenderer2.mesh = sphereGeometry;\n  cubeRenderer2.setMaterial(material2); // rotate\n\n  var RotationScript = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(RotationScript, _Script);\n\n    function RotationScript() {\n      return _Script.apply(this, arguments) || this;\n    }\n\n    var _proto = RotationScript.prototype;\n\n    _proto.onUpdate = function onUpdate() {\n      this.entity.transform.rotate(1, 1, 1);\n    };\n\n    return RotationScript;\n  }(_oasisEngine.Script);\n\n  cube.addComponent(RotationScript);\n  cube2.addComponent(RotationScript); // observe renderer-cull\n\n  var state = {\n    cube1: \"正常渲染\",\n    cube2: \"正常渲染\"\n  };\n\n  var ObserverScript = /*#__PURE__*/function (_Script2) {\n    _inheritsLoose(ObserverScript, _Script2);\n\n    function ObserverScript() {\n      return _Script2.apply(this, arguments) || this;\n    }\n\n    var _proto2 = ObserverScript.prototype;\n\n    _proto2.onUpdate = function onUpdate() {\n      state.cube1 = cubeRenderer.isCulled ? \"视锥体裁剪\" : \"正常渲染\";\n      state.cube2 = cubeRenderer2.isCulled ? \"视锥体裁剪\" : \"正常渲染\";\n    };\n\n    return ObserverScript;\n  }(_oasisEngine.Script);\n\n  rootEntity.addComponent(ObserverScript);\n  var folder = gui.addFolder(\"移动视角，观察视锥体裁剪情况\");\n  folder.add(state, \"cube1\").name(\"红色立方体\").listen();\n  folder.add(state, \"cube2\").name(\"蓝色球体\").listen();\n  folder.open();\n});"},"name":"renderer-cull","title":"Renderer Cull","category":"Camera","id":"ba51acd0-afdd-54e1-86f3-435e276b5be2","sourceCode":"/**\n * @title Renderer Cull\n * @category Camera\n */\nimport { FreeControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\nimport {\n  BlinnPhongMaterial,\n  Camera,\n  Color,\n  DirectLight,\n  MeshRenderer,\n  PrimitiveMesh,\n  Script,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\nconst gui = new dat.GUI();\n\n//-- create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n//-- create camera\nconst cameraEntity = rootEntity.createChild(\"camera_entity\");\ncameraEntity.transform.position = new Vector3(0, 0, 50);\ncameraEntity.addComponent(Camera);\nconst control = cameraEntity.addComponent(FreeControl);\ncontrol.movementSpeed = 50;\n\nengine.run();\n\n// create two renderer\nconst cube = rootEntity.createChild(\"cube1\");\nconst cube2 = rootEntity.createChild(\"cube2\");\ncube.transform.position = new Vector3(-10, 0, 0);\ncube2.transform.position = new Vector3(10, 0, 0);\n\nconst lightNode = rootEntity.createChild(\"Light\");\nlightNode.transform.setRotation(-45, 0, 0);\nlightNode.addComponent(DirectLight);\n\nconst material = new BlinnPhongMaterial(engine);\nmaterial.baseColor = new Color(1, 0, 0, 1);\nconst material2 = new BlinnPhongMaterial(engine);\nmaterial2.baseColor = new Color(0, 0, 1, 1);\nconst geometry = PrimitiveMesh.createCuboid(engine, 5, 5, 5);\nconst sphereGeometry = PrimitiveMesh.createSphere(engine, 5);\n\nconst cubeRenderer = cube.addComponent(MeshRenderer);\nconst cubeRenderer2 = cube2.addComponent(MeshRenderer);\n\ncubeRenderer.mesh = geometry;\ncubeRenderer.setMaterial(material);\n\ncubeRenderer2.mesh = sphereGeometry;\ncubeRenderer2.setMaterial(material2);\n\n// rotate\nclass RotationScript extends Script {\n  onUpdate() {\n    this.entity.transform.rotate(1, 1, 1);\n  }\n}\ncube.addComponent(RotationScript);\ncube2.addComponent(RotationScript);\n\n// observe renderer-cull\nconst state = {\n  cube1: \"正常渲染\",\n  cube2: \"正常渲染\"\n};\n\nclass ObserverScript extends Script {\n  onUpdate() {\n    state.cube1 = cubeRenderer.isCulled ? \"视锥体裁剪\" : \"正常渲染\";\n    state.cube2 = cubeRenderer2.isCulled ? \"视锥体裁剪\" : \"正常渲染\";\n  }\n}\n\nrootEntity.addComponent(ObserverScript);\n\nconst folder = gui.addFolder(\"移动视角，观察视锥体裁剪情况\");\nfolder.add(state, \"cube1\").name(\"红色立方体\").listen();\nfolder.add(state, \"cube2\").name(\"蓝色球体\").listen();\nfolder.open();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Renderer Cull\n * @category Camera\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> FreeControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  BlinnPhongMaterial<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  Color<span class=\"token punctuation\">,</span>\n  DirectLight<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  Script<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_entity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> control <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>FreeControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncontrol<span class=\"token punctuation\">.</span>movementSpeed <span class=\"token operator\">=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// create two renderer</span>\n<span class=\"token keyword\">const</span> cube <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cube1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> cube2 <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cube2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncube<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncube2<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> lightNode <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Light\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setRotation</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmaterial<span class=\"token punctuation\">.</span>baseColor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> material2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmaterial2<span class=\"token punctuation\">.</span>baseColor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> geometry <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> sphereGeometry <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createSphere</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> cubeRenderer <span class=\"token operator\">=</span> cube<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> cubeRenderer2 <span class=\"token operator\">=</span> cube2<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ncubeRenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> geometry<span class=\"token punctuation\">;</span>\ncubeRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ncubeRenderer2<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> sphereGeometry<span class=\"token punctuation\">;</span>\ncubeRenderer2<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// rotate</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">RotationScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\ncube<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>RotationScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncube2<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>RotationScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// observe renderer-cull</span>\n<span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  cube1<span class=\"token operator\">:</span> <span class=\"token string\">\"正常渲染\"</span><span class=\"token punctuation\">,</span>\n  cube2<span class=\"token operator\">:</span> <span class=\"token string\">\"正常渲染\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ObserverScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    state<span class=\"token punctuation\">.</span>cube1 <span class=\"token operator\">=</span> cubeRenderer<span class=\"token punctuation\">.</span>isCulled <span class=\"token operator\">?</span> <span class=\"token string\">\"视锥体裁剪\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"正常渲染\"</span><span class=\"token punctuation\">;</span>\n    state<span class=\"token punctuation\">.</span>cube2 <span class=\"token operator\">=</span> cubeRenderer2<span class=\"token punctuation\">.</span>isCulled <span class=\"token operator\">?</span> <span class=\"token string\">\"视锥体裁剪\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"正常渲染\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nrootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>ObserverScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> folder <span class=\"token operator\">=</span> gui<span class=\"token punctuation\">.</span><span class=\"token function\">addFolder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"移动视角，观察视锥体裁剪情况\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfolder<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"cube1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"红色立方体\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfolder<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"cube2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"蓝色球体\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfolder<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  // Create scene\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity();\n  var cameraEntity = rootEntity.createChild(\"camera\");\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.transform.setPosition(0, 0, 10);\n  var control = cameraEntity.addComponent(_controls.OrbitControl);\n  control.minDistance = 3;\n  scene.ambientLight.diffuseSolidColor.setValue(1, 1, 1, 1); // Create planes to mock mirror\n\n  var planeEntity = rootEntity.createChild(\"mirror\");\n  var planeRenderer = planeEntity.addComponent(_oasisEngine.MeshRenderer);\n\n  var mesh = _oasisEngine.PrimitiveMesh.createPlane(engine, 2, 2);\n\n  var material = new _oasisEngine.UnlitMaterial(engine);\n  planeEntity.transform.setRotation(0, 0, 180);\n  material.renderFace = _oasisEngine.RenderFace.Double;\n  planeRenderer.mesh = mesh;\n  planeRenderer.setMaterial(material);\n\n  for (var i = 0; i < 8; i++) {\n    var clone = planeEntity.clone();\n    planeEntity.parent.addChild(clone);\n    clone.layer = _oasisEngine.Layer.Layer1;\n    clone.transform.setPosition((i - 4) * 2, 0, i % 2 ? -5 : -8);\n  }\n\n  planeEntity.isActive = false; // Create sky\n\n  var background = scene.background;\n  var sky = background.sky;\n  var skyMaterial = new _oasisEngine.SkyBoxMaterial(engine);\n  background.mode = _oasisEngine.BackgroundMode.Sky;\n  sky.material = skyMaterial;\n  sky.mesh = _oasisEngine.PrimitiveMesh.createCuboid(engine, 1, 1, 1);\n  engine.resourceManager.load({\n    urls: [\"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*Gi7CTZqKuacAAAAAAAAAAABkARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*iRRMQIExwKMAAAAAAAAAAABkARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*ZIcPQZo20sAAAAAAAAAAAABkARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*SPYuTbHT-KgAAAAAAAAAAABkARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*mGUERbY77roAAAAAAAAAAABkARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*ilkPS7A1_JsAAAAAAAAAAABkARQnAQ\"],\n    type: _oasisEngine.AssetType.TextureCube\n  }).then(function (cubeMap) {\n    scene.ambientLight.specularTexture = cubeMap;\n    skyMaterial.textureCubeMap = cubeMap;\n  }); // Load glTF\n\n  engine.resourceManager.load(\"https://gw.alipayobjects.com/os/bmw-prod/8cc524dd-2481-438d-8374-3c933adea3b6.gltf\").then(function (gltf) {\n    var animations = gltf.animations,\n        defaultSceneRoot = gltf.defaultSceneRoot;\n    rootEntity.addChild(defaultSceneRoot);\n    var animator = defaultSceneRoot.getComponent(_oasisEngine.Animator);\n    animator.play(animations[0].name);\n  }); // Add script to switch `camera.renderTarget`\n\n  var switchRTScript = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(switchRTScript, _Script);\n\n    function switchRTScript(entity) {\n      var _this;\n\n      _this = _Script.call(this, entity) || this;\n      _this.renderColorTexture = new _oasisEngine.RenderColorTexture(engine, 1024, 1024);\n      _this.renderTarget = new _oasisEngine.RenderTarget(engine, 1024, 1024, _this.renderColorTexture);\n      material.baseTexture = _this.renderColorTexture;\n      return _this;\n    }\n\n    var _proto = switchRTScript.prototype;\n\n    _proto.onBeginRender = function onBeginRender(camera) {\n      camera.renderTarget = this.renderTarget;\n      camera.cullingMask = _oasisEngine.Layer.Layer0;\n      camera.render();\n      camera.renderTarget = null;\n      camera.cullingMask = _oasisEngine.Layer.Everything;\n    };\n\n    return switchRTScript;\n  }(_oasisEngine.Script);\n\n  cameraEntity.addComponent(switchRTScript);\n  engine.run();\n});"},"name":"render-target","title":"Render Target","category":"Camera","id":"b38210e4-4c28-55df-a8f9-2278e614648f","sourceCode":"/**\n * @title Render Target\n * @category Camera\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport {\n  Animator,\n  AssetType,\n  BackgroundMode,\n  Camera,\n  Entity,\n  GLTFResource,\n  Layer,\n  MeshRenderer,\n  PrimitiveMesh,\n  RenderColorTexture,\n  RenderFace,\n  RenderTarget,\n  Script,\n  SkyBoxMaterial,\n  TextureCubeMap,\n  UnlitMaterial,\n  WebGLEngine\n} from \"oasis-engine\";\n\n// Create scene\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\nconst cameraEntity = rootEntity.createChild(\"camera\");\ncameraEntity.addComponent(Camera);\ncameraEntity.transform.setPosition(0, 0, 10);\nconst control = cameraEntity.addComponent(OrbitControl);\ncontrol.minDistance = 3;\n\nscene.ambientLight.diffuseSolidColor.setValue(1, 1, 1, 1);\n\n// Create planes to mock mirror\nconst planeEntity = rootEntity.createChild(\"mirror\");\nconst planeRenderer = planeEntity.addComponent(MeshRenderer);\nconst mesh = PrimitiveMesh.createPlane(engine, 2, 2);\nconst material = new UnlitMaterial(engine);\n\nplaneEntity.transform.setRotation(0, 0, 180);\nmaterial.renderFace = RenderFace.Double;\nplaneRenderer.mesh = mesh;\nplaneRenderer.setMaterial(material);\nfor (let i = 0; i < 8; i++) {\n  const clone = planeEntity.clone();\n  planeEntity.parent.addChild(clone);\n\n  clone.layer = Layer.Layer1;\n  clone.transform.setPosition((i - 4) * 2, 0, i % 2 ? -5 : -8);\n}\nplaneEntity.isActive = false;\n\n// Create sky\nconst background = scene.background;\nconst sky = background.sky;\nconst skyMaterial = new SkyBoxMaterial(engine);\nbackground.mode = BackgroundMode.Sky;\nsky.material = skyMaterial;\nsky.mesh = PrimitiveMesh.createCuboid(engine, 1, 1, 1);\n\nengine.resourceManager\n  .load<TextureCubeMap>({\n    urls: [\n      \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*Gi7CTZqKuacAAAAAAAAAAABkARQnAQ\",\n      \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*iRRMQIExwKMAAAAAAAAAAABkARQnAQ\",\n      \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*ZIcPQZo20sAAAAAAAAAAAABkARQnAQ\",\n      \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*SPYuTbHT-KgAAAAAAAAAAABkARQnAQ\",\n      \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*mGUERbY77roAAAAAAAAAAABkARQnAQ\",\n      \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*ilkPS7A1_JsAAAAAAAAAAABkARQnAQ\"\n    ],\n    type: AssetType.TextureCube\n  })\n  .then((cubeMap) => {\n    scene.ambientLight.specularTexture = cubeMap;\n    skyMaterial.textureCubeMap = cubeMap;\n  });\n\n// Load glTF\nengine.resourceManager\n  .load<GLTFResource>(\"https://gw.alipayobjects.com/os/bmw-prod/8cc524dd-2481-438d-8374-3c933adea3b6.gltf\")\n  .then((gltf) => {\n    const { animations, defaultSceneRoot } = gltf;\n\n    rootEntity.addChild(defaultSceneRoot);\n    const animator = defaultSceneRoot.getComponent(Animator);\n    animator.play(animations[0].name);\n  });\n\n// Add script to switch `camera.renderTarget`\nclass switchRTScript extends Script {\n  renderColorTexture = new RenderColorTexture(engine, 1024, 1024);\n  renderTarget = new RenderTarget(engine, 1024, 1024, this.renderColorTexture);\n\n  constructor(entity: Entity) {\n    super(entity);\n    material.baseTexture = this.renderColorTexture as any;\n  }\n\n  onBeginRender(camera: Camera) {\n    camera.renderTarget = this.renderTarget;\n    camera.cullingMask = Layer.Layer0;\n    camera.render();\n    camera.renderTarget = null;\n    camera.cullingMask = Layer.Everything;\n  }\n}\n\ncameraEntity.addComponent(switchRTScript);\n\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Render Target\n * @category Camera\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  Animator<span class=\"token punctuation\">,</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  BackgroundMode<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  Entity<span class=\"token punctuation\">,</span>\n  GLTFResource<span class=\"token punctuation\">,</span>\n  Layer<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  RenderColorTexture<span class=\"token punctuation\">,</span>\n  RenderFace<span class=\"token punctuation\">,</span>\n  RenderTarget<span class=\"token punctuation\">,</span>\n  Script<span class=\"token punctuation\">,</span>\n  SkyBoxMaterial<span class=\"token punctuation\">,</span>\n  TextureCubeMap<span class=\"token punctuation\">,</span>\n  UnlitMaterial<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create scene</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> control <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncontrol<span class=\"token punctuation\">.</span>minDistance <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n\nscene<span class=\"token punctuation\">.</span>ambientLight<span class=\"token punctuation\">.</span>diffuseSolidColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create planes to mock mirror</span>\n<span class=\"token keyword\">const</span> planeEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mirror\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> planeRenderer <span class=\"token operator\">=</span> planeEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createPlane</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnlitMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nplaneEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setRotation</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">180</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmaterial<span class=\"token punctuation\">.</span>renderFace <span class=\"token operator\">=</span> RenderFace<span class=\"token punctuation\">.</span>Double<span class=\"token punctuation\">;</span>\nplaneRenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> mesh<span class=\"token punctuation\">;</span>\nplaneRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> clone <span class=\"token operator\">=</span> planeEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  planeEntity<span class=\"token punctuation\">.</span>parent<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>clone<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  clone<span class=\"token punctuation\">.</span>layer <span class=\"token operator\">=</span> Layer<span class=\"token punctuation\">.</span>Layer1<span class=\"token punctuation\">;</span>\n  clone<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">?</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span> <span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nplaneEntity<span class=\"token punctuation\">.</span>isActive <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create sky</span>\n<span class=\"token keyword\">const</span> background <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span>background<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> sky <span class=\"token operator\">=</span> background<span class=\"token punctuation\">.</span>sky<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> skyMaterial <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SkyBoxMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nbackground<span class=\"token punctuation\">.</span>mode <span class=\"token operator\">=</span> BackgroundMode<span class=\"token punctuation\">.</span>Sky<span class=\"token punctuation\">;</span>\nsky<span class=\"token punctuation\">.</span>material <span class=\"token operator\">=</span> skyMaterial<span class=\"token punctuation\">;</span>\nsky<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>TextureCubeMap<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    urls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*Gi7CTZqKuacAAAAAAAAAAABkARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*iRRMQIExwKMAAAAAAAAAAABkARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*ZIcPQZo20sAAAAAAAAAAAABkARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*SPYuTbHT-KgAAAAAAAAAAABkARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*mGUERbY77roAAAAAAAAAAABkARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*ilkPS7A1_JsAAAAAAAAAAABkARQnAQ\"</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>TextureCube\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cubeMap</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    scene<span class=\"token punctuation\">.</span>ambientLight<span class=\"token punctuation\">.</span>specularTexture <span class=\"token operator\">=</span> cubeMap<span class=\"token punctuation\">;</span>\n    skyMaterial<span class=\"token punctuation\">.</span>textureCubeMap <span class=\"token operator\">=</span> cubeMap<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Load glTF</span>\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>GLTFResource<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/8cc524dd-2481-438d-8374-3c933adea3b6.gltf\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">gltf</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> animations<span class=\"token punctuation\">,</span> defaultSceneRoot <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> gltf<span class=\"token punctuation\">;</span>\n\n    rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>defaultSceneRoot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> animator <span class=\"token operator\">=</span> defaultSceneRoot<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>Animator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    animator<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span>animations<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Add script to switch `camera.renderTarget`</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">switchRTScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  renderColorTexture <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RenderColorTexture</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  renderTarget <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RenderTarget</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>renderColorTexture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entity<span class=\"token operator\">:</span> Entity</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>entity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    material<span class=\"token punctuation\">.</span>baseTexture <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>renderColorTexture <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">onBeginRender</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">camera<span class=\"token operator\">:</span> Camera</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    camera<span class=\"token punctuation\">.</span>renderTarget <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>renderTarget<span class=\"token punctuation\">;</span>\n    camera<span class=\"token punctuation\">.</span>cullingMask <span class=\"token operator\">=</span> Layer<span class=\"token punctuation\">.</span>Layer0<span class=\"token punctuation\">;</span>\n    camera<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    camera<span class=\"token punctuation\">.</span>renderTarget <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    camera<span class=\"token punctuation\">.</span>cullingMask <span class=\"token operator\">=</span> Layer<span class=\"token punctuation\">.</span>Everything<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>switchRTScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var rootEntity = engine.sceneManager.activeScene.createRootEntity();\n  var cameraEntity = rootEntity.createChild(\"camera\");\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.transform.setPosition(3, 3, 3);\n  cameraEntity.transform.lookAt(new _oasisEngine.Vector3(0, 0, 0));\n  cameraEntity.addComponent(_controls.OrbitControl);\n  engine.sceneManager.activeScene.ambientLight.diffuseSolidColor.setValue(1, 1, 1, 1); // Create Rotate Script\n\n  var Rotate = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(Rotate, _Script);\n\n    function Rotate() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _Script.call.apply(_Script, [this].concat(args)) || this;\n      _this._tempVector = new _oasisEngine.Vector3(0, 1, 0);\n      return _this;\n    }\n\n    var _proto = Rotate.prototype;\n\n    _proto.onUpdate = function onUpdate() {\n      this.entity.transform.rotate(this._tempVector);\n    };\n\n    return Rotate;\n  }(_oasisEngine.Script);\n\n  engine.resourceManager.load(\"https://gw.alipayobjects.com/os/OasisHub/267000040/9994/%25E5%25BD%2592%25E6%25A1%25A3.gltf\").then(function (gltf) {\n    var duck = gltf.defaultSceneRoot;\n    rootEntity.addChild(duck); // Add Script\n\n    duck.addComponent(Rotate);\n  });\n  engine.run();\n});"},"name":"script-basic","title":"Script Basic","category":"Basic","id":"970a3b49-7c28-5d36-aed2-fd4e6dc8da0a","sourceCode":"/**\n * @title Script Basic\n * @category Basic\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport { Camera, GLTFResource, Script, Vector3, WebGLEngine } from \"oasis-engine\";\n\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst rootEntity = engine.sceneManager.activeScene.createRootEntity();\n\nconst cameraEntity = rootEntity.createChild(\"camera\");\ncameraEntity.addComponent(Camera);\ncameraEntity.transform.setPosition(3, 3, 3);\ncameraEntity.transform.lookAt(new Vector3(0, 0, 0));\ncameraEntity.addComponent(OrbitControl);\n\nengine.sceneManager.activeScene.ambientLight.diffuseSolidColor.setValue(1, 1, 1, 1);\n\n// Create Rotate Script\nclass Rotate extends Script {\n  private _tempVector = new Vector3(0, 1, 0);\n  onUpdate() {\n    this.entity.transform.rotate(this._tempVector);\n  }\n}\n\nengine.resourceManager\n  .load<GLTFResource>(\"https://gw.alipayobjects.com/os/OasisHub/267000040/9994/%25E5%25BD%2592%25E6%25A1%25A3.gltf\")\n  .then((gltf) => {\n    const duck = gltf.defaultSceneRoot;\n\n    rootEntity.addChild(duck);\n\n    // Add Script\n    duck.addComponent(Rotate);\n  });\n\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Script Basic\n * @category Basic\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Camera<span class=\"token punctuation\">,</span> GLTFResource<span class=\"token punctuation\">,</span> Script<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span>ambientLight<span class=\"token punctuation\">.</span>diffuseSolidColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create Rotate Script</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Rotate</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> _tempVector <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_tempVector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>GLTFResource<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://gw.alipayobjects.com/os/OasisHub/267000040/9994/%25E5%25BD%2592%25E6%25A1%25A3.gltf\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">gltf</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> duck <span class=\"token operator\">=</span> gltf<span class=\"token punctuation\">.</span>defaultSceneRoot<span class=\"token punctuation\">;</span>\n\n    rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>duck<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Add Script</span>\n    duck<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Rotate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title Animation BlendShape\n   * @category Animation\n   */\n  _oasisEngine.Logger.enable();\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.width = window.innerWidth * _oasisEngine.SystemInfo.devicePixelRatio;\n  engine.canvas.height = window.innerHeight * _oasisEngine.SystemInfo.devicePixelRatio;\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_node\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 1, 5);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl).target = new _oasisEngine.Vector3(0, 1, 0);\n  var lightNode = rootEntity.createChild(\"light_node\");\n  lightNode.addComponent(_oasisEngine.DirectLight).intensity = 1.0;\n  lightNode.transform.lookAt(new _oasisEngine.Vector3(0, 0, 1));\n  lightNode.transform.rotate(new _oasisEngine.Vector3(-45, -135, 0));\n  engine.resourceManager // .load<GLTFResource>(\"https://gw.alipayobjects.com/os/bmw-prod/f49ed603-c10f-4413-b97b-84f3a5d66b65.glb\")\n  // .load<GLTFResource>(\"https://gw.alipayobjects.com/os/bmw-prod/9741528a-4f04-47f7-aad6-b360ecd4ed65.glb\")\n  .load(\"https://gw.alipayobjects.com/os/bmw-prod/746da3e3-fdc9-4155-8fee-0e2a97de4e72.glb\").then(function (asset) {\n    var defaultSceneRoot = asset.defaultSceneRoot;\n    rootEntity.addChild(defaultSceneRoot);\n    var animator = defaultSceneRoot.getComponent(_oasisEngine.Animator);\n    var skinMeshRenderer = defaultSceneRoot.getComponent(_oasisEngine.SkinnedMeshRenderer);\n    skinMeshRenderer.blendShapeWeights[0] = 1.0; // animator.play(\"Square\");\n\n    animator.play(\"TheWave\"); // skinMeshRenderer.blendShapeWeights = new Float32Array([1, 0]);\n    // console.log(asset);\n    // defaultSceneRoot.transform.rotation = new Vector3(0, 0, 0);\n    // console.log(defaultSceneRoot.transform.rotation);\n  });\n  engine.run();\n});"},"name":"skeleton-animation-blendShape","title":"Animation BlendShape","category":"Animation","id":"619105eb-dd87-557f-ba2f-e774226bbc1d","sourceCode":"/**\n * @title Animation BlendShape\n * @category Animation\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport {\n  Animator,\n  Camera,\n  DirectLight,\n  Logger,\n  SkinnedMeshRenderer,\n  SystemInfo,\n  Vector3,\n  WebGLEngine,\n  GLTFResource\n} from \"oasis-engine\";\n\nLogger.enable();\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.width = window.innerWidth * SystemInfo.devicePixelRatio;\nengine.canvas.height = window.innerHeight * SystemInfo.devicePixelRatio;\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// camera\nconst cameraEntity = rootEntity.createChild(\"camera_node\");\ncameraEntity.transform.position = new Vector3(0, 1, 5);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl).target = new Vector3(0, 1, 0);\n\nconst lightNode = rootEntity.createChild(\"light_node\");\nlightNode.addComponent(DirectLight).intensity = 1.0;\nlightNode.transform.lookAt(new Vector3(0, 0, 1));\nlightNode.transform.rotate(new Vector3(-45, -135, 0));\n\nengine.resourceManager\n  // .load<GLTFResource>(\"https://gw.alipayobjects.com/os/bmw-prod/f49ed603-c10f-4413-b97b-84f3a5d66b65.glb\")\n  // .load<GLTFResource>(\"https://gw.alipayobjects.com/os/bmw-prod/9741528a-4f04-47f7-aad6-b360ecd4ed65.glb\")\n  .load<GLTFResource>(\"https://gw.alipayobjects.com/os/bmw-prod/746da3e3-fdc9-4155-8fee-0e2a97de4e72.glb\")\n  .then((asset) => {\n    const { defaultSceneRoot } = asset;\n    rootEntity.addChild(defaultSceneRoot);\n    const animator = defaultSceneRoot.getComponent(Animator);\n    const skinMeshRenderer = defaultSceneRoot.getComponent(SkinnedMeshRenderer);\n\n    skinMeshRenderer.blendShapeWeights[0] = 1.0;\n\n    // animator.play(\"Square\");\n    animator.play(\"TheWave\");\n    // skinMeshRenderer.blendShapeWeights = new Float32Array([1, 0]);\n    // console.log(asset);\n    // defaultSceneRoot.transform.rotation = new Vector3(0, 0, 0);\n    // console.log(defaultSceneRoot.transform.rotation);\n  });\n\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Animation BlendShape\n * @category Animation\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  Animator<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  DirectLight<span class=\"token punctuation\">,</span>\n  Logger<span class=\"token punctuation\">,</span>\n  SkinnedMeshRenderer<span class=\"token punctuation\">,</span>\n  SystemInfo<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine<span class=\"token punctuation\">,</span>\n  GLTFResource\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\nLogger<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>innerWidth <span class=\"token operator\">*</span> SystemInfo<span class=\"token punctuation\">.</span>devicePixelRatio<span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>innerHeight <span class=\"token operator\">*</span> SystemInfo<span class=\"token punctuation\">.</span>devicePixelRatio<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>target <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> lightNode <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"light_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">135</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token comment\">// .load&lt;GLTFResource>(\"https://gw.alipayobjects.com/os/bmw-prod/f49ed603-c10f-4413-b97b-84f3a5d66b65.glb\")</span>\n  <span class=\"token comment\">// .load&lt;GLTFResource>(\"https://gw.alipayobjects.com/os/bmw-prod/9741528a-4f04-47f7-aad6-b360ecd4ed65.glb\")</span>\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>GLTFResource<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/746da3e3-fdc9-4155-8fee-0e2a97de4e72.glb\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">asset</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> defaultSceneRoot <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> asset<span class=\"token punctuation\">;</span>\n    rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>defaultSceneRoot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> animator <span class=\"token operator\">=</span> defaultSceneRoot<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>Animator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> skinMeshRenderer <span class=\"token operator\">=</span> defaultSceneRoot<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>SkinnedMeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    skinMeshRenderer<span class=\"token punctuation\">.</span>blendShapeWeights<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// animator.play(\"Square\");</span>\n    animator<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TheWave\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// skinMeshRenderer.blendShapeWeights = new Float32Array([1, 0]);</span>\n    <span class=\"token comment\">// console.log(asset);</span>\n    <span class=\"token comment\">// defaultSceneRoot.transform.rotation = new Vector3(0, 0, 0);</span>\n    <span class=\"token comment\">// console.log(defaultSceneRoot.transform.rotation);</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  var gui = new dat.GUI(); //-- create engine object\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); //-- create camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_entity\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 0, 15);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  var orbitControl = cameraEntity.addComponent(_controls.OrbitControl);\n  orbitControl.minDistance = 15;\n  orbitControl.maxDistance = 15; // 自定义材质\n\n  var vertexSource = \"\\nuniform mat4 u_MVPMat;\\nattribute vec3 POSITION;\\nattribute vec2 TEXCOORD_0;\\nattribute vec3 NORMAL;\\n\\nvarying vec2 v_uv;\\nvarying vec3 v_position;\\nvarying vec3 v_normal;\\n\\n\\nvoid main() {\\n\\n  gl_Position = u_MVPMat  *  vec4( POSITION, 1.0 );\\n  v_uv = TEXCOORD_0;\\n  v_normal = NORMAL;\\n  v_position = POSITION;\\n}\\n \";\n  var fragSource = \"\\nvarying vec2 v_uv;\\nvarying vec3 v_position;\\nvarying vec3 v_normal;\\n\\nuniform float u_time;\\nuniform sampler2D u_texture;\\nuniform vec3 u_cameraPos;\\n\\n#define EPS 0.001\\n#define MAX_ITR 100\\n#define MAX_DIS 100.0\\n#define PI\\t \\t  3.141592\\n\\nuniform float u_water_scale;\\nuniform float u_water_speed;\\n\\nuniform vec3 u_sea_base;\\nuniform vec3 u_water_color;\\nuniform float u_sea_height;\\n\\n// Distance Functions\\nfloat sd_sph(vec3 p, float r) { return length(p) - r; }\\n\\n// Distance Map\\nfloat map(vec3 p, vec2 sc)\\n{    \\n    float l = cos(length(p * 2.0));\\n    vec2 u = vec2(l, sc.y);\\n    vec2 um = u * 0.3;\\n    um.x += u_time * 0.1 * u_water_speed;\\n    um.y += -u_time * 0.025 * u_water_speed;\\n    um.x += (um.y) * 2.0;    \\n    float a1 = texture2D(u_texture, (p.yz  *  .4 + um) * u_water_scale).x;\\n    float a2 = texture2D(u_texture, (p.zx  *  .4 + um) * u_water_scale).x;\\n    float a3 = texture2D(u_texture, (p.xy  *  .4 + um) * u_water_scale).x;\\n    \\n    float t1 = a1 + a2 + a3;\\n    t1 /= 15.0 * u_water_scale;\\n    \\n    float b1 = texture2D(u_texture, (p.yz  *  1. + u) * u_water_scale).x;\\n    float b2 = texture2D(u_texture, (p.zx  *  1. + u) * u_water_scale).x;\\n    float b3 = texture2D(u_texture, (p.xy  *  1. + u) * u_water_scale).x;\\n    \\n    float t2 = b1 + b2 + b3;\\n    t2 /= 15.0  *  u_water_scale;\\n    \\n    float comb = t1 * 0.4 + t2 * 0.1 * (1.0 - t1);\\n    \\n    return comb + sd_sph(p, 3.); // sd_box(p, vec3(1., 1., 1.)) + sdPlane(p, vec4(0., 0., 1.0, 0.));//\\n}\\n\\nfloat diffuse(vec3 n,vec3 l,float p) {\\n    return pow(dot(n,l) * 0.4 + 0.6,p);\\n}\\n\\nfloat specular(vec3 n,vec3 l,vec3 e,float s) {    \\n    float nrm = (s + 8.0) / (PI * 8.0);\\n    return pow(max(dot(reflect(e,n),l),0.0),s) * nrm;\\n}\\n\\n// sky\\nvec3 getSkyColor(vec3 e) {\\n    e.y = max(e.y,0.0);\\n    return vec3(pow(1.0-e.y,2.0), 1.0-e.y, 0.6+(1.0-e.y)*0.4);\\n}\\n\\nvec3 getSeaColor(vec3 p, vec3 n, vec3 l, vec3 eye, vec3 dist) {  \\n    float fresnel = clamp(1.0 - dot(n,-eye), 0.0, 1.0);\\n    fresnel = pow(fresnel,3.0) * 0.65;\\n\\n    vec3 reflected = getSkyColor(reflect(eye,n));    \\n    vec3 refracted = u_sea_base + diffuse(normalize(n),l,80.0) * u_water_color * 0.12; \\n\\n    vec3 color =  mix(refracted,reflected,fresnel);\\n\\n    float atten = max(1.0 - dot(dist,dist) * 0.001, 0.0);\\n    color += u_water_color * (length(p) - u_sea_height) * 0.18 * atten; // \\n\\n    color += vec3(specular(n,l,eye,20.0));\\n\\n    return color;\\n}\\n\\nvoid main (void) {\\n\\n    vec2 uv = vec2(v_uv.x * 0.5, v_uv.y * 0.5);//  / iResolution.xy;\\n    \\n    vec3 pos = v_position; \\n    vec3 dist = pos - u_cameraPos;\\n\\n    float dis = EPS;\\n    vec3 rayDir = normalize(dist);\\n    \\n    // Ray marching\\n    for(int i = 0; i < MAX_ITR; i++)\\n    {\\n        if(dis < EPS || dis > MAX_DIS)\\n          break;\\n        dis = map(pos, uv);\\n        pos += dis * rayDir;\\n    }\\n    \\n    if (dis >= EPS) \\n    {\\n      discard;\\n    }\\n    \\n    vec3 lig = normalize(vec3(-1., -3, -4.5));\\n    vec2 eps = vec2(0.0, EPS);\\n    vec3 normal = normalize(vec3(\\n        map(pos + eps.yxx, uv) - map(pos - eps.yxx, uv),\\n        map(pos + eps.xyx, uv) - map(pos - eps.xyx, uv),\\n        map(pos + eps.xxy, uv) - map(pos - eps.xxy, uv)\\n    ));\\n    \\n    vec3 col = getSeaColor(pos, normal, lig, rayDir, dist);\\n    \\n    gl_FragColor = vec4(col,1.0);\\n}\\n\"; // 初始化 shader\n\n  _oasisEngine.Shader.create(\"water\", vertexSource, fragSource);\n\n  var ShaderMaterial = /*#__PURE__*/function (_Material) {\n    _inheritsLoose(ShaderMaterial, _Material);\n\n    function ShaderMaterial(engine) {\n      var _this;\n\n      _this = _Material.call(this, engine, _oasisEngine.Shader.find(\"water\")) || this;\n\n      _this.shaderData.setFloat(\"u_sea_height\", 0.6);\n\n      _this.shaderData.setFloat(\"u_water_scale\", 0.2);\n\n      _this.shaderData.setFloat(\"u_water_speed\", 3.5);\n\n      _this.shaderData.setColor(\"u_sea_base\", new _oasisEngine.Color(0.1, 0.2, 0.22));\n\n      _this.shaderData.setColor(\"u_water_color\", new _oasisEngine.Color(0.8, 0.9, 0.6));\n\n      return _this;\n    }\n\n    return ShaderMaterial;\n  }(_oasisEngine.Material);\n\n  var material = new ShaderMaterial(engine); // 创建球体形的海面\n\n  var sphereEntity = rootEntity.createChild(\"sphere\");\n  var renderer = sphereEntity.addComponent(_oasisEngine.MeshRenderer);\n  renderer.mesh = _oasisEngine.PrimitiveMesh.createSphere(engine, 3, 50);\n  renderer.setMaterial(material); // 加载噪声纹理\n\n  engine.resourceManager.load({\n    type: _oasisEngine.AssetType.Texture2D,\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*AC4IQZ6mfCIAAAAAAAAAAAAAARQnAQ\"\n  }).then(function (texture) {\n    material.shaderData.setTexture(\"u_texture\", texture);\n    engine.run();\n  }); // u_time 更新脚本\n\n  var WaterScript = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(WaterScript, _Script);\n\n    function WaterScript() {\n      return _Script.apply(this, arguments) || this;\n    }\n\n    var _proto = WaterScript.prototype;\n\n    _proto.onUpdate = function onUpdate() {\n      material.shaderData.setFloat(\"u_time\", engine.time.timeSinceStartup * 0.001);\n    };\n\n    return WaterScript;\n  }(_oasisEngine.Script);\n\n  sphereEntity.addComponent(WaterScript); // debug\n\n  function openDebug() {\n    var shaderData = material.shaderData;\n    var baseColor = shaderData.getColor(\"u_sea_base\");\n    var waterColor = shaderData.getColor(\"u_water_color\");\n    var debug = {\n      sea_height: shaderData.getFloat(\"u_sea_height\"),\n      water_scale: shaderData.getFloat(\"u_water_scale\"),\n      water_speed: shaderData.getFloat(\"u_water_speed\"),\n      sea_base: [baseColor.r * 255, baseColor.g * 255, baseColor.b * 255],\n      water_color: [waterColor.r * 255, waterColor.g * 255, waterColor.b * 255]\n    };\n    gui.add(debug, \"sea_height\", 0, 3).onChange(function (v) {\n      shaderData.setFloat(\"u_sea_height\", v);\n    });\n    gui.add(debug, \"water_scale\", 0, 4).onChange(function (v) {\n      shaderData.setFloat(\"u_water_scale\", v);\n    });\n    gui.add(debug, \"water_speed\", 0, 4).onChange(function (v) {\n      shaderData.setFloat(\"u_water_speed\", v);\n    });\n    gui.addColor(debug, \"sea_base\").onChange(function (v) {\n      baseColor.r = v[0] / 255;\n      baseColor.g = v[1] / 255;\n      baseColor.b = v[2] / 255;\n    });\n    gui.addColor(debug, \"water_color\").onChange(function (v) {\n      waterColor.r = v[0] / 255;\n      waterColor.g = v[1] / 255;\n      waterColor.b = v[2] / 255;\n    });\n  }\n\n  openDebug();\n});"},"name":"shader-water","title":"Shader Water","category":"Material","id":"aabdd0ba-3e99-5489-8165-3bf52e469877","sourceCode":"/**\n * @title Shader Water\n * @category Material\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\nimport {\n  AssetType,\n  Camera,\n  Color,\n  Engine,\n  Material,\n  MeshRenderer,\n  PrimitiveMesh,\n  Script,\n  Shader,\n  Texture2D,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\n\nconst gui = new dat.GUI();\n//-- create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n//-- create camera\nconst cameraEntity = rootEntity.createChild(\"camera_entity\");\ncameraEntity.transform.position = new Vector3(0, 0, 15);\ncameraEntity.addComponent(Camera);\nconst orbitControl = cameraEntity.addComponent(OrbitControl);\norbitControl.minDistance = 15;\norbitControl.maxDistance = 15;\n\n// 自定义材质\nconst vertexSource = `\nuniform mat4 u_MVPMat;\nattribute vec3 POSITION;\nattribute vec2 TEXCOORD_0;\nattribute vec3 NORMAL;\n\nvarying vec2 v_uv;\nvarying vec3 v_position;\nvarying vec3 v_normal;\n\n\nvoid main() {\n\n  gl_Position = u_MVPMat  *  vec4( POSITION, 1.0 );\n  v_uv = TEXCOORD_0;\n  v_normal = NORMAL;\n  v_position = POSITION;\n}\n `;\n\nconst fragSource = `\nvarying vec2 v_uv;\nvarying vec3 v_position;\nvarying vec3 v_normal;\n\nuniform float u_time;\nuniform sampler2D u_texture;\nuniform vec3 u_cameraPos;\n\n#define EPS 0.001\n#define MAX_ITR 100\n#define MAX_DIS 100.0\n#define PI\t \t  3.141592\n\nuniform float u_water_scale;\nuniform float u_water_speed;\n\nuniform vec3 u_sea_base;\nuniform vec3 u_water_color;\nuniform float u_sea_height;\n\n// Distance Functions\nfloat sd_sph(vec3 p, float r) { return length(p) - r; }\n\n// Distance Map\nfloat map(vec3 p, vec2 sc)\n{    \n    float l = cos(length(p * 2.0));\n    vec2 u = vec2(l, sc.y);\n    vec2 um = u * 0.3;\n    um.x += u_time * 0.1 * u_water_speed;\n    um.y += -u_time * 0.025 * u_water_speed;\n    um.x += (um.y) * 2.0;    \n    float a1 = texture2D(u_texture, (p.yz  *  .4 + um) * u_water_scale).x;\n    float a2 = texture2D(u_texture, (p.zx  *  .4 + um) * u_water_scale).x;\n    float a3 = texture2D(u_texture, (p.xy  *  .4 + um) * u_water_scale).x;\n    \n    float t1 = a1 + a2 + a3;\n    t1 /= 15.0 * u_water_scale;\n    \n    float b1 = texture2D(u_texture, (p.yz  *  1. + u) * u_water_scale).x;\n    float b2 = texture2D(u_texture, (p.zx  *  1. + u) * u_water_scale).x;\n    float b3 = texture2D(u_texture, (p.xy  *  1. + u) * u_water_scale).x;\n    \n    float t2 = b1 + b2 + b3;\n    t2 /= 15.0  *  u_water_scale;\n    \n    float comb = t1 * 0.4 + t2 * 0.1 * (1.0 - t1);\n    \n    return comb + sd_sph(p, 3.); // sd_box(p, vec3(1., 1., 1.)) + sdPlane(p, vec4(0., 0., 1.0, 0.));//\n}\n\nfloat diffuse(vec3 n,vec3 l,float p) {\n    return pow(dot(n,l) * 0.4 + 0.6,p);\n}\n\nfloat specular(vec3 n,vec3 l,vec3 e,float s) {    \n    float nrm = (s + 8.0) / (PI * 8.0);\n    return pow(max(dot(reflect(e,n),l),0.0),s) * nrm;\n}\n\n// sky\nvec3 getSkyColor(vec3 e) {\n    e.y = max(e.y,0.0);\n    return vec3(pow(1.0-e.y,2.0), 1.0-e.y, 0.6+(1.0-e.y)*0.4);\n}\n\nvec3 getSeaColor(vec3 p, vec3 n, vec3 l, vec3 eye, vec3 dist) {  \n    float fresnel = clamp(1.0 - dot(n,-eye), 0.0, 1.0);\n    fresnel = pow(fresnel,3.0) * 0.65;\n\n    vec3 reflected = getSkyColor(reflect(eye,n));    \n    vec3 refracted = u_sea_base + diffuse(normalize(n),l,80.0) * u_water_color * 0.12; \n\n    vec3 color =  mix(refracted,reflected,fresnel);\n\n    float atten = max(1.0 - dot(dist,dist) * 0.001, 0.0);\n    color += u_water_color * (length(p) - u_sea_height) * 0.18 * atten; // \n\n    color += vec3(specular(n,l,eye,20.0));\n\n    return color;\n}\n\nvoid main (void) {\n\n    vec2 uv = vec2(v_uv.x * 0.5, v_uv.y * 0.5);//  / iResolution.xy;\n    \n    vec3 pos = v_position; \n    vec3 dist = pos - u_cameraPos;\n\n    float dis = EPS;\n    vec3 rayDir = normalize(dist);\n    \n    // Ray marching\n    for(int i = 0; i < MAX_ITR; i++)\n    {\n        if(dis < EPS || dis > MAX_DIS)\n          break;\n        dis = map(pos, uv);\n        pos += dis * rayDir;\n    }\n    \n    if (dis >= EPS) \n    {\n      discard;\n    }\n    \n    vec3 lig = normalize(vec3(-1., -3, -4.5));\n    vec2 eps = vec2(0.0, EPS);\n    vec3 normal = normalize(vec3(\n        map(pos + eps.yxx, uv) - map(pos - eps.yxx, uv),\n        map(pos + eps.xyx, uv) - map(pos - eps.xyx, uv),\n        map(pos + eps.xxy, uv) - map(pos - eps.xxy, uv)\n    ));\n    \n    vec3 col = getSeaColor(pos, normal, lig, rayDir, dist);\n    \n    gl_FragColor = vec4(col,1.0);\n}\n`;\n\n// 初始化 shader\nShader.create(\"water\", vertexSource, fragSource);\n\nclass ShaderMaterial extends Material {\n  constructor(engine: Engine) {\n    super(engine, Shader.find(\"water\"));\n\n    this.shaderData.setFloat(\"u_sea_height\", 0.6);\n    this.shaderData.setFloat(\"u_water_scale\", 0.2);\n    this.shaderData.setFloat(\"u_water_speed\", 3.5);\n    this.shaderData.setColor(\"u_sea_base\", new Color(0.1, 0.2, 0.22));\n    this.shaderData.setColor(\"u_water_color\", new Color(0.8, 0.9, 0.6));\n  }\n}\nconst material = new ShaderMaterial(engine);\n\n// 创建球体形的海面\nconst sphereEntity = rootEntity.createChild(\"sphere\");\nconst renderer = sphereEntity.addComponent(MeshRenderer);\nrenderer.mesh = PrimitiveMesh.createSphere(engine, 3, 50);\nrenderer.setMaterial(material);\n\n// 加载噪声纹理\nengine.resourceManager\n  .load({\n    type: AssetType.Texture2D,\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*AC4IQZ6mfCIAAAAAAAAAAAAAARQnAQ\"\n  })\n  .then((texture: Texture2D) => {\n    material.shaderData.setTexture(\"u_texture\", texture);\n    engine.run();\n  });\n\n// u_time 更新脚本\nclass WaterScript extends Script {\n  onUpdate() {\n    material.shaderData.setFloat(\"u_time\", engine.time.timeSinceStartup * 0.001);\n  }\n}\nsphereEntity.addComponent(WaterScript);\n\n// debug\nfunction openDebug() {\n  const shaderData = material.shaderData;\n  const baseColor = shaderData.getColor(\"u_sea_base\");\n  const waterColor = shaderData.getColor(\"u_water_color\");\n  const debug = {\n    sea_height: shaderData.getFloat(\"u_sea_height\"),\n    water_scale: shaderData.getFloat(\"u_water_scale\"),\n    water_speed: shaderData.getFloat(\"u_water_speed\"),\n    sea_base: [baseColor.r * 255, baseColor.g * 255, baseColor.b * 255],\n    water_color: [waterColor.r * 255, waterColor.g * 255, waterColor.b * 255]\n  };\n\n  gui.add(debug, \"sea_height\", 0, 3).onChange((v) => {\n    shaderData.setFloat(\"u_sea_height\", v);\n  });\n  gui.add(debug, \"water_scale\", 0, 4).onChange((v) => {\n    shaderData.setFloat(\"u_water_scale\", v);\n  });\n  gui.add(debug, \"water_speed\", 0, 4).onChange((v) => {\n    shaderData.setFloat(\"u_water_speed\", v);\n  });\n  gui.addColor(debug, \"sea_base\").onChange((v) => {\n    baseColor.r = v[0] / 255;\n    baseColor.g = v[1] / 255;\n    baseColor.b = v[2] / 255;\n  });\n  gui.addColor(debug, \"water_color\").onChange((v) => {\n    waterColor.r = v[0] / 255;\n    waterColor.g = v[1] / 255;\n    waterColor.b = v[2] / 255;\n  });\n}\n\nopenDebug();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Shader Water\n * @category Material\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  Color<span class=\"token punctuation\">,</span>\n  Engine<span class=\"token punctuation\">,</span>\n  Material<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  Script<span class=\"token punctuation\">,</span>\n  Shader<span class=\"token punctuation\">,</span>\n  Texture2D<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//-- create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_entity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> orbitControl <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\norbitControl<span class=\"token punctuation\">.</span>minDistance <span class=\"token operator\">=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span>\norbitControl<span class=\"token punctuation\">.</span>maxDistance <span class=\"token operator\">=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 自定义材质</span>\n<span class=\"token keyword\">const</span> vertexSource <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\nuniform mat4 u_MVPMat;\nattribute vec3 POSITION;\nattribute vec2 TEXCOORD_0;\nattribute vec3 NORMAL;\n\nvarying vec2 v_uv;\nvarying vec3 v_position;\nvarying vec3 v_normal;\n\n\nvoid main() {\n\n  gl_Position = u_MVPMat  *  vec4( POSITION, 1.0 );\n  v_uv = TEXCOORD_0;\n  v_normal = NORMAL;\n  v_position = POSITION;\n}\n </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> fragSource <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\nvarying vec2 v_uv;\nvarying vec3 v_position;\nvarying vec3 v_normal;\n\nuniform float u_time;\nuniform sampler2D u_texture;\nuniform vec3 u_cameraPos;\n\n#define EPS 0.001\n#define MAX_ITR 100\n#define MAX_DIS 100.0\n#define PI\t \t  3.141592\n\nuniform float u_water_scale;\nuniform float u_water_speed;\n\nuniform vec3 u_sea_base;\nuniform vec3 u_water_color;\nuniform float u_sea_height;\n\n// Distance Functions\nfloat sd_sph(vec3 p, float r) { return length(p) - r; }\n\n// Distance Map\nfloat map(vec3 p, vec2 sc)\n{    \n    float l = cos(length(p * 2.0));\n    vec2 u = vec2(l, sc.y);\n    vec2 um = u * 0.3;\n    um.x += u_time * 0.1 * u_water_speed;\n    um.y += -u_time * 0.025 * u_water_speed;\n    um.x += (um.y) * 2.0;    \n    float a1 = texture2D(u_texture, (p.yz  *  .4 + um) * u_water_scale).x;\n    float a2 = texture2D(u_texture, (p.zx  *  .4 + um) * u_water_scale).x;\n    float a3 = texture2D(u_texture, (p.xy  *  .4 + um) * u_water_scale).x;\n    \n    float t1 = a1 + a2 + a3;\n    t1 /= 15.0 * u_water_scale;\n    \n    float b1 = texture2D(u_texture, (p.yz  *  1. + u) * u_water_scale).x;\n    float b2 = texture2D(u_texture, (p.zx  *  1. + u) * u_water_scale).x;\n    float b3 = texture2D(u_texture, (p.xy  *  1. + u) * u_water_scale).x;\n    \n    float t2 = b1 + b2 + b3;\n    t2 /= 15.0  *  u_water_scale;\n    \n    float comb = t1 * 0.4 + t2 * 0.1 * (1.0 - t1);\n    \n    return comb + sd_sph(p, 3.); // sd_box(p, vec3(1., 1., 1.)) + sdPlane(p, vec4(0., 0., 1.0, 0.));//\n}\n\nfloat diffuse(vec3 n,vec3 l,float p) {\n    return pow(dot(n,l) * 0.4 + 0.6,p);\n}\n\nfloat specular(vec3 n,vec3 l,vec3 e,float s) {    \n    float nrm = (s + 8.0) / (PI * 8.0);\n    return pow(max(dot(reflect(e,n),l),0.0),s) * nrm;\n}\n\n// sky\nvec3 getSkyColor(vec3 e) {\n    e.y = max(e.y,0.0);\n    return vec3(pow(1.0-e.y,2.0), 1.0-e.y, 0.6+(1.0-e.y)*0.4);\n}\n\nvec3 getSeaColor(vec3 p, vec3 n, vec3 l, vec3 eye, vec3 dist) {  \n    float fresnel = clamp(1.0 - dot(n,-eye), 0.0, 1.0);\n    fresnel = pow(fresnel,3.0) * 0.65;\n\n    vec3 reflected = getSkyColor(reflect(eye,n));    \n    vec3 refracted = u_sea_base + diffuse(normalize(n),l,80.0) * u_water_color * 0.12; \n\n    vec3 color =  mix(refracted,reflected,fresnel);\n\n    float atten = max(1.0 - dot(dist,dist) * 0.001, 0.0);\n    color += u_water_color * (length(p) - u_sea_height) * 0.18 * atten; // \n\n    color += vec3(specular(n,l,eye,20.0));\n\n    return color;\n}\n\nvoid main (void) {\n\n    vec2 uv = vec2(v_uv.x * 0.5, v_uv.y * 0.5);//  / iResolution.xy;\n    \n    vec3 pos = v_position; \n    vec3 dist = pos - u_cameraPos;\n\n    float dis = EPS;\n    vec3 rayDir = normalize(dist);\n    \n    // Ray marching\n    for(int i = 0; i &lt; MAX_ITR; i++)\n    {\n        if(dis &lt; EPS || dis > MAX_DIS)\n          break;\n        dis = map(pos, uv);\n        pos += dis * rayDir;\n    }\n    \n    if (dis >= EPS) \n    {\n      discard;\n    }\n    \n    vec3 lig = normalize(vec3(-1., -3, -4.5));\n    vec2 eps = vec2(0.0, EPS);\n    vec3 normal = normalize(vec3(\n        map(pos + eps.yxx, uv) - map(pos - eps.yxx, uv),\n        map(pos + eps.xyx, uv) - map(pos - eps.xyx, uv),\n        map(pos + eps.xxy, uv) - map(pos - eps.xxy, uv)\n    ));\n    \n    vec3 col = getSeaColor(pos, normal, lig, rayDir, dist);\n    \n    gl_FragColor = vec4(col,1.0);\n}\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 初始化 shader</span>\nShader<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"water\"</span><span class=\"token punctuation\">,</span> vertexSource<span class=\"token punctuation\">,</span> fragSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ShaderMaterial</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Material</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">engine<span class=\"token operator\">:</span> Engine</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> Shader<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"water\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_sea_height\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_water_scale\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_water_speed\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_sea_base\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.22</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_water_color\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ShaderMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 创建球体形的海面</span>\n<span class=\"token keyword\">const</span> sphereEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sphere\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> renderer <span class=\"token operator\">=</span> sphereEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createSphere</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 加载噪声纹理</span>\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D<span class=\"token punctuation\">,</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*AC4IQZ6mfCIAAAAAAAAAAAAAARQnAQ\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture<span class=\"token operator\">:</span> Texture2D</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    material<span class=\"token punctuation\">.</span>shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setTexture</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_texture\"</span><span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// u_time 更新脚本</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">WaterScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    material<span class=\"token punctuation\">.</span>shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_time\"</span><span class=\"token punctuation\">,</span> engine<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">.</span>timeSinceStartup <span class=\"token operator\">*</span> <span class=\"token number\">0.001</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nsphereEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>WaterScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// debug</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">openDebug</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> shaderData <span class=\"token operator\">=</span> material<span class=\"token punctuation\">.</span>shaderData<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> baseColor <span class=\"token operator\">=</span> shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_sea_base\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> waterColor <span class=\"token operator\">=</span> shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_water_color\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> debug <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    sea_height<span class=\"token operator\">:</span> shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">getFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_sea_height\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    water_scale<span class=\"token operator\">:</span> shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">getFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_water_scale\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    water_speed<span class=\"token operator\">:</span> shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">getFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_water_speed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    sea_base<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>baseColor<span class=\"token punctuation\">.</span>r <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> baseColor<span class=\"token punctuation\">.</span>g <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> baseColor<span class=\"token punctuation\">.</span>b <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    water_color<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>waterColor<span class=\"token punctuation\">.</span>r <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> waterColor<span class=\"token punctuation\">.</span>g <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> waterColor<span class=\"token punctuation\">.</span>b <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>debug<span class=\"token punctuation\">,</span> <span class=\"token string\">\"sea_height\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_sea_height\"</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>debug<span class=\"token punctuation\">,</span> <span class=\"token string\">\"water_scale\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_water_scale\"</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>debug<span class=\"token punctuation\">,</span> <span class=\"token string\">\"water_speed\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_water_speed\"</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">addColor</span><span class=\"token punctuation\">(</span>debug<span class=\"token punctuation\">,</span> <span class=\"token string\">\"sea_base\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    baseColor<span class=\"token punctuation\">.</span>r <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n    baseColor<span class=\"token punctuation\">.</span>g <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n    baseColor<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">addColor</span><span class=\"token punctuation\">(</span>debug<span class=\"token punctuation\">,</span> <span class=\"token string\">\"water_color\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    waterColor<span class=\"token punctuation\">.</span>r <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n    waterColor<span class=\"token punctuation\">.</span>g <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n    waterColor<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">openDebug</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  var target = new _oasisEngine.Vector3(0, -3, 0);\n  var up = new _oasisEngine.Vector3(0, 1, 0);\n\n  var Move = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(Move, _Script);\n\n    function Move(node) {\n      var _this;\n\n      _this = _Script.call(this, node) || this;\n      _this.time = 0;\n      _this.y = 3;\n      _this.range = 5;\n      return _this;\n    }\n\n    var _proto = Move.prototype;\n\n    _proto.onUpdate = function onUpdate(deltaTime) {\n      this.time += deltaTime / 1000;\n      var x = Math.cos(this.time) * this.range;\n      var y = Math.sin(this.time) * this.range * 0.2 + this.y;\n      var z = Math.cos(this.time) * this.range;\n      this.entity.transform.position = new _oasisEngine.Vector3(x, y, z);\n    };\n\n    return Move;\n  }(_oasisEngine.Script); // 控制 light entity 始终看向固定点\n\n\n  var LookAtFocus = /*#__PURE__*/function (_Script2) {\n    _inheritsLoose(LookAtFocus, _Script2);\n\n    function LookAtFocus() {\n      return _Script2.apply(this, arguments) || this;\n    }\n\n    var _proto2 = LookAtFocus.prototype;\n\n    _proto2.onUpdate = function onUpdate(deltaTime) {\n      light1.transform.lookAt(target, up);\n    };\n\n    return LookAtFocus;\n  }(_oasisEngine.Script); //-- create engine object\n\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // Logger.enable();\n\n  function createCuboidGeometry(name, position, rotation, w, h, d, castShadow) {\n    if (castShadow === void 0) {\n      castShadow = false;\n    }\n\n    var obj = rootEntity.createChild(name);\n    obj.position = _construct(_oasisEngine.Vector3, position);\n    obj.transform.rotation = new _oasisEngine.Vector3(rotation[0], rotation[0], rotation[0]);\n    var cubeRenderer = obj.addComponent(_oasisEngine.MeshRenderer);\n    cubeRenderer.mesh = _oasisEngine.PrimitiveMesh.createCuboid(rootEntity.engine, w, h, d);\n    cubeRenderer.setMaterial(mtl);\n    cubeRenderer[\"recieveShadow\"] = !castShadow;\n    cubeRenderer[\"castShadow\"] = castShadow;\n  }\n\n  var mtl = new _oasisEngine.BlinnPhongMaterial(engine);\n  mtl.baseColor = new _oasisEngine.Color(0.1, 0.9, 0.8, 1); //-- create light entity\n\n  var lighthouse = rootEntity.createChild(\"lighthouse\");\n  var light1 = lighthouse.createChild(\"light1\");\n  light1.addComponent(Move);\n  light1.addComponent(LookAtFocus);\n  var spotLight = light1.addComponent(_oasisEngine.SpotLight);\n  spotLight.angle = Math.PI / 12;\n  spotLight[\"enableShadow\"] = true;\n  spotLight[\"shadow\"].bias = 0.0001;\n  spotLight[\"shadow\"].intensity = 0.2;\n  var sphereRenderer3 = light1.addComponent(_oasisEngine.MeshRenderer);\n  sphereRenderer3.mesh = _oasisEngine.PrimitiveMesh.createSphere(engine, 0.1);\n  sphereRenderer3.setMaterial(mtl); //-- create geometry\n\n  createCuboidGeometry(\"cubiod1\", [0, -3, 0], [0, 0, 0], 10, 0.1, 10);\n  createCuboidGeometry(\"cubiod2\", [5, -2, 0], [0, 0, 0], 0.1, 2, 10);\n  createCuboidGeometry(\"cubiod3\", [-5, -2, 0], [0, 0, 0], 0.1, 2, 10);\n  createCuboidGeometry(\"cubiod4\", [0, -2, -5], [0, 0, 0], 10, 2, 0.1);\n  createCuboidGeometry(\"cubiod-cast-shadow\", [0, -1, 0], [0, 0, 0], 1, 1, 1, true); //-- create camera\n\n  var cameraNode = rootEntity.createChild(\"camera_node\");\n  cameraNode.transform.position = new _oasisEngine.Vector3(0, 5, 17);\n  cameraNode.transform.lookAt(new _oasisEngine.Vector3(), new _oasisEngine.Vector3(0, 1, 0));\n  cameraNode.addComponent(_oasisEngine.Camera);\n  cameraNode.addComponent(_controls.OrbitControl); //-- run\n\n  engine.run();\n});"},"name":"shadow","title":"Shadow","category":"Light","id":"36ed5d86-fab8-53c8-bf88-16df47832b13","sourceCode":"/**\n * @title Shadow\n * @category Light\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport {\n  BlinnPhongMaterial,\n  Camera,\n  Color,\n  MeshRenderer,\n  PrimitiveMesh,\n  Script,\n  SpotLight,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\nconst target = new Vector3(0, -3, 0);\nconst up = new Vector3(0, 1, 0);\n\nclass Move extends Script {\n  time = 0;\n  y = 3;\n  range = 5;\n\n  constructor(node) {\n    super(node);\n  }\n\n  onUpdate(deltaTime) {\n    this.time += deltaTime / 1000;\n    let x = Math.cos(this.time) * this.range;\n    let y = Math.sin(this.time) * this.range * 0.2 + this.y;\n    let z = Math.cos(this.time) * this.range;\n    this.entity.transform.position = new Vector3(x, y, z);\n  }\n}\n\n// 控制 light entity 始终看向固定点\nclass LookAtFocus extends Script {\n  onUpdate(deltaTime) {\n    light1.transform.lookAt(target, up);\n  }\n}\n\n//-- create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// Logger.enable();\nfunction createCuboidGeometry(name, position, rotation, w, h, d, castShadow: boolean = false) {\n  let obj = rootEntity.createChild(name);\n  obj.position = new Vector3(...position);\n  obj.transform.rotation = new Vector3(rotation[0], rotation[0], rotation[0]);\n  let cubeRenderer = obj.addComponent(MeshRenderer);\n  cubeRenderer.mesh = PrimitiveMesh.createCuboid(rootEntity.engine, w, h, d);\n  cubeRenderer.setMaterial(mtl);\n  cubeRenderer[\"recieveShadow\"] = !castShadow;\n  cubeRenderer[\"castShadow\"] = castShadow;\n}\n\nlet mtl = new BlinnPhongMaterial(engine);\nmtl.baseColor = new Color(0.1, 0.9, 0.8, 1);\n//-- create light entity\nlet lighthouse = rootEntity.createChild(\"lighthouse\");\nlet light1 = lighthouse.createChild(\"light1\");\nlight1.addComponent(Move);\nlight1.addComponent(LookAtFocus);\n\nlet spotLight = light1.addComponent(SpotLight);\nspotLight.angle = Math.PI / 12;\nspotLight[\"enableShadow\"] = true;\nspotLight[\"shadow\"].bias = 0.0001;\nspotLight[\"shadow\"].intensity = 0.2;\n\nlet sphereRenderer3 = light1.addComponent(MeshRenderer);\nsphereRenderer3.mesh = PrimitiveMesh.createSphere(engine, 0.1);\nsphereRenderer3.setMaterial(mtl);\n\n//-- create geometry\ncreateCuboidGeometry(\"cubiod1\", [0, -3, 0], [0, 0, 0], 10, 0.1, 10);\ncreateCuboidGeometry(\"cubiod2\", [5, -2, 0], [0, 0, 0], 0.1, 2, 10);\ncreateCuboidGeometry(\"cubiod3\", [-5, -2, 0], [0, 0, 0], 0.1, 2, 10);\ncreateCuboidGeometry(\"cubiod4\", [0, -2, -5], [0, 0, 0], 10, 2, 0.1);\ncreateCuboidGeometry(\"cubiod-cast-shadow\", [0, -1, 0], [0, 0, 0], 1, 1, 1, true);\n\n//-- create camera\nlet cameraNode = rootEntity.createChild(\"camera_node\");\ncameraNode.transform.position = new Vector3(0, 5, 17);\ncameraNode.transform.lookAt(new Vector3(), new Vector3(0, 1, 0));\ncameraNode.addComponent(Camera);\ncameraNode.addComponent(OrbitControl);\n\n//-- run\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Shadow\n * @category Light\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  BlinnPhongMaterial<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  Color<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  Script<span class=\"token punctuation\">,</span>\n  SpotLight<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> target <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> up <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Move</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  time <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  y <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n  range <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">deltaTime</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>time <span class=\"token operator\">+=</span> deltaTime <span class=\"token operator\">/</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>range<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>range <span class=\"token operator\">*</span> <span class=\"token number\">0.2</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> z <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>range<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 控制 light entity 始终看向固定点</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">LookAtFocus</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">deltaTime</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    light1<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> up<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//-- create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Logger.enable();</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">createCuboidGeometry</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">,</span> rotation<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> castShadow<span class=\"token operator\">:</span> boolean <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  obj<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  obj<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>rotation <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span>rotation<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> rotation<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> rotation<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> cubeRenderer <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cubeRenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span>rootEntity<span class=\"token punctuation\">.</span>engine<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cubeRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>mtl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cubeRenderer<span class=\"token punctuation\">[</span><span class=\"token string\">\"recieveShadow\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>castShadow<span class=\"token punctuation\">;</span>\n  cubeRenderer<span class=\"token punctuation\">[</span><span class=\"token string\">\"castShadow\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> castShadow<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> mtl <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmtl<span class=\"token punctuation\">.</span>baseColor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//-- create light entity</span>\n<span class=\"token keyword\">let</span> lighthouse <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lighthouse\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> light1 <span class=\"token operator\">=</span> lighthouse<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"light1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlight1<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Move<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlight1<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>LookAtFocus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> spotLight <span class=\"token operator\">=</span> light1<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpotLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nspotLight<span class=\"token punctuation\">.</span>angle <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span> <span class=\"token operator\">/</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\nspotLight<span class=\"token punctuation\">[</span><span class=\"token string\">\"enableShadow\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\nspotLight<span class=\"token punctuation\">[</span><span class=\"token string\">\"shadow\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>bias <span class=\"token operator\">=</span> <span class=\"token number\">0.0001</span><span class=\"token punctuation\">;</span>\nspotLight<span class=\"token punctuation\">[</span><span class=\"token string\">\"shadow\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> sphereRenderer3 <span class=\"token operator\">=</span> light1<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsphereRenderer3<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createSphere</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsphereRenderer3<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>mtl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create geometry</span>\n<span class=\"token function\">createCuboidGeometry</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cubiod1\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">createCuboidGeometry</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cubiod2\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">createCuboidGeometry</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cubiod3\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">createCuboidGeometry</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cubiod4\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">createCuboidGeometry</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cubiod-cast-shadow\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create camera</span>\n<span class=\"token keyword\">let</span> cameraNode <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- run</span>\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title Animation CrossFade\n   * @category Animation\n   */\n  _oasisEngine.Logger.enable();\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.width = window.innerWidth * _oasisEngine.SystemInfo.devicePixelRatio;\n  engine.canvas.height = window.innerHeight * _oasisEngine.SystemInfo.devicePixelRatio;\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_node\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 1, 5);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl).target = new _oasisEngine.Vector3(0, 1, 0);\n  var lightNode = rootEntity.createChild(\"light_node\");\n  lightNode.addComponent(_oasisEngine.DirectLight).intensity = 0.6;\n  lightNode.transform.lookAt(new _oasisEngine.Vector3(0, 0, 1));\n  lightNode.transform.rotate(new _oasisEngine.Vector3(0, 90, 0));\n  engine.resourceManager.load(\"https://gw.alipayobjects.com/os/bmw-prod/5e3c1e4e-496e-45f8-8e05-f89f2bd5e4a4.glb\").then(function (asset) {\n    var animations = asset.animations,\n        defaultSceneRoot = asset.defaultSceneRoot;\n    var animator = defaultSceneRoot.getComponent(_oasisEngine.Animator);\n    var animatorController = new _oasisEngine.AnimatorController();\n    var layer = new _oasisEngine.AnimatorControllerLayer(\"layer\");\n    var animatorStateMachine = new _oasisEngine.AnimatorStateMachine();\n    animatorController.addLayer(layer);\n    animator.animatorController = animatorController;\n    layer.stateMachine = animatorStateMachine;\n    setTimeout(function () {\n      console.log(\"crossFade\");\n      animator.crossFade(\"run\", 0.5, 0, 0.1);\n    }, 3000);\n\n    if (animations) {\n      animations.forEach(function (clip) {\n        if (clip.name === \"walk\" || clip.name === \"run\") {\n          var animatorState = animatorStateMachine.addState(clip.name);\n          animatorState.clip = clip;\n        }\n      });\n    }\n\n    animator.play(\"walk\");\n    rootEntity.addChild(defaultSceneRoot);\n  });\n  engine.run();\n});"},"name":"skeleton-animation-crossfade","title":"Animation CrossFade","category":"Animation","id":"ce6df7c5-c206-5006-81d1-80684b5f157c","sourceCode":"/**\n * @title Animation CrossFade\n * @category Animation\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport {\n  Animator,\n  AnimatorController,\n  AnimatorControllerLayer,\n  AnimatorStateMachine,\n  Camera,\n  DirectLight,\n  Logger,\n  SystemInfo,\n  Vector3,\n  WebGLEngine,\n  AnimationClip,\n  GLTFResource\n} from \"oasis-engine\";\n\nLogger.enable();\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.width = window.innerWidth * SystemInfo.devicePixelRatio;\nengine.canvas.height = window.innerHeight * SystemInfo.devicePixelRatio;\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// camera\nconst cameraEntity = rootEntity.createChild(\"camera_node\");\ncameraEntity.transform.position = new Vector3(0, 1, 5);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl).target = new Vector3(0, 1, 0);\n\nconst lightNode = rootEntity.createChild(\"light_node\");\nlightNode.addComponent(DirectLight).intensity = 0.6;\nlightNode.transform.lookAt(new Vector3(0, 0, 1));\nlightNode.transform.rotate(new Vector3(0, 90, 0));\n\nengine.resourceManager\n  .load<GLTFResource>(\"https://gw.alipayobjects.com/os/bmw-prod/5e3c1e4e-496e-45f8-8e05-f89f2bd5e4a4.glb\")\n  .then((asset) => {\n    const { animations, defaultSceneRoot } = asset;\n\n    const animator = defaultSceneRoot.getComponent(Animator);\n    const animatorController = new AnimatorController();\n    const layer = new AnimatorControllerLayer(\"layer\");\n    const animatorStateMachine = new AnimatorStateMachine();\n    animatorController.addLayer(layer);\n    animator.animatorController = animatorController;\n    layer.stateMachine = animatorStateMachine;\n    setTimeout(() => {\n      console.log(\"crossFade\");\n      animator.crossFade(\"run\", 0.5, 0, 0.1);\n    }, 3000);\n    if (animations) {\n      animations.forEach((clip: AnimationClip) => {\n        if (clip.name === \"walk\" || clip.name === \"run\") {\n          const animatorState = animatorStateMachine.addState(clip.name);\n          animatorState.clip = clip;\n        }\n      });\n    }\n    animator.play(\"walk\");\n\n    rootEntity.addChild(defaultSceneRoot);\n  });\n\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Animation CrossFade\n * @category Animation\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  Animator<span class=\"token punctuation\">,</span>\n  AnimatorController<span class=\"token punctuation\">,</span>\n  AnimatorControllerLayer<span class=\"token punctuation\">,</span>\n  AnimatorStateMachine<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  DirectLight<span class=\"token punctuation\">,</span>\n  Logger<span class=\"token punctuation\">,</span>\n  SystemInfo<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine<span class=\"token punctuation\">,</span>\n  AnimationClip<span class=\"token punctuation\">,</span>\n  GLTFResource\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\nLogger<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>innerWidth <span class=\"token operator\">*</span> SystemInfo<span class=\"token punctuation\">.</span>devicePixelRatio<span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>innerHeight <span class=\"token operator\">*</span> SystemInfo<span class=\"token punctuation\">.</span>devicePixelRatio<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>target <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> lightNode <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"light_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>GLTFResource<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/5e3c1e4e-496e-45f8-8e05-f89f2bd5e4a4.glb\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">asset</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> animations<span class=\"token punctuation\">,</span> defaultSceneRoot <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> asset<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> animator <span class=\"token operator\">=</span> defaultSceneRoot<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>Animator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> animatorController <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AnimatorController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> layer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AnimatorControllerLayer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"layer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> animatorStateMachine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AnimatorStateMachine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    animatorController<span class=\"token punctuation\">.</span><span class=\"token function\">addLayer</span><span class=\"token punctuation\">(</span>layer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    animator<span class=\"token punctuation\">.</span>animatorController <span class=\"token operator\">=</span> animatorController<span class=\"token punctuation\">;</span>\n    layer<span class=\"token punctuation\">.</span>stateMachine <span class=\"token operator\">=</span> animatorStateMachine<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"crossFade\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      animator<span class=\"token punctuation\">.</span><span class=\"token function\">crossFade</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"run\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>animations<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      animations<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">clip<span class=\"token operator\">:</span> AnimationClip</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>clip<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token string\">\"walk\"</span> <span class=\"token operator\">||</span> clip<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token string\">\"run\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> animatorState <span class=\"token operator\">=</span> animatorStateMachine<span class=\"token punctuation\">.</span><span class=\"token function\">addState</span><span class=\"token punctuation\">(</span>clip<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          animatorState<span class=\"token punctuation\">.</span>clip <span class=\"token operator\">=</span> clip<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    animator<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"walk\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>defaultSceneRoot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title Animation CustomBlendShape\n   * @category Animation\n   */\n  _oasisEngine.Logger.enable();\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.width = window.innerWidth * _oasisEngine.SystemInfo.devicePixelRatio;\n  engine.canvas.height = window.innerHeight * _oasisEngine.SystemInfo.devicePixelRatio;\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // camera\n\n  var cameraEntity = rootEntity.createChild(\"cameraNode\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 0, 5);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl);\n  var meshEntity = rootEntity.createChild(\"meshEntity\");\n  var skinnedMeshRenderer = meshEntity.addComponent(_oasisEngine.SkinnedMeshRenderer);\n  var modelMesh = new _oasisEngine.ModelMesh(engine); // Set vertices data.\n\n  var positions = [new _oasisEngine.Vector3(-1.0, -1.0, 1.0), new _oasisEngine.Vector3(1.0, -1.0, 1.0), new _oasisEngine.Vector3(1.0, 1.0, 1.0), new _oasisEngine.Vector3(1.0, 1.0, 1.0), new _oasisEngine.Vector3(-1.0, 1.0, 1.0), new _oasisEngine.Vector3(-1.0, -1.0, 1.0)];\n  modelMesh.setPositions(positions); // Add SubMesh.\n\n  modelMesh.addSubMesh(0, 6); // Add BlendShape.\n\n  var deltaPositions = [new _oasisEngine.Vector3(0.0, 0.0, 0.0), new _oasisEngine.Vector3(0.0, 0.0, 0.0), new _oasisEngine.Vector3(-1.0, 0.0, 0.0), new _oasisEngine.Vector3(-1.0, 0.0, 0.0), new _oasisEngine.Vector3(1.0, 0.0, 0.0), new _oasisEngine.Vector3(0.0, 0.0, 0.0)];\n  var blendShape = new _oasisEngine.BlendShape(\"BlendShapeA\");\n  blendShape.addFrame(1.0, deltaPositions);\n  modelMesh.addBlendShape(blendShape);\n  skinnedMeshRenderer.mesh = modelMesh;\n  skinnedMeshRenderer.setMaterial(new _oasisEngine.UnlitMaterial(engine)); // Upload data.\n\n  modelMesh.uploadData(false);\n  engine.run(); // Use `blendShapeWeights` property to adjust the mesh to the target BlendShape\n\n  skinnedMeshRenderer.blendShapeWeights = new Float32Array([1.0]); // Add data GUI\n\n  addDataGUI(skinnedMeshRenderer);\n  /**\n   * Add data GUI.\n   */\n\n  function addDataGUI(skinnedMeshRenderer) {\n    var gui = new dat.GUI();\n    var guiData = {\n      blendShapeWeights: 1.0\n    };\n    gui.add(guiData, \"blendShapeWeights\", 0, 1).onChange(function (value) {\n      skinnedMeshRenderer.blendShapeWeights[0] = value;\n    });\n  }\n});"},"name":"skeleton-animation-customBlendShape","title":"Animation CustomBlendShape","category":"Animation","id":"46453324-79d6-593b-bef0-d91b598b7a47","sourceCode":"/**\n * @title Animation CustomBlendShape\n * @category Animation\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\nimport {\n  BlendShape,\n  Camera,\n  Logger,\n  ModelMesh,\n  SkinnedMeshRenderer,\n  SystemInfo,\n  UnlitMaterial,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\n\nLogger.enable();\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.width = window.innerWidth * SystemInfo.devicePixelRatio;\nengine.canvas.height = window.innerHeight * SystemInfo.devicePixelRatio;\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// camera\nconst cameraEntity = rootEntity.createChild(\"cameraNode\");\ncameraEntity.transform.position = new Vector3(0, 0, 5);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\nconst meshEntity = rootEntity.createChild(\"meshEntity\");\nconst skinnedMeshRenderer = meshEntity.addComponent(SkinnedMeshRenderer);\nconst modelMesh = new ModelMesh(engine);\n\n// Set vertices data.\nconst positions = [\n  new Vector3(-1.0, -1.0, 1.0),\n  new Vector3(1.0, -1.0, 1.0),\n  new Vector3(1.0, 1.0, 1.0),\n  new Vector3(1.0, 1.0, 1.0),\n  new Vector3(-1.0, 1.0, 1.0),\n  new Vector3(-1.0, -1.0, 1.0)\n];\nmodelMesh.setPositions(positions);\n\n// Add SubMesh.\nmodelMesh.addSubMesh(0, 6);\n\n// Add BlendShape.\nconst deltaPositions = [\n  new Vector3(0.0, 0.0, 0.0),\n  new Vector3(0.0, 0.0, 0.0),\n  new Vector3(-1.0, 0.0, 0.0),\n  new Vector3(-1.0, 0.0, 0.0),\n  new Vector3(1.0, 0.0, 0.0),\n  new Vector3(0.0, 0.0, 0.0)\n];\nconst blendShape = new BlendShape(\"BlendShapeA\");\nblendShape.addFrame(1.0, deltaPositions);\nmodelMesh.addBlendShape(blendShape);\n\nskinnedMeshRenderer.mesh = modelMesh;\nskinnedMeshRenderer.setMaterial(new UnlitMaterial(engine));\n\n// Upload data.\nmodelMesh.uploadData(false);\n\nengine.run();\n\n// Use `blendShapeWeights` property to adjust the mesh to the target BlendShape\nskinnedMeshRenderer.blendShapeWeights = new Float32Array([1.0]);\n\n// Add data GUI\naddDataGUI(skinnedMeshRenderer);\n\n/**\n * Add data GUI.\n */\nfunction addDataGUI(skinnedMeshRenderer: SkinnedMeshRenderer): void {\n  const gui = new dat.GUI();\n  const guiData = {\n    blendShapeWeights: 1.0\n  };\n\n  gui.add(guiData, \"blendShapeWeights\", 0, 1).onChange((value: number) => {\n    skinnedMeshRenderer.blendShapeWeights[0] = value;\n  });\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Animation CustomBlendShape\n * @category Animation\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  BlendShape<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  Logger<span class=\"token punctuation\">,</span>\n  ModelMesh<span class=\"token punctuation\">,</span>\n  SkinnedMeshRenderer<span class=\"token punctuation\">,</span>\n  SystemInfo<span class=\"token punctuation\">,</span>\n  UnlitMaterial<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\nLogger<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>innerWidth <span class=\"token operator\">*</span> SystemInfo<span class=\"token punctuation\">.</span>devicePixelRatio<span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>innerHeight <span class=\"token operator\">*</span> SystemInfo<span class=\"token punctuation\">.</span>devicePixelRatio<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cameraNode\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> meshEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"meshEntity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> skinnedMeshRenderer <span class=\"token operator\">=</span> meshEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SkinnedMeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> modelMesh <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ModelMesh</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Set vertices data.</span>\n<span class=\"token keyword\">const</span> positions <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nmodelMesh<span class=\"token punctuation\">.</span><span class=\"token function\">setPositions</span><span class=\"token punctuation\">(</span>positions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Add SubMesh.</span>\nmodelMesh<span class=\"token punctuation\">.</span><span class=\"token function\">addSubMesh</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Add BlendShape.</span>\n<span class=\"token keyword\">const</span> deltaPositions <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> blendShape <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlendShape</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BlendShapeA\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nblendShape<span class=\"token punctuation\">.</span><span class=\"token function\">addFrame</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> deltaPositions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmodelMesh<span class=\"token punctuation\">.</span><span class=\"token function\">addBlendShape</span><span class=\"token punctuation\">(</span>blendShape<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nskinnedMeshRenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> modelMesh<span class=\"token punctuation\">;</span>\nskinnedMeshRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">UnlitMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Upload data.</span>\nmodelMesh<span class=\"token punctuation\">.</span><span class=\"token function\">uploadData</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Use `blendShapeWeights` property to adjust the mesh to the target BlendShape</span>\nskinnedMeshRenderer<span class=\"token punctuation\">.</span>blendShapeWeights <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Float32Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Add data GUI</span>\n<span class=\"token function\">addDataGUI</span><span class=\"token punctuation\">(</span>skinnedMeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Add data GUI.\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">addDataGUI</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">skinnedMeshRenderer<span class=\"token operator\">:</span> SkinnedMeshRenderer</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> guiData <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    blendShapeWeights<span class=\"token operator\">:</span> <span class=\"token number\">1.0</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"blendShapeWeights\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    skinnedMeshRenderer<span class=\"token punctuation\">.</span>blendShapeWeights<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title Animation Additive\n   * @category Animation\n   */\n  _oasisEngine.Logger.enable();\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.width = window.innerWidth * _oasisEngine.SystemInfo.devicePixelRatio;\n  engine.canvas.height = window.innerHeight * _oasisEngine.SystemInfo.devicePixelRatio;\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_node\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 1, 5);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl).target = new _oasisEngine.Vector3(0, 1, 0);\n  var lightNode = rootEntity.createChild(\"light_node\");\n  lightNode.addComponent(_oasisEngine.DirectLight).intensity = 0.6;\n  lightNode.transform.lookAt(new _oasisEngine.Vector3(0, 0, 1));\n  lightNode.transform.rotate(new _oasisEngine.Vector3(0, 90, 0));\n  engine.resourceManager.load(\"https://gw.alipayobjects.com/os/bmw-prod/5e3c1e4e-496e-45f8-8e05-f89f2bd5e4a4.glb\").then(function (asset) {\n    var animations = asset.animations,\n        defaultSceneRoot = asset.defaultSceneRoot;\n    var animator = defaultSceneRoot.getComponent(_oasisEngine.Animator);\n    var animatorController = new _oasisEngine.AnimatorController();\n    var layer = new _oasisEngine.AnimatorControllerLayer(\"layer\");\n    var layer1 = new _oasisEngine.AnimatorControllerLayer(\"layer1\");\n    var animatorStateMachine = new _oasisEngine.AnimatorStateMachine();\n    var animatorStateMachine1 = new _oasisEngine.AnimatorStateMachine();\n    animatorController.addLayer(layer);\n    animatorController.addLayer(layer1);\n    animator.animatorController = animatorController;\n    layer.stateMachine = animatorStateMachine;\n    layer1.stateMachine = animatorStateMachine1;\n    layer1.blendingMode = _oasisEngine.AnimatorLayerBlendingMode.Additive;\n\n    if (animations) {\n      animations.forEach(function (clip) {\n        if (clip.name === \"agree\") {\n          var animatorState = animatorStateMachine.addState(clip.name);\n          animatorState.clip = clip;\n        }\n\n        if (clip.name === \"sneak_pose\") {\n          var animatorState2 = animatorStateMachine1.addState(clip.name);\n          animatorState2.clip = clip;\n          animatorState2.clipStartTime = 1;\n        }\n      });\n    }\n\n    rootEntity.addChild(defaultSceneRoot);\n    animator.play(\"agree\", 0);\n    animator.play(\"sneak_pose\", 1);\n  });\n  engine.run();\n});"},"name":"skeleton-animation-additive","title":"Animation Additive","category":"Animation","id":"4e4e029b-8a43-57ff-862d-6a85357b97e0","sourceCode":"/**\n * @title Animation Additive\n * @category Animation\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport {\n  AnimationClip,\n  Animator,\n  AnimatorController,\n  AnimatorControllerLayer,\n  AnimatorLayerBlendingMode,\n  AnimatorStateMachine,\n  Camera,\n  DirectLight,\n  GLTFResource,\n  Logger,\n  SystemInfo,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\n\nLogger.enable();\n\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.width = window.innerWidth * SystemInfo.devicePixelRatio;\nengine.canvas.height = window.innerHeight * SystemInfo.devicePixelRatio;\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// camera\nconst cameraEntity = rootEntity.createChild(\"camera_node\");\ncameraEntity.transform.position = new Vector3(0, 1, 5);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl).target = new Vector3(0, 1, 0);\n\nconst lightNode = rootEntity.createChild(\"light_node\");\nlightNode.addComponent(DirectLight).intensity = 0.6;\nlightNode.transform.lookAt(new Vector3(0, 0, 1));\nlightNode.transform.rotate(new Vector3(0, 90, 0));\n\nengine.resourceManager\n  .load<GLTFResource>(\"https://gw.alipayobjects.com/os/bmw-prod/5e3c1e4e-496e-45f8-8e05-f89f2bd5e4a4.glb\")\n  .then((asset) => {\n    const { animations, defaultSceneRoot } = asset;\n    const animator = defaultSceneRoot.getComponent(Animator)\n    const animatorController = new AnimatorController();\n    const layer = new AnimatorControllerLayer(\"layer\");\n    const layer1 = new AnimatorControllerLayer(\"layer1\");\n    const animatorStateMachine = new AnimatorStateMachine();\n    const animatorStateMachine1 = new AnimatorStateMachine();\n    animatorController.addLayer(layer);\n    animatorController.addLayer(layer1);\n    animator.animatorController = animatorController;\n    layer.stateMachine = animatorStateMachine;\n    layer1.stateMachine = animatorStateMachine1;\n    layer1.blendingMode = AnimatorLayerBlendingMode.Additive;\n    if (animations) {\n      animations.forEach((clip: AnimationClip) => {\n        if (clip.name === \"agree\") {\n          const animatorState = animatorStateMachine.addState(clip.name);\n          animatorState.clip = clip;\n        }\n        if (clip.name === \"sneak_pose\") {\n          const animatorState2 = animatorStateMachine1.addState(clip.name);\n          animatorState2.clip = clip;\n          animatorState2.clipStartTime = 1;\n        }\n      });\n    }\n    rootEntity.addChild(defaultSceneRoot);\n    animator.play(\"agree\", 0);\n    animator.play(\"sneak_pose\", 1);\n  });\n\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Animation Additive\n * @category Animation\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AnimationClip<span class=\"token punctuation\">,</span>\n  Animator<span class=\"token punctuation\">,</span>\n  AnimatorController<span class=\"token punctuation\">,</span>\n  AnimatorControllerLayer<span class=\"token punctuation\">,</span>\n  AnimatorLayerBlendingMode<span class=\"token punctuation\">,</span>\n  AnimatorStateMachine<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  DirectLight<span class=\"token punctuation\">,</span>\n  GLTFResource<span class=\"token punctuation\">,</span>\n  Logger<span class=\"token punctuation\">,</span>\n  SystemInfo<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\nLogger<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>innerWidth <span class=\"token operator\">*</span> SystemInfo<span class=\"token punctuation\">.</span>devicePixelRatio<span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>innerHeight <span class=\"token operator\">*</span> SystemInfo<span class=\"token punctuation\">.</span>devicePixelRatio<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>target <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> lightNode <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"light_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>GLTFResource<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/5e3c1e4e-496e-45f8-8e05-f89f2bd5e4a4.glb\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">asset</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> animations<span class=\"token punctuation\">,</span> defaultSceneRoot <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> asset<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> animator <span class=\"token operator\">=</span> defaultSceneRoot<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>Animator<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> animatorController <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AnimatorController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> layer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AnimatorControllerLayer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"layer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> layer1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AnimatorControllerLayer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"layer1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> animatorStateMachine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AnimatorStateMachine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> animatorStateMachine1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AnimatorStateMachine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    animatorController<span class=\"token punctuation\">.</span><span class=\"token function\">addLayer</span><span class=\"token punctuation\">(</span>layer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    animatorController<span class=\"token punctuation\">.</span><span class=\"token function\">addLayer</span><span class=\"token punctuation\">(</span>layer1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    animator<span class=\"token punctuation\">.</span>animatorController <span class=\"token operator\">=</span> animatorController<span class=\"token punctuation\">;</span>\n    layer<span class=\"token punctuation\">.</span>stateMachine <span class=\"token operator\">=</span> animatorStateMachine<span class=\"token punctuation\">;</span>\n    layer1<span class=\"token punctuation\">.</span>stateMachine <span class=\"token operator\">=</span> animatorStateMachine1<span class=\"token punctuation\">;</span>\n    layer1<span class=\"token punctuation\">.</span>blendingMode <span class=\"token operator\">=</span> AnimatorLayerBlendingMode<span class=\"token punctuation\">.</span>Additive<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>animations<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      animations<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">clip<span class=\"token operator\">:</span> AnimationClip</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>clip<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token string\">\"agree\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> animatorState <span class=\"token operator\">=</span> animatorStateMachine<span class=\"token punctuation\">.</span><span class=\"token function\">addState</span><span class=\"token punctuation\">(</span>clip<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          animatorState<span class=\"token punctuation\">.</span>clip <span class=\"token operator\">=</span> clip<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>clip<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> <span class=\"token string\">\"sneak_pose\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> animatorState2 <span class=\"token operator\">=</span> animatorStateMachine1<span class=\"token punctuation\">.</span><span class=\"token function\">addState</span><span class=\"token punctuation\">(</span>clip<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          animatorState2<span class=\"token punctuation\">.</span>clip <span class=\"token operator\">=</span> clip<span class=\"token punctuation\">;</span>\n          animatorState2<span class=\"token punctuation\">.</span>clipStartTime <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>defaultSceneRoot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    animator<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"agree\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    animator<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sneak_pose\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title Skeleton Animation\n   * @category Animation\n   */\n  _oasisEngine.Logger.enable();\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_node\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 1, 5);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl).target = new _oasisEngine.Vector3(0, 1, 0);\n  var lightNode = rootEntity.createChild(\"light_node\");\n  lightNode.addComponent(_oasisEngine.DirectLight).intensity = 0.8;\n  lightNode.transform.lookAt(new _oasisEngine.Vector3(0, 0, 1));\n  lightNode.transform.rotate(new _oasisEngine.Vector3(0, 90, 0));\n  engine.resourceManager.load(\"https://gw.alipayobjects.com/os/basement_prod/aa318303-d7c9-4cb8-8c5a-9cf3855fd1e6.gltf\").then(function (asset) {\n    var animations = asset.animations,\n        defaultSceneRoot = asset.defaultSceneRoot;\n    rootEntity.addChild(defaultSceneRoot);\n    var animator = defaultSceneRoot.getComponent(_oasisEngine.Animator);\n    animator.play(animations[0].name);\n  });\n  engine.run();\n});"},"name":"skeleton-animation","title":"Skeleton Animation","category":"Animation","id":"9bc1db50-5063-59ee-ac97-4ec093b8d8e6","sourceCode":"/**\n * @title Skeleton Animation\n * @category Animation\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport { Animator, Camera, DirectLight, GLTFResource, Logger, Vector3, WebGLEngine } from \"oasis-engine\";\n\nLogger.enable();\n\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// camera\nconst cameraEntity = rootEntity.createChild(\"camera_node\");\ncameraEntity.transform.position = new Vector3(0, 1, 5);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl).target = new Vector3(0, 1, 0);\n\nconst lightNode = rootEntity.createChild(\"light_node\");\nlightNode.addComponent(DirectLight).intensity = 0.8;\nlightNode.transform.lookAt(new Vector3(0, 0, 1));\nlightNode.transform.rotate(new Vector3(0, 90, 0));\n\nengine.resourceManager\n  .load<GLTFResource>(\"https://gw.alipayobjects.com/os/basement_prod/aa318303-d7c9-4cb8-8c5a-9cf3855fd1e6.gltf\")\n  .then((asset) => {\n    const { animations, defaultSceneRoot } = asset;\n    rootEntity.addChild(defaultSceneRoot);\n\n    const animator = defaultSceneRoot.getComponent(Animator);\n    animator.play(animations[0].name);\n  });\n\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Skeleton Animation\n * @category Animation\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Animator<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> DirectLight<span class=\"token punctuation\">,</span> GLTFResource<span class=\"token punctuation\">,</span> Logger<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\nLogger<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>target <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> lightNode <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"light_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>GLTFResource<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://gw.alipayobjects.com/os/basement_prod/aa318303-d7c9-4cb8-8c5a-9cf3855fd1e6.gltf\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">asset</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> animations<span class=\"token punctuation\">,</span> defaultSceneRoot <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> asset<span class=\"token punctuation\">;</span>\n    rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>defaultSceneRoot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> animator <span class=\"token operator\">=</span> defaultSceneRoot<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>Animator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    animator<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span>animations<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title Animation Play\n   * @category Animation\n   */\n  _oasisEngine.Logger.enable();\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.width = window.innerWidth * _oasisEngine.SystemInfo.devicePixelRatio;\n  engine.canvas.height = window.innerHeight * _oasisEngine.SystemInfo.devicePixelRatio;\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_node\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 1, 5);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl).target = new _oasisEngine.Vector3(0, 1, 0);\n  var lightNode = rootEntity.createChild(\"light_node\");\n  lightNode.addComponent(_oasisEngine.DirectLight).intensity = 0.6;\n  lightNode.transform.lookAt(new _oasisEngine.Vector3(0, 0, 1));\n  lightNode.transform.rotate(new _oasisEngine.Vector3(0, 90, 0));\n  engine.resourceManager.load(\"https://gw.alipayobjects.com/os/bmw-prod/5e3c1e4e-496e-45f8-8e05-f89f2bd5e4a4.glb\").then(function (asset) {\n    var defaultSceneRoot = asset.defaultSceneRoot;\n    rootEntity.addChild(defaultSceneRoot);\n    var animator = defaultSceneRoot.getComponent(_oasisEngine.Animator);\n    animator.play(\"run\");\n  });\n  engine.run();\n});"},"name":"skeleton-animation-play","title":"Animation Play","category":"Animation","id":"62b04cd0-21b1-5b5d-b341-9da535193be5","sourceCode":"/**\n * @title Animation Play\n * @category Animation\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport {\n  Animator,\n  Camera,\n  DirectLight, GLTFResource, Logger,\n  SystemInfo,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\n\nLogger.enable();\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.width = window.innerWidth * SystemInfo.devicePixelRatio;\nengine.canvas.height = window.innerHeight * SystemInfo.devicePixelRatio;\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// camera\nconst cameraEntity = rootEntity.createChild(\"camera_node\");\ncameraEntity.transform.position = new Vector3(0, 1, 5);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl).target = new Vector3(0, 1, 0);\n\nconst lightNode = rootEntity.createChild(\"light_node\");\nlightNode.addComponent(DirectLight).intensity = 0.6;\nlightNode.transform.lookAt(new Vector3(0, 0, 1));\nlightNode.transform.rotate(new Vector3(0, 90, 0));\n\nengine.resourceManager\n  .load<GLTFResource>(\"https://gw.alipayobjects.com/os/bmw-prod/5e3c1e4e-496e-45f8-8e05-f89f2bd5e4a4.glb\")\n  .then((asset) => {\n    const { defaultSceneRoot } = asset;\n    rootEntity.addChild(defaultSceneRoot);\n    const animator = defaultSceneRoot.getComponent(Animator);\n    animator.play(\"run\");\n  });\n\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Animation Play\n * @category Animation\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  Animator<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  DirectLight<span class=\"token punctuation\">,</span> GLTFResource<span class=\"token punctuation\">,</span> Logger<span class=\"token punctuation\">,</span>\n  SystemInfo<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\nLogger<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>innerWidth <span class=\"token operator\">*</span> SystemInfo<span class=\"token punctuation\">.</span>devicePixelRatio<span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>innerHeight <span class=\"token operator\">*</span> SystemInfo<span class=\"token punctuation\">.</span>devicePixelRatio<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>target <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> lightNode <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"light_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>GLTFResource<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/5e3c1e4e-496e-45f8-8e05-f89f2bd5e4a4.glb\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">asset</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> defaultSceneRoot <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> asset<span class=\"token punctuation\">;</span>\n    rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>defaultSceneRoot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> animator <span class=\"token operator\">=</span> defaultSceneRoot<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>Animator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    animator<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"run\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@oasis-engine/spine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@oasis-engine/spine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global.oasisSpine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, _spine) {\n  \"use strict\";\n\n  /**\n   * @title Spine Animation\n   * @category 2D\n   */\n  _oasisEngine.Logger.enable();\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_node\");\n  var camera = cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 0, 60);\n  engine.resourceManager.load({\n    urls: [\"https://gw.alipayobjects.com/os/OasisHub/a66ef194-6bc8-4325-9a59-6ea9097225b1/1620888427489.json\", \"https://gw.alipayobjects.com/os/OasisHub/a1e3e67b-a783-4832-ba1b-37a95bd55291/1620888427490.atlas\", \"https://gw.alipayobjects.com/zos/OasisHub/a3ca8f62-1068-43a5-bb64-5c9a0f823dde/1620888427490.png\"],\n    type: \"spine\"\n  }).then(function (spineEntity) {\n    spineEntity.transform.setPosition(0, -15, 0);\n    rootEntity.addChild(spineEntity);\n    var spineAnimation = spineEntity.getComponent(_spine.SpineAnimation);\n    spineAnimation.state.setAnimation(0, \"walk\", true);\n    spineAnimation.scale = 0.05;\n  });\n  engine.run();\n});"},"name":"spine-animation","title":"Spine Animation","category":"2D","id":"d57b17c4-ec2c-53b4-9bb7-5c21de66a464","sourceCode":"/**\n * @title Spine Animation\n * @category 2D\n */\nimport { Camera, Logger, Vector3, WebGLEngine, Entity } from \"oasis-engine\";\nimport { SpineAnimation } from \"@oasis-engine/spine\";\n\nLogger.enable();\n\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// camera\nconst cameraEntity = rootEntity.createChild(\"camera_node\");\nconst camera = cameraEntity.addComponent(Camera);\ncameraEntity.transform.position = new Vector3(0, 0, 60);\n\nengine.resourceManager\n  .load({\n    urls: [ \n      \"https://gw.alipayobjects.com/os/OasisHub/a66ef194-6bc8-4325-9a59-6ea9097225b1/1620888427489.json\",\n      \"https://gw.alipayobjects.com/os/OasisHub/a1e3e67b-a783-4832-ba1b-37a95bd55291/1620888427490.atlas\",\n      \"https://gw.alipayobjects.com/zos/OasisHub/a3ca8f62-1068-43a5-bb64-5c9a0f823dde/1620888427490.png\"\n    ],\n    type: \"spine\"\n  })\n  .then((spineEntity: Entity) => {\n    spineEntity.transform.setPosition(0, -15, 0);\n    rootEntity.addChild(spineEntity);\n    const spineAnimation = spineEntity.getComponent(SpineAnimation);\n    spineAnimation.state.setAnimation(0, \"walk\", true);\n    spineAnimation.scale = 0.05;\n  });\n\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Spine Animation\n * @category 2D\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Camera<span class=\"token punctuation\">,</span> Logger<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> WebGLEngine<span class=\"token punctuation\">,</span> Entity <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> SpineAnimation <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/spine\"</span><span class=\"token punctuation\">;</span>\n\nLogger<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> camera <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    urls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> \n      <span class=\"token string\">\"https://gw.alipayobjects.com/os/OasisHub/a66ef194-6bc8-4325-9a59-6ea9097225b1/1620888427489.json\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/os/OasisHub/a1e3e67b-a783-4832-ba1b-37a95bd55291/1620888427490.atlas\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/zos/OasisHub/a3ca8f62-1068-43a5-bb64-5c9a0f823dde/1620888427490.png\"</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> <span class=\"token string\">\"spine\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">spineEntity<span class=\"token operator\">:</span> Entity</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    spineEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>spineEntity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> spineAnimation <span class=\"token operator\">=</span> spineEntity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>SpineAnimation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    spineAnimation<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span><span class=\"token function\">setAnimation</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"walk\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    spineAnimation<span class=\"token punctuation\">.</span>scale <span class=\"token operator\">=</span> <span class=\"token number\">0.05</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@oasis-engine/spine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@oasis-engine/spine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global.oasisSpine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, _spine) {\n  \"use strict\";\n\n  /**\n   * @title Spine\n   * @category Benchmark\n   */\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_node\");\n  var camera = cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 0, 110);\n  camera.farClipPlane = 200;\n  engine.resourceManager.load({\n    urls: [\"https://gw.alipayobjects.com/os/OasisHub/a66ef194-6bc8-4325-9a59-6ea9097225b1/1620888427489.json\", \"https://gw.alipayobjects.com/os/OasisHub/a1e3e67b-a783-4832-ba1b-37a95bd55291/1620888427490.atlas\", \"https://gw.alipayobjects.com/zos/OasisHub/a3ca8f62-1068-43a5-bb64-5c9a0f823dde/1620888427490.png\"],\n    type: \"spine\"\n  }).then(function (spineEntity) {\n    for (var i = -5; i < 5; i++) {\n      for (var j = -5; j < 5; j++) {\n        var clone = spineEntity.clone();\n        clone.transform.setPosition(8 * i, 8 * j, 0);\n        rootEntity.addChild(clone);\n        var spineAnimation = clone.getComponent(_spine.SpineAnimation);\n        spineAnimation.state.setAnimation(0, \"walk\", true);\n        spineAnimation.scale = 0.01;\n      }\n    }\n  });\n  engine.run();\n});"},"name":"spine-performance","title":"Spine","category":"Benchmark","id":"50450271-4858-51b1-b447-f31597239177","sourceCode":"/**\n * @title Spine\n * @category Benchmark\n */\nimport { Camera, Logger, SystemInfo, Vector3, WebGLEngine, Entity } from \"oasis-engine\";\nimport { SpineAnimation } from \"@oasis-engine/spine\";\n\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// camera\nconst cameraEntity = rootEntity.createChild(\"camera_node\");\nconst camera = cameraEntity.addComponent(Camera);\ncameraEntity.transform.position = new Vector3(0, 0, 110);\ncamera.farClipPlane = 200;\n\nengine.resourceManager\n  .load({\n    urls: [ \n      \"https://gw.alipayobjects.com/os/OasisHub/a66ef194-6bc8-4325-9a59-6ea9097225b1/1620888427489.json\",\n      \"https://gw.alipayobjects.com/os/OasisHub/a1e3e67b-a783-4832-ba1b-37a95bd55291/1620888427490.atlas\",\n      \"https://gw.alipayobjects.com/zos/OasisHub/a3ca8f62-1068-43a5-bb64-5c9a0f823dde/1620888427490.png\"\n    ],\n    type: \"spine\"\n  })\n  .then((spineEntity: Entity) => {\n    for (let i = -5; i < 5; i++) {\n      for (let j = -5; j < 5; j++) {\n        const clone = spineEntity.clone();\n        clone.transform.setPosition(8 * i, 8 * j, 0);\n        rootEntity.addChild(clone);\n        const spineAnimation = clone.getComponent(SpineAnimation);\n        spineAnimation.state.setAnimation(0, \"walk\", true);\n        spineAnimation.scale = 0.01;\n      }\n    }\n  });\n\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Spine\n * @category Benchmark\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Camera<span class=\"token punctuation\">,</span> Logger<span class=\"token punctuation\">,</span> SystemInfo<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> WebGLEngine<span class=\"token punctuation\">,</span> Entity <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> SpineAnimation <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/spine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> camera <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">110</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncamera<span class=\"token punctuation\">.</span>farClipPlane <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    urls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> \n      <span class=\"token string\">\"https://gw.alipayobjects.com/os/OasisHub/a66ef194-6bc8-4325-9a59-6ea9097225b1/1620888427489.json\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/os/OasisHub/a1e3e67b-a783-4832-ba1b-37a95bd55291/1620888427490.atlas\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/zos/OasisHub/a3ca8f62-1068-43a5-bb64-5c9a0f823dde/1620888427490.png\"</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> <span class=\"token string\">\"spine\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">spineEntity<span class=\"token operator\">:</span> Entity</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> j <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> clone <span class=\"token operator\">=</span> spineEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        clone<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">,</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> j<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>clone<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> spineAnimation <span class=\"token operator\">=</span> clone<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>SpineAnimation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        spineAnimation<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span><span class=\"token function\">setAnimation</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"walk\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        spineAnimation<span class=\"token punctuation\">.</span>scale <span class=\"token operator\">=</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@oasis-engine/spine\", \"dat.gui\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@oasis-engine/spine\"), require(\"dat.gui\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global.oasisSpine, global.dat);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, _spine, dat) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title Spine Change Skin\n   * @category 2D\n   */\n  _oasisEngine.Logger.enable();\n\n  var gui = new dat.GUI();\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_node\");\n  var camera = cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 0, 60);\n  engine.resourceManager.load({\n    urls: ['https://gw.alipayobjects.com/os/OasisHub/c51a45ef-f248-4835-b601-6d31a901f298/1629713824525.json', 'https://gw.alipayobjects.com/os/OasisHub/b016738d-173a-4506-9112-045ebba84d82/1629713824527.atlas', 'https://gw.alipayobjects.com/zos/OasisHub/747a94f3-8734-47b3-92b3-2d7fe2d36e58/1629713824527.png'],\n    type: \"spine\"\n  }).then(function (spineEntity) {\n    rootEntity.addChild(spineEntity);\n    var spineAnimation = spineEntity.getComponent(_spine.SpineAnimation);\n    var skeleton = spineAnimation.skeleton,\n        state = spineAnimation.state;\n    spineEntity.transform.setPosition(0, -18, 0);\n    state.setAnimation(0, \"dance\", true);\n    skeleton.setSkinByName('girl'); // 1. Set the active skin\n\n    skeleton.setSlotsToSetupPose(); // 2. Use setup pose to set base attachments.\n\n    state.apply(skeleton);\n    spineAnimation.scale = 0.05;\n    var info = {\n      skin: 'girl'\n    };\n    gui.add(info, \"skin\", [\"girl\", \"girl-blue-cape\", \"girl-spring-dress\", \"boy\"]).onChange(function (skinName) {\n      skeleton.setSkinByName(skinName); // 1. Set the active skin\n\n      skeleton.setSlotsToSetupPose(); // 2. Use setup pose to set base attachments.\n\n      state.apply(skeleton);\n    });\n  });\n  engine.run();\n});"},"name":"spine-skin-change","title":"Spine Change Skin","category":"2D","id":"ccfe7f0e-210c-5616-87ed-362c04425feb","sourceCode":"/**\n * @title Spine Change Skin\n * @category 2D\n */\nimport { Camera, Logger, Vector3, WebGLEngine, Entity } from \"oasis-engine\";\nimport { SpineAnimation } from \"@oasis-engine/spine\";\nimport * as dat from \"dat.gui\";\n\nLogger.enable();\n\nconst gui = new dat.GUI();\n\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// camera\nconst cameraEntity = rootEntity.createChild(\"camera_node\");\nconst camera = cameraEntity.addComponent(Camera);\ncameraEntity.transform.position = new Vector3(0, 0, 60);\n\nengine.resourceManager\n  .load({\n    urls: [ \n      'https://gw.alipayobjects.com/os/OasisHub/c51a45ef-f248-4835-b601-6d31a901f298/1629713824525.json',\n      'https://gw.alipayobjects.com/os/OasisHub/b016738d-173a-4506-9112-045ebba84d82/1629713824527.atlas',\n      'https://gw.alipayobjects.com/zos/OasisHub/747a94f3-8734-47b3-92b3-2d7fe2d36e58/1629713824527.png',\n    ],\n    type: \"spine\"\n  })\n  .then((spineEntity: Entity) => {\n    rootEntity.addChild(spineEntity);\n    const spineAnimation = spineEntity.getComponent(SpineAnimation);\n    const { skeleton, state } = spineAnimation;\n    spineEntity.transform.setPosition(0, -18, 0);\n    state.setAnimation(0, \"dance\", true);\n    skeleton.setSkinByName('girl'); // 1. Set the active skin\n    skeleton.setSlotsToSetupPose(); // 2. Use setup pose to set base attachments.\n    state.apply(skeleton);\n    spineAnimation.scale = 0.05;\n    const info = {\n      skin: 'girl'\n    }\n    gui.add(info, \"skin\", [\n      \"girl\",\n      \"girl-blue-cape\", \n      \"girl-spring-dress\", \n      \"boy\"\n    ]).onChange((skinName) => {\n      skeleton.setSkinByName(skinName); // 1. Set the active skin\n      skeleton.setSlotsToSetupPose(); // 2. Use setup pose to set base attachments.\n      state.apply(skeleton);\n    });\n  });\n\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Spine Change Skin\n * @category 2D\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Camera<span class=\"token punctuation\">,</span> Logger<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> WebGLEngine<span class=\"token punctuation\">,</span> Entity <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> SpineAnimation <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/spine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n\nLogger<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> camera <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    urls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> \n      <span class=\"token string\">'https://gw.alipayobjects.com/os/OasisHub/c51a45ef-f248-4835-b601-6d31a901f298/1629713824525.json'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'https://gw.alipayobjects.com/os/OasisHub/b016738d-173a-4506-9112-045ebba84d82/1629713824527.atlas'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'https://gw.alipayobjects.com/zos/OasisHub/747a94f3-8734-47b3-92b3-2d7fe2d36e58/1629713824527.png'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> <span class=\"token string\">\"spine\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">spineEntity<span class=\"token operator\">:</span> Entity</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>spineEntity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> spineAnimation <span class=\"token operator\">=</span> spineEntity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>SpineAnimation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> skeleton<span class=\"token punctuation\">,</span> state <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> spineAnimation<span class=\"token punctuation\">;</span>\n    spineEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    state<span class=\"token punctuation\">.</span><span class=\"token function\">setAnimation</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"dance\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    skeleton<span class=\"token punctuation\">.</span><span class=\"token function\">setSkinByName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'girl'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1. Set the active skin</span>\n    skeleton<span class=\"token punctuation\">.</span><span class=\"token function\">setSlotsToSetupPose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2. Use setup pose to set base attachments.</span>\n    <span class=\"token function\">state</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>skeleton<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    spineAnimation<span class=\"token punctuation\">.</span>scale <span class=\"token operator\">=</span> <span class=\"token number\">0.05</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> info <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      skin<span class=\"token operator\">:</span> <span class=\"token string\">'girl'</span>\n    <span class=\"token punctuation\">}</span>\n    gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">,</span> <span class=\"token string\">\"skin\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"girl\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"girl-blue-cape\"</span><span class=\"token punctuation\">,</span> \n      <span class=\"token string\">\"girl-spring-dress\"</span><span class=\"token punctuation\">,</span> \n      <span class=\"token string\">\"boy\"</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">skinName</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      skeleton<span class=\"token punctuation\">.</span><span class=\"token function\">setSkinByName</span><span class=\"token punctuation\">(</span>skinName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1. Set the active skin</span>\n      skeleton<span class=\"token punctuation\">.</span><span class=\"token function\">setSlotsToSetupPose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2. Use setup pose to set base attachments.</span>\n      <span class=\"token function\">state</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>skeleton<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@oasis-engine/spine\", \"dat.gui\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@oasis-engine/spine\"), require(\"dat.gui\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global.oasisSpine, global.dat);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, _spine, dat) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title Spine Hack Slot Texture\n   * @category 2D\n   */\n  _oasisEngine.Logger.enable();\n\n  var gui = new dat.GUI();\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_node\");\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 0, 60);\n  var resource = generateSkinResource();\n  var spineResource = {\n    urls: ['https://gw.alipayobjects.com/os/OasisHub/e675c9e1-2b19-4940-b8ed-474792e613d7/1629603245094.json', 'https://gw.alipayobjects.com/os/OasisHub/994dfadc-c498-4210-b9ba-0c3deed61fc5/1629603245095.atlas', 'https://gw.alipayobjects.com/zos/OasisHub/b52768b0-0374-4c64-a1bd-763b1a37ee5f/1629603245095.png'],\n    type: \"spine\"\n  };\n  resource.unshift(spineResource);\n  engine.resourceManager.load(resource).then(function (res) {\n    var spineEntity = res[0];\n    spineEntity.transform.setPosition(0, -12, 0);\n    rootEntity.addChild(spineEntity);\n    var spineAnimation = spineEntity.getComponent(_spine.SpineAnimation);\n    spineAnimation.state.setAnimation(0, \"02_walk\", true);\n    spineAnimation.skeleton.setSkinByName('skin1');\n    spineAnimation.scale = 0.07;\n    spineAnimation.addSeparateSlot('defult/head_hair');\n    spineAnimation.addSeparateSlot('defult/arm_rigth_weapon');\n    spineAnimation.addSeparateSlot('defult/Sleeveless_01');\n    var textures = [];\n\n    for (var i = 1; i < res.length; i += 1) {\n      textures.push(res[i]);\n    }\n\n    var info = {\n      '换头饰': 'hair_0',\n      '换衣服': 'clothes_0',\n      '换武器': 'weapon_0'\n    };\n    var hatConfig = [];\n    var clothConfig = [];\n    var weaponConfig = [];\n\n    for (var _i = 0; _i < resource.length; _i++) {\n      hatConfig.push(\"hair_\" + _i);\n      clothConfig.push(\"clothes_\" + _i);\n      weaponConfig.push(\"weapon_\" + _i);\n    }\n\n    gui.add(info, '换头饰', hatConfig).onChange(function (v) {\n      changeSlotTexture(v, textures, spineAnimation);\n    });\n    gui.add(info, '换衣服', clothConfig).onChange(function (v) {\n      changeSlotTexture(v, textures, spineAnimation);\n    });\n    gui.add(info, '换武器', weaponConfig).onChange(function (v) {\n      changeSlotTexture(v, textures, spineAnimation);\n    });\n  });\n  engine.run();\n\n  function generateSkinResource() {\n    var skinImgs = ['https://gw.alicdn.com/imgextra/i4/O1CN01NVzIQ61Hf7DT0jDWS_!!6000000000784-2-tps-802-256.png', 'https://gw.alicdn.com/imgextra/i3/O1CN01g3HnB21FPQPnjavP3_!!6000000000479-2-tps-802-256.png', 'https://gw.alicdn.com/imgextra/i1/O1CN01CvmDQl1gRFcWeh3Na_!!6000000004138-2-tps-802-256.png', 'https://gw.alicdn.com/imgextra/i3/O1CN01BviZcq1Rc2iTh127L_!!6000000002131-2-tps-802-256.png', 'https://gw.alicdn.com/imgextra/i3/O1CN01mkkLpR1ihrDHyYr1H_!!6000000004445-2-tps-802-256.png', 'https://gw.alicdn.com/imgextra/i2/O1CN019ENsCO2992jTG9RGD_!!6000000008024-2-tps-802-256.png', 'https://gw.alicdn.com/imgextra/i4/O1CN01fzyJFg1cNoBGRLSCI_!!6000000003589-2-tps-802-256.png', 'https://gw.alicdn.com/imgextra/i4/O1CN01duImZL1J8iQk2YzEj_!!6000000000984-2-tps-802-256.png', 'https://gw.alicdn.com/imgextra/i2/O1CN01b23DDj1QD1SoNL7ua_!!6000000001941-2-tps-802-256.png', 'https://gw.alicdn.com/imgextra/i1/O1CN01powK3y29HHrZCBnbg_!!6000000008042-2-tps-802-256.png', 'https://gw.alicdn.com/imgextra/i1/O1CN01n7R3dE1IRfCVUgvhE_!!6000000000890-2-tps-802-256.png', 'https://gw.alicdn.com/imgextra/i3/O1CN01t0nsyV24AoBFhIfyZ_!!6000000007351-2-tps-802-256.png', 'https://gw.alicdn.com/imgextra/i4/O1CN01mYwBUD1eBYp2rE0qV_!!6000000003833-2-tps-802-256.png', 'https://gw.alicdn.com/imgextra/i1/O1CN01ks7zZs1mbgKwBjlFS_!!6000000004973-2-tps-802-256.png', 'https://gw.alicdn.com/imgextra/i3/O1CN01mgFHl5262gO0L0JeR_!!6000000007604-2-tps-802-256.png', 'https://gw.alicdn.com/imgextra/i1/O1CN01SJbFkU1udWrRhXPbd_!!6000000006060-2-tps-802-256.png', 'https://gw.alicdn.com/imgextra/i3/O1CN01VGL8pe26qbYegHClp_!!6000000007713-2-tps-802-256.png', 'https://gw.alicdn.com/imgextra/i2/O1CN01EeZs6N1auCy4QbXiY_!!6000000003389-2-tps-802-256.png', 'https://gw.alicdn.com/imgextra/i3/O1CN01DOfF5J1UTkOMHSnwV_!!6000000002519-2-tps-802-256.png', 'https://gw.alicdn.com/imgextra/i1/O1CN01iWGD1h1G0ytSTLs67_!!6000000000561-2-tps-802-256.png', 'https://gw.alicdn.com/imgextra/i1/O1CN01xjhSTG245JQVrtEhL_!!6000000007339-2-tps-802-256.png', 'https://gw.alicdn.com/imgextra/i3/O1CN01NJAp7c22RdV8PC1Dq_!!6000000007117-2-tps-802-256.png', 'https://gw.alicdn.com/imgextra/i1/O1CN01A2Mdh01INXdP46W6B_!!6000000000881-2-tps-802-256.png', 'https://gw.alicdn.com/imgextra/i3/O1CN01AqHn4524RIRMTuuNH_!!6000000007387-2-tps-802-256.png', 'https://gw.alicdn.com/imgextra/i4/O1CN01yU8Z771SPVUUS0Die_!!6000000002239-2-tps-802-256.png', 'https://gw.alicdn.com/imgextra/i3/O1CN01orLkIg1JOkIFur5Fj_!!6000000001019-2-tps-802-256.png', 'https://gw.alicdn.com/imgextra/i3/O1CN01jRRXrV1b4HgOXGqov_!!6000000003411-2-tps-802-256.png', 'https://gw.alicdn.com/imgextra/i2/O1CN01XOchrA1Mh0wFgddGl_!!6000000001465-2-tps-802-256.png', 'https://gw.alicdn.com/imgextra/i2/O1CN01zPPHrD1pIOVHtvDqD_!!6000000005337-2-tps-802-256.png'];\n    return skinImgs.map(function (item) {\n      return {\n        type: _oasisEngine.AssetType.Texture2D,\n        url: item\n      };\n    });\n  }\n\n  function changeSlotTexture(selectItem, textures, spineAnimation) {\n    var slotNameMap = {\n      hair: 'defult/head_hair',\n      weapon: 'defult/arm_rigth_weapon',\n      clothes: 'defult/Sleeveless_01'\n    };\n    var slotKey = selectItem.split('_')[0];\n    var slotName = slotNameMap[slotKey];\n    var index = selectItem.split('_')[1];\n    spineAnimation.hackSeparateSlotTexture(slotName, textures[index]);\n  }\n});"},"name":"spine-hack-slot-texture","title":"Spine Hack Slot Texture","category":"2D","id":"45b962ba-0694-5ccc-8ee8-3982bbf85764","sourceCode":"/**\n * @title Spine Hack Slot Texture\n * @category 2D\n */\nimport { Camera, Logger, Vector3, WebGLEngine, Entity, AssetType, LoadItem } from \"oasis-engine\";\nimport { SpineAnimation } from \"@oasis-engine/spine\";\nimport * as dat from \"dat.gui\";\n\nLogger.enable();\n\nconst gui = new dat.GUI();\n\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// camera\nconst cameraEntity = rootEntity.createChild(\"camera_node\");\ncameraEntity.addComponent(Camera);\ncameraEntity.transform.position = new Vector3(0, 0, 60);\n\nconst resource = generateSkinResource();\nconst spineResource = {\n  urls: [\n    'https://gw.alipayobjects.com/os/OasisHub/e675c9e1-2b19-4940-b8ed-474792e613d7/1629603245094.json',\n    'https://gw.alipayobjects.com/os/OasisHub/994dfadc-c498-4210-b9ba-0c3deed61fc5/1629603245095.atlas',\n    'https://gw.alipayobjects.com/zos/OasisHub/b52768b0-0374-4c64-a1bd-763b1a37ee5f/1629603245095.png',\n  ],\n  type: \"spine\"\n};\nresource.unshift(spineResource);\nengine.resourceManager\n  .load(resource)\n  .then((res) => {\n    const spineEntity = res[0] as Entity;\n    spineEntity.transform.setPosition(0, -12, 0);\n    rootEntity.addChild(spineEntity);\n    const spineAnimation = spineEntity.getComponent(SpineAnimation);\n    spineAnimation.state.setAnimation(0, \"02_walk\", true);\n    spineAnimation.skeleton.setSkinByName('skin1');\n    spineAnimation.scale = 0.07;\n    \n    spineAnimation.addSeparateSlot('defult/head_hair');\n    spineAnimation.addSeparateSlot('defult/arm_rigth_weapon');\n    spineAnimation.addSeparateSlot('defult/Sleeveless_01');\n\n    const textures = [];\n    for (let i = 1; i < res.length; i += 1) {\n      textures.push(res[i]);\n    }\n    const info = {\n      '换头饰': 'hair_0',\n      '换衣服': 'clothes_0',\n      '换武器': 'weapon_0',\n    };\n  \n    const hatConfig = [];\n    const clothConfig = [];\n    const weaponConfig = [];\n    for (let i = 0; i < resource.length; i++) {\n      hatConfig.push(`hair_${i}`);\n      clothConfig.push(`clothes_${i}`);\n      weaponConfig.push(`weapon_${i}`);\n    }\n    gui.add(info, '换头饰', hatConfig).onChange((v) => {\n      changeSlotTexture(v, textures, spineAnimation);\n    });\n    gui.add(info, '换衣服', clothConfig).onChange((v) => {\n      changeSlotTexture(v, textures, spineAnimation);\n    });\n    gui.add(info, '换武器', weaponConfig).onChange((v) => {\n      changeSlotTexture(v, textures, spineAnimation);\n    });\n  });\n\nengine.run();\n\nfunction generateSkinResource(): LoadItem[] {\n  const skinImgs = [\n    'https://gw.alicdn.com/imgextra/i4/O1CN01NVzIQ61Hf7DT0jDWS_!!6000000000784-2-tps-802-256.png',\n    'https://gw.alicdn.com/imgextra/i3/O1CN01g3HnB21FPQPnjavP3_!!6000000000479-2-tps-802-256.png',\n    'https://gw.alicdn.com/imgextra/i1/O1CN01CvmDQl1gRFcWeh3Na_!!6000000004138-2-tps-802-256.png',\n    'https://gw.alicdn.com/imgextra/i3/O1CN01BviZcq1Rc2iTh127L_!!6000000002131-2-tps-802-256.png',\n    'https://gw.alicdn.com/imgextra/i3/O1CN01mkkLpR1ihrDHyYr1H_!!6000000004445-2-tps-802-256.png',\n    'https://gw.alicdn.com/imgextra/i2/O1CN019ENsCO2992jTG9RGD_!!6000000008024-2-tps-802-256.png',\n    'https://gw.alicdn.com/imgextra/i4/O1CN01fzyJFg1cNoBGRLSCI_!!6000000003589-2-tps-802-256.png',\n    'https://gw.alicdn.com/imgextra/i4/O1CN01duImZL1J8iQk2YzEj_!!6000000000984-2-tps-802-256.png',\n    'https://gw.alicdn.com/imgextra/i2/O1CN01b23DDj1QD1SoNL7ua_!!6000000001941-2-tps-802-256.png',\n    'https://gw.alicdn.com/imgextra/i1/O1CN01powK3y29HHrZCBnbg_!!6000000008042-2-tps-802-256.png',\n    'https://gw.alicdn.com/imgextra/i1/O1CN01n7R3dE1IRfCVUgvhE_!!6000000000890-2-tps-802-256.png',\n    'https://gw.alicdn.com/imgextra/i3/O1CN01t0nsyV24AoBFhIfyZ_!!6000000007351-2-tps-802-256.png',\n    'https://gw.alicdn.com/imgextra/i4/O1CN01mYwBUD1eBYp2rE0qV_!!6000000003833-2-tps-802-256.png',\n    'https://gw.alicdn.com/imgextra/i1/O1CN01ks7zZs1mbgKwBjlFS_!!6000000004973-2-tps-802-256.png',\n    'https://gw.alicdn.com/imgextra/i3/O1CN01mgFHl5262gO0L0JeR_!!6000000007604-2-tps-802-256.png',\n    'https://gw.alicdn.com/imgextra/i1/O1CN01SJbFkU1udWrRhXPbd_!!6000000006060-2-tps-802-256.png',\n    'https://gw.alicdn.com/imgextra/i3/O1CN01VGL8pe26qbYegHClp_!!6000000007713-2-tps-802-256.png',\n    'https://gw.alicdn.com/imgextra/i2/O1CN01EeZs6N1auCy4QbXiY_!!6000000003389-2-tps-802-256.png',\n    'https://gw.alicdn.com/imgextra/i3/O1CN01DOfF5J1UTkOMHSnwV_!!6000000002519-2-tps-802-256.png',\n    'https://gw.alicdn.com/imgextra/i1/O1CN01iWGD1h1G0ytSTLs67_!!6000000000561-2-tps-802-256.png',\n    'https://gw.alicdn.com/imgextra/i1/O1CN01xjhSTG245JQVrtEhL_!!6000000007339-2-tps-802-256.png',\n    'https://gw.alicdn.com/imgextra/i3/O1CN01NJAp7c22RdV8PC1Dq_!!6000000007117-2-tps-802-256.png',\n    'https://gw.alicdn.com/imgextra/i1/O1CN01A2Mdh01INXdP46W6B_!!6000000000881-2-tps-802-256.png',\n    'https://gw.alicdn.com/imgextra/i3/O1CN01AqHn4524RIRMTuuNH_!!6000000007387-2-tps-802-256.png',\n    'https://gw.alicdn.com/imgextra/i4/O1CN01yU8Z771SPVUUS0Die_!!6000000002239-2-tps-802-256.png',\n    'https://gw.alicdn.com/imgextra/i3/O1CN01orLkIg1JOkIFur5Fj_!!6000000001019-2-tps-802-256.png',\n    'https://gw.alicdn.com/imgextra/i3/O1CN01jRRXrV1b4HgOXGqov_!!6000000003411-2-tps-802-256.png',\n    'https://gw.alicdn.com/imgextra/i2/O1CN01XOchrA1Mh0wFgddGl_!!6000000001465-2-tps-802-256.png',\n    'https://gw.alicdn.com/imgextra/i2/O1CN01zPPHrD1pIOVHtvDqD_!!6000000005337-2-tps-802-256.png',\n  ];\n  return skinImgs.map(item => {\n    return {\n      type: AssetType.Texture2D,\n      url: item,\n    };\n  });\n}\n\nfunction changeSlotTexture(selectItem, textures, spineAnimation) {\n  const slotNameMap = {\n    hair: 'defult/head_hair',\n    weapon: 'defult/arm_rigth_weapon',\n    clothes: 'defult/Sleeveless_01',\n  };\n  const slotKey = selectItem.split('_')[0];\n  const slotName = slotNameMap[slotKey];\n  const index = selectItem.split('_')[1];\n  spineAnimation.hackSeparateSlotTexture(slotName, textures[index]);\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Spine Hack Slot Texture\n * @category 2D\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Camera<span class=\"token punctuation\">,</span> Logger<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> WebGLEngine<span class=\"token punctuation\">,</span> Entity<span class=\"token punctuation\">,</span> AssetType<span class=\"token punctuation\">,</span> LoadItem <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> SpineAnimation <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/spine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n\nLogger<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> resource <span class=\"token operator\">=</span> <span class=\"token function\">generateSkinResource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> spineResource <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  urls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'https://gw.alipayobjects.com/os/OasisHub/e675c9e1-2b19-4940-b8ed-474792e613d7/1629603245094.json'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://gw.alipayobjects.com/os/OasisHub/994dfadc-c498-4210-b9ba-0c3deed61fc5/1629603245095.atlas'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://gw.alipayobjects.com/zos/OasisHub/b52768b0-0374-4c64-a1bd-763b1a37ee5f/1629603245095.png'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  type<span class=\"token operator\">:</span> <span class=\"token string\">\"spine\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nresource<span class=\"token punctuation\">.</span><span class=\"token function\">unshift</span><span class=\"token punctuation\">(</span>spineResource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>resource<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> spineEntity <span class=\"token operator\">=</span> res<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">as</span> Entity<span class=\"token punctuation\">;</span>\n    spineEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>spineEntity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> spineAnimation <span class=\"token operator\">=</span> spineEntity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>SpineAnimation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    spineAnimation<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span><span class=\"token function\">setAnimation</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"02_walk\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    spineAnimation<span class=\"token punctuation\">.</span>skeleton<span class=\"token punctuation\">.</span><span class=\"token function\">setSkinByName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'skin1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    spineAnimation<span class=\"token punctuation\">.</span>scale <span class=\"token operator\">=</span> <span class=\"token number\">0.07</span><span class=\"token punctuation\">;</span>\n    \n    spineAnimation<span class=\"token punctuation\">.</span><span class=\"token function\">addSeparateSlot</span><span class=\"token punctuation\">(</span><span class=\"token string\">'defult/head_hair'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    spineAnimation<span class=\"token punctuation\">.</span><span class=\"token function\">addSeparateSlot</span><span class=\"token punctuation\">(</span><span class=\"token string\">'defult/arm_rigth_weapon'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    spineAnimation<span class=\"token punctuation\">.</span><span class=\"token function\">addSeparateSlot</span><span class=\"token punctuation\">(</span><span class=\"token string\">'defult/Sleeveless_01'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> textures <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> res<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      textures<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">const</span> info <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">'换头饰'</span><span class=\"token operator\">:</span> <span class=\"token string\">'hair_0'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'换衣服'</span><span class=\"token operator\">:</span> <span class=\"token string\">'clothes_0'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'换武器'</span><span class=\"token operator\">:</span> <span class=\"token string\">'weapon_0'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  \n    <span class=\"token keyword\">const</span> hatConfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> clothConfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> weaponConfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> resource<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      hatConfig<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">hair_</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>i<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      clothConfig<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">clothes_</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>i<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      weaponConfig<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">weapon_</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>i<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">,</span> <span class=\"token string\">'换头饰'</span><span class=\"token punctuation\">,</span> hatConfig<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">changeSlotTexture</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> textures<span class=\"token punctuation\">,</span> spineAnimation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">,</span> <span class=\"token string\">'换衣服'</span><span class=\"token punctuation\">,</span> clothConfig<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">changeSlotTexture</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> textures<span class=\"token punctuation\">,</span> spineAnimation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">,</span> <span class=\"token string\">'换武器'</span><span class=\"token punctuation\">,</span> weaponConfig<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">changeSlotTexture</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> textures<span class=\"token punctuation\">,</span> spineAnimation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">generateSkinResource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> LoadItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> skinImgs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'https://gw.alicdn.com/imgextra/i4/O1CN01NVzIQ61Hf7DT0jDWS_!!6000000000784-2-tps-802-256.png'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://gw.alicdn.com/imgextra/i3/O1CN01g3HnB21FPQPnjavP3_!!6000000000479-2-tps-802-256.png'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://gw.alicdn.com/imgextra/i1/O1CN01CvmDQl1gRFcWeh3Na_!!6000000004138-2-tps-802-256.png'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://gw.alicdn.com/imgextra/i3/O1CN01BviZcq1Rc2iTh127L_!!6000000002131-2-tps-802-256.png'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://gw.alicdn.com/imgextra/i3/O1CN01mkkLpR1ihrDHyYr1H_!!6000000004445-2-tps-802-256.png'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://gw.alicdn.com/imgextra/i2/O1CN019ENsCO2992jTG9RGD_!!6000000008024-2-tps-802-256.png'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://gw.alicdn.com/imgextra/i4/O1CN01fzyJFg1cNoBGRLSCI_!!6000000003589-2-tps-802-256.png'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://gw.alicdn.com/imgextra/i4/O1CN01duImZL1J8iQk2YzEj_!!6000000000984-2-tps-802-256.png'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://gw.alicdn.com/imgextra/i2/O1CN01b23DDj1QD1SoNL7ua_!!6000000001941-2-tps-802-256.png'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://gw.alicdn.com/imgextra/i1/O1CN01powK3y29HHrZCBnbg_!!6000000008042-2-tps-802-256.png'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://gw.alicdn.com/imgextra/i1/O1CN01n7R3dE1IRfCVUgvhE_!!6000000000890-2-tps-802-256.png'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://gw.alicdn.com/imgextra/i3/O1CN01t0nsyV24AoBFhIfyZ_!!6000000007351-2-tps-802-256.png'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://gw.alicdn.com/imgextra/i4/O1CN01mYwBUD1eBYp2rE0qV_!!6000000003833-2-tps-802-256.png'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://gw.alicdn.com/imgextra/i1/O1CN01ks7zZs1mbgKwBjlFS_!!6000000004973-2-tps-802-256.png'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://gw.alicdn.com/imgextra/i3/O1CN01mgFHl5262gO0L0JeR_!!6000000007604-2-tps-802-256.png'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://gw.alicdn.com/imgextra/i1/O1CN01SJbFkU1udWrRhXPbd_!!6000000006060-2-tps-802-256.png'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://gw.alicdn.com/imgextra/i3/O1CN01VGL8pe26qbYegHClp_!!6000000007713-2-tps-802-256.png'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://gw.alicdn.com/imgextra/i2/O1CN01EeZs6N1auCy4QbXiY_!!6000000003389-2-tps-802-256.png'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://gw.alicdn.com/imgextra/i3/O1CN01DOfF5J1UTkOMHSnwV_!!6000000002519-2-tps-802-256.png'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://gw.alicdn.com/imgextra/i1/O1CN01iWGD1h1G0ytSTLs67_!!6000000000561-2-tps-802-256.png'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://gw.alicdn.com/imgextra/i1/O1CN01xjhSTG245JQVrtEhL_!!6000000007339-2-tps-802-256.png'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://gw.alicdn.com/imgextra/i3/O1CN01NJAp7c22RdV8PC1Dq_!!6000000007117-2-tps-802-256.png'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://gw.alicdn.com/imgextra/i1/O1CN01A2Mdh01INXdP46W6B_!!6000000000881-2-tps-802-256.png'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://gw.alicdn.com/imgextra/i3/O1CN01AqHn4524RIRMTuuNH_!!6000000007387-2-tps-802-256.png'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://gw.alicdn.com/imgextra/i4/O1CN01yU8Z771SPVUUS0Die_!!6000000002239-2-tps-802-256.png'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://gw.alicdn.com/imgextra/i3/O1CN01orLkIg1JOkIFur5Fj_!!6000000001019-2-tps-802-256.png'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://gw.alicdn.com/imgextra/i3/O1CN01jRRXrV1b4HgOXGqov_!!6000000003411-2-tps-802-256.png'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://gw.alicdn.com/imgextra/i2/O1CN01XOchrA1Mh0wFgddGl_!!6000000001465-2-tps-802-256.png'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'https://gw.alicdn.com/imgextra/i2/O1CN01zPPHrD1pIOVHtvDqD_!!6000000005337-2-tps-802-256.png'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> skinImgs<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D<span class=\"token punctuation\">,</span>\n      url<span class=\"token operator\">:</span> item<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">changeSlotTexture</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">selectItem<span class=\"token punctuation\">,</span> textures<span class=\"token punctuation\">,</span> spineAnimation</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> slotNameMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    hair<span class=\"token operator\">:</span> <span class=\"token string\">'defult/head_hair'</span><span class=\"token punctuation\">,</span>\n    weapon<span class=\"token operator\">:</span> <span class=\"token string\">'defult/arm_rigth_weapon'</span><span class=\"token punctuation\">,</span>\n    clothes<span class=\"token operator\">:</span> <span class=\"token string\">'defult/Sleeveless_01'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> slotKey <span class=\"token operator\">=</span> selectItem<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'_'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> slotName <span class=\"token operator\">=</span> slotNameMap<span class=\"token punctuation\">[</span>slotKey<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> index <span class=\"token operator\">=</span> selectItem<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'_'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  spineAnimation<span class=\"token punctuation\">.</span><span class=\"token function\">hackSeparateSlotTexture</span><span class=\"token punctuation\">(</span>slotName<span class=\"token punctuation\">,</span> textures<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@oasis-engine/spine\", \"dat.gui\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@oasis-engine/spine\"), require(\"dat.gui\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global.oasisSpine, global.dat);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, _spine, dat) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title Spine Change Attachment\n   * @category 2D\n   */\n  _oasisEngine.Logger.enable();\n\n  var gui = new dat.GUI();\n  var engine = new _oasisEngine.WebGLEngine('canvas');\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // camera\n\n  var cameraEntity = rootEntity.createChild('camera_node');\n  var camera = cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 0, 60);\n  engine.resourceManager.load({\n    urls: ['https://gw.alipayobjects.com/os/OasisHub/01c23386-ae6d-41b3-ab51-08b023a0dc3f/1629864253199.json', 'https://gw.alipayobjects.com/os/OasisHub/27b76dd2-01b3-4282-83e8-17be20b910ae/1629864253200.atlas', 'https://gw.alipayobjects.com/zos/OasisHub/99bc4468-02c6-4f35-8fef-ac5a711fc641/1629864253200.png'],\n    type: 'spine'\n  }).then(function (spineEntity) {\n    rootEntity.addChild(spineEntity);\n    var spineAnimation = spineEntity.getComponent(_spine.SpineAnimation);\n    var skeleton = spineAnimation.skeleton,\n        state = spineAnimation.state,\n        skeletonData = spineAnimation.skeletonData;\n    spineEntity.transform.setPosition(0, -10, 0);\n    state.setAnimation(0, 'sneering', true);\n    skeleton.setSkinByName('fullskin/0101'); // 1. Set the active skin\n\n    skeleton.setSlotsToSetupPose(); // 2. Use setup pose to set base attachments.\n\n    state.apply(skeleton);\n    spineAnimation.scale = 0.05;\n    var slotName = 'fBody';\n    var info = {\n      '更换衣服部件': 'fullskin/0101'\n    };\n    gui.add(info, '更换衣服部件', ['fullskin/0101', 'fullskin/autumn', 'fullskin/carnival', 'fullskin/fishing', 'fullskin/football', 'fullskin/newyear', 'fullskin/painter', 'fullskin/snowman']).onChange(function (skinName) {\n      var currentSkin = skeleton.skin;\n      var slotIndex = skeleton.findSlotIndex(slotName);\n      var changeSkin = skeletonData.findSkin(skinName);\n      var changeAttachment = changeSkin.getAttachment(slotIndex, slotName);\n\n      if (changeAttachment) {\n        currentSkin.removeAttachment(slotIndex, slotName);\n        currentSkin.setAttachment(slotIndex, slotName, changeAttachment);\n      }\n    });\n  });\n  engine.run();\n});"},"name":"spine-change-attachment","title":"Spine Change Attachment","category":"2D","id":"19d30e8d-e5e7-554e-be89-04d65775f63a","sourceCode":"/**\n * @title Spine Change Attachment\n * @category 2D\n */\nimport { Camera, Logger, Vector3, WebGLEngine, Entity } from 'oasis-engine';\nimport { SpineAnimation } from '@oasis-engine/spine';\nimport * as dat from \"dat.gui\";\n\nLogger.enable();\n\nconst gui = new dat.GUI();\n\nconst engine = new WebGLEngine('canvas');\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// camera\nconst cameraEntity = rootEntity.createChild('camera_node');\nconst camera = cameraEntity.addComponent(Camera);\ncameraEntity.transform.position = new Vector3(0, 0, 60);\n\nengine.resourceManager\n  .load({\n    urls: [ \n      'https://gw.alipayobjects.com/os/OasisHub/01c23386-ae6d-41b3-ab51-08b023a0dc3f/1629864253199.json',\n      'https://gw.alipayobjects.com/os/OasisHub/27b76dd2-01b3-4282-83e8-17be20b910ae/1629864253200.atlas',\n      'https://gw.alipayobjects.com/zos/OasisHub/99bc4468-02c6-4f35-8fef-ac5a711fc641/1629864253200.png',\n    ],\n    type: 'spine'\n  })\n  .then((spineEntity: Entity) => {\n    rootEntity.addChild(spineEntity);\n    const spineAnimation = spineEntity.getComponent(SpineAnimation);\n    const { skeleton, state, skeletonData } = spineAnimation;\n    spineEntity.transform.setPosition(0, -10, 0);\n    state.setAnimation(0, 'sneering', true);\n    skeleton.setSkinByName('fullskin/0101'); // 1. Set the active skin\n    skeleton.setSlotsToSetupPose(); // 2. Use setup pose to set base attachments.\n    state.apply(skeleton);\n    spineAnimation.scale = 0.05;\n    const slotName = 'fBody';\n    const info = {\n      '更换衣服部件': 'fullskin/0101'\n    }\n    gui.add(info, '更换衣服部件', [\n      'fullskin/0101',\n      'fullskin/autumn',\n      'fullskin/carnival',\n      'fullskin/fishing',\n      'fullskin/football',\n      'fullskin/newyear',\n      'fullskin/painter',\n      'fullskin/snowman',\n    ]).onChange(skinName => {\n      const currentSkin = skeleton.skin;\n      const slotIndex = skeleton.findSlotIndex(slotName);\n      const changeSkin = skeletonData.findSkin(skinName);\n      const changeAttachment = changeSkin.getAttachment(slotIndex, slotName);\n      if (changeAttachment) {\n        currentSkin.removeAttachment(slotIndex, slotName);\n        currentSkin.setAttachment(slotIndex, slotName, changeAttachment);\n      }\n    });\n  });\n\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Spine Change Attachment\n * @category 2D\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Camera<span class=\"token punctuation\">,</span> Logger<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> WebGLEngine<span class=\"token punctuation\">,</span> Entity <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'oasis-engine'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> SpineAnimation <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@oasis-engine/spine'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n\nLogger<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">'camera_node'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> camera <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    urls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> \n      <span class=\"token string\">'https://gw.alipayobjects.com/os/OasisHub/01c23386-ae6d-41b3-ab51-08b023a0dc3f/1629864253199.json'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'https://gw.alipayobjects.com/os/OasisHub/27b76dd2-01b3-4282-83e8-17be20b910ae/1629864253200.atlas'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'https://gw.alipayobjects.com/zos/OasisHub/99bc4468-02c6-4f35-8fef-ac5a711fc641/1629864253200.png'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> <span class=\"token string\">'spine'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">spineEntity<span class=\"token operator\">:</span> Entity</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>spineEntity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> spineAnimation <span class=\"token operator\">=</span> spineEntity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>SpineAnimation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> skeleton<span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">,</span> skeletonData <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> spineAnimation<span class=\"token punctuation\">;</span>\n    spineEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    state<span class=\"token punctuation\">.</span><span class=\"token function\">setAnimation</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sneering'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    skeleton<span class=\"token punctuation\">.</span><span class=\"token function\">setSkinByName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fullskin/0101'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1. Set the active skin</span>\n    skeleton<span class=\"token punctuation\">.</span><span class=\"token function\">setSlotsToSetupPose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2. Use setup pose to set base attachments.</span>\n    <span class=\"token function\">state</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span>skeleton<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    spineAnimation<span class=\"token punctuation\">.</span>scale <span class=\"token operator\">=</span> <span class=\"token number\">0.05</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> slotName <span class=\"token operator\">=</span> <span class=\"token string\">'fBody'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> info <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">'更换衣服部件'</span><span class=\"token operator\">:</span> <span class=\"token string\">'fullskin/0101'</span>\n    <span class=\"token punctuation\">}</span>\n    gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">,</span> <span class=\"token string\">'更换衣服部件'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">'fullskin/0101'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'fullskin/autumn'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'fullskin/carnival'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'fullskin/fishing'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'fullskin/football'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'fullskin/newyear'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'fullskin/painter'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'fullskin/snowman'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">skinName</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> currentSkin <span class=\"token operator\">=</span> skeleton<span class=\"token punctuation\">.</span>skin<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> slotIndex <span class=\"token operator\">=</span> skeleton<span class=\"token punctuation\">.</span><span class=\"token function\">findSlotIndex</span><span class=\"token punctuation\">(</span>slotName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> changeSkin <span class=\"token operator\">=</span> skeletonData<span class=\"token punctuation\">.</span><span class=\"token function\">findSkin</span><span class=\"token punctuation\">(</span>skinName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> changeAttachment <span class=\"token operator\">=</span> changeSkin<span class=\"token punctuation\">.</span><span class=\"token function\">getAttachment</span><span class=\"token punctuation\">(</span>slotIndex<span class=\"token punctuation\">,</span> slotName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>changeAttachment<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        currentSkin<span class=\"token punctuation\">.</span><span class=\"token function\">removeAttachment</span><span class=\"token punctuation\">(</span>slotIndex<span class=\"token punctuation\">,</span> slotName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        currentSkin<span class=\"token punctuation\">.</span><span class=\"token function\">setAttachment</span><span class=\"token punctuation\">(</span>slotIndex<span class=\"token punctuation\">,</span> slotName<span class=\"token punctuation\">,</span> changeAttachment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title Sprite Flip\n   * @category 2D\n   */\n  // Create engine object.\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize(); // Create root entity.\n\n  var rootEntity = engine.sceneManager.activeScene.createRootEntity(); // Create camera.\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 0, 50);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl);\n  engine.resourceManager.load({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*KjnzTpE8LdAAAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }).then(function (texture) {\n    // Create origin sprite entity.\n    var spriteEntity = new _oasisEngine.Entity(engine, \"spriteFlip\");\n    var spriteRenderer = spriteEntity.addComponent(_oasisEngine.SpriteRenderer);\n    spriteRenderer.sprite = new _oasisEngine.Sprite(engine, texture); // Display normal.\n\n    addFlipEntity(spriteEntity, -15, false, false); // Display flip x.\n\n    addFlipEntity(spriteEntity.clone(), -5, true, false); // Display flip y.\n\n    addFlipEntity(spriteEntity.clone(), 5, false, true); // Display flip x and y.\n\n    addFlipEntity(spriteEntity.clone(), 15, true, true);\n  });\n  engine.run();\n  /**\n   * Add flip entity.\n   */\n\n  function addFlipEntity(entity, posX, flipX, flipY) {\n    rootEntity.addChild(entity);\n    entity.transform.setPosition(posX, 0, 0);\n    var flipRenderer = entity.getComponent(_oasisEngine.SpriteRenderer);\n    flipRenderer.flipX = flipX;\n    flipRenderer.flipY = flipY;\n  }\n});"},"name":"sprite-flip","title":"Sprite Flip","category":"2D","id":"f268e663-f3b2-564b-ab41-6eeae6b5f261","sourceCode":"/**\n * @title Sprite Flip\n * @category 2D\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport { AssetType, Camera, Entity, Sprite, SpriteRenderer, Texture2D, WebGLEngine } from \"oasis-engine\";\n\n// Create engine object.\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\n// Create root entity.\nconst rootEntity = engine.sceneManager.activeScene.createRootEntity();\n\n// Create camera.\nconst cameraEntity = rootEntity.createChild(\"Camera\");\ncameraEntity.transform.setPosition(0, 0, 50);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\nengine.resourceManager\n  .load<Texture2D>({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*KjnzTpE8LdAAAAAAAAAAAAAAARQnAQ\",\n    type: AssetType.Texture2D\n  })\n  .then((texture) => {\n    // Create origin sprite entity.\n    const spriteEntity = new Entity(engine, \"spriteFlip\");\n    const spriteRenderer = spriteEntity.addComponent(SpriteRenderer);\n    spriteRenderer.sprite = new Sprite(engine, texture);\n\n    // Display normal.\n    addFlipEntity(spriteEntity, -15, false, false);\n    // Display flip x.\n    addFlipEntity(spriteEntity.clone(), -5, true, false);\n    // Display flip y.\n    addFlipEntity(spriteEntity.clone(), 5, false, true);\n    // Display flip x and y.\n    addFlipEntity(spriteEntity.clone(), 15, true, true);\n  });\n\nengine.run();\n\n/**\n * Add flip entity.\n */\nfunction addFlipEntity(entity: Entity, posX: number, flipX: boolean, flipY: boolean): void {\n  rootEntity.addChild(entity);\n  entity.transform.setPosition(posX, 0, 0);\n  const flipRenderer = entity.getComponent(SpriteRenderer);\n  flipRenderer.flipX = flipX;\n  flipRenderer.flipY = flipY;\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Sprite Flip\n * @category 2D\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AssetType<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> Entity<span class=\"token punctuation\">,</span> Sprite<span class=\"token punctuation\">,</span> SpriteRenderer<span class=\"token punctuation\">,</span> Texture2D<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine object.</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create root entity.</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera.</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*KjnzTpE8LdAAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Create origin sprite entity.</span>\n    <span class=\"token keyword\">const</span> spriteEntity <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Entity</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token string\">\"spriteFlip\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> spriteRenderer <span class=\"token operator\">=</span> spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    spriteRenderer<span class=\"token punctuation\">.</span>sprite <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Display normal.</span>\n    <span class=\"token function\">addFlipEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display flip x.</span>\n    <span class=\"token function\">addFlipEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display flip y.</span>\n    <span class=\"token function\">addFlipEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display flip x and y.</span>\n    <span class=\"token function\">addFlipEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Add flip entity.\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">addFlipEntity</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entity<span class=\"token operator\">:</span> Entity<span class=\"token punctuation\">,</span> posX<span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span> flipX<span class=\"token operator\">:</span> boolean<span class=\"token punctuation\">,</span> flipY<span class=\"token operator\">:</span> boolean</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>entity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>posX<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> flipRenderer <span class=\"token operator\">=</span> entity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  flipRenderer<span class=\"token punctuation\">.</span>flipX <span class=\"token operator\">=</span> flipX<span class=\"token punctuation\">;</span>\n  flipRenderer<span class=\"token punctuation\">.</span>flipY <span class=\"token operator\">=</span> flipY<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  // Create engine.\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize(); // Create root entity.\n\n  var rootEntity = engine.sceneManager.activeScene.createRootEntity(); // Create camera.\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 0, 50);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl); // Create sprite and mask.\n\n  engine.resourceManager.load([{\n    // \bSprite texture\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*rgNGR4Vb7lQAAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }, {\n    // Mask texture\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*qyhFT5Un5AgAAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }, {\n    // Mask texture\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*pgrpQIneqSUAAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }]).then(function (textures) {\n    var pos = new _oasisEngine.Vector3();\n    var scale = new _oasisEngine.Vector3(); // Create sprites.\n\n    var sprite = new _oasisEngine.Sprite(engine, textures[0]);\n    var maskSprite0 = new _oasisEngine.Sprite(engine, textures[1]);\n    var maksSprite1 = new _oasisEngine.Sprite(engine, textures[2]); // Show inside mask.\n\n    pos.setValue(-5, 0, 0);\n    scale.setValue(2, 2, 2);\n    addSpriteRenderer(pos, scale, sprite, _oasisEngine.SpriteMaskInteraction.VisibleInsideMask, _oasisEngine.SpriteMaskLayer.Layer0);\n    addMask(pos, maskSprite0, _oasisEngine.SpriteMaskLayer.Layer0, ScaleScript); // Show outside mask.\n\n    pos.setValue(5, 0, 0);\n    scale.setValue(2, 2, 2);\n    addSpriteRenderer(pos, scale, sprite, _oasisEngine.SpriteMaskInteraction.VisibleOutsideMask, _oasisEngine.SpriteMaskLayer.Layer1);\n    addMask(pos, maksSprite1, _oasisEngine.SpriteMaskLayer.Layer1, RotationScript);\n  });\n  engine.run();\n  /**\n   * Add sprite renderer and set mask interaction and layer.\n   */\n\n  function addSpriteRenderer(pos, scale, sprite, maskInteraction, maskLayer) {\n    var entity = rootEntity.createChild(\"Sprite\");\n    var renderer = entity.addComponent(_oasisEngine.SpriteRenderer);\n    var transform = entity.transform;\n    transform.position = pos;\n    transform.scale = scale;\n    renderer.sprite = sprite;\n    renderer.maskInteraction = maskInteraction;\n    renderer.maskLayer = maskLayer;\n  }\n  /**\n   * Add sprite mask and set influence layers, include mask animation script.\n   */\n\n\n  function addMask(pos, sprite, influenceLayers, scriptType) {\n    var entity = rootEntity.createChild(\"Mask\");\n    var mask = entity.addComponent(_oasisEngine.SpriteMask);\n    entity.addComponent(scriptType);\n    entity.transform.position = pos;\n    mask.sprite = sprite;\n    mask.influenceLayers = influenceLayers;\n  }\n\n  var ScaleScript = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(ScaleScript, _Script);\n\n    function ScaleScript() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _Script.call.apply(_Script, [this].concat(args)) || this;\n      _this._scaleSpeed = 0.01;\n      return _this;\n    }\n\n    var _proto = ScaleScript.prototype;\n\n    /**\n     * The main loop, called frame by frame.\n     * @param deltaTime - The deltaTime when the script update.\n     */\n    _proto.onUpdate = function onUpdate(deltaTime) {\n      var transform = this.entity.transform;\n      var curScale = transform.scale.x;\n\n      if (curScale <= 0 || curScale >= 2) {\n        this._scaleSpeed *= -1;\n      }\n\n      curScale += this._scaleSpeed;\n      transform.setScale(curScale, curScale, curScale);\n    };\n\n    return ScaleScript;\n  }(_oasisEngine.Script);\n\n  var RotationScript = /*#__PURE__*/function (_Script2) {\n    _inheritsLoose(RotationScript, _Script2);\n\n    function RotationScript() {\n      var _this2;\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this2 = _Script2.call.apply(_Script2, [this].concat(args)) || this;\n      _this2._rotationSpeed = -0.5;\n      return _this2;\n    }\n\n    var _proto2 = RotationScript.prototype;\n\n    /**\n     * The main loop, called frame by frame.\n     * @param deltaTime - The deltaTime when the script update.\n     */\n    _proto2.onUpdate = function onUpdate(deltaTime) {\n      this.entity.transform.rotate(0, 0, this._rotationSpeed);\n    };\n\n    return RotationScript;\n  }(_oasisEngine.Script);\n});"},"name":"sprite-mask","title":"Sprite Mask","category":"2D","id":"9340a92d-4651-542d-940b-b202985df1a3","sourceCode":"/**\n * @title Sprite Mask\n * @category 2D\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport {\n  AssetType,\n  Camera,\n  Entity,\n  Script,\n  Sprite,\n  SpriteMask,\n  SpriteMaskInteraction,\n  SpriteMaskLayer,\n  SpriteRenderer,\n  Texture2D,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\n\n// Create engine.\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\n// Create root entity.\nconst rootEntity = engine.sceneManager.activeScene.createRootEntity();\n\n// Create camera.\nconst cameraEntity = rootEntity.createChild(\"Camera\");\ncameraEntity.transform.setPosition(0, 0, 50);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\n// Create sprite and mask.\nengine.resourceManager\n  .load([\n    {\n      // \bSprite texture\n      url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*rgNGR4Vb7lQAAAAAAAAAAAAAARQnAQ\",\n      type: AssetType.Texture2D\n    },\n    {\n      // Mask texture\n      url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*qyhFT5Un5AgAAAAAAAAAAAAAARQnAQ\",\n      type: AssetType.Texture2D\n    },\n    {\n      // Mask texture\n      url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*pgrpQIneqSUAAAAAAAAAAAAAARQnAQ\",\n      type: AssetType.Texture2D\n    }\n  ])\n  .then((textures: Texture2D[]) => {\n    const pos = new Vector3();\n    const scale = new Vector3();\n\n    // Create sprites.\n    const sprite = new Sprite(engine, textures[0]);\n    const maskSprite0 = new Sprite(engine, textures[1]);\n    const maksSprite1 = new Sprite(engine, textures[2]);\n\n    // Show inside mask.\n    pos.setValue(-5, 0, 0);\n    scale.setValue(2, 2, 2);\n    addSpriteRenderer(pos, scale, sprite, SpriteMaskInteraction.VisibleInsideMask, SpriteMaskLayer.Layer0);\n    addMask(pos, maskSprite0, SpriteMaskLayer.Layer0, ScaleScript);\n\n    // Show outside mask.\n    pos.setValue(5, 0, 0);\n    scale.setValue(2, 2, 2);\n    addSpriteRenderer(pos, scale, sprite, SpriteMaskInteraction.VisibleOutsideMask, SpriteMaskLayer.Layer1);\n    addMask(pos, maksSprite1, SpriteMaskLayer.Layer1, RotationScript);\n  });\n\nengine.run();\n\n/**\n * Add sprite renderer and set mask interaction and layer.\n */\nfunction addSpriteRenderer(\n  pos: Vector3,\n  scale: Vector3,\n  sprite: Sprite,\n  maskInteraction: SpriteMaskInteraction,\n  maskLayer: number\n): void {\n  const entity = rootEntity.createChild(\"Sprite\");\n  const renderer = entity.addComponent(SpriteRenderer);\n  const { transform } = entity;\n\n  transform.position = pos;\n  transform.scale = scale;\n  renderer.sprite = sprite;\n  renderer.maskInteraction = maskInteraction;\n  renderer.maskLayer = maskLayer;\n}\n\n/**\n * Add sprite mask and set influence layers, include mask animation script.\n */\nfunction addMask<T extends Script>(\n  pos: Vector3,\n  sprite: Sprite,\n  influenceLayers: number,\n  scriptType: new (entity: Entity) => T\n): void {\n  const entity = rootEntity.createChild(\"Mask\");\n  const mask = entity.addComponent(SpriteMask);\n\n  entity.addComponent(scriptType);\n  entity.transform.position = pos;\n  mask.sprite = sprite;\n  mask.influenceLayers = influenceLayers;\n}\n\nclass ScaleScript extends Script {\n  private _scaleSpeed: number = 0.01;\n\n  /**\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */\n  onUpdate(deltaTime: number): void {\n    const { transform } = this.entity;\n    let curScale = transform.scale.x;\n\n    if (curScale <= 0 || curScale >= 2) {\n      this._scaleSpeed *= -1;\n    }\n\n    curScale += this._scaleSpeed;\n    transform.setScale(curScale, curScale, curScale);\n  }\n}\n\nclass RotationScript extends Script {\n  private _rotationSpeed: number = -0.5;\n\n  /**\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */\n  onUpdate(deltaTime: number): void {\n    this.entity.transform.rotate(0, 0, this._rotationSpeed);\n  }\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Sprite Mask\n * @category 2D\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  Entity<span class=\"token punctuation\">,</span>\n  Script<span class=\"token punctuation\">,</span>\n  Sprite<span class=\"token punctuation\">,</span>\n  SpriteMask<span class=\"token punctuation\">,</span>\n  SpriteMaskInteraction<span class=\"token punctuation\">,</span>\n  SpriteMaskLayer<span class=\"token punctuation\">,</span>\n  SpriteRenderer<span class=\"token punctuation\">,</span>\n  Texture2D<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine.</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create root entity.</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera.</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create sprite and mask.</span>\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// \bSprite texture</span>\n      url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*rgNGR4Vb7lQAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Mask texture</span>\n      url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*qyhFT5Un5AgAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Mask texture</span>\n      url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*pgrpQIneqSUAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">textures<span class=\"token operator\">:</span> Texture2D<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> pos <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> scale <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Create sprites.</span>\n    <span class=\"token keyword\">const</span> sprite <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> textures<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> maskSprite0 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> textures<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> maksSprite1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> textures<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Show inside mask.</span>\n    pos<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    scale<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addSpriteRenderer</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">,</span> scale<span class=\"token punctuation\">,</span> sprite<span class=\"token punctuation\">,</span> SpriteMaskInteraction<span class=\"token punctuation\">.</span>VisibleInsideMask<span class=\"token punctuation\">,</span> SpriteMaskLayer<span class=\"token punctuation\">.</span>Layer0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addMask</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">,</span> maskSprite0<span class=\"token punctuation\">,</span> SpriteMaskLayer<span class=\"token punctuation\">.</span>Layer0<span class=\"token punctuation\">,</span> ScaleScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Show outside mask.</span>\n    pos<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    scale<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addSpriteRenderer</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">,</span> scale<span class=\"token punctuation\">,</span> sprite<span class=\"token punctuation\">,</span> SpriteMaskInteraction<span class=\"token punctuation\">.</span>VisibleOutsideMask<span class=\"token punctuation\">,</span> SpriteMaskLayer<span class=\"token punctuation\">.</span>Layer1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addMask</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">,</span> maksSprite1<span class=\"token punctuation\">,</span> SpriteMaskLayer<span class=\"token punctuation\">.</span>Layer1<span class=\"token punctuation\">,</span> RotationScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Add sprite renderer and set mask interaction and layer.\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">addSpriteRenderer</span><span class=\"token punctuation\">(</span>\n  <span class=\"token parameter\">pos<span class=\"token operator\">:</span> Vector3<span class=\"token punctuation\">,</span>\n  scale<span class=\"token operator\">:</span> Vector3<span class=\"token punctuation\">,</span>\n  sprite<span class=\"token operator\">:</span> Sprite<span class=\"token punctuation\">,</span>\n  maskInteraction<span class=\"token operator\">:</span> SpriteMaskInteraction<span class=\"token punctuation\">,</span>\n  maskLayer<span class=\"token operator\">:</span> number</span>\n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> entity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sprite\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> renderer <span class=\"token operator\">=</span> entity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> transform <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> entity<span class=\"token punctuation\">;</span>\n\n  transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> pos<span class=\"token punctuation\">;</span>\n  transform<span class=\"token punctuation\">.</span>scale <span class=\"token operator\">=</span> scale<span class=\"token punctuation\">;</span>\n  renderer<span class=\"token punctuation\">.</span>sprite <span class=\"token operator\">=</span> sprite<span class=\"token punctuation\">;</span>\n  renderer<span class=\"token punctuation\">.</span>maskInteraction <span class=\"token operator\">=</span> maskInteraction<span class=\"token punctuation\">;</span>\n  renderer<span class=\"token punctuation\">.</span>maskLayer <span class=\"token operator\">=</span> maskLayer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * Add sprite mask and set influence layers, include mask animation script.\n */</span>\n<span class=\"token keyword\">function</span> addMask<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>\n  pos<span class=\"token operator\">:</span> Vector3<span class=\"token punctuation\">,</span>\n  sprite<span class=\"token operator\">:</span> Sprite<span class=\"token punctuation\">,</span>\n  influenceLayers<span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span>\n  scriptType<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">entity<span class=\"token operator\">:</span> Entity</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token constant\">T</span>\n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> entity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Mask\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> mask <span class=\"token operator\">=</span> entity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpriteMask<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  entity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>scriptType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> pos<span class=\"token punctuation\">;</span>\n  mask<span class=\"token punctuation\">.</span>sprite <span class=\"token operator\">=</span> sprite<span class=\"token punctuation\">;</span>\n  mask<span class=\"token punctuation\">.</span>influenceLayers <span class=\"token operator\">=</span> influenceLayers<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ScaleScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> _scaleSpeed<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/**\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */</span>\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span>deltaTime<span class=\"token operator\">:</span> number<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> transform <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> curScale <span class=\"token operator\">=</span> transform<span class=\"token punctuation\">.</span>scale<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>curScale <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> curScale <span class=\"token operator\">>=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scaleSpeed <span class=\"token operator\">*=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    curScale <span class=\"token operator\">+=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scaleSpeed<span class=\"token punctuation\">;</span>\n    transform<span class=\"token punctuation\">.</span><span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span>curScale<span class=\"token punctuation\">,</span> curScale<span class=\"token punctuation\">,</span> curScale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">RotationScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> _rotationSpeed<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/**\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */</span>\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span>deltaTime<span class=\"token operator\">:</span> number<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_rotationSpeed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title Sprite Color\n   * @category 2D\n   */\n  // Create engine object\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // Create camera\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 0, 50);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl);\n  engine.resourceManager.load({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*KjnzTpE8LdAAAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }).then(function (texture) {\n    // Create origin sprite entity.\n    var spriteEntity = new _oasisEngine.Entity(engine, \"spriteColor\");\n    var spriteRenderer = spriteEntity.addComponent(_oasisEngine.SpriteRenderer);\n    spriteRenderer.sprite = new _oasisEngine.Sprite(engine, texture);\n    var color = new _oasisEngine.Color(); // Display normal\n\n    addColorEntity(spriteEntity, -20, color.setValue(1, 1, 1, 1)); // Display red\n\n    addColorEntity(spriteEntity.clone(), -10, color.setValue(1, 0, 0, 1)); // Display green\n\n    addColorEntity(spriteEntity.clone(), 0, color.setValue(0, 1, 0, 1)); // Display blue\n\n    addColorEntity(spriteEntity.clone(), 10, color.setValue(0, 0, 1, 1)); // Display alpha\n\n    addColorEntity(spriteEntity.clone(), 20, color.setValue(1, 1, 1, 0.2));\n  });\n  engine.run();\n\n  function addColorEntity(entity, posX, color) {\n    rootEntity.addChild(entity);\n    entity.transform.setPosition(posX, 0, 0);\n    entity.getComponent(_oasisEngine.SpriteRenderer).color = color;\n  }\n});"},"name":"sprite-color","title":"Sprite Color","category":"2D","id":"3308e02a-c63d-551b-b2db-96d43d1f0c6a","sourceCode":"/**\n * @title Sprite Color\n * @category 2D\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport {\n  AssetType,\n  Camera,\n  Color,\n  Entity,\n  Sprite,\n  SpriteRenderer,\n  Texture2D,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\n\n// Create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// Create camera\nconst cameraEntity = rootEntity.createChild(\"Camera\");\ncameraEntity.transform.position = new Vector3(0, 0, 50);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\nengine.resourceManager\n  .load<Texture2D>({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*KjnzTpE8LdAAAAAAAAAAAAAAARQnAQ\",\n    type: AssetType.Texture2D\n  })\n  .then((texture) => {\n    // Create origin sprite entity.\n    const spriteEntity = new Entity(engine, \"spriteColor\");\n    const spriteRenderer = spriteEntity.addComponent(SpriteRenderer);\n    spriteRenderer.sprite = new Sprite(engine, texture);\n    const color = new Color();\n    // Display normal\n    addColorEntity(spriteEntity, -20, color.setValue(1, 1, 1, 1));\n    // Display red\n    addColorEntity(spriteEntity.clone(), -10, color.setValue(1, 0, 0, 1));\n    // Display green\n    addColorEntity(spriteEntity.clone(), 0, color.setValue(0, 1, 0, 1));\n    // Display blue\n    addColorEntity(spriteEntity.clone(), 10, color.setValue(0, 0, 1, 1));\n    // Display alpha\n    addColorEntity(spriteEntity.clone(), 20, color.setValue(1, 1, 1, 0.2));\n  });\n\nengine.run();\n\nfunction addColorEntity(entity: Entity, posX: number, color: Color): void {\n  rootEntity.addChild(entity);\n  entity.transform.setPosition(posX, 0, 0);\n  entity.getComponent(SpriteRenderer).color = color;\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Sprite Color\n * @category 2D\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  Color<span class=\"token punctuation\">,</span>\n  Entity<span class=\"token punctuation\">,</span>\n  Sprite<span class=\"token punctuation\">,</span>\n  SpriteRenderer<span class=\"token punctuation\">,</span>\n  Texture2D<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*KjnzTpE8LdAAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Create origin sprite entity.</span>\n    <span class=\"token keyword\">const</span> spriteEntity <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Entity</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token string\">\"spriteColor\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> spriteRenderer <span class=\"token operator\">=</span> spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    spriteRenderer<span class=\"token punctuation\">.</span>sprite <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> color <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display normal</span>\n    <span class=\"token function\">addColorEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display red</span>\n    <span class=\"token function\">addColorEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display green</span>\n    <span class=\"token function\">addColorEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display blue</span>\n    <span class=\"token function\">addColorEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display alpha</span>\n    <span class=\"token function\">addColorEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">addColorEntity</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entity<span class=\"token operator\">:</span> Entity<span class=\"token punctuation\">,</span> posX<span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span> color<span class=\"token operator\">:</span> Color</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>entity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>posX<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  entity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  init();\n\n  function init() {\n    // Create engine.\n    var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n    engine.canvas.resizeByClientSize(); // Create root entity.\n\n    var rootEntity = engine.sceneManager.activeScene.createRootEntity(); // Create camera.\n\n    var cameraEntity = rootEntity.createChild(\"Camera\");\n    cameraEntity.transform.setPosition(0, 0, 12);\n    cameraEntity.addComponent(_oasisEngine.Camera);\n    cameraEntity.addComponent(_controls.OrbitControl);\n    engine.resourceManager.load([{\n      // \bSprite texture\n      url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*L2GNRLWn9EAAAAAAAAAAAAAAARQnAQ\",\n      type: _oasisEngine.AssetType.Texture2D\n    }, {\n      // Noise texture\n      url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*j2xJQL0e6J4AAAAAAAAAAAAAARQnAQ\",\n      type: _oasisEngine.AssetType.Texture2D\n    }, {\n      // Ramp texture\n      url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*ygj3S7sm4hQAAAAAAAAAAAAAARQnAQ\",\n      type: _oasisEngine.AssetType.Texture2D\n    }]).then(function (textures) {\n      // Create origin sprite entity.\n      var spriteEntity = rootEntity.createChild(\"DissolveSprite\");\n      var material = addCustomMaterial(engine, textures[1], textures[2]);\n      var renderer = spriteEntity.addComponent(_oasisEngine.SpriteRenderer);\n      renderer.sprite = new _oasisEngine.Sprite(engine, textures[0]);\n      renderer.setMaterial(material); // Add dissolve animate script.\n\n      var script = spriteEntity.addComponent(AnimateScript); // Add custom material.\n\n      script.material = material; // Add Data UI.\n\n      script.guiData = addDataGUI(script.material, script);\n    });\n    engine.run();\n  }\n\n  function addCustomMaterial(engine, noiseTexture, rampTexture) {\n    var material = new _oasisEngine.Material(engine, _oasisEngine.Shader.find(\"SpriteDissolve\")); // Init state.\n\n    var renderState = material.renderState;\n    var target = renderState.blendState.targetBlendState;\n    target.enabled = true;\n    target.sourceColorBlendFactor = _oasisEngine.BlendFactor.SourceAlpha;\n    target.destinationColorBlendFactor = _oasisEngine.BlendFactor.OneMinusSourceAlpha;\n    target.sourceAlphaBlendFactor = _oasisEngine.BlendFactor.One;\n    target.destinationAlphaBlendFactor = _oasisEngine.BlendFactor.OneMinusSourceAlpha;\n    renderState.depthState.writeEnabled = false;\n    renderState.rasterState.cullMode = _oasisEngine.CullMode.Off;\n    material.renderQueueType = _oasisEngine.RenderQueueType.Transparent; // Set material shader data.\n\n    var shaderData = material.shaderData;\n    shaderData.setFloat(\"u_threshold\", 0.0);\n    shaderData.setFloat(\"u_edgeLength\", 0.1);\n    shaderData.setTexture(\"u_rampTexture\", rampTexture);\n    shaderData.setTexture(\"u_noiseTexture\", noiseTexture);\n    return material;\n  }\n  /**\n   * Add data GUI.\n   */\n\n\n  function addDataGUI(material, animationScript) {\n    var shaderData = material.shaderData;\n    var gui = new dat.GUI();\n    var guiData = {\n      threshold: 0.0,\n      edgeLength: 0.1,\n      reset: function reset() {\n        guiData.threshold = 0.0;\n        guiData.edgeLength = 0.1;\n        shaderData.setFloat(\"u_threshold\", 0.0);\n        shaderData.setFloat(\"u_edgeLength\", 0.1);\n      },\n      pause: function pause() {\n        animationScript.enabled = false;\n      },\n      resume: function resume() {\n        animationScript.enabled = true;\n      }\n    };\n    gui.add(guiData, \"threshold\", 0.0, 1.0, 0.01).onChange(function (value) {\n      shaderData.setFloat(\"u_threshold\", value);\n    }).listen();\n    gui.add(guiData, \"edgeLength\", 0.0, 0.2, 0.001).onChange(function (value) {\n      shaderData.setFloat(\"u_edgeLength\", value);\n    }).listen();\n    gui.add(guiData, \"reset\").name(\"重置\");\n    gui.add(guiData, \"pause\").name(\"暂停动画\");\n    gui.add(guiData, \"resume\").name(\"继续动画\");\n    return guiData;\n  }\n\n  var AnimateScript = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(AnimateScript, _Script);\n\n    function AnimateScript() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _Script.call.apply(_Script, [this].concat(args)) || this;\n      _this.guiData = void 0;\n      _this.material = void 0;\n      return _this;\n    }\n\n    var _proto = AnimateScript.prototype;\n\n    /**\n     * The main loop, called frame by frame.\n     * @param deltaTime - The deltaTime when the script update.\n     */\n    _proto.onUpdate = function onUpdate(deltaTime) {\n      var guiData = this.guiData;\n      var threshold = (guiData.threshold + deltaTime * 0.0003) % 1.0; // Update gui data.\n\n      guiData.threshold = threshold; // Update material data.\n\n      this.material.shaderData.setFloat(\"u_threshold\", threshold);\n    };\n\n    return AnimateScript;\n  }(_oasisEngine.Script); // Custom shader\n\n\n  var spriteVertShader = \"\\n  precision highp float;\\n\\n  uniform mat4 u_VPMat;\\n\\n  attribute vec3 POSITION;\\n  attribute vec2 TEXCOORD_0;\\n  attribute vec4 COLOR_0;\\n\\n  varying vec4 v_color;\\n  varying vec2 v_uv;\\n\\n  void main()\\n  {\\n    gl_Position = u_VPMat * vec4(POSITION, 1.0);\\n    v_color = COLOR_0;\\n    v_uv = TEXCOORD_0;\\n  }\\n\";\n  var spriteFragmentShader = \"\\n  precision mediump float;\\n  precision mediump int;\\n\\n  uniform sampler2D u_spriteTexture;\\n  uniform sampler2D u_noiseTexture;\\n  uniform sampler2D u_rampTexture;\\n  uniform float u_threshold;\\n  uniform float u_edgeLength;\\n\\n  varying vec2 v_uv;\\n  varying vec4 v_color;\\n\\n  vec4 lerp(vec4 a, vec4 b, float w) {\\n    return a + w * (b - a);\\n  }\\n\\n  void main() {\\n    float r = texture2D(u_noiseTexture, v_uv).r;\\n    float diff = r - u_threshold;\\n    if (diff <= 0.0) {\\n      discard;\\n    }\\n\\n    float degree = clamp(0.0, 1.0, diff / u_edgeLength);\\n    vec4 edgeColor = texture2D(u_rampTexture, vec2(degree, degree));\\n    vec4 color = texture2D(u_spriteTexture, v_uv);\\n    vec4 finalColor = lerp(edgeColor, color, degree);\\n    gl_FragColor = vec4(finalColor.rgb, color.a) * v_color;\\n  }\\n\";\n\n  _oasisEngine.Shader.create(\"SpriteDissolve\", spriteVertShader, spriteFragmentShader);\n});"},"name":"sprite-material-dissolve","title":"Sprite Material Dissolve","category":"2D","id":"362265ca-27b9-5d21-a12c-0ba850d9db50","sourceCode":"/**\n * @title Sprite Material Dissolve\n * @category 2D\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\nimport {\n  AssetType,\n  BlendFactor,\n  Camera,\n  CullMode,\n  Engine,\n  Material,\n  RenderQueueType,\n  Script,\n  Shader,\n  Sprite,\n  SpriteRenderer,\n  Texture2D,\n  WebGLEngine\n} from \"oasis-engine\";\n\ninit();\n\nfunction init(): void {\n  // Create engine.\n  const engine = new WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n\n  // Create root entity.\n  const rootEntity = engine.sceneManager.activeScene.createRootEntity();\n\n  // Create camera.\n  const cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 0, 12);\n  cameraEntity.addComponent(Camera);\n  cameraEntity.addComponent(OrbitControl);\n\n  engine.resourceManager\n    .load([\n      {\n        // \bSprite texture\n        url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*L2GNRLWn9EAAAAAAAAAAAAAAARQnAQ\",\n        type: AssetType.Texture2D\n      },\n      {\n        // Noise texture\n        url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*j2xJQL0e6J4AAAAAAAAAAAAAARQnAQ\",\n        type: AssetType.Texture2D\n      },\n      {\n        // Ramp texture\n        url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*ygj3S7sm4hQAAAAAAAAAAAAAARQnAQ\",\n        type: AssetType.Texture2D\n      }\n    ])\n    .then((textures: Texture2D[]) => {\n      // Create origin sprite entity.\n      const spriteEntity = rootEntity.createChild(\"DissolveSprite\");\n      const material = addCustomMaterial(engine, textures[1], textures[2]);\n      const renderer = spriteEntity.addComponent(SpriteRenderer);\n      renderer.sprite = new Sprite(engine, textures[0]);\n      renderer.setMaterial(material);\n\n      // Add dissolve animate script.\n      const script = spriteEntity.addComponent(AnimateScript);\n      // Add custom material.\n      script.material = material;\n      // Add Data UI.\n      script.guiData = addDataGUI(script.material, script);\n    });\n\n  engine.run();\n}\n\nfunction addCustomMaterial(engine: Engine, noiseTexture: Texture2D, rampTexture: Texture2D): Material {\n  const material = new Material(engine, Shader.find(\"SpriteDissolve\"));\n\n  // Init state.\n  const renderState = material.renderState;\n  const target = renderState.blendState.targetBlendState;\n  target.enabled = true;\n  target.sourceColorBlendFactor = BlendFactor.SourceAlpha;\n  target.destinationColorBlendFactor = BlendFactor.OneMinusSourceAlpha;\n  target.sourceAlphaBlendFactor = BlendFactor.One;\n  target.destinationAlphaBlendFactor = BlendFactor.OneMinusSourceAlpha;\n  renderState.depthState.writeEnabled = false;\n  renderState.rasterState.cullMode = CullMode.Off;\n  material.renderQueueType = RenderQueueType.Transparent;\n\n  // Set material shader data.\n  const { shaderData } = material;\n  shaderData.setFloat(\"u_threshold\", 0.0);\n  shaderData.setFloat(\"u_edgeLength\", 0.1);\n  shaderData.setTexture(\"u_rampTexture\", rampTexture);\n  shaderData.setTexture(\"u_noiseTexture\", noiseTexture);\n\n  return material;\n}\n\n/**\n * Add data GUI.\n */\nfunction addDataGUI(material: Material, animationScript: AnimateScript) {\n  const { shaderData } = material;\n  const gui = new dat.GUI();\n  const guiData = {\n    threshold: 0.0,\n    edgeLength: 0.1,\n    reset: () => {\n      guiData.threshold = 0.0;\n      guiData.edgeLength = 0.1;\n      shaderData.setFloat(\"u_threshold\", 0.0);\n      shaderData.setFloat(\"u_edgeLength\", 0.1);\n    },\n    pause: function () {\n      animationScript.enabled = false;\n    },\n    resume: function () {\n      animationScript.enabled = true;\n    }\n  };\n\n  gui\n    .add(guiData, \"threshold\", 0.0, 1.0, 0.01)\n    .onChange((value: number) => {\n      shaderData.setFloat(\"u_threshold\", value);\n    })\n    .listen();\n  gui\n    .add(guiData, \"edgeLength\", 0.0, 0.2, 0.001)\n    .onChange((value: number) => {\n      shaderData.setFloat(\"u_edgeLength\", value);\n    })\n    .listen();\n  gui.add(guiData, \"reset\").name(\"重置\");\n  gui.add(guiData, \"pause\").name(\"暂停动画\");\n  gui.add(guiData, \"resume\").name(\"继续动画\");\n\n  return guiData;\n}\n\nclass AnimateScript extends Script {\n  guiData: any;\n  material: Material;\n\n  /**\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */\n  onUpdate(deltaTime: number): void {\n    const { guiData } = this;\n    const threshold = (guiData.threshold + deltaTime * 0.0003) % 1.0;\n\n    // Update gui data.\n    guiData.threshold = threshold;\n    // Update material data.\n    this.material.shaderData.setFloat(\"u_threshold\", threshold);\n  }\n}\n\n// Custom shader\nconst spriteVertShader = `\n  precision highp float;\n\n  uniform mat4 u_VPMat;\n\n  attribute vec3 POSITION;\n  attribute vec2 TEXCOORD_0;\n  attribute vec4 COLOR_0;\n\n  varying vec4 v_color;\n  varying vec2 v_uv;\n\n  void main()\n  {\n    gl_Position = u_VPMat * vec4(POSITION, 1.0);\n    v_color = COLOR_0;\n    v_uv = TEXCOORD_0;\n  }\n`;\n\nconst spriteFragmentShader = `\n  precision mediump float;\n  precision mediump int;\n\n  uniform sampler2D u_spriteTexture;\n  uniform sampler2D u_noiseTexture;\n  uniform sampler2D u_rampTexture;\n  uniform float u_threshold;\n  uniform float u_edgeLength;\n\n  varying vec2 v_uv;\n  varying vec4 v_color;\n\n  vec4 lerp(vec4 a, vec4 b, float w) {\n    return a + w * (b - a);\n  }\n\n  void main() {\n    float r = texture2D(u_noiseTexture, v_uv).r;\n    float diff = r - u_threshold;\n    if (diff <= 0.0) {\n      discard;\n    }\n\n    float degree = clamp(0.0, 1.0, diff / u_edgeLength);\n    vec4 edgeColor = texture2D(u_rampTexture, vec2(degree, degree));\n    vec4 color = texture2D(u_spriteTexture, v_uv);\n    vec4 finalColor = lerp(edgeColor, color, degree);\n    gl_FragColor = vec4(finalColor.rgb, color.a) * v_color;\n  }\n`;\n\nShader.create(\"SpriteDissolve\", spriteVertShader, spriteFragmentShader);\n","formatedCode":"<span class=\"token comment\">/**\n * @title Sprite Material Dissolve\n * @category 2D\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  BlendFactor<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  CullMode<span class=\"token punctuation\">,</span>\n  Engine<span class=\"token punctuation\">,</span>\n  Material<span class=\"token punctuation\">,</span>\n  RenderQueueType<span class=\"token punctuation\">,</span>\n  Script<span class=\"token punctuation\">,</span>\n  Shader<span class=\"token punctuation\">,</span>\n  Sprite<span class=\"token punctuation\">,</span>\n  SpriteRenderer<span class=\"token punctuation\">,</span>\n  Texture2D<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Create engine.</span>\n  <span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  engine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create root entity.</span>\n  <span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create camera.</span>\n  <span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  engine<span class=\"token punctuation\">.</span>resourceManager\n    <span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// \bSprite texture</span>\n        url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*L2GNRLWn9EAAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Noise texture</span>\n        url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*j2xJQL0e6J4AAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Ramp texture</span>\n        url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*ygj3S7sm4hQAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">textures<span class=\"token operator\">:</span> Texture2D<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Create origin sprite entity.</span>\n      <span class=\"token keyword\">const</span> spriteEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DissolveSprite\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token function\">addCustomMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> textures<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> textures<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> renderer <span class=\"token operator\">=</span> spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      renderer<span class=\"token punctuation\">.</span>sprite <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> textures<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      renderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Add dissolve animate script.</span>\n      <span class=\"token keyword\">const</span> script <span class=\"token operator\">=</span> spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>AnimateScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// Add custom material.</span>\n      script<span class=\"token punctuation\">.</span>material <span class=\"token operator\">=</span> material<span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// Add Data UI.</span>\n      script<span class=\"token punctuation\">.</span>guiData <span class=\"token operator\">=</span> <span class=\"token function\">addDataGUI</span><span class=\"token punctuation\">(</span>script<span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">,</span> script<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">addCustomMaterial</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">engine<span class=\"token operator\">:</span> Engine<span class=\"token punctuation\">,</span> noiseTexture<span class=\"token operator\">:</span> Texture2D<span class=\"token punctuation\">,</span> rampTexture<span class=\"token operator\">:</span> Texture2D</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Material <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Material</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> Shader<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SpriteDissolve\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Init state.</span>\n  <span class=\"token keyword\">const</span> renderState <span class=\"token operator\">=</span> material<span class=\"token punctuation\">.</span>renderState<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> target <span class=\"token operator\">=</span> renderState<span class=\"token punctuation\">.</span>blendState<span class=\"token punctuation\">.</span>targetBlendState<span class=\"token punctuation\">;</span>\n  target<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  target<span class=\"token punctuation\">.</span>sourceColorBlendFactor <span class=\"token operator\">=</span> BlendFactor<span class=\"token punctuation\">.</span>SourceAlpha<span class=\"token punctuation\">;</span>\n  target<span class=\"token punctuation\">.</span>destinationColorBlendFactor <span class=\"token operator\">=</span> BlendFactor<span class=\"token punctuation\">.</span>OneMinusSourceAlpha<span class=\"token punctuation\">;</span>\n  target<span class=\"token punctuation\">.</span>sourceAlphaBlendFactor <span class=\"token operator\">=</span> BlendFactor<span class=\"token punctuation\">.</span>One<span class=\"token punctuation\">;</span>\n  target<span class=\"token punctuation\">.</span>destinationAlphaBlendFactor <span class=\"token operator\">=</span> BlendFactor<span class=\"token punctuation\">.</span>OneMinusSourceAlpha<span class=\"token punctuation\">;</span>\n  renderState<span class=\"token punctuation\">.</span>depthState<span class=\"token punctuation\">.</span>writeEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  renderState<span class=\"token punctuation\">.</span>rasterState<span class=\"token punctuation\">.</span>cullMode <span class=\"token operator\">=</span> CullMode<span class=\"token punctuation\">.</span>Off<span class=\"token punctuation\">;</span>\n  material<span class=\"token punctuation\">.</span>renderQueueType <span class=\"token operator\">=</span> RenderQueueType<span class=\"token punctuation\">.</span>Transparent<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Set material shader data.</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> shaderData <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> material<span class=\"token punctuation\">;</span>\n  shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_threshold\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_edgeLength\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setTexture</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_rampTexture\"</span><span class=\"token punctuation\">,</span> rampTexture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setTexture</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_noiseTexture\"</span><span class=\"token punctuation\">,</span> noiseTexture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> material<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * Add data GUI.\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">addDataGUI</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">material<span class=\"token operator\">:</span> Material<span class=\"token punctuation\">,</span> animationScript<span class=\"token operator\">:</span> AnimateScript</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> shaderData <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> material<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> guiData <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    threshold<span class=\"token operator\">:</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>\n    edgeLength<span class=\"token operator\">:</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">reset</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      guiData<span class=\"token punctuation\">.</span>threshold <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n      guiData<span class=\"token punctuation\">.</span>edgeLength <span class=\"token operator\">=</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">;</span>\n      shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_threshold\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_edgeLength\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">pause</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      animationScript<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">resume</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      animationScript<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  gui\n    <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"threshold\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_threshold\"</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui\n    <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"edgeLength\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.001</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_edgeLength\"</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"reset\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"重置\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"pause\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"暂停动画\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"resume\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"继续动画\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> guiData<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">AnimateScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  guiData<span class=\"token operator\">:</span> any<span class=\"token punctuation\">;</span>\n  material<span class=\"token operator\">:</span> Material<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/**\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */</span>\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span>deltaTime<span class=\"token operator\">:</span> number<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> guiData <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> threshold <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">.</span>threshold <span class=\"token operator\">+</span> deltaTime <span class=\"token operator\">*</span> <span class=\"token number\">0.0003</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Update gui data.</span>\n    guiData<span class=\"token punctuation\">.</span>threshold <span class=\"token operator\">=</span> threshold<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Update material data.</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">.</span>shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_threshold\"</span><span class=\"token punctuation\">,</span> threshold<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Custom shader</span>\n<span class=\"token keyword\">const</span> spriteVertShader <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  precision highp float;\n\n  uniform mat4 u_VPMat;\n\n  attribute vec3 POSITION;\n  attribute vec2 TEXCOORD_0;\n  attribute vec4 COLOR_0;\n\n  varying vec4 v_color;\n  varying vec2 v_uv;\n\n  void main()\n  {\n    gl_Position = u_VPMat * vec4(POSITION, 1.0);\n    v_color = COLOR_0;\n    v_uv = TEXCOORD_0;\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> spriteFragmentShader <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  precision mediump float;\n  precision mediump int;\n\n  uniform sampler2D u_spriteTexture;\n  uniform sampler2D u_noiseTexture;\n  uniform sampler2D u_rampTexture;\n  uniform float u_threshold;\n  uniform float u_edgeLength;\n\n  varying vec2 v_uv;\n  varying vec4 v_color;\n\n  vec4 lerp(vec4 a, vec4 b, float w) {\n    return a + w * (b - a);\n  }\n\n  void main() {\n    float r = texture2D(u_noiseTexture, v_uv).r;\n    float diff = r - u_threshold;\n    if (diff &lt;= 0.0) {\n      discard;\n    }\n\n    float degree = clamp(0.0, 1.0, diff / u_edgeLength);\n    vec4 edgeColor = texture2D(u_rampTexture, vec2(degree, degree));\n    vec4 color = texture2D(u_spriteTexture, v_uv);\n    vec4 finalColor = lerp(edgeColor, color, degree);\n    gl_FragColor = vec4(finalColor.rgb, color.a) * v_color;\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\nShader<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SpriteDissolve\"</span><span class=\"token punctuation\">,</span> spriteVertShader<span class=\"token punctuation\">,</span> spriteFragmentShader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title Sprite Material Blur\n   * @category 2D\n   */\n  // Create engine object\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // Create camera\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 0, 20);\n  cameraEntity.addComponent(_oasisEngine.Camera).isOrthographic = true;\n  engine.resourceManager.load({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*L2GNRLWn9EAAAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }).then(function (texture) {\n    // Create origin sprite entity.\n    var texSize = new _oasisEngine.Vector2(texture.width, texture.height);\n    var spriteEntity = rootEntity.createChild(\"spriteBlur\");\n    spriteEntity.addComponent(_oasisEngine.SpriteRenderer).sprite = new _oasisEngine.Sprite(engine, texture); // The blur algorithm will sample the edges of the texture.\n    // Set the clamp warp mode to avoid mis-sampling caused by repeate warp mode.\n\n    texture.wrapModeU = texture.wrapModeV = _oasisEngine.TextureWrapMode.Clamp; // Display normal\n\n    addCustomMaterialSpriteEntity(spriteEntity, -7.5, texSize, 0.0); // Display low blur\n\n    addCustomMaterialSpriteEntity(spriteEntity.clone(), -2.5, texSize, 1.0); // Display moderate blur\n\n    addCustomMaterialSpriteEntity(spriteEntity.clone(), 2.5, texSize, 2.0); // Display highly blur\n\n    addCustomMaterialSpriteEntity(spriteEntity.clone(), 7.5, texSize, 3.0);\n  });\n  engine.run();\n\n  function addCustomMaterialSpriteEntity(entity, posX, texSize, blurSize) {\n    rootEntity.addChild(entity);\n    entity.transform.setPosition(posX, 0, 0); // Create material\n\n    var material = new _oasisEngine.Material(engine, _oasisEngine.Shader.find(\"SpriteBlur\"));\n    entity.getComponent(_oasisEngine.SpriteRenderer).setMaterial(material); // Init state\n\n    var target = material.renderState.blendState.targetBlendState;\n    target.enabled = true;\n    target.sourceColorBlendFactor = _oasisEngine.BlendFactor.SourceAlpha;\n    target.destinationColorBlendFactor = _oasisEngine.BlendFactor.OneMinusSourceAlpha;\n    target.sourceAlphaBlendFactor = _oasisEngine.BlendFactor.One;\n    target.destinationAlphaBlendFactor = _oasisEngine.BlendFactor.OneMinusSourceAlpha;\n    target.colorBlendOperation = target.alphaBlendOperation = _oasisEngine.BlendOperation.Add;\n    material.renderState.depthState.writeEnabled = false;\n    material.renderQueueType = _oasisEngine.RenderQueueType.Transparent;\n    material.renderState.rasterState.cullMode = _oasisEngine.CullMode.Off; // Set uniform\n\n    material.shaderData.setVector2(\"u_texSize\", texSize);\n    material.shaderData.setFloat(\"u_blurSize\", blurSize);\n  } // Custom shader\n\n\n  var spriteVertShader = \"\\n  precision highp float;\\n\\n  uniform mat4 u_VPMat;\\n\\n  attribute vec3 POSITION;\\n  attribute vec2 TEXCOORD_0;\\n  attribute vec4 COLOR_0;\\n\\n  varying vec4 v_color;\\n  varying vec2 v_uv;\\n\\n  void main()\\n  {\\n    gl_Position = u_VPMat * vec4(POSITION, 1.0);\\n    v_color = COLOR_0;\\n    v_uv = TEXCOORD_0;\\n  }\\n\";\n  var spriteFragmentShader = \"\\n  precision mediump float;\\n  precision mediump int;\\n\\n  uniform sampler2D u_spriteTexture;\\n  uniform float u_blurSize;\\n  uniform vec2 u_texSize;\\n\\n  varying vec2 v_uv;\\n  varying vec4 v_color;\\n\\n  float normpdf(float x, float sigma) {\\n    return 0.39894 * exp(-0.5 * x * x / (sigma * sigma)) / sigma;\\n  }\\n\\n  void main() {\\n    vec4 color = texture2D(u_spriteTexture, v_uv);\\n    const int mSize = 11;\\n    const int kSize = (mSize - 1) / 2;\\n    float kernel[mSize];\\n    vec3 final_colour = vec3(0.0);\\n\\n    // create the 1-D kernel\\n    float sigma = 7.0;\\n    float Z = 0.0;\\n    for (int i = 0; i <= kSize; ++i) {\\n      kernel[kSize+i] = kernel[kSize - i] = normpdf(float(i), sigma);\\n    }\\n\\n    // get the normalization factor (as the gaussian has been clamped)\\n    for (int i = 0; i < mSize; ++i) {\\n      Z += kernel[i];\\n    }\\n\\n    // read out the texels\\n    float offsetX = u_blurSize / u_texSize.x;\\n    float offsetY = u_blurSize / u_texSize.y;\\n    vec2 uv;\\n    for (int i = -kSize; i <= kSize; ++i) {\\n      for (int j = -kSize; j <= kSize; ++j) {\\n        uv = v_uv.xy + vec2(float(i) * offsetX, float(j) * offsetY);\\n        final_colour += kernel[kSize + j] * kernel[kSize + i] * texture2D(u_spriteTexture, uv).rgb;\\n      }\\n    }\\n\\n    gl_FragColor = vec4(final_colour / (Z * Z), color.a) * v_color;\\n  }\\n\";\n\n  _oasisEngine.Shader.create(\"SpriteBlur\", spriteVertShader, spriteFragmentShader);\n});"},"name":"sprite-material-blur","title":"Sprite Material Blur","category":"2D","id":"a5b9313d-34bc-54ea-b1a9-c4bcecffff80","sourceCode":"/**\n * @title Sprite Material Blur\n * @category 2D\n */\nimport {\n  AssetType,\n  BlendFactor,\n  BlendOperation,\n  Camera,\n  CullMode,\n  Entity,\n  Material,\n  RenderQueueType,\n  Shader,\n  Sprite,\n  SpriteRenderer,\n  Texture2D,\n  TextureWrapMode,\n  Vector2,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\n\n// Create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// Create camera\nconst cameraEntity = rootEntity.createChild(\"Camera\");\ncameraEntity.transform.position = new Vector3(0, 0, 20);\ncameraEntity.addComponent(Camera).isOrthographic = true;\n\nengine.resourceManager\n  .load<Texture2D>({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*L2GNRLWn9EAAAAAAAAAAAAAAARQnAQ\",\n    type: AssetType.Texture2D\n  })\n  .then((texture) => {\n    // Create origin sprite entity.\n    const texSize = new Vector2(texture.width, texture.height);\n    const spriteEntity = rootEntity.createChild(\"spriteBlur\");\n\n    spriteEntity.addComponent(SpriteRenderer).sprite = new Sprite(engine, texture);\n    // The blur algorithm will sample the edges of the texture.\n    // Set the clamp warp mode to avoid mis-sampling caused by repeate warp mode.\n    texture.wrapModeU = texture.wrapModeV = TextureWrapMode.Clamp;\n\n    // Display normal\n    addCustomMaterialSpriteEntity(spriteEntity, -7.5, texSize, 0.0);\n    // Display low blur\n    addCustomMaterialSpriteEntity(spriteEntity.clone(), -2.5, texSize, 1.0);\n    // Display moderate blur\n    addCustomMaterialSpriteEntity(spriteEntity.clone(), 2.5, texSize, 2.0);\n    // Display highly blur\n    addCustomMaterialSpriteEntity(spriteEntity.clone(), 7.5, texSize, 3.0);\n  });\n\nengine.run();\n\nfunction addCustomMaterialSpriteEntity(entity: Entity, posX: number, texSize: Vector2, blurSize: number): void {\n  rootEntity.addChild(entity);\n  entity.transform.setPosition(posX, 0, 0);\n  // Create material\n  const material = new Material(engine, Shader.find(\"SpriteBlur\"));\n  entity.getComponent(SpriteRenderer).setMaterial(material);\n  // Init state\n  const target = material.renderState.blendState.targetBlendState;\n  target.enabled = true;\n  target.sourceColorBlendFactor = BlendFactor.SourceAlpha;\n  target.destinationColorBlendFactor = BlendFactor.OneMinusSourceAlpha;\n  target.sourceAlphaBlendFactor = BlendFactor.One;\n  target.destinationAlphaBlendFactor = BlendFactor.OneMinusSourceAlpha;\n  target.colorBlendOperation = target.alphaBlendOperation = BlendOperation.Add;\n  material.renderState.depthState.writeEnabled = false;\n  material.renderQueueType = RenderQueueType.Transparent;\n  material.renderState.rasterState.cullMode = CullMode.Off;\n  // Set uniform\n  material.shaderData.setVector2(\"u_texSize\", texSize);\n  material.shaderData.setFloat(\"u_blurSize\", blurSize);\n}\n\n// Custom shader\nconst spriteVertShader = `\n  precision highp float;\n\n  uniform mat4 u_VPMat;\n\n  attribute vec3 POSITION;\n  attribute vec2 TEXCOORD_0;\n  attribute vec4 COLOR_0;\n\n  varying vec4 v_color;\n  varying vec2 v_uv;\n\n  void main()\n  {\n    gl_Position = u_VPMat * vec4(POSITION, 1.0);\n    v_color = COLOR_0;\n    v_uv = TEXCOORD_0;\n  }\n`;\n\nconst spriteFragmentShader = `\n  precision mediump float;\n  precision mediump int;\n\n  uniform sampler2D u_spriteTexture;\n  uniform float u_blurSize;\n  uniform vec2 u_texSize;\n\n  varying vec2 v_uv;\n  varying vec4 v_color;\n\n  float normpdf(float x, float sigma) {\n    return 0.39894 * exp(-0.5 * x * x / (sigma * sigma)) / sigma;\n  }\n\n  void main() {\n    vec4 color = texture2D(u_spriteTexture, v_uv);\n    const int mSize = 11;\n    const int kSize = (mSize - 1) / 2;\n    float kernel[mSize];\n    vec3 final_colour = vec3(0.0);\n\n    // create the 1-D kernel\n    float sigma = 7.0;\n    float Z = 0.0;\n    for (int i = 0; i <= kSize; ++i) {\n      kernel[kSize+i] = kernel[kSize - i] = normpdf(float(i), sigma);\n    }\n\n    // get the normalization factor (as the gaussian has been clamped)\n    for (int i = 0; i < mSize; ++i) {\n      Z += kernel[i];\n    }\n\n    // read out the texels\n    float offsetX = u_blurSize / u_texSize.x;\n    float offsetY = u_blurSize / u_texSize.y;\n    vec2 uv;\n    for (int i = -kSize; i <= kSize; ++i) {\n      for (int j = -kSize; j <= kSize; ++j) {\n        uv = v_uv.xy + vec2(float(i) * offsetX, float(j) * offsetY);\n        final_colour += kernel[kSize + j] * kernel[kSize + i] * texture2D(u_spriteTexture, uv).rgb;\n      }\n    }\n\n    gl_FragColor = vec4(final_colour / (Z * Z), color.a) * v_color;\n  }\n`;\n\nShader.create(\"SpriteBlur\", spriteVertShader, spriteFragmentShader);\n","formatedCode":"<span class=\"token comment\">/**\n * @title Sprite Material Blur\n * @category 2D\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  BlendFactor<span class=\"token punctuation\">,</span>\n  BlendOperation<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  CullMode<span class=\"token punctuation\">,</span>\n  Entity<span class=\"token punctuation\">,</span>\n  Material<span class=\"token punctuation\">,</span>\n  RenderQueueType<span class=\"token punctuation\">,</span>\n  Shader<span class=\"token punctuation\">,</span>\n  Sprite<span class=\"token punctuation\">,</span>\n  SpriteRenderer<span class=\"token punctuation\">,</span>\n  Texture2D<span class=\"token punctuation\">,</span>\n  TextureWrapMode<span class=\"token punctuation\">,</span>\n  Vector2<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>isOrthographic <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*L2GNRLWn9EAAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Create origin sprite entity.</span>\n    <span class=\"token keyword\">const</span> texSize <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector2</span><span class=\"token punctuation\">(</span>texture<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> spriteEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"spriteBlur\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>sprite <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// The blur algorithm will sample the edges of the texture.</span>\n    <span class=\"token comment\">// Set the clamp warp mode to avoid mis-sampling caused by repeate warp mode.</span>\n    texture<span class=\"token punctuation\">.</span>wrapModeU <span class=\"token operator\">=</span> texture<span class=\"token punctuation\">.</span>wrapModeV <span class=\"token operator\">=</span> TextureWrapMode<span class=\"token punctuation\">.</span>Clamp<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Display normal</span>\n    <span class=\"token function\">addCustomMaterialSpriteEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">7.5</span><span class=\"token punctuation\">,</span> texSize<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display low blur</span>\n    <span class=\"token function\">addCustomMaterialSpriteEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2.5</span><span class=\"token punctuation\">,</span> texSize<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display moderate blur</span>\n    <span class=\"token function\">addCustomMaterialSpriteEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.5</span><span class=\"token punctuation\">,</span> texSize<span class=\"token punctuation\">,</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display highly blur</span>\n    <span class=\"token function\">addCustomMaterialSpriteEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7.5</span><span class=\"token punctuation\">,</span> texSize<span class=\"token punctuation\">,</span> <span class=\"token number\">3.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">addCustomMaterialSpriteEntity</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entity<span class=\"token operator\">:</span> Entity<span class=\"token punctuation\">,</span> posX<span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span> texSize<span class=\"token operator\">:</span> Vector2<span class=\"token punctuation\">,</span> blurSize<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>entity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>posX<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Create material</span>\n  <span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Material</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> Shader<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SpriteBlur\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  entity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Init state</span>\n  <span class=\"token keyword\">const</span> target <span class=\"token operator\">=</span> material<span class=\"token punctuation\">.</span>renderState<span class=\"token punctuation\">.</span>blendState<span class=\"token punctuation\">.</span>targetBlendState<span class=\"token punctuation\">;</span>\n  target<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  target<span class=\"token punctuation\">.</span>sourceColorBlendFactor <span class=\"token operator\">=</span> BlendFactor<span class=\"token punctuation\">.</span>SourceAlpha<span class=\"token punctuation\">;</span>\n  target<span class=\"token punctuation\">.</span>destinationColorBlendFactor <span class=\"token operator\">=</span> BlendFactor<span class=\"token punctuation\">.</span>OneMinusSourceAlpha<span class=\"token punctuation\">;</span>\n  target<span class=\"token punctuation\">.</span>sourceAlphaBlendFactor <span class=\"token operator\">=</span> BlendFactor<span class=\"token punctuation\">.</span>One<span class=\"token punctuation\">;</span>\n  target<span class=\"token punctuation\">.</span>destinationAlphaBlendFactor <span class=\"token operator\">=</span> BlendFactor<span class=\"token punctuation\">.</span>OneMinusSourceAlpha<span class=\"token punctuation\">;</span>\n  target<span class=\"token punctuation\">.</span>colorBlendOperation <span class=\"token operator\">=</span> target<span class=\"token punctuation\">.</span>alphaBlendOperation <span class=\"token operator\">=</span> BlendOperation<span class=\"token punctuation\">.</span>Add<span class=\"token punctuation\">;</span>\n  material<span class=\"token punctuation\">.</span>renderState<span class=\"token punctuation\">.</span>depthState<span class=\"token punctuation\">.</span>writeEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  material<span class=\"token punctuation\">.</span>renderQueueType <span class=\"token operator\">=</span> RenderQueueType<span class=\"token punctuation\">.</span>Transparent<span class=\"token punctuation\">;</span>\n  material<span class=\"token punctuation\">.</span>renderState<span class=\"token punctuation\">.</span>rasterState<span class=\"token punctuation\">.</span>cullMode <span class=\"token operator\">=</span> CullMode<span class=\"token punctuation\">.</span>Off<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Set uniform</span>\n  material<span class=\"token punctuation\">.</span>shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setVector2</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_texSize\"</span><span class=\"token punctuation\">,</span> texSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  material<span class=\"token punctuation\">.</span>shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_blurSize\"</span><span class=\"token punctuation\">,</span> blurSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Custom shader</span>\n<span class=\"token keyword\">const</span> spriteVertShader <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  precision highp float;\n\n  uniform mat4 u_VPMat;\n\n  attribute vec3 POSITION;\n  attribute vec2 TEXCOORD_0;\n  attribute vec4 COLOR_0;\n\n  varying vec4 v_color;\n  varying vec2 v_uv;\n\n  void main()\n  {\n    gl_Position = u_VPMat * vec4(POSITION, 1.0);\n    v_color = COLOR_0;\n    v_uv = TEXCOORD_0;\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> spriteFragmentShader <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  precision mediump float;\n  precision mediump int;\n\n  uniform sampler2D u_spriteTexture;\n  uniform float u_blurSize;\n  uniform vec2 u_texSize;\n\n  varying vec2 v_uv;\n  varying vec4 v_color;\n\n  float normpdf(float x, float sigma) {\n    return 0.39894 * exp(-0.5 * x * x / (sigma * sigma)) / sigma;\n  }\n\n  void main() {\n    vec4 color = texture2D(u_spriteTexture, v_uv);\n    const int mSize = 11;\n    const int kSize = (mSize - 1) / 2;\n    float kernel[mSize];\n    vec3 final_colour = vec3(0.0);\n\n    // create the 1-D kernel\n    float sigma = 7.0;\n    float Z = 0.0;\n    for (int i = 0; i &lt;= kSize; ++i) {\n      kernel[kSize+i] = kernel[kSize - i] = normpdf(float(i), sigma);\n    }\n\n    // get the normalization factor (as the gaussian has been clamped)\n    for (int i = 0; i &lt; mSize; ++i) {\n      Z += kernel[i];\n    }\n\n    // read out the texels\n    float offsetX = u_blurSize / u_texSize.x;\n    float offsetY = u_blurSize / u_texSize.y;\n    vec2 uv;\n    for (int i = -kSize; i &lt;= kSize; ++i) {\n      for (int j = -kSize; j &lt;= kSize; ++j) {\n        uv = v_uv.xy + vec2(float(i) * offsetX, float(j) * offsetY);\n        final_colour += kernel[kSize + j] * kernel[kSize + i] * texture2D(u_spriteTexture, uv).rgb;\n      }\n    }\n\n    gl_FragColor = vec4(final_colour / (Z * Z), color.a) * v_color;\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\nShader<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SpriteBlur\"</span><span class=\"token punctuation\">,</span> spriteVertShader<span class=\"token punctuation\">,</span> spriteFragmentShader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  // Create engine object.\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize(); // Create root entity.\n\n  var rootEntity = engine.sceneManager.activeScene.createRootEntity(); // Create camera.\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 0, 50);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl);\n  engine.resourceManager.load({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*d3N9RYpcKncAAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }).then(function (texture) {\n    // Create origin sprite entity.\n    var spriteEntity = new _oasisEngine.Entity(engine, \"spritePivot\");\n    var transform = spriteEntity.transform;\n    transform.setScale(3, 3, 3);\n    transform.setPosition(0, 5, 0);\n    spriteEntity.addComponent(_oasisEngine.SpriteRenderer); // Display normal.\n\n    addPivotEntity(spriteEntity, texture, 8); // Display pivot entity\n\n    var pivotEntity = spriteEntity.clone();\n    pivotEntity.addComponent(RotateScript);\n    addPivotEntity(pivotEntity, texture, -8);\n    addDataGUI(pivotEntity);\n  });\n  engine.run();\n  /**\n   * Add flip entity.\n   */\n\n  function addPivotEntity(entity, texture, posY) {\n    rootEntity.addChild(entity);\n    entity.transform.setPosition(0, posY, 0);\n    entity.getComponent(_oasisEngine.SpriteRenderer).sprite = new _oasisEngine.Sprite(entity.engine, texture);\n  }\n  /**\n   * Add data GUI.\n   */\n\n\n  function addDataGUI(entity) {\n    var sprite = entity.getComponent(_oasisEngine.SpriteRenderer).sprite;\n    var pivot = new _oasisEngine.Vector2(0.5, 0.5);\n    var gui = new dat.GUI();\n    var guiData = {\n      pivotX: 0.5,\n      pivotY: 0.5,\n      reset: function reset() {\n        guiData.pivotX = 0.5;\n        guiData.pivotY = 0.5;\n        pivot.setValue(0.5, 0.5);\n        sprite.pivot = pivot;\n      }\n    };\n    gui.add(guiData, \"pivotX\", 0.0, 1.0, 0.01).onChange(function (value) {\n      pivot.x = value;\n      sprite.pivot = pivot;\n    }).listen();\n    gui.add(guiData, \"pivotY\", 0.0, 1.0, 0.01).onChange(function (value) {\n      pivot.y = value;\n      sprite.pivot = pivot;\n    }).listen();\n    gui.add(guiData, \"reset\").name(\"重置\");\n    return guiData;\n  }\n\n  var RotateScript = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(RotateScript, _Script);\n\n    function RotateScript() {\n      return _Script.apply(this, arguments) || this;\n    }\n\n    var _proto = RotateScript.prototype;\n\n    _proto.onUpdate = function onUpdate(dt) {\n      this.entity.transform.rotate(0, 0, 1);\n    };\n\n    return RotateScript;\n  }(_oasisEngine.Script);\n});"},"name":"sprite-pivot","title":"Sprite Pivot","category":"2D","id":"6f81d7ba-bfc4-5f3f-9e40-0437ca2bda04","sourceCode":"/**\n * @title Sprite Pivot\n * @category 2D\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\nimport {\n  AssetType,\n  Camera,\n  Entity,\n  Script,\n  Sprite,\n  SpriteRenderer,\n  Texture2D,\n  Vector2,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\n\n// Create engine object.\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\n// Create root entity.\nconst rootEntity = engine.sceneManager.activeScene.createRootEntity();\n\n// Create camera.\nconst cameraEntity = rootEntity.createChild(\"Camera\");\ncameraEntity.transform.setPosition(0, 0, 50);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\nengine.resourceManager\n  .load<Texture2D>({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*d3N9RYpcKncAAAAAAAAAAAAAARQnAQ\",\n    type: AssetType.Texture2D\n  })\n  .then((texture) => {\n    // Create origin sprite entity.\n    const spriteEntity = new Entity(engine, \"spritePivot\");\n    const { transform } = spriteEntity;\n    transform.setScale(3, 3, 3);\n    transform.setPosition(0, 5, 0);\n    spriteEntity.addComponent(SpriteRenderer);\n\n    // Display normal.\n    addPivotEntity(spriteEntity, texture, 8);\n    // Display pivot entity\n    const pivotEntity = spriteEntity.clone();\n    pivotEntity.addComponent(RotateScript);\n    addPivotEntity(pivotEntity, texture, -8);\n    addDataGUI(pivotEntity);\n  });\n\nengine.run();\n\n/**\n * Add flip entity.\n */\nfunction addPivotEntity(entity: Entity, texture: Texture2D, posY: number): void {\n  rootEntity.addChild(entity);\n  entity.transform.setPosition(0, posY, 0);\n  entity.getComponent(SpriteRenderer).sprite = new Sprite(entity.engine, texture);\n}\n\n/**\n * Add data GUI.\n */\nfunction addDataGUI(entity: Entity) {\n  const sprite = entity.getComponent(SpriteRenderer).sprite;\n  const pivot = new Vector2(0.5, 0.5);\n  const gui = new dat.GUI();\n  const guiData = {\n    pivotX: 0.5,\n    pivotY: 0.5,\n    reset: () => {\n      guiData.pivotX = 0.5;\n      guiData.pivotY = 0.5;\n      pivot.setValue(0.5, 0.5);\n      sprite.pivot = pivot;\n    }\n  };\n\n  gui\n    .add(guiData, \"pivotX\", 0.0, 1.0, 0.01)\n    .onChange((value: number) => {\n      pivot.x = value;\n      sprite.pivot = pivot;\n    })\n    .listen();\n  gui\n    .add(guiData, \"pivotY\", 0.0, 1.0, 0.01)\n    .onChange((value: number) => {\n      pivot.y = value;\n      sprite.pivot = pivot;\n    })\n    .listen();\n  gui.add(guiData, \"reset\").name(\"重置\");\n\n  return guiData;\n}\n\nclass RotateScript extends Script {\n  onUpdate(dt: number) {\n    this.entity.transform.rotate(0, 0, 1);\n  }\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Sprite Pivot\n * @category 2D\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  Entity<span class=\"token punctuation\">,</span>\n  Script<span class=\"token punctuation\">,</span>\n  Sprite<span class=\"token punctuation\">,</span>\n  SpriteRenderer<span class=\"token punctuation\">,</span>\n  Texture2D<span class=\"token punctuation\">,</span>\n  Vector2<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine object.</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create root entity.</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera.</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*d3N9RYpcKncAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Create origin sprite entity.</span>\n    <span class=\"token keyword\">const</span> spriteEntity <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Entity</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token string\">\"spritePivot\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> transform <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> spriteEntity<span class=\"token punctuation\">;</span>\n    transform<span class=\"token punctuation\">.</span><span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Display normal.</span>\n    <span class=\"token function\">addPivotEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display pivot entity</span>\n    <span class=\"token keyword\">const</span> pivotEntity <span class=\"token operator\">=</span> spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    pivotEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>RotateScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addPivotEntity</span><span class=\"token punctuation\">(</span>pivotEntity<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addDataGUI</span><span class=\"token punctuation\">(</span>pivotEntity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Add flip entity.\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">addPivotEntity</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entity<span class=\"token operator\">:</span> Entity<span class=\"token punctuation\">,</span> texture<span class=\"token operator\">:</span> Texture2D<span class=\"token punctuation\">,</span> posY<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>entity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> posY<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  entity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>sprite <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">(</span>entity<span class=\"token punctuation\">.</span>engine<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * Add data GUI.\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">addDataGUI</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entity<span class=\"token operator\">:</span> Entity</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> sprite <span class=\"token operator\">=</span> entity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>sprite<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> pivot <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector2</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> guiData <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    pivotX<span class=\"token operator\">:</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span>\n    pivotY<span class=\"token operator\">:</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">reset</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      guiData<span class=\"token punctuation\">.</span>pivotX <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n      guiData<span class=\"token punctuation\">.</span>pivotY <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n      pivot<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      sprite<span class=\"token punctuation\">.</span>pivot <span class=\"token operator\">=</span> pivot<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  gui\n    <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"pivotX\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      pivot<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n      sprite<span class=\"token punctuation\">.</span>pivot <span class=\"token operator\">=</span> pivot<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui\n    <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"pivotY\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      pivot<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n      sprite<span class=\"token punctuation\">.</span>pivot <span class=\"token operator\">=</span> pivot<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"reset\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"重置\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> guiData<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">RotateScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">dt<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title Sprite Region\n   * @category 2D\n   */\n  // Create engine object.\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize(); // Create root entity.\n\n  var rootEntity = engine.sceneManager.activeScene.createRootEntity(); // Create camera.\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 0, 50);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl);\n  engine.resourceManager.load({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*d3N9RYpcKncAAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }).then(function (texture) {\n    // Create origin sprite entity.\n    var spriteEntity = new _oasisEngine.Entity(engine, \"spriteRegion\");\n    spriteEntity.transform.setScale(3, 3, 3);\n    spriteEntity.addComponent(_oasisEngine.SpriteRenderer);\n    var rect = new _oasisEngine.Rect(); // Display normal.\n\n    rect.setValue(0, 0, 1, 1);\n    addRegionEntity(spriteEntity, texture, 0, 5, rect); // Display top left half.\n\n    rect.setValue(0, 0, 0.5, 0.5);\n    addRegionEntity(spriteEntity.clone(), texture, -7.5, -5, rect); // Display top right half.\n\n    rect.setValue(0.5, 0, 1, 0.5);\n    addRegionEntity(spriteEntity.clone(), texture, -2.5, -5, rect); // Display bottom left half.\n\n    rect.setValue(0, 0.5, 0.5, 0.5);\n    addRegionEntity(spriteEntity.clone(), texture, 2.5, -5, rect); // Display bottom right half.\n\n    rect.setValue(0.5, 0.5, 1, 1);\n    addRegionEntity(spriteEntity.clone(), texture, 7.5, -5, rect);\n  });\n  engine.run();\n  /**\n   * Add flip entity.\n   */\n\n  function addRegionEntity(entity, texture, posX, posY, region) {\n    rootEntity.addChild(entity);\n    entity.transform.setPosition(posX, posY, 0);\n    var regionRenderer = entity.getComponent(_oasisEngine.SpriteRenderer);\n    var sprite = new _oasisEngine.Sprite(entity.engine, texture);\n    sprite.region = region;\n    regionRenderer.sprite = sprite;\n  }\n});"},"name":"sprite-region","title":"Sprite Region","category":"2D","id":"777a4bd8-29a4-5d76-917b-c762cdc2c049","sourceCode":"/**\n * @title Sprite Region\n * @category 2D\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport { AssetType, Camera, Entity, Rect, Sprite, SpriteRenderer, Texture2D, WebGLEngine } from \"oasis-engine\";\n\n// Create engine object.\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\n// Create root entity.\nconst rootEntity = engine.sceneManager.activeScene.createRootEntity();\n\n// Create camera.\nconst cameraEntity = rootEntity.createChild(\"Camera\");\ncameraEntity.transform.setPosition(0, 0, 50);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\nengine.resourceManager\n  .load<Texture2D>({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*d3N9RYpcKncAAAAAAAAAAAAAARQnAQ\",\n    type: AssetType.Texture2D\n  })\n  .then((texture) => {\n    // Create origin sprite entity.\n    const spriteEntity = new Entity(engine, \"spriteRegion\");\n    spriteEntity.transform.setScale(3, 3, 3);\n    spriteEntity.addComponent(SpriteRenderer);\n\n    const rect = new Rect();\n    // Display normal.\n    rect.setValue(0, 0, 1, 1);\n    addRegionEntity(spriteEntity, texture, 0, 5, rect);\n    // Display top left half.\n    rect.setValue(0, 0, 0.5, 0.5);\n    addRegionEntity(spriteEntity.clone(), texture, -7.5, -5, rect);\n    // Display top right half.\n    rect.setValue(0.5, 0, 1, 0.5);\n    addRegionEntity(spriteEntity.clone(), texture, -2.5, -5, rect);\n    // Display bottom left half.\n    rect.setValue(0, 0.5, 0.5, 0.5);\n    addRegionEntity(spriteEntity.clone(), texture, 2.5, -5, rect);\n    // Display bottom right half.\n    rect.setValue(0.5, 0.5, 1, 1);\n    addRegionEntity(spriteEntity.clone(), texture, 7.5, -5, rect);\n  });\n\nengine.run();\n\n/**\n * Add flip entity.\n */\nfunction addRegionEntity(entity: Entity, texture: Texture2D, posX: number, posY: number, region: Rect): void {\n  rootEntity.addChild(entity);\n  entity.transform.setPosition(posX, posY, 0);\n  const regionRenderer = entity.getComponent(SpriteRenderer);\n  const sprite = new Sprite(entity.engine, texture);\n  sprite.region = region;\n  regionRenderer.sprite = sprite;\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Sprite Region\n * @category 2D\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AssetType<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> Entity<span class=\"token punctuation\">,</span> Rect<span class=\"token punctuation\">,</span> Sprite<span class=\"token punctuation\">,</span> SpriteRenderer<span class=\"token punctuation\">,</span> Texture2D<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine object.</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create root entity.</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera.</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*d3N9RYpcKncAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Create origin sprite entity.</span>\n    <span class=\"token keyword\">const</span> spriteEntity <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Entity</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token string\">\"spriteRegion\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    spriteEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> rect <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Rect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display normal.</span>\n    rect<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addRegionEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display top left half.</span>\n    rect<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addRegionEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">7.5</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display top right half.</span>\n    rect<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addRegionEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2.5</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display bottom left half.</span>\n    rect<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addRegionEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">,</span> <span class=\"token number\">2.5</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display bottom right half.</span>\n    rect<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addRegionEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">,</span> <span class=\"token number\">7.5</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Add flip entity.\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">addRegionEntity</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entity<span class=\"token operator\">:</span> Entity<span class=\"token punctuation\">,</span> texture<span class=\"token operator\">:</span> Texture2D<span class=\"token punctuation\">,</span> posX<span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span> posY<span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span> region<span class=\"token operator\">:</span> Rect</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>entity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>posX<span class=\"token punctuation\">,</span> posY<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> regionRenderer <span class=\"token operator\">=</span> entity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> sprite <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">(</span>entity<span class=\"token punctuation\">.</span>engine<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  sprite<span class=\"token punctuation\">.</span>region <span class=\"token operator\">=</span> region<span class=\"token punctuation\">;</span>\n  regionRenderer<span class=\"token punctuation\">.</span>sprite <span class=\"token operator\">=</span> sprite<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title Sprite Atlas\n   * @category 2D\n   */\n  // Create engine object.\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize(); // Create root entity.\n\n  var rootEntity = engine.sceneManager.activeScene.createRootEntity(); // Create camera.\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 0, 4);\n  cameraEntity.addComponent(_oasisEngine.Camera).isOrthographic = true;\n  engine.resourceManager.load({\n    url: \"https://gw.alipayobjects.com/os/bmw-prod/da0bccd4-020a-41d5-82e0-a04f4413d9a6.atlas\",\n    type: _oasisEngine.AssetType.SpriteAtlas\n  }).then(function (atlas) {\n    var from = new _oasisEngine.Vector3();\n    var to = new _oasisEngine.Vector3(); // Draw the fence.\n\n    var sprite = atlas.getSprite(\"terrains-5\");\n    addGroupSpriteRenderer(sprite, from.setValue(-6, -6, 0), to.setValue(6, -6, 0));\n    addGroupSpriteRenderer(sprite, from.setValue(-6, 6, 0), to.setValue(6, 6, 0));\n    addGroupSpriteRenderer(sprite, from.setValue(-6, -5, 0), to.setValue(-6, 5, 0));\n    addGroupSpriteRenderer(sprite, from.setValue(6, -5, 0), to.setValue(6, 5, 0)); // Draw the walls.\n\n    sprite = atlas.getSprite(\"terrains-3\");\n    addGroupSpriteRenderer(sprite, from.setValue(-5, -2, 0), to.setValue(-5, 5, 0));\n    addGroupSpriteRenderer(sprite, from.setValue(-4, -3, 0), to.setValue(-4, -1, 0));\n    addSpriteRenderer(sprite, from.setValue(-3, -2, 0));\n    addGroupSpriteRenderer(sprite, from.setValue(-2, -3, 0), to.setValue(-2, -2, 0));\n    addGroupSpriteRenderer(sprite, from.setValue(-1, -2, 0), to.setValue(-1, 5, 0));\n    addGroupSpriteRenderer(sprite, from.setValue(5, -2, 0), to.setValue(5, 5, 0));\n    addGroupSpriteRenderer(sprite, from.setValue(4, -3, 0), to.setValue(4, -1, 0));\n    addSpriteRenderer(sprite, from.setValue(3, -2, 0));\n    addGroupSpriteRenderer(sprite, from.setValue(2, -3, 0), to.setValue(2, -2, 0));\n    addGroupSpriteRenderer(sprite, from.setValue(1, -2, 0), to.setValue(1, 5, 0)); // Draw the ground.\n\n    sprite = atlas.getSprite(\"terrains-0\");\n    addGroupSpriteRenderer(sprite, from.setValue(0, -5, 0), to.setValue(0, 5, 0));\n    addGroupSpriteRenderer(sprite, from.setValue(-1, -3, 0), to.setValue(1, -3, 0)); // Draw the magma.\n\n    sprite = atlas.getSprite(\"terrains-45\");\n    addGroupSpriteRenderer(sprite, from.setValue(-5, -5, 0), to.setValue(-1, -4, 0));\n    addGroupSpriteRenderer(sprite, from.setValue(-4, -3, 0), to.setValue(-4, -3, 0));\n    addSpriteRenderer(sprite, from.setValue(-5, -3, 0));\n    addSpriteRenderer(sprite, from.setValue(-3, -3, 0));\n    addGroupSpriteRenderer(sprite, from.setValue(1, -5, 0), to.setValue(5, -4, 0));\n    addGroupSpriteRenderer(sprite, from.setValue(4, -3, 0), to.setValue(4, -3, 0));\n    addSpriteRenderer(sprite, from.setValue(5, -3, 0));\n    addSpriteRenderer(sprite, from.setValue(3, -3, 0)); // Draw the river.\n\n    sprite = atlas.getSprite(\"terrains-46\");\n    addGroupSpriteRenderer(sprite, from.setValue(-4, 0, 0), to.setValue(-2, 5, 0));\n    addGroupSpriteRenderer(sprite, from.setValue(-3, -1, 0), to.setValue(-2, -1, 0));\n    addGroupSpriteRenderer(sprite, from.setValue(2, 0, 0), to.setValue(4, 5, 0));\n    addGroupSpriteRenderer(sprite, from.setValue(2, -1, 0), to.setValue(3, -1, 0)); // Draw the npcs.\n\n    addSpriteRenderer(atlas.getSprite(\"npcs-0\"), from.setValue(0, -4, 1));\n    addSpriteRenderer(atlas.getSprite(\"npcs-7\"), from.setValue(-1, -3, 1));\n  });\n  /**\n   * Draw a set of items.\n   * @param spriteName - The name of the sprite resource used for drawing\n   * @param from  - Starting point of drawing\n   * @param to - End point of drawing\n   */\n\n  function addGroupSpriteRenderer(sprite, from, to) {\n    var fromX = from.x,\n        fromY = from.y;\n    var toX = to.x,\n        toY = to.y;\n\n    for (var i = fromX, n = toX; i <= n; i++) {\n      for (var j = fromY, m = toY; j <= m; j++) {\n        addSpriteRenderer(sprite, from.setValue(i, j, 0));\n      }\n    }\n  }\n  /**\n   * Draw an item.\n   * @param spriteName - The name of the sprite resource used for drawing\n   * @param position - Position of drawing\n   */\n\n\n  function addSpriteRenderer(sprite, position) {\n    var spriteEntity = rootEntity.createChild();\n    spriteEntity.transform.position = position;\n    spriteEntity.transform.scale.setValue(4, 4, 4);\n    spriteEntity.addComponent(_oasisEngine.SpriteRenderer).sprite = sprite;\n  }\n\n  engine.run();\n});"},"name":"sprite-atlas","title":"Sprite Atlas","category":"2D","id":"b0c7fef1-2582-5e1e-b74a-95b6ac9038ba","sourceCode":"/**\n * @title Sprite Atlas\n * @category 2D\n */\nimport { AssetType, Camera, Sprite, SpriteAtlas, SpriteRenderer, Vector3, WebGLEngine } from \"oasis-engine\";\n\n// Create engine object.\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\n// Create root entity.\nconst rootEntity = engine.sceneManager.activeScene.createRootEntity();\n\n// Create camera.\nconst cameraEntity = rootEntity.createChild(\"Camera\");\ncameraEntity.transform.setPosition(0, 0, 4);\ncameraEntity.addComponent(Camera).isOrthographic = true;\n\nengine.resourceManager\n  .load<SpriteAtlas>({\n    url: \"https://gw.alipayobjects.com/os/bmw-prod/da0bccd4-020a-41d5-82e0-a04f4413d9a6.atlas\",\n    type: AssetType.SpriteAtlas\n  })\n  .then((atlas) => {\n    const from = new Vector3();\n    const to = new Vector3();\n    // Draw the fence.\n    let sprite = atlas.getSprite(\"terrains-5\");\n    addGroupSpriteRenderer(sprite, from.setValue(-6, -6, 0), to.setValue(6, -6, 0));\n    addGroupSpriteRenderer(sprite, from.setValue(-6, 6, 0), to.setValue(6, 6, 0));\n    addGroupSpriteRenderer(sprite, from.setValue(-6, -5, 0), to.setValue(-6, 5, 0));\n    addGroupSpriteRenderer(sprite, from.setValue(6, -5, 0), to.setValue(6, 5, 0));\n\n    // Draw the walls.\n    sprite = atlas.getSprite(\"terrains-3\");\n    addGroupSpriteRenderer(sprite, from.setValue(-5, -2, 0), to.setValue(-5, 5, 0));\n    addGroupSpriteRenderer(sprite, from.setValue(-4, -3, 0), to.setValue(-4, -1, 0));\n    addSpriteRenderer(sprite, from.setValue(-3, -2, 0));\n    addGroupSpriteRenderer(sprite, from.setValue(-2, -3, 0), to.setValue(-2, -2, 0));\n    addGroupSpriteRenderer(sprite, from.setValue(-1, -2, 0), to.setValue(-1, 5, 0));\n    addGroupSpriteRenderer(sprite, from.setValue(5, -2, 0), to.setValue(5, 5, 0));\n    addGroupSpriteRenderer(sprite, from.setValue(4, -3, 0), to.setValue(4, -1, 0));\n    addSpriteRenderer(sprite, from.setValue(3, -2, 0));\n    addGroupSpriteRenderer(sprite, from.setValue(2, -3, 0), to.setValue(2, -2, 0));\n    addGroupSpriteRenderer(sprite, from.setValue(1, -2, 0), to.setValue(1, 5, 0));\n\n    // Draw the ground.\n    sprite = atlas.getSprite(\"terrains-0\");\n    addGroupSpriteRenderer(sprite, from.setValue(0, -5, 0), to.setValue(0, 5, 0));\n    addGroupSpriteRenderer(sprite, from.setValue(-1, -3, 0), to.setValue(1, -3, 0));\n\n    // Draw the magma.\n    sprite = atlas.getSprite(\"terrains-45\");\n    addGroupSpriteRenderer(sprite, from.setValue(-5, -5, 0), to.setValue(-1, -4, 0));\n    addGroupSpriteRenderer(sprite, from.setValue(-4, -3, 0), to.setValue(-4, -3, 0));\n    addSpriteRenderer(sprite, from.setValue(-5, -3, 0));\n    addSpriteRenderer(sprite, from.setValue(-3, -3, 0));\n    addGroupSpriteRenderer(sprite, from.setValue(1, -5, 0), to.setValue(5, -4, 0));\n    addGroupSpriteRenderer(sprite, from.setValue(4, -3, 0), to.setValue(4, -3, 0));\n    addSpriteRenderer(sprite, from.setValue(5, -3, 0));\n    addSpriteRenderer(sprite, from.setValue(3, -3, 0));\n\n    // Draw the river.\n    sprite = atlas.getSprite(\"terrains-46\");\n    addGroupSpriteRenderer(sprite, from.setValue(-4, 0, 0), to.setValue(-2, 5, 0));\n    addGroupSpriteRenderer(sprite, from.setValue(-3, -1, 0), to.setValue(-2, -1, 0));\n    addGroupSpriteRenderer(sprite, from.setValue(2, 0, 0), to.setValue(4, 5, 0));\n    addGroupSpriteRenderer(sprite, from.setValue(2, -1, 0), to.setValue(3, -1, 0));\n\n    // Draw the npcs.\n    addSpriteRenderer(atlas.getSprite(\"npcs-0\"), from.setValue(0, -4, 1));\n    addSpriteRenderer(atlas.getSprite(\"npcs-7\"), from.setValue(-1, -3, 1));\n  });\n\n/**\n * Draw a set of items.\n * @param spriteName - The name of the sprite resource used for drawing\n * @param from  - Starting point of drawing\n * @param to - End point of drawing\n */\nfunction addGroupSpriteRenderer(sprite: Sprite, from: Vector3, to: Vector3): void {\n  const { x: fromX, y: fromY } = from;\n  const { x: toX, y: toY } = to;\n  for (let i = fromX, n = toX; i <= n; i++) {\n    for (let j = fromY, m = toY; j <= m; j++) {\n      addSpriteRenderer(sprite, from.setValue(i, j, 0));\n    }\n  }\n}\n\n/**\n * Draw an item.\n * @param spriteName - The name of the sprite resource used for drawing\n * @param position - Position of drawing\n */\nfunction addSpriteRenderer(sprite: Sprite, position: Vector3): void {\n  const spriteEntity = rootEntity.createChild();\n  spriteEntity.transform.position = position;\n  spriteEntity.transform.scale.setValue(4, 4, 4);\n  spriteEntity.addComponent(SpriteRenderer).sprite = sprite;\n}\n\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Sprite Atlas\n * @category 2D\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AssetType<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> Sprite<span class=\"token punctuation\">,</span> SpriteAtlas<span class=\"token punctuation\">,</span> SpriteRenderer<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine object.</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create root entity.</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera.</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>isOrthographic <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>SpriteAtlas<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/da0bccd4-020a-41d5-82e0-a04f4413d9a6.atlas\"</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>SpriteAtlas\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">atlas</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> from <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> to <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Draw the fence.</span>\n    <span class=\"token keyword\">let</span> sprite <span class=\"token operator\">=</span> atlas<span class=\"token punctuation\">.</span><span class=\"token function\">getSprite</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"terrains-5\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addGroupSpriteRenderer</span><span class=\"token punctuation\">(</span>sprite<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addGroupSpriteRenderer</span><span class=\"token punctuation\">(</span>sprite<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addGroupSpriteRenderer</span><span class=\"token punctuation\">(</span>sprite<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addGroupSpriteRenderer</span><span class=\"token punctuation\">(</span>sprite<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Draw the walls.</span>\n    sprite <span class=\"token operator\">=</span> atlas<span class=\"token punctuation\">.</span><span class=\"token function\">getSprite</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"terrains-3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addGroupSpriteRenderer</span><span class=\"token punctuation\">(</span>sprite<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addGroupSpriteRenderer</span><span class=\"token punctuation\">(</span>sprite<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addSpriteRenderer</span><span class=\"token punctuation\">(</span>sprite<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addGroupSpriteRenderer</span><span class=\"token punctuation\">(</span>sprite<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addGroupSpriteRenderer</span><span class=\"token punctuation\">(</span>sprite<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addGroupSpriteRenderer</span><span class=\"token punctuation\">(</span>sprite<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addGroupSpriteRenderer</span><span class=\"token punctuation\">(</span>sprite<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addSpriteRenderer</span><span class=\"token punctuation\">(</span>sprite<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addGroupSpriteRenderer</span><span class=\"token punctuation\">(</span>sprite<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addGroupSpriteRenderer</span><span class=\"token punctuation\">(</span>sprite<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Draw the ground.</span>\n    sprite <span class=\"token operator\">=</span> atlas<span class=\"token punctuation\">.</span><span class=\"token function\">getSprite</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"terrains-0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addGroupSpriteRenderer</span><span class=\"token punctuation\">(</span>sprite<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addGroupSpriteRenderer</span><span class=\"token punctuation\">(</span>sprite<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Draw the magma.</span>\n    sprite <span class=\"token operator\">=</span> atlas<span class=\"token punctuation\">.</span><span class=\"token function\">getSprite</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"terrains-45\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addGroupSpriteRenderer</span><span class=\"token punctuation\">(</span>sprite<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addGroupSpriteRenderer</span><span class=\"token punctuation\">(</span>sprite<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addSpriteRenderer</span><span class=\"token punctuation\">(</span>sprite<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addSpriteRenderer</span><span class=\"token punctuation\">(</span>sprite<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addGroupSpriteRenderer</span><span class=\"token punctuation\">(</span>sprite<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addGroupSpriteRenderer</span><span class=\"token punctuation\">(</span>sprite<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addSpriteRenderer</span><span class=\"token punctuation\">(</span>sprite<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addSpriteRenderer</span><span class=\"token punctuation\">(</span>sprite<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Draw the river.</span>\n    sprite <span class=\"token operator\">=</span> atlas<span class=\"token punctuation\">.</span><span class=\"token function\">getSprite</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"terrains-46\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addGroupSpriteRenderer</span><span class=\"token punctuation\">(</span>sprite<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addGroupSpriteRenderer</span><span class=\"token punctuation\">(</span>sprite<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addGroupSpriteRenderer</span><span class=\"token punctuation\">(</span>sprite<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addGroupSpriteRenderer</span><span class=\"token punctuation\">(</span>sprite<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Draw the npcs.</span>\n    <span class=\"token function\">addSpriteRenderer</span><span class=\"token punctuation\">(</span>atlas<span class=\"token punctuation\">.</span><span class=\"token function\">getSprite</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"npcs-0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addSpriteRenderer</span><span class=\"token punctuation\">(</span>atlas<span class=\"token punctuation\">.</span><span class=\"token function\">getSprite</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"npcs-7\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Draw a set of items.\n * @param spriteName - The name of the sprite resource used for drawing\n * @param from  - Starting point of drawing\n * @param to - End point of drawing\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">addGroupSpriteRenderer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">sprite<span class=\"token operator\">:</span> Sprite<span class=\"token punctuation\">,</span> from<span class=\"token operator\">:</span> Vector3<span class=\"token punctuation\">,</span> to<span class=\"token operator\">:</span> Vector3</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> fromX<span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> fromY <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> from<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> x<span class=\"token operator\">:</span> toX<span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> toY <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> to<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> fromX<span class=\"token punctuation\">,</span> n <span class=\"token operator\">=</span> toX<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> j <span class=\"token operator\">=</span> fromY<span class=\"token punctuation\">,</span> m <span class=\"token operator\">=</span> toY<span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> m<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">addSpriteRenderer</span><span class=\"token punctuation\">(</span>sprite<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * Draw an item.\n * @param spriteName - The name of the sprite resource used for drawing\n * @param position - Position of drawing\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">addSpriteRenderer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">sprite<span class=\"token operator\">:</span> Sprite<span class=\"token punctuation\">,</span> position<span class=\"token operator\">:</span> Vector3</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> spriteEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  spriteEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> position<span class=\"token punctuation\">;</span>\n  spriteEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>scale<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>sprite <span class=\"token operator\">=</span> sprite<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  init();\n\n  function init() {\n    // Create engine.\n    var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n    engine.canvas.resizeByClientSize(); // Create root entity.\n\n    var rootEntity = engine.sceneManager.activeScene.createRootEntity(); // Create camera.\n\n    var cameraEntity = rootEntity.createChild(\"Camera\");\n    cameraEntity.transform.setPosition(0, 0, 12);\n    cameraEntity.addComponent(_oasisEngine.Camera);\n    cameraEntity.addComponent(_controls.OrbitControl);\n    engine.resourceManager.load({\n      // \bSprite texture\n      url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5wypQ5JyDLkAAAAAAAAAAAAAARQnAQ\",\n      type: _oasisEngine.AssetType.Texture2D\n    }).then(function (texture) {\n      // Create origin sprite entity.\n      var spriteEntity = rootEntity.createChild(\"GlitchSprite\");\n      var material = addCustomMaterial(engine);\n      var renderer = spriteEntity.addComponent(_oasisEngine.SpriteRenderer);\n      renderer.sprite = new _oasisEngine.Sprite(engine, texture);\n      renderer.setMaterial(material); // Add glitch animate script.\n\n      var script = spriteEntity.addComponent(AnimateScript); // Add custom material.\n\n      script.material = material; // Init time.\n\n      script.time = 0.0; // Add Data UI.\n\n      addDataGUI(script.material, script);\n    });\n    engine.run();\n  }\n\n  function addCustomMaterial(engine) {\n    var material = new _oasisEngine.Material(engine, _oasisEngine.Shader.find(\"SpriteGlitchRGBSplit\")); // Init state.\n\n    var renderState = material.renderState;\n    var target = renderState.blendState.targetBlendState;\n    target.enabled = true;\n    target.sourceColorBlendFactor = _oasisEngine.BlendFactor.SourceAlpha;\n    target.destinationColorBlendFactor = _oasisEngine.BlendFactor.OneMinusSourceAlpha;\n    target.sourceAlphaBlendFactor = _oasisEngine.BlendFactor.One;\n    target.destinationAlphaBlendFactor = _oasisEngine.BlendFactor.OneMinusSourceAlpha;\n    renderState.depthState.writeEnabled = false;\n    renderState.rasterState.cullMode = _oasisEngine.CullMode.Off;\n    material.renderQueueType = _oasisEngine.RenderQueueType.Transparent; // Set material shader data.\n\n    var shaderData = material.shaderData;\n    shaderData.setFloat(\"u_time\", 0.0);\n    shaderData.setFloat(\"u_indensity\", 0.5);\n    return material;\n  }\n  /**\n   * Add data GUI.\n   */\n\n\n  function addDataGUI(material, animationScript) {\n    var shaderData = material.shaderData;\n    var gui = new dat.GUI();\n    var guiData = {\n      indensity: 0.5,\n      reset: function reset() {\n        guiData.indensity = 0.5;\n        shaderData.setFloat(\"u_indensity\", 0.5);\n        shaderData.setFloat(\"u_time\", 0.0);\n        animationScript.time = 0;\n      }\n    };\n    gui.add(guiData, \"indensity\", 0.0, 1.0, 0.01).onChange(function (value) {\n      shaderData.setFloat(\"u_indensity\", value);\n      shaderData.setFloat(\"u_time\", 0.0);\n      animationScript.time = 0;\n    }).listen();\n    gui.add(guiData, \"reset\").name(\"重置\");\n    return guiData;\n  }\n\n  var AnimateScript = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(AnimateScript, _Script);\n\n    function AnimateScript() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _Script.call.apply(_Script, [this].concat(args)) || this;\n      _this.material = void 0;\n      _this.time = 0;\n      return _this;\n    }\n\n    var _proto = AnimateScript.prototype;\n\n    /**\n     * The main loop, called frame by frame.\n     * @param deltaTime - The deltaTime when the script update.\n     */\n    _proto.onUpdate = function onUpdate(deltaTime) {\n      this.time += deltaTime * 0.1;\n      this.time = this.time % 1; // Update material data.\n\n      this.material.shaderData.setFloat(\"u_time\", this.time);\n    };\n\n    return AnimateScript;\n  }(_oasisEngine.Script); // Custom shader\n\n\n  var spriteVertShader = \"\\n  uniform mat4 u_VPMat;\\n\\n  attribute vec3 POSITION;\\n  attribute vec2 TEXCOORD_0;\\n  attribute vec4 COLOR_0;\\n\\n  varying vec4 v_color;\\n  varying vec2 v_uv;\\n\\n  void main()\\n  {\\n    gl_Position = u_VPMat * vec4(POSITION, 1.0);\\n    v_color = COLOR_0;\\n    v_uv = TEXCOORD_0;\\n  }\\n\";\n  var spriteFragmentShader = \"\\n  uniform sampler2D u_spriteTexture;\\n  uniform float u_time;\\n  uniform float u_indensity;\\n\\n  varying vec2 v_uv;\\n  varying vec4 v_color;\\n\\n  float randomNoise(float time) {\\n    return fract(sin(dot(vec2(time, 2), vec2(12.9898, 78.233))));\\n  }\\n\\n  void main() {\\n    float splitAmount = u_indensity * randomNoise(u_time);\\n\\n    vec4 normalColor = texture2D(u_spriteTexture, v_uv);\\n    float r = texture2D(u_spriteTexture, vec2(v_uv.x + splitAmount, v_uv.y)).r;\\n    float b = texture2D(u_spriteTexture, vec2(v_uv.x - splitAmount, v_uv.y)).b;\\n    gl_FragColor = vec4(r, normalColor.g, b, normalColor.a) * v_color;\\n  }\\n\";\n\n  _oasisEngine.Shader.create(\"SpriteGlitchRGBSplit\", spriteVertShader, spriteFragmentShader);\n});"},"name":"sprite-material-glitch-rgbSplit","title":"Sprite Material Glitch","category":"2D","id":"01afc7d9-e462-512c-bffe-d9d231231e97","sourceCode":"/**\n * @title Sprite Material Glitch\n * @category 2D\n */\n\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\nimport {\n  AssetType,\n  BlendFactor,\n  Camera,\n  CullMode,\n  Engine,\n  Material,\n  RenderQueueType,\n  Script,\n  Shader,\n  Sprite,\n  SpriteRenderer,\n  Texture2D,\n  WebGLEngine\n} from \"oasis-engine\";\n\ninit();\n\nfunction init(): void {\n  // Create engine.\n  const engine = new WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n\n  // Create root entity.\n  const rootEntity = engine.sceneManager.activeScene.createRootEntity();\n\n  // Create camera.\n  const cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 0, 12);\n  cameraEntity.addComponent(Camera);\n  cameraEntity.addComponent(OrbitControl);\n\n  engine.resourceManager\n    .load({\n      // \bSprite texture\n      url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5wypQ5JyDLkAAAAAAAAAAAAAARQnAQ\",\n      type: AssetType.Texture2D\n    })\n    .then((texture: Texture2D) => {\n      // Create origin sprite entity.\n      const spriteEntity = rootEntity.createChild(\"GlitchSprite\");\n      const material = addCustomMaterial(engine);\n      const renderer = spriteEntity.addComponent(SpriteRenderer);\n      renderer.sprite = new Sprite(engine, texture);\n      renderer.setMaterial(material);\n\n      // Add glitch animate script.\n      const script = spriteEntity.addComponent(AnimateScript);\n      // Add custom material.\n      script.material = material;\n      // Init time.\n      script.time = 0.0;\n\n      // Add Data UI.\n      addDataGUI(script.material, script);\n    });\n\n  engine.run();\n}\n\nfunction addCustomMaterial(engine: Engine): Material {\n  const material = new Material(engine, Shader.find(\"SpriteGlitchRGBSplit\"));\n\n  // Init state.\n  const renderState = material.renderState;\n  const target = renderState.blendState.targetBlendState;\n  target.enabled = true;\n  target.sourceColorBlendFactor = BlendFactor.SourceAlpha;\n  target.destinationColorBlendFactor = BlendFactor.OneMinusSourceAlpha;\n  target.sourceAlphaBlendFactor = BlendFactor.One;\n  target.destinationAlphaBlendFactor = BlendFactor.OneMinusSourceAlpha;\n  renderState.depthState.writeEnabled = false;\n  renderState.rasterState.cullMode = CullMode.Off;\n  material.renderQueueType = RenderQueueType.Transparent;\n\n  // Set material shader data.\n  const { shaderData } = material;\n  shaderData.setFloat(\"u_time\", 0.0);\n  shaderData.setFloat(\"u_indensity\", 0.5);\n\n  return material;\n}\n\n/**\n * Add data GUI.\n */\nfunction addDataGUI(material: Material, animationScript: AnimateScript) {\n  const { shaderData } = material;\n  const gui = new dat.GUI();\n  const guiData = {\n    indensity: 0.5,\n    reset: () => {\n      guiData.indensity = 0.5;\n      shaderData.setFloat(\"u_indensity\", 0.5);\n      shaderData.setFloat(\"u_time\", 0.0);\n      animationScript.time = 0;\n    }\n  };\n\n  gui\n    .add(guiData, \"indensity\", 0.0, 1.0, 0.01)\n    .onChange((value: number) => {\n      shaderData.setFloat(\"u_indensity\", value);\n      shaderData.setFloat(\"u_time\", 0.0);\n      animationScript.time = 0;\n    })\n    .listen();\n\n  gui.add(guiData, \"reset\").name(\"重置\");\n  return guiData;\n}\n\nclass AnimateScript extends Script {\n  material: Material;\n  time: number = 0;\n\n  /**\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */\n  onUpdate(deltaTime: number): void {\n    this.time += deltaTime * 0.1;\n    this.time = this.time % 1;\n    // Update material data.\n    this.material.shaderData.setFloat(\"u_time\", this.time);\n  }\n}\n\n// Custom shader\nconst spriteVertShader = `\n  uniform mat4 u_VPMat;\n\n  attribute vec3 POSITION;\n  attribute vec2 TEXCOORD_0;\n  attribute vec4 COLOR_0;\n\n  varying vec4 v_color;\n  varying vec2 v_uv;\n\n  void main()\n  {\n    gl_Position = u_VPMat * vec4(POSITION, 1.0);\n    v_color = COLOR_0;\n    v_uv = TEXCOORD_0;\n  }\n`;\n\nconst spriteFragmentShader = `\n  uniform sampler2D u_spriteTexture;\n  uniform float u_time;\n  uniform float u_indensity;\n\n  varying vec2 v_uv;\n  varying vec4 v_color;\n\n  float randomNoise(float time) {\n    return fract(sin(dot(vec2(time, 2), vec2(12.9898, 78.233))));\n  }\n\n  void main() {\n    float splitAmount = u_indensity * randomNoise(u_time);\n\n    vec4 normalColor = texture2D(u_spriteTexture, v_uv);\n    float r = texture2D(u_spriteTexture, vec2(v_uv.x + splitAmount, v_uv.y)).r;\n    float b = texture2D(u_spriteTexture, vec2(v_uv.x - splitAmount, v_uv.y)).b;\n    gl_FragColor = vec4(r, normalColor.g, b, normalColor.a) * v_color;\n  }\n`;\n\nShader.create(\"SpriteGlitchRGBSplit\", spriteVertShader, spriteFragmentShader);\n","formatedCode":"<span class=\"token comment\">/**\n * @title Sprite Material Glitch\n * @category 2D\n */</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  BlendFactor<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  CullMode<span class=\"token punctuation\">,</span>\n  Engine<span class=\"token punctuation\">,</span>\n  Material<span class=\"token punctuation\">,</span>\n  RenderQueueType<span class=\"token punctuation\">,</span>\n  Script<span class=\"token punctuation\">,</span>\n  Shader<span class=\"token punctuation\">,</span>\n  Sprite<span class=\"token punctuation\">,</span>\n  SpriteRenderer<span class=\"token punctuation\">,</span>\n  Texture2D<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Create engine.</span>\n  <span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  engine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create root entity.</span>\n  <span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create camera.</span>\n  <span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  engine<span class=\"token punctuation\">.</span>resourceManager\n    <span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// \bSprite texture</span>\n      url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5wypQ5JyDLkAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture<span class=\"token operator\">:</span> Texture2D</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Create origin sprite entity.</span>\n      <span class=\"token keyword\">const</span> spriteEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GlitchSprite\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token function\">addCustomMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> renderer <span class=\"token operator\">=</span> spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      renderer<span class=\"token punctuation\">.</span>sprite <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      renderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Add glitch animate script.</span>\n      <span class=\"token keyword\">const</span> script <span class=\"token operator\">=</span> spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>AnimateScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// Add custom material.</span>\n      script<span class=\"token punctuation\">.</span>material <span class=\"token operator\">=</span> material<span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// Init time.</span>\n      script<span class=\"token punctuation\">.</span>time <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Add Data UI.</span>\n      <span class=\"token function\">addDataGUI</span><span class=\"token punctuation\">(</span>script<span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">,</span> script<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">addCustomMaterial</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">engine<span class=\"token operator\">:</span> Engine</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Material <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Material</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> Shader<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SpriteGlitchRGBSplit\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Init state.</span>\n  <span class=\"token keyword\">const</span> renderState <span class=\"token operator\">=</span> material<span class=\"token punctuation\">.</span>renderState<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> target <span class=\"token operator\">=</span> renderState<span class=\"token punctuation\">.</span>blendState<span class=\"token punctuation\">.</span>targetBlendState<span class=\"token punctuation\">;</span>\n  target<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  target<span class=\"token punctuation\">.</span>sourceColorBlendFactor <span class=\"token operator\">=</span> BlendFactor<span class=\"token punctuation\">.</span>SourceAlpha<span class=\"token punctuation\">;</span>\n  target<span class=\"token punctuation\">.</span>destinationColorBlendFactor <span class=\"token operator\">=</span> BlendFactor<span class=\"token punctuation\">.</span>OneMinusSourceAlpha<span class=\"token punctuation\">;</span>\n  target<span class=\"token punctuation\">.</span>sourceAlphaBlendFactor <span class=\"token operator\">=</span> BlendFactor<span class=\"token punctuation\">.</span>One<span class=\"token punctuation\">;</span>\n  target<span class=\"token punctuation\">.</span>destinationAlphaBlendFactor <span class=\"token operator\">=</span> BlendFactor<span class=\"token punctuation\">.</span>OneMinusSourceAlpha<span class=\"token punctuation\">;</span>\n  renderState<span class=\"token punctuation\">.</span>depthState<span class=\"token punctuation\">.</span>writeEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  renderState<span class=\"token punctuation\">.</span>rasterState<span class=\"token punctuation\">.</span>cullMode <span class=\"token operator\">=</span> CullMode<span class=\"token punctuation\">.</span>Off<span class=\"token punctuation\">;</span>\n  material<span class=\"token punctuation\">.</span>renderQueueType <span class=\"token operator\">=</span> RenderQueueType<span class=\"token punctuation\">.</span>Transparent<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Set material shader data.</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> shaderData <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> material<span class=\"token punctuation\">;</span>\n  shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_time\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_indensity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> material<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * Add data GUI.\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">addDataGUI</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">material<span class=\"token operator\">:</span> Material<span class=\"token punctuation\">,</span> animationScript<span class=\"token operator\">:</span> AnimateScript</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> shaderData <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> material<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> guiData <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    indensity<span class=\"token operator\">:</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">reset</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      guiData<span class=\"token punctuation\">.</span>indensity <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n      shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_indensity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_time\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      animationScript<span class=\"token punctuation\">.</span>time <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  gui\n    <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"indensity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_indensity\"</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_time\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      animationScript<span class=\"token punctuation\">.</span>time <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"reset\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"重置\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> guiData<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">AnimateScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  material<span class=\"token operator\">:</span> Material<span class=\"token punctuation\">;</span>\n  time<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/**\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */</span>\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span>deltaTime<span class=\"token operator\">:</span> number<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>time <span class=\"token operator\">+=</span> deltaTime <span class=\"token operator\">*</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>time <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>time <span class=\"token operator\">%</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Update material data.</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">.</span>shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_time\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Custom shader</span>\n<span class=\"token keyword\">const</span> spriteVertShader <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  uniform mat4 u_VPMat;\n\n  attribute vec3 POSITION;\n  attribute vec2 TEXCOORD_0;\n  attribute vec4 COLOR_0;\n\n  varying vec4 v_color;\n  varying vec2 v_uv;\n\n  void main()\n  {\n    gl_Position = u_VPMat * vec4(POSITION, 1.0);\n    v_color = COLOR_0;\n    v_uv = TEXCOORD_0;\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> spriteFragmentShader <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  uniform sampler2D u_spriteTexture;\n  uniform float u_time;\n  uniform float u_indensity;\n\n  varying vec2 v_uv;\n  varying vec4 v_color;\n\n  float randomNoise(float time) {\n    return fract(sin(dot(vec2(time, 2), vec2(12.9898, 78.233))));\n  }\n\n  void main() {\n    float splitAmount = u_indensity * randomNoise(u_time);\n\n    vec4 normalColor = texture2D(u_spriteTexture, v_uv);\n    float r = texture2D(u_spriteTexture, vec2(v_uv.x + splitAmount, v_uv.y)).r;\n    float b = texture2D(u_spriteTexture, vec2(v_uv.x - splitAmount, v_uv.y)).b;\n    gl_FragColor = vec4(r, normalColor.g, b, normalColor.a) * v_color;\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\nShader<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SpriteGlitchRGBSplit\"</span><span class=\"token punctuation\">,</span> spriteVertShader<span class=\"token punctuation\">,</span> spriteFragmentShader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title Mipmap\n   * @category Texture\n   */\n  var gui = new dat.GUI(); // Create engine object\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // Create camera\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 0, 1);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl); // Create Plane\n\n  var mesh = _oasisEngine.PrimitiveMesh.createPlane(engine, 2, 2);\n\n  var material = new _oasisEngine.UnlitMaterial(engine);\n  material.renderFace = _oasisEngine.RenderFace.Double;\n  material.tilingOffset.setValue(30, 30, 0, 0);\n  var planeEntity = rootEntity.createChild(\"ground\");\n  planeEntity.transform.setRotation(5, 0, 0);\n  var planeRenderer = planeEntity.addComponent(_oasisEngine.MeshRenderer);\n  planeRenderer.mesh = mesh;\n  planeRenderer.setMaterial(material);\n  var img = new Image();\n  img.crossOrigin = \"anonymous\";\n  img.src = \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_CtuR7LW4C0AAAAAAAAAAAAAARQnAQ\";\n\n  img.onload = function () {\n    var width = img.width,\n        height = img.height;\n    var texture = new _oasisEngine.Texture2D(engine, width, height);\n    texture.setImageSource(img);\n    texture.generateMipmaps();\n    var textureNoMipmap = new _oasisEngine.Texture2D(engine, width, height, undefined, false);\n    textureNoMipmap.setImageSource(img);\n    material.baseTexture = texture;\n    addGUI(texture, textureNoMipmap);\n    engine.run();\n  };\n\n  function addGUI(texture, textureNoMipmap) {\n    gui.add({\n      mipmap: true\n    }, \"mipmap\").onChange(function (v) {\n      if (v) {\n        material.baseTexture = texture;\n      } else {\n        material.baseTexture = textureNoMipmap;\n      }\n    });\n  }\n});"},"name":"texture-mipmap","title":"Mipmap","category":"Texture","id":"1cf415cb-8ce9-56f7-8591-66a5fd7fe875","sourceCode":"/**\n * @title Mipmap\n * @category Texture\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\nimport { Camera, MeshRenderer, PrimitiveMesh, RenderFace, Texture2D, UnlitMaterial, WebGLEngine } from \"oasis-engine\";\nconst gui = new dat.GUI();\n\n// Create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// Create camera\nconst cameraEntity = rootEntity.createChild(\"Camera\");\ncameraEntity.transform.setPosition(0, 0, 1);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\n// Create Plane\nconst mesh = PrimitiveMesh.createPlane(engine, 2, 2);\nconst material = new UnlitMaterial(engine);\nmaterial.renderFace = RenderFace.Double;\nmaterial.tilingOffset.setValue(30, 30, 0, 0);\nconst planeEntity = rootEntity.createChild(\"ground\");\nplaneEntity.transform.setRotation(5, 0, 0);\nconst planeRenderer = planeEntity.addComponent(MeshRenderer);\nplaneRenderer.mesh = mesh;\nplaneRenderer.setMaterial(material);\n\nconst img = new Image();\nimg.crossOrigin = \"anonymous\";\nimg.src = \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_CtuR7LW4C0AAAAAAAAAAAAAARQnAQ\";\nimg.onload = () => {\n  const { width, height } = img;\n  const texture = new Texture2D(engine, width, height);\n  texture.setImageSource(img);\n  texture.generateMipmaps();\n\n  const textureNoMipmap = new Texture2D(engine, width, height, undefined, false);\n  textureNoMipmap.setImageSource(img);\n\n  material.baseTexture = texture;\n  addGUI(texture, textureNoMipmap);\n  engine.run();\n};\n\nfunction addGUI(texture: Texture2D, textureNoMipmap: Texture2D) {\n  gui.add({ mipmap: true }, \"mipmap\").onChange((v) => {\n    if (v) {\n      material.baseTexture = texture;\n    } else {\n      material.baseTexture = textureNoMipmap;\n    }\n  });\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Mipmap\n * @category Texture\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Camera<span class=\"token punctuation\">,</span> MeshRenderer<span class=\"token punctuation\">,</span> PrimitiveMesh<span class=\"token punctuation\">,</span> RenderFace<span class=\"token punctuation\">,</span> Texture2D<span class=\"token punctuation\">,</span> UnlitMaterial<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create Plane</span>\n<span class=\"token keyword\">const</span> mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createPlane</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnlitMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmaterial<span class=\"token punctuation\">.</span>renderFace <span class=\"token operator\">=</span> RenderFace<span class=\"token punctuation\">.</span>Double<span class=\"token punctuation\">;</span>\nmaterial<span class=\"token punctuation\">.</span>tilingOffset<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> planeEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ground\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nplaneEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setRotation</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> planeRenderer <span class=\"token operator\">=</span> planeEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nplaneRenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> mesh<span class=\"token punctuation\">;</span>\nplaneRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> img <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Image</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nimg<span class=\"token punctuation\">.</span>crossOrigin <span class=\"token operator\">=</span> <span class=\"token string\">\"anonymous\"</span><span class=\"token punctuation\">;</span>\nimg<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_CtuR7LW4C0AAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">;</span>\nimg<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> width<span class=\"token punctuation\">,</span> height <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> img<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> texture <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Texture2D</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  texture<span class=\"token punctuation\">.</span><span class=\"token function\">setImageSource</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  texture<span class=\"token punctuation\">.</span><span class=\"token function\">generateMipmaps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> textureNoMipmap <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Texture2D</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  textureNoMipmap<span class=\"token punctuation\">.</span><span class=\"token function\">setImageSource</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  material<span class=\"token punctuation\">.</span>baseTexture <span class=\"token operator\">=</span> texture<span class=\"token punctuation\">;</span>\n  <span class=\"token function\">addGUI</span><span class=\"token punctuation\">(</span>texture<span class=\"token punctuation\">,</span> textureNoMipmap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">addGUI</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture<span class=\"token operator\">:</span> Texture2D<span class=\"token punctuation\">,</span> textureNoMipmap<span class=\"token operator\">:</span> Texture2D</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> mipmap<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"mipmap\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      material<span class=\"token punctuation\">.</span>baseTexture <span class=\"token operator\">=</span> texture<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      material<span class=\"token punctuation\">.</span>baseTexture <span class=\"token operator\">=</span> textureNoMipmap<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\", \"@tweenjs/tween.js\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"), require(\"@tweenjs/tween.js\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine, global.TWEEN);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine, TWEEN) {\n  \"use strict\";\n\n  TWEEN = _interopRequireWildcard(TWEEN);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  init();\n\n  function init() {\n    // Create engine object.\n    var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n    engine.canvas.resizeByClientSize(); // Create rootEntity.\n\n    var rootEntity = engine.sceneManager.activeScene.createRootEntity(); // Create camera.\n\n    var cameraEntity = rootEntity.createChild(\"Camera\");\n    cameraEntity.transform.setPosition(0, 0, 15);\n    cameraEntity.addComponent(_oasisEngine.Camera);\n    cameraEntity.addComponent(_controls.OrbitControl); // Load texture and create sprite sheet animation.\n\n    engine.resourceManager.load({\n      url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*9nsHSpx28rAAAAAAAAAAAAAAARQnAQ\",\n      type: _oasisEngine.AssetType.Texture2D\n    }).then(function (texture) {\n      var spriteEntity = rootEntity.createChild(\"Sprite\");\n      spriteEntity.addComponent(_oasisEngine.SpriteRenderer).sprite = new _oasisEngine.Sprite(engine, texture, null, null, 70);\n      spriteEntity.addComponent(FrameSpriteScript);\n    }); // Run engine.\n\n    engine.run();\n  }\n  /**\n   * Script for sprite sheet animation.\n   */\n\n\n  var FrameSpriteScript = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(FrameSpriteScript, _Script);\n\n    function FrameSpriteScript() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _Script.call.apply(_Script, [this].concat(args)) || this;\n      _this._regions = void 0;\n      _this._reciprocalSliceWidth = void 0;\n      _this._reciprocalSliceHeight = void 0;\n      _this._totalFrames = void 0;\n      _this._frameInterval = 150;\n      _this._sprite = void 0;\n      _this._curFrameIndex = void 0;\n      _this._cumulativeTime = 0;\n      _this._birdTransform = void 0;\n      return _this;\n    }\n\n    var _proto = FrameSpriteScript.prototype;\n\n    _proto.onAwake = function onAwake() {\n      // Sprite sheet animation pictures have 4 rows and 4 columns, if you modify the picture, please modify this.\n      var row = 3;\n      var col = 1;\n      var reciprocalSliceWidth = 1 / row;\n      var reciprocalSliceHeight = 1 / col;\n      var regions = new Array();\n\n      for (var i = 0; i < col; i++) {\n        var y = i * reciprocalSliceHeight;\n\n        for (var j = 0; j < row; j++) {\n          regions.push(new _oasisEngine.Vector2(j * reciprocalSliceWidth, y));\n        }\n      }\n\n      var entity = this.entity;\n      this._sprite = entity.getComponent(_oasisEngine.SpriteRenderer).sprite;\n      this._regions = regions;\n      this._reciprocalSliceWidth = reciprocalSliceWidth;\n      this._reciprocalSliceHeight = reciprocalSliceHeight;\n      this._totalFrames = row * col;\n\n      this._setFrameIndex(0);\n\n      this._birdTransform = entity.transform;\n      new TWEEN.Tween(this).to({\n        birdPosY: 0.4\n      }, 380).repeat(Infinity).yoyo(true).easing(TWEEN.Easing.Sinusoidal.InOut).start();\n    };\n\n    _proto.onUpdate = function onUpdate(deltaTime) {\n      // Update TWEEN\n      TWEEN.update();\n      var frameInterval = this._frameInterval;\n      this._cumulativeTime += deltaTime;\n\n      if (this._cumulativeTime >= frameInterval) {\n        // Need update frameIndex.\n        var addFrameCount = Math.floor(this._cumulativeTime / frameInterval);\n        this._cumulativeTime -= addFrameCount * frameInterval;\n\n        this._setFrameIndex((this._curFrameIndex + addFrameCount) % this._totalFrames);\n      }\n    };\n\n    _proto._setFrameIndex = function _setFrameIndex(frameIndex) {\n      if (this._curFrameIndex !== frameIndex) {\n        this._curFrameIndex = frameIndex;\n        var frameInfo = this._regions[frameIndex];\n        var region = this._sprite.region;\n        region.setValue(frameInfo.x, frameInfo.y, this._reciprocalSliceWidth, this._reciprocalSliceHeight);\n        this._sprite.region = region;\n      }\n    };\n\n    _createClass(FrameSpriteScript, [{\n      key: \"birdPosY\",\n      get: function get() {\n        return this._birdTransform.position.y;\n      },\n      set: function set(val) {\n        var transform = this._birdTransform;\n        var position = transform.position;\n        position.y = val;\n        transform.position = position;\n      }\n    }]);\n\n    return FrameSpriteScript;\n  }(_oasisEngine.Script);\n});"},"name":"sprite-sheetAnimation","title":"Sprite SheetAnimation","category":"2D","id":"2b860370-8414-5413-b4bb-f3ef4888946d","sourceCode":"/**\n * @title Sprite SheetAnimation\n * @category 2D\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport {\n  AssetType,\n  Camera,\n  Script,\n  Sprite,\n  SpriteRenderer,\n  Texture2D,\n  Vector2,\n  WebGLEngine,\n  Transform\n} from \"oasis-engine\";\nimport * as TWEEN from \"@tweenjs/tween.js\";\n\n\ninit();\n\nfunction init(): void {\n  // Create engine object.\n  const engine = new WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n\n  // Create rootEntity.\n  const rootEntity = engine.sceneManager.activeScene.createRootEntity();\n\n  // Create camera.\n  const cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 0, 15);\n  cameraEntity.addComponent(Camera);\n  cameraEntity.addComponent(OrbitControl);\n\n  // Load texture and create sprite sheet animation.\n  engine.resourceManager\n    .load<Texture2D>({\n      url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*9nsHSpx28rAAAAAAAAAAAAAAARQnAQ\",\n      type: AssetType.Texture2D\n    })\n    .then((texture) => {\n      const spriteEntity = rootEntity.createChild(\"Sprite\");\n      spriteEntity.addComponent(SpriteRenderer).sprite = new Sprite(engine, texture, null, null, 70);\n      spriteEntity.addComponent(FrameSpriteScript);\n    });\n\n  // Run engine.\n  engine.run();\n}\n\n/**\n * Script for sprite sheet animation.\n */\nclass FrameSpriteScript extends Script {\n  /** Offsets of sprite sheet animation. */\n  private _regions: Vector2[];\n  /** Reciprocal Of SliceWidth. */\n  private _reciprocalSliceWidth: number;\n  /** Reciprocal Of SliceHeight. */\n  private _reciprocalSliceHeight: number;\n  /** Total frames. */\n  private _totalFrames: number;\n  /** Frame interval time, the unit of time is ms. */\n  private _frameInterval: number = 150;\n\n  private _sprite: Sprite;\n  private _curFrameIndex: number;\n  private _cumulativeTime: number = 0;\n  private _birdTransform: Transform;\n\n  onAwake(): void {\n    // Sprite sheet animation pictures have 4 rows and 4 columns, if you modify the picture, please modify this.\n    const row = 3;\n    const col = 1;\n    const reciprocalSliceWidth = 1 / row;\n    const reciprocalSliceHeight = 1 / col;\n    const regions = new Array<Vector2>();\n    for (let i = 0; i < col; i++) {\n      const y = i * reciprocalSliceHeight;\n      for (let j = 0; j < row; j++) {\n        regions.push(new Vector2(j * reciprocalSliceWidth, y));\n      }\n    }\n\n    const {entity} = this;\n    this._sprite = entity.getComponent(SpriteRenderer).sprite;\n    this._regions = regions;\n    this._reciprocalSliceWidth = reciprocalSliceWidth;\n    this._reciprocalSliceHeight = reciprocalSliceHeight;\n    this._totalFrames = row * col;\n    this._setFrameIndex(0);\n\n    this._birdTransform = entity.transform;\n    new TWEEN.Tween(this)\n      .to({ birdPosY: 0.4 }, 380)\n      .repeat(Infinity)\n      .yoyo(true)\n      .easing(TWEEN.Easing.Sinusoidal.InOut)\n      .start();\n  }\n\n  onUpdate(deltaTime: number): void {\n    // Update TWEEN\n    TWEEN.update();\n\n    const frameInterval = this._frameInterval;\n    this._cumulativeTime += deltaTime;\n    if (this._cumulativeTime >= frameInterval) {\n      // Need update frameIndex.\n      const addFrameCount = Math.floor(this._cumulativeTime / frameInterval);\n      this._cumulativeTime -= addFrameCount * frameInterval;\n      this._setFrameIndex((this._curFrameIndex + addFrameCount) % this._totalFrames);\n    }\n  }\n\n  private _setFrameIndex(frameIndex: number): void {\n    if (this._curFrameIndex !== frameIndex) {\n      this._curFrameIndex = frameIndex;\n      const frameInfo = this._regions[frameIndex];\n      const region = this._sprite.region;\n      region.setValue(frameInfo.x, frameInfo.y, this._reciprocalSliceWidth, this._reciprocalSliceHeight);\n      this._sprite.region = region;\n    }\n  }\n\n  set birdPosY(val) {\n    const transform = this._birdTransform;\n    const position = transform.position;\n    position.y = val;\n    transform.position = position;\n  }\n\n  get birdPosY() {\n    return this._birdTransform.position.y;\n  }\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Sprite SheetAnimation\n * @category 2D\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  Script<span class=\"token punctuation\">,</span>\n  Sprite<span class=\"token punctuation\">,</span>\n  SpriteRenderer<span class=\"token punctuation\">,</span>\n  Texture2D<span class=\"token punctuation\">,</span>\n  Vector2<span class=\"token punctuation\">,</span>\n  WebGLEngine<span class=\"token punctuation\">,</span>\n  Transform\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> <span class=\"token constant\">TWEEN</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@tweenjs/tween.js\"</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Create engine object.</span>\n  <span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  engine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create rootEntity.</span>\n  <span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create camera.</span>\n  <span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Load texture and create sprite sheet animation.</span>\n  engine<span class=\"token punctuation\">.</span>resourceManager\n    <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*9nsHSpx28rAAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> spriteEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sprite\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>sprite <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">70</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>FrameSpriteScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Run engine.</span>\n  engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * Script for sprite sheet animation.\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">FrameSpriteScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/** Offsets of sprite sheet animation. */</span>\n  <span class=\"token keyword\">private</span> _regions<span class=\"token operator\">:</span> Vector2<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/** Reciprocal Of SliceWidth. */</span>\n  <span class=\"token keyword\">private</span> _reciprocalSliceWidth<span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/** Reciprocal Of SliceHeight. */</span>\n  <span class=\"token keyword\">private</span> _reciprocalSliceHeight<span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/** Total frames. */</span>\n  <span class=\"token keyword\">private</span> _totalFrames<span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/** Frame interval time, the unit of time is ms. */</span>\n  <span class=\"token keyword\">private</span> _frameInterval<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">150</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">private</span> _sprite<span class=\"token operator\">:</span> Sprite<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> _curFrameIndex<span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> _cumulativeTime<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> _birdTransform<span class=\"token operator\">:</span> Transform<span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">onAwake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Sprite sheet animation pictures have 4 rows and 4 columns, if you modify the picture, please modify this.</span>\n    <span class=\"token keyword\">const</span> row <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> col <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> reciprocalSliceWidth <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">/</span> row<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> reciprocalSliceHeight <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">/</span> col<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> regions <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token operator\">&lt;</span>Vector2<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> col<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> y <span class=\"token operator\">=</span> i <span class=\"token operator\">*</span> reciprocalSliceHeight<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> row<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        regions<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector2</span><span class=\"token punctuation\">(</span>j <span class=\"token operator\">*</span> reciprocalSliceWidth<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>entity<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_sprite <span class=\"token operator\">=</span> entity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>sprite<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_regions <span class=\"token operator\">=</span> regions<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_reciprocalSliceWidth <span class=\"token operator\">=</span> reciprocalSliceWidth<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_reciprocalSliceHeight <span class=\"token operator\">=</span> reciprocalSliceHeight<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_totalFrames <span class=\"token operator\">=</span> row <span class=\"token operator\">*</span> col<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_setFrameIndex</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_birdTransform <span class=\"token operator\">=</span> entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">TWEEN<span class=\"token punctuation\">.</span>Tween</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">to</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> birdPosY<span class=\"token operator\">:</span> <span class=\"token number\">0.4</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">380</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">repeat</span><span class=\"token punctuation\">(</span><span class=\"token number\">Infinity</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">yoyo</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">easing</span><span class=\"token punctuation\">(</span><span class=\"token constant\">TWEEN</span><span class=\"token punctuation\">.</span>Easing<span class=\"token punctuation\">.</span>Sinusoidal<span class=\"token punctuation\">.</span>InOut<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span>deltaTime<span class=\"token operator\">:</span> number<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Update TWEEN</span>\n    <span class=\"token constant\">TWEEN</span><span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> frameInterval <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_frameInterval<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_cumulativeTime <span class=\"token operator\">+=</span> deltaTime<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_cumulativeTime <span class=\"token operator\">>=</span> frameInterval<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Need update frameIndex.</span>\n      <span class=\"token keyword\">const</span> addFrameCount <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_cumulativeTime <span class=\"token operator\">/</span> frameInterval<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_cumulativeTime <span class=\"token operator\">-=</span> addFrameCount <span class=\"token operator\">*</span> frameInterval<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_setFrameIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_curFrameIndex <span class=\"token operator\">+</span> addFrameCount<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_totalFrames<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">private</span> <span class=\"token function\">_setFrameIndex</span><span class=\"token punctuation\">(</span>frameIndex<span class=\"token operator\">:</span> number<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_curFrameIndex <span class=\"token operator\">!==</span> frameIndex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_curFrameIndex <span class=\"token operator\">=</span> frameIndex<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> frameInfo <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_regions<span class=\"token punctuation\">[</span>frameIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> region <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_sprite<span class=\"token punctuation\">.</span>region<span class=\"token punctuation\">;</span>\n      region<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>frameInfo<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> frameInfo<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_reciprocalSliceWidth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_reciprocalSliceHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_sprite<span class=\"token punctuation\">.</span>region <span class=\"token operator\">=</span> region<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">set</span> <span class=\"token function\">birdPosY</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">val</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> transform <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_birdTransform<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> position <span class=\"token operator\">=</span> transform<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">;</span>\n    position<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> val<span class=\"token punctuation\">;</span>\n    transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> position<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">get</span> <span class=\"token function\">birdPosY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_birdTransform<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  init();\n  /**\n   * Init demo.\n   */\n\n  function init() {\n    // Create engine\n    var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n    engine.canvas.resizeByClientSize(); // Create yellow duck\n\n    engine.resourceManager.load(\"https://gw.alipayobjects.com/os/OasisHub/267000040/9994/%25E5%25BD%2592%25E6%25A1%25A3.gltf\").then(function (gltf) {\n      // Create root entity.\n      var rootEntity = engine.sceneManager.activeScene.createRootEntity(); // Create camera.\n\n      var cameraEntity = rootEntity.createChild(\"CameraEntity\");\n      cameraEntity.transform.setPosition(0, 3, 9);\n      cameraEntity.addComponent(_oasisEngine.Camera);\n      cameraEntity.addComponent(_controls.OrbitControl); // Create light.\n\n      var lightEntity = rootEntity.createChild(\"LightEntity\");\n      var directLight = lightEntity.addComponent(_oasisEngine.DirectLight);\n      directLight.color = new _oasisEngine.Color(0.8, 0.8, 0.8); // Create three duck modles, set rotation and position.\n\n      var duck0 = gltf.defaultSceneRoot;\n      duck0.transform.rotate(0, -45, 0);\n      var duck1 = duck0.clone();\n      var duck2 = duck0.clone();\n      duck1.transform.setPosition(-3, 0, 0);\n      duck2.transform.setPosition(3, 0, 0); // Create root entity and add transform script.\n\n      var script = rootEntity.addComponent(TransformScript);\n      script.duck0 = duck0;\n      script.duck1 = duck1;\n      script.duck2 = duck2; // Add ducks to scene.\n\n      rootEntity.addChild(duck0);\n      rootEntity.addChild(duck1);\n      rootEntity.addChild(duck2); //Run engine.\n\n      engine.run();\n    });\n  }\n  /**\n   * Script for updating ducks position, rotation, and scale.\n   */\n\n\n  var TransformScript = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(TransformScript, _Script);\n\n    function TransformScript() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _Script.call.apply(_Script, [this].concat(args)) || this;\n      _this.duck0 = void 0;\n      _this.duck1 = void 0;\n      _this.duck2 = void 0;\n      _this._totalTime = 0;\n      return _this;\n    }\n\n    var _proto = TransformScript.prototype;\n\n    /**\n     * @override\n     * The main loop, called frame by frame.\n     * @param deltaTime - The deltaTime when the script update.\n     */\n    _proto.onUpdate = function onUpdate(deltaTime) {\n      this._totalTime += deltaTime;\n      var sinFactor = Math.sin(this._totalTime / 500); // Update duck0's position.\n\n      var positionFactor = Math.max(sinFactor, 0);\n      this.duck0.transform.setPosition(0, positionFactor, 0); // Update duck1's roatation.\n\n      var rotateFactor = this._totalTime * 0.1;\n      this.duck1.transform.setRotation(0, rotateFactor, 0); // Update duck2's scale.\n\n      var scaleFactor = (sinFactor + 1.0) * 0.01;\n      this.duck2.transform.setScale(scaleFactor, scaleFactor, scaleFactor);\n    };\n\n    return TransformScript;\n  }(_oasisEngine.Script);\n});"},"name":"transform-basic","title":"Transform Basic","category":"Basic","id":"2d0b24b5-59cb-5db5-ab3a-e9d022e9903d","sourceCode":"/**\n * @title Transform Basic\n * @category Basic\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport { Camera, Color, DirectLight, Entity, GLTFResource, Script, WebGLEngine } from \"oasis-engine\";\n\ninit();\n\n/**\n * Init demo.\n */\nfunction init(): void {\n  // Create engine\n  const engine = new WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n\n  // Create yellow duck\n  engine.resourceManager\n    .load<GLTFResource>(\"https://gw.alipayobjects.com/os/OasisHub/267000040/9994/%25E5%25BD%2592%25E6%25A1%25A3.gltf\")\n    .then((gltf) => {\n      // Create root entity.\n      const rootEntity = engine.sceneManager.activeScene.createRootEntity();\n\n      // Create camera.\n      const cameraEntity = rootEntity.createChild(\"CameraEntity\");\n      cameraEntity.transform.setPosition(0, 3, 9);\n      cameraEntity.addComponent(Camera);\n      cameraEntity.addComponent(OrbitControl);\n\n      // Create light.\n      const lightEntity = rootEntity.createChild(\"LightEntity\");\n      const directLight = lightEntity.addComponent(DirectLight);\n      directLight.color = new Color(0.8, 0.8, 0.8);\n\n      // Create three duck modles, set rotation and position.\n      const duck0 = gltf.defaultSceneRoot;\n      duck0.transform.rotate(0, -45, 0);\n\n      const duck1 = duck0.clone();\n      const duck2 = duck0.clone();\n      duck1.transform.setPosition(-3, 0, 0);\n      duck2.transform.setPosition(3, 0, 0);\n\n      // Create root entity and add transform script.\n      const script = rootEntity.addComponent(TransformScript);\n      script.duck0 = duck0;\n      script.duck1 = duck1;\n      script.duck2 = duck2;\n\n      // Add ducks to scene.\n      rootEntity.addChild(duck0);\n      rootEntity.addChild(duck1);\n      rootEntity.addChild(duck2);\n\n      //Run engine.\n      engine.run();\n    });\n}\n\n/**\n * Script for updating ducks position, rotation, and scale.\n */\nclass TransformScript extends Script {\n  /** Duck0. */\n  duck0: Entity;\n  /** Duck1. */\n  duck1: Entity;\n  /** Duck2. */\n  duck2: Entity;\n\n  private _totalTime: number = 0;\n\n  /**\n   * @override\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */\n  onUpdate(deltaTime: number): void {\n    this._totalTime += deltaTime;\n    const sinFactor = Math.sin(this._totalTime / 500);\n\n    // Update duck0's position.\n    const positionFactor = Math.max(sinFactor, 0);\n    this.duck0.transform.setPosition(0, positionFactor, 0);\n\n    // Update duck1's roatation.\n    const rotateFactor = this._totalTime * 0.1;\n    this.duck1.transform.setRotation(0, rotateFactor, 0);\n\n    // Update duck2's scale.\n    const scaleFactor = (sinFactor + 1.0) * 0.01;\n    this.duck2.transform.setScale(scaleFactor, scaleFactor, scaleFactor);\n  }\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Transform Basic\n * @category Basic\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Camera<span class=\"token punctuation\">,</span> Color<span class=\"token punctuation\">,</span> DirectLight<span class=\"token punctuation\">,</span> Entity<span class=\"token punctuation\">,</span> GLTFResource<span class=\"token punctuation\">,</span> Script<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Init demo.\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Create engine</span>\n  <span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  engine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create yellow duck</span>\n  engine<span class=\"token punctuation\">.</span>resourceManager\n    <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>GLTFResource<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://gw.alipayobjects.com/os/OasisHub/267000040/9994/%25E5%25BD%2592%25E6%25A1%25A3.gltf\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">gltf</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Create root entity.</span>\n      <span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Create camera.</span>\n      <span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CameraEntity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      cameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Create light.</span>\n      <span class=\"token keyword\">const</span> lightEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"LightEntity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> directLight <span class=\"token operator\">=</span> lightEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      directLight<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Create three duck modles, set rotation and position.</span>\n      <span class=\"token keyword\">const</span> duck0 <span class=\"token operator\">=</span> gltf<span class=\"token punctuation\">.</span>defaultSceneRoot<span class=\"token punctuation\">;</span>\n      duck0<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">const</span> duck1 <span class=\"token operator\">=</span> duck0<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> duck2 <span class=\"token operator\">=</span> duck0<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      duck1<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      duck2<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Create root entity and add transform script.</span>\n      <span class=\"token keyword\">const</span> script <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>TransformScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      script<span class=\"token punctuation\">.</span>duck0 <span class=\"token operator\">=</span> duck0<span class=\"token punctuation\">;</span>\n      script<span class=\"token punctuation\">.</span>duck1 <span class=\"token operator\">=</span> duck1<span class=\"token punctuation\">;</span>\n      script<span class=\"token punctuation\">.</span>duck2 <span class=\"token operator\">=</span> duck2<span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Add ducks to scene.</span>\n      rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>duck0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>duck1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>duck2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">//Run engine.</span>\n      engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * Script for updating ducks position, rotation, and scale.\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">TransformScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/** Duck0. */</span>\n  duck0<span class=\"token operator\">:</span> Entity<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/** Duck1. */</span>\n  duck1<span class=\"token operator\">:</span> Entity<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/** Duck2. */</span>\n  duck2<span class=\"token operator\">:</span> Entity<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">private</span> _totalTime<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/**\n   * @override\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */</span>\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span>deltaTime<span class=\"token operator\">:</span> number<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_totalTime <span class=\"token operator\">+=</span> deltaTime<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> sinFactor <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_totalTime <span class=\"token operator\">/</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Update duck0's position.</span>\n    <span class=\"token keyword\">const</span> positionFactor <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>sinFactor<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>duck0<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> positionFactor<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Update duck1's roatation.</span>\n    <span class=\"token keyword\">const</span> rotateFactor <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_totalTime <span class=\"token operator\">*</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>duck1<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setRotation</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> rotateFactor<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Update duck2's scale.</span>\n    <span class=\"token keyword\">const</span> scaleFactor <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>sinFactor <span class=\"token operator\">+</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>duck2<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span>scaleFactor<span class=\"token punctuation\">,</span> scaleFactor<span class=\"token punctuation\">,</span> scaleFactor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title Unlit Material\n   * @category Material\n   */\n  var gui = new dat.GUI(); // Create engine object\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // Create camera\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 0, 5);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl);\n  engine.run();\n  engine.resourceManager.load(\"https://gw.alipayobjects.com/os/bmw-prod/8d36415b-5905-461f-9336-68a23d41518e.gltf\").then(function (gltf) {\n    var materials = gltf.materials,\n        animations = gltf.animations,\n        defaultSceneRoot = gltf.defaultSceneRoot;\n    rootEntity.addChild(defaultSceneRoot);\n    var animator = defaultSceneRoot.getComponent(_oasisEngine.Animator);\n    animator.play(animations[0].name);\n    addGUI(materials);\n  });\n\n  function addGUI(materials) {\n    var state = {\n      baseColor: [255, 255, 255]\n    };\n    gui.addColor(state, \"baseColor\").onChange(function (v) {\n      materials.forEach(function (material) {\n        material.baseColor.setValue(v[0] / 255, v[1] / 255, v[2] / 255, 1);\n      });\n    });\n  }\n});"},"name":"unlit-material","title":"Unlit Material","category":"Material","id":"40d2c376-1221-5f61-86b3-561c59624613","sourceCode":"/**\n * @title Unlit Material\n * @category Material\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\nimport { Animator, Camera, GLTFResource, UnlitMaterial, Vector3, WebGLEngine } from \"oasis-engine\";\nconst gui = new dat.GUI();\n\n// Create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// Create camera\nconst cameraEntity = rootEntity.createChild(\"Camera\");\ncameraEntity.transform.position = new Vector3(0, 0, 5);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\nengine.run();\n\nengine.resourceManager\n  .load<GLTFResource>(\"https://gw.alipayobjects.com/os/bmw-prod/8d36415b-5905-461f-9336-68a23d41518e.gltf\")\n  .then((gltf) => {\n    const { materials, animations, defaultSceneRoot } = gltf;\n    rootEntity.addChild(defaultSceneRoot);\n\n    const animator = defaultSceneRoot.getComponent(Animator);\n    animator.play(animations[0].name);\n    addGUI(materials as UnlitMaterial[]);\n  });\n\nfunction addGUI(materials: UnlitMaterial[]) {\n  const state = {\n    baseColor: [255, 255, 255]\n  };\n\n  gui.addColor(state, \"baseColor\").onChange((v) => {\n    materials.forEach((material) => {\n      material.baseColor.setValue(v[0] / 255, v[1] / 255, v[2] / 255, 1);\n    });\n  });\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Unlit Material\n * @category Material\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Animator<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> GLTFResource<span class=\"token punctuation\">,</span> UnlitMaterial<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>GLTFResource<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/8d36415b-5905-461f-9336-68a23d41518e.gltf\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">gltf</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> materials<span class=\"token punctuation\">,</span> animations<span class=\"token punctuation\">,</span> defaultSceneRoot <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> gltf<span class=\"token punctuation\">;</span>\n    rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>defaultSceneRoot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> animator <span class=\"token operator\">=</span> defaultSceneRoot<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>Animator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    animator<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span>animations<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addGUI</span><span class=\"token punctuation\">(</span>materials <span class=\"token keyword\">as</span> UnlitMaterial<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">addGUI</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">materials<span class=\"token operator\">:</span> UnlitMaterial<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    baseColor<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">addColor</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"baseColor\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    materials<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">material</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      material<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  // Create engine object\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // Create camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_entity\");\n  cameraEntity.transform.setPosition(0, 0, 50);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl); // Create sprite renderer\n\n  engine.resourceManager.load({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*ApFPTZSqcMkAAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }).then(function (texture) {\n    var _loop = function _loop(i) {\n      setTimeout(function () {\n        var spriteEntity = rootEntity.createChild(\"sprite_\" + i);\n        spriteEntity.transform.position = new _oasisEngine.Vector3(0, 0, 0);\n        var spriteRenderer = spriteEntity.addComponent(_oasisEngine.SpriteRenderer);\n        var sprite = new _oasisEngine.Sprite(engine, texture);\n        spriteRenderer.sprite = sprite; // spriteRenderer.flipX = true;\n        // spriteRenderer.flipY = true;\n\n        var rect = spriteRenderer.sprite.region;\n        var scaleX = 100.0 / rect.width;\n        var scaleY = 100.0 / rect.height;\n        spriteEntity.transform.setScale(scaleX, scaleY, 1);\n        spriteEntity.addComponent(SpriteController);\n      }, 2000 * i);\n    };\n\n    for (var i = 0; i < 10; ++i) {\n      _loop(i);\n    }\n  });\n  engine.run(); // Script for sprite\n\n  var SpriteController = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(SpriteController, _Script);\n\n    function SpriteController() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _Script.call.apply(_Script, [this].concat(args)) || this;\n      _this._radius = 1.5;\n      _this._curRadian = void 0;\n      _this._scale = void 0;\n      _this._scaleFlag = void 0;\n      return _this;\n    }\n\n    var _proto = SpriteController.prototype;\n\n    _proto.onAwake = function onAwake() {\n      this._curRadian = 0;\n      this._radius = 15;\n      this._scale = 0.5;\n      this._scaleFlag = true;\n    };\n\n    _proto.onUpdate = function onUpdate() {\n      // Update position.\n      this._curRadian += 0.005;\n      var _radius = this._radius,\n          _curRadian = this._curRadian,\n          entity = this.entity;\n      var transform = entity.transform;\n\n      var posX = Math.cos(_curRadian) * _radius;\n\n      var posY = Math.sin(_curRadian) * _radius;\n\n      transform.setPosition(posX, posY, 0); // Update scale.\n\n      this._scale += this._scaleFlag ? 0.005 : -0.005;\n      var _scale = this._scale;\n      transform.setScale(_scale, _scale, _scale);\n\n      if (this._scale >= 0.6) {\n        this._scaleFlag = false;\n      } else if (this._scale <= 0.4) {\n        this._scaleFlag = true;\n      } // Update rotation.\n\n\n      SpriteController._curRotation += 0.05;\n      var _curRotation = SpriteController._curRotation;\n      transform.setRotation(0, 0, _curRotation);\n    };\n\n    return SpriteController;\n  }(_oasisEngine.Script);\n\n  SpriteController._curRotation = 0;\n});"},"name":"sprite-renderer","title":"Sprite Renderer","category":"2D","id":"29e620be-ac2d-52af-9aaf-da989807f25f","sourceCode":"/**\n * @title Sprite Renderer\n * @category 2D\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport { AssetType, Camera, Script, Sprite, SpriteRenderer, Texture2D, Vector3, WebGLEngine } from \"oasis-engine\";\n\n// Create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// Create camera\nconst cameraEntity = rootEntity.createChild(\"camera_entity\");\ncameraEntity.transform.setPosition(0, 0, 50);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\n// Create sprite renderer\nengine.resourceManager\n  .load<Texture2D>({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*ApFPTZSqcMkAAAAAAAAAAAAAARQnAQ\",\n    type: AssetType.Texture2D\n  })\n  .then((texture) => {\n    for (let i = 0; i < 10; ++i) {\n      setTimeout(() => {\n        const spriteEntity = rootEntity.createChild(`sprite_${i}`);\n        spriteEntity.transform.position = new Vector3(0, 0, 0);\n        const spriteRenderer = spriteEntity.addComponent(SpriteRenderer);\n        const sprite = new Sprite(engine, texture);\n        spriteRenderer.sprite = sprite;\n        // spriteRenderer.flipX = true;\n        // spriteRenderer.flipY = true;\n        const rect = spriteRenderer.sprite.region;\n        const scaleX = 100.0 / rect.width;\n        const scaleY = 100.0 / rect.height;\n        spriteEntity.transform.setScale(scaleX, scaleY, 1);\n        spriteEntity.addComponent(SpriteController);\n      }, 2000 * i);\n    }\n  });\n\nengine.run();\n\n// Script for sprite\nclass SpriteController extends Script {\n  static _curRotation: number = 0;\n\n  private _radius: number = 1.5;\n  private _curRadian: number;\n  private _scale: number;\n  private _scaleFlag: boolean;\n\n  onAwake() {\n    this._curRadian = 0;\n    this._radius = 15;\n    this._scale = 0.5;\n    this._scaleFlag = true;\n  }\n\n  onUpdate() {\n    // Update position.\n    this._curRadian += 0.005;\n    const { _radius, _curRadian, entity } = this;\n    const { transform } = entity;\n    const posX = Math.cos(_curRadian) * _radius;\n    const posY = Math.sin(_curRadian) * _radius;\n    transform.setPosition(posX, posY, 0);\n\n    // Update scale.\n    this._scale += this._scaleFlag ? 0.005 : -0.005;\n    const { _scale } = this;\n    transform.setScale(_scale, _scale, _scale);\n    if (this._scale >= 0.6) {\n      this._scaleFlag = false;\n    } else if (this._scale <= 0.4) {\n      this._scaleFlag = true;\n    }\n\n    // Update rotation.\n    SpriteController._curRotation += 0.05;\n    const { _curRotation } = SpriteController;\n    transform.setRotation(0, 0, _curRotation);\n  }\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Sprite Renderer\n * @category 2D\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AssetType<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> Script<span class=\"token punctuation\">,</span> Sprite<span class=\"token punctuation\">,</span> SpriteRenderer<span class=\"token punctuation\">,</span> Texture2D<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_entity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create sprite renderer</span>\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*ApFPTZSqcMkAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> spriteEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">sprite_</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>i<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        spriteEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> spriteRenderer <span class=\"token operator\">=</span> spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> sprite <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        spriteRenderer<span class=\"token punctuation\">.</span>sprite <span class=\"token operator\">=</span> sprite<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// spriteRenderer.flipX = true;</span>\n        <span class=\"token comment\">// spriteRenderer.flipY = true;</span>\n        <span class=\"token keyword\">const</span> rect <span class=\"token operator\">=</span> spriteRenderer<span class=\"token punctuation\">.</span>sprite<span class=\"token punctuation\">.</span>region<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> scaleX <span class=\"token operator\">=</span> <span class=\"token number\">100.0</span> <span class=\"token operator\">/</span> rect<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> scaleY <span class=\"token operator\">=</span> <span class=\"token number\">100.0</span> <span class=\"token operator\">/</span> rect<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n        spriteEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span>scaleX<span class=\"token punctuation\">,</span> scaleY<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpriteController<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Script for sprite</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SpriteController</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> _curRotation<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">private</span> _radius<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> _curRadian<span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> _scale<span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> _scaleFlag<span class=\"token operator\">:</span> boolean<span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">onAwake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_curRadian <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_radius <span class=\"token operator\">=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scale <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scaleFlag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Update position.</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_curRadian <span class=\"token operator\">+=</span> <span class=\"token number\">0.005</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> _radius<span class=\"token punctuation\">,</span> _curRadian<span class=\"token punctuation\">,</span> entity <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> transform <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> entity<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> posX <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>_curRadian<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> _radius<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> posY <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>_curRadian<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> _radius<span class=\"token punctuation\">;</span>\n    transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>posX<span class=\"token punctuation\">,</span> posY<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Update scale.</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scale <span class=\"token operator\">+=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scaleFlag <span class=\"token operator\">?</span> <span class=\"token number\">0.005</span> <span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">0.005</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> _scale <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    transform<span class=\"token punctuation\">.</span><span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span>_scale<span class=\"token punctuation\">,</span> _scale<span class=\"token punctuation\">,</span> _scale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scale <span class=\"token operator\">>=</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scaleFlag <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scale <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0.4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scaleFlag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Update rotation.</span>\n    SpriteController<span class=\"token punctuation\">.</span>_curRotation <span class=\"token operator\">+=</span> <span class=\"token number\">0.05</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> _curRotation <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> SpriteController<span class=\"token punctuation\">;</span>\n    transform<span class=\"token punctuation\">.</span><span class=\"token function\">setRotation</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> _curRotation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title Anisotropic\n   * @category Texture\n   */\n  var gui = new dat.GUI(); // Create engine object\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // Create camera\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 0, 1);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl); // Create Plane\n\n  var mesh = _oasisEngine.PrimitiveMesh.createPlane(engine, 2, 2);\n\n  var material = new _oasisEngine.UnlitMaterial(engine);\n  material.renderFace = _oasisEngine.RenderFace.Double;\n  material.tilingOffset.setValue(30, 30, 0, 0);\n  var planeEntity = rootEntity.createChild(\"ground\");\n  planeEntity.transform.setRotation(5, 0, 0);\n  var planeRenderer = planeEntity.addComponent(_oasisEngine.MeshRenderer);\n  planeRenderer.mesh = mesh;\n  planeRenderer.setMaterial(material);\n  engine.resourceManager.load({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_CtuR7LW4C0AAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }).then(function (texture) {\n    material.baseTexture = texture;\n    addGUI(texture);\n    engine.run();\n  });\n\n  function addGUI(texture) {\n    var maxAnisoLevel = engine._hardwareRenderer.capability.maxAnisoLevel;\n    gui.add(texture, \"anisoLevel\", 1, maxAnisoLevel, 1);\n  }\n});"},"name":"texture-aniso","title":"Anisotropic","category":"Texture","id":"79ec07ac-0ab0-5645-be34-5a11d7562de8","sourceCode":"/**\n * @title Anisotropic\n * @category Texture\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\nimport {\n  AssetType,\n  Camera,\n  MeshRenderer,\n  PrimitiveMesh,\n  RenderFace,\n  Texture2D,\n  UnlitMaterial,\n  WebGLEngine\n} from \"oasis-engine\";\nconst gui = new dat.GUI();\n\n// Create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// Create camera\nconst cameraEntity = rootEntity.createChild(\"Camera\");\ncameraEntity.transform.setPosition(0, 0, 1);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\n// Create Plane\nconst mesh = PrimitiveMesh.createPlane(engine, 2, 2);\nconst material = new UnlitMaterial(engine);\nmaterial.renderFace = RenderFace.Double;\nmaterial.tilingOffset.setValue(30, 30, 0, 0);\nconst planeEntity = rootEntity.createChild(\"ground\");\nplaneEntity.transform.setRotation(5, 0, 0);\nconst planeRenderer = planeEntity.addComponent(MeshRenderer);\nplaneRenderer.mesh = mesh;\nplaneRenderer.setMaterial(material);\n\nengine.resourceManager\n  .load<Texture2D>({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_CtuR7LW4C0AAAAAAAAAAAAAARQnAQ\",\n    type: AssetType.Texture2D\n  })\n  .then((texture) => {\n    material.baseTexture = texture;\n    addGUI(texture);\n    engine.run();\n  });\n\nfunction addGUI(texture: Texture2D) {\n  const maxAnisoLevel = engine._hardwareRenderer.capability.maxAnisoLevel;\n  gui.add(texture, \"anisoLevel\", 1, maxAnisoLevel, 1);\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Anisotropic\n * @category Texture\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  RenderFace<span class=\"token punctuation\">,</span>\n  Texture2D<span class=\"token punctuation\">,</span>\n  UnlitMaterial<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create Plane</span>\n<span class=\"token keyword\">const</span> mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createPlane</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnlitMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmaterial<span class=\"token punctuation\">.</span>renderFace <span class=\"token operator\">=</span> RenderFace<span class=\"token punctuation\">.</span>Double<span class=\"token punctuation\">;</span>\nmaterial<span class=\"token punctuation\">.</span>tilingOffset<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> planeEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ground\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nplaneEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setRotation</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> planeRenderer <span class=\"token operator\">=</span> planeEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nplaneRenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> mesh<span class=\"token punctuation\">;</span>\nplaneRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_CtuR7LW4C0AAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    material<span class=\"token punctuation\">.</span>baseTexture <span class=\"token operator\">=</span> texture<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addGUI</span><span class=\"token punctuation\">(</span>texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">addGUI</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture<span class=\"token operator\">:</span> Texture2D</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> maxAnisoLevel <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>_hardwareRenderer<span class=\"token punctuation\">.</span>capability<span class=\"token punctuation\">.</span>maxAnisoLevel<span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>texture<span class=\"token punctuation\">,</span> <span class=\"token string\">\"anisoLevel\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> maxAnisoLevel<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title Wrap Mode\n   * @category Texture\n   */\n  var gui = new dat.GUI(); // Create engine object\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // Create camera\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 0, 5);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl); // Create Plane\n\n  var mesh = _oasisEngine.PrimitiveMesh.createPlane(engine, 2, 2);\n\n  var material = new _oasisEngine.UnlitMaterial(engine);\n  material.tilingOffset.x = 2;\n  material.tilingOffset.y = 2;\n  material.isTransparent = true;\n  material.renderState.rasterState.cullMode = _oasisEngine.CullMode.Off;\n  var planeEntity = rootEntity.createChild(\"plane\");\n  var planeRenderer = planeEntity.addComponent(_oasisEngine.MeshRenderer);\n  planeEntity.transform.setRotation(90, 0, 0);\n  planeRenderer.mesh = mesh;\n  planeRenderer.setMaterial(material);\n  engine.resourceManager.load({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*rgNGR4Vb7lQAAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }).then(function (texture) {\n    material.baseTexture = texture;\n    addGUI(texture);\n    engine.run();\n  });\n\n  function addGUI(texture) {\n    var _wrapModeMap;\n\n    var wrapModeMap = (_wrapModeMap = {}, _wrapModeMap[_oasisEngine.TextureWrapMode.Clamp] = \"Clamp\", _wrapModeMap[_oasisEngine.TextureWrapMode.Repeat] = \"Repeat\", _wrapModeMap[_oasisEngine.TextureWrapMode.Mirror] = \"Mirror\", _wrapModeMap);\n    var state = {\n      wrapMode: wrapModeMap[texture.wrapModeU]\n    };\n    gui.add(state, \"wrapMode\", Object.values(wrapModeMap)).onChange(function (v) {\n      for (var key in wrapModeMap) {\n        var value = wrapModeMap[key];\n\n        if (v === value) {\n          texture.wrapModeU = Number(key);\n          texture.wrapModeV = Number(key);\n        }\n      }\n    });\n  }\n});"},"name":"wrap-mode","title":"Wrap Mode","category":"Texture","id":"95e3fb65-74ca-587c-9800-dbf3f46d820b","sourceCode":"/**\n * @title Wrap Mode\n * @category Texture\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\nimport {\n  AssetType,\n  Camera,\n  CullMode,\n  MeshRenderer,\n  PrimitiveMesh,\n  Texture2D,\n  TextureFilterMode,\n  TextureWrapMode,\n  UnlitMaterial,\n  WebGLEngine\n} from \"oasis-engine\";\nconst gui = new dat.GUI();\n\n// Create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// Create camera\nconst cameraEntity = rootEntity.createChild(\"Camera\");\ncameraEntity.transform.setPosition(0, 0, 5);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\n// Create Plane\nconst mesh = PrimitiveMesh.createPlane(engine, 2, 2);\nconst material = new UnlitMaterial(engine);\nmaterial.tilingOffset.x = 2;\nmaterial.tilingOffset.y = 2;\nmaterial.isTransparent = true;\nmaterial.renderState.rasterState.cullMode = CullMode.Off;\nconst planeEntity = rootEntity.createChild(\"plane\");\nconst planeRenderer = planeEntity.addComponent(MeshRenderer);\nplaneEntity.transform.setRotation(90, 0, 0);\nplaneRenderer.mesh = mesh;\nplaneRenderer.setMaterial(material);\n\nengine.resourceManager\n  .load<Texture2D>({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*rgNGR4Vb7lQAAAAAAAAAAAAAARQnAQ\",\n    type: AssetType.Texture2D\n  })\n  .then((texture) => {\n    material.baseTexture = texture;\n    addGUI(texture);\n    engine.run();\n  });\n\nfunction addGUI(texture: Texture2D) {\n  const wrapModeMap: Record<TextureFilterMode, string> = {\n    [TextureWrapMode.Clamp]: \"Clamp\",\n    [TextureWrapMode.Repeat]: \"Repeat\",\n    [TextureWrapMode.Mirror]: \"Mirror\"\n  };\n  const state = {\n    wrapMode: wrapModeMap[texture.wrapModeU]\n  };\n  gui.add(state, \"wrapMode\", Object.values(wrapModeMap)).onChange((v) => {\n    for (let key in wrapModeMap) {\n      const value = wrapModeMap[key];\n      if (v === value) {\n        texture.wrapModeU = Number(key);\n        texture.wrapModeV = Number(key);\n      }\n    }\n  });\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Wrap Mode\n * @category Texture\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  CullMode<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  Texture2D<span class=\"token punctuation\">,</span>\n  TextureFilterMode<span class=\"token punctuation\">,</span>\n  TextureWrapMode<span class=\"token punctuation\">,</span>\n  UnlitMaterial<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create Plane</span>\n<span class=\"token keyword\">const</span> mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createPlane</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnlitMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmaterial<span class=\"token punctuation\">.</span>tilingOffset<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\nmaterial<span class=\"token punctuation\">.</span>tilingOffset<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\nmaterial<span class=\"token punctuation\">.</span>isTransparent <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\nmaterial<span class=\"token punctuation\">.</span>renderState<span class=\"token punctuation\">.</span>rasterState<span class=\"token punctuation\">.</span>cullMode <span class=\"token operator\">=</span> CullMode<span class=\"token punctuation\">.</span>Off<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> planeEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"plane\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> planeRenderer <span class=\"token operator\">=</span> planeEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nplaneEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setRotation</span><span class=\"token punctuation\">(</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nplaneRenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> mesh<span class=\"token punctuation\">;</span>\nplaneRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*rgNGR4Vb7lQAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    material<span class=\"token punctuation\">.</span>baseTexture <span class=\"token operator\">=</span> texture<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addGUI</span><span class=\"token punctuation\">(</span>texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">addGUI</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture<span class=\"token operator\">:</span> Texture2D</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> wrapModeMap<span class=\"token operator\">:</span> Record<span class=\"token operator\">&lt;</span>TextureFilterMode<span class=\"token punctuation\">,</span> string<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span>TextureWrapMode<span class=\"token punctuation\">.</span>Clamp<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Clamp\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span>TextureWrapMode<span class=\"token punctuation\">.</span>Repeat<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Repeat\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span>TextureWrapMode<span class=\"token punctuation\">.</span>Mirror<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Mirror\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    wrapMode<span class=\"token operator\">:</span> wrapModeMap<span class=\"token punctuation\">[</span>texture<span class=\"token punctuation\">.</span>wrapModeU<span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"wrapMode\"</span><span class=\"token punctuation\">,</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span>wrapModeMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> key <span class=\"token keyword\">in</span> wrapModeMap<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> wrapModeMap<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>v <span class=\"token operator\">===</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        texture<span class=\"token punctuation\">.</span>wrapModeU <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        texture<span class=\"token punctuation\">.</span>wrapModeV <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity();\n  var cameraEntity = rootEntity.createChild();\n  cameraEntity.transform.setPosition(0, 0, 10);\n  var camera = cameraEntity.addComponent(_oasisEngine.Camera);\n  camera.fieldOfView = 80;\n  var control = cameraEntity.addComponent(_controls.OrbitControl);\n  control.autoRotate = true;\n  control.autoRotateSpeed = 0.1;\n  engine.run(); // video skybox\n\n  _oasisEngine.Shader.create(\"video\", \"\\nattribute vec3 POSITION;\\nattribute vec2 TEXCOORD_0;\\nvarying vec2 v_uv;\\n\\nuniform mat4 u_mvpNoscale;\\n\\nvoid main() {\\n    v_uv = TEXCOORD_0;\\n    gl_Position = u_mvpNoscale * vec4( POSITION, 1.0 );\\n    gl_Position.z = gl_Position.w;\\n}\\n  \", \"\\n  uniform sampler2D u_texture;\\n  varying vec2 v_uv;\\n\\n  void main(){\\n    gl_FragColor = texture2D(u_texture, vec2(-v_uv.x,v_uv.y));\\n    \\n  }\\n  \");\n\n  var VideoMaterial = /*#__PURE__*/function (_Material) {\n    _inheritsLoose(VideoMaterial, _Material);\n\n    function VideoMaterial(engine) {\n      var _this;\n\n      _this = _Material.call(this, engine, _oasisEngine.Shader.find(\"video\")) || this;\n      _this.renderState.rasterState.cullMode = _oasisEngine.CullMode.Off;\n      _this.renderState.depthState.compareFunction = _oasisEngine.CompareFunction.LessEqual;\n      return _this;\n    }\n\n    _createClass(VideoMaterial, [{\n      key: \"texture\",\n      get: function get() {\n        return this.shaderData.getTexture(\"u_texture\");\n      },\n      set: function set(v) {\n        this.shaderData.setTexture(\"u_texture\", v);\n      }\n    }]);\n\n    return VideoMaterial;\n  }(_oasisEngine.Material);\n\n  var UpdateVideoScript = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(UpdateVideoScript, _Script);\n\n    function UpdateVideoScript() {\n      var _this2;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this2 = _Script.call.apply(_Script, [this].concat(args)) || this;\n      _this2.video = void 0;\n      _this2.texture = void 0;\n      return _this2;\n    }\n\n    var _proto = UpdateVideoScript.prototype;\n\n    _proto.onUpdate = function onUpdate() {\n      this.texture.setImageSource(this.video);\n    };\n\n    return UpdateVideoScript;\n  }(_oasisEngine.Script);\n\n  var dom = document.createElement(\"video\");\n  var width = 3840;\n  var height = 1920;\n  dom.src = \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/file/A*p_f5QYjE_2kAAAAAAAAAAAAAARQnAQ\";\n  dom.crossOrigin = \"anonymous\";\n  dom.loop = true;\n  dom.muted = true;\n  dom.play(); // create video background\n\n  var texture = new _oasisEngine.Texture2D(engine, width, height, _oasisEngine.TextureFormat.R8G8B8, false);\n  var background = scene.background;\n  background.mode = _oasisEngine.BackgroundMode.Sky;\n  var skyMaterial = background.sky.material = new VideoMaterial(engine);\n  background.sky.mesh = _oasisEngine.PrimitiveMesh.createSphere(engine, 2);\n  skyMaterial.texture = texture;\n\n  function updateVideo() {\n    texture.setImageSource(dom);\n    dom.requestVideoFrameCallback(updateVideo);\n  }\n\n  if (\"requestVideoFrameCallback\" in dom) {\n    dom.requestVideoFrameCallback(updateVideo);\n  } else {\n    var script = rootEntity.addComponent(UpdateVideoScript);\n    script.video = dom;\n    script.texture = texture;\n  }\n});"},"name":"video-background","title":"Video Background","category":"Scene","id":"c7bddbf5-8ccc-53ff-918a-7c25a12f5044","sourceCode":"/**\n * @title Video Background\n * @category Scene\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport {\n  BackgroundMode,\n  Camera,\n  CompareFunction,\n  CullMode,\n  Engine,\n  Material,\n  PrimitiveMesh,\n  Script,\n  Shader,\n  Texture2D,\n  TextureFormat,\n  WebGLEngine\n} from \"oasis-engine\";\n\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\nconst cameraEntity = rootEntity.createChild();\ncameraEntity.transform.setPosition(0, 0, 10);\nconst camera = cameraEntity.addComponent(Camera);\ncamera.fieldOfView = 80;\nconst control = cameraEntity.addComponent(OrbitControl);\ncontrol.autoRotate = true;\ncontrol.autoRotateSpeed = 0.1;\nengine.run();\n\n// video skybox\nShader.create(\n  \"video\",\n  `\nattribute vec3 POSITION;\nattribute vec2 TEXCOORD_0;\nvarying vec2 v_uv;\n\nuniform mat4 u_mvpNoscale;\n\nvoid main() {\n    v_uv = TEXCOORD_0;\n    gl_Position = u_mvpNoscale * vec4( POSITION, 1.0 );\n    gl_Position.z = gl_Position.w;\n}\n  `,\n  `\n  uniform sampler2D u_texture;\n  varying vec2 v_uv;\n\n  void main(){\n    gl_FragColor = texture2D(u_texture, vec2(-v_uv.x,v_uv.y));\n    \n  }\n  `\n);\nclass VideoMaterial extends Material {\n  constructor(engine: Engine) {\n    super(engine, Shader.find(\"video\"));\n\n    this.renderState.rasterState.cullMode = CullMode.Off;\n    this.renderState.depthState.compareFunction = CompareFunction.LessEqual;\n  }\n\n  get texture(): Texture2D {\n    return this.shaderData.getTexture(\"u_texture\") as Texture2D;\n  }\n\n  set texture(v: Texture2D) {\n    this.shaderData.setTexture(\"u_texture\", v);\n  }\n}\n\nclass UpdateVideoScript extends Script {\n  video: HTMLVideoElement;\n  texture: Texture2D;\n\n  onUpdate() {\n    this.texture.setImageSource(this.video);\n  }\n}\n\nconst dom: HTMLVideoElement = document.createElement(\"video\");\nconst width = 3840;\nconst height = 1920;\ndom.src = \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/file/A*p_f5QYjE_2kAAAAAAAAAAAAAARQnAQ\";\ndom.crossOrigin = \"anonymous\";\ndom.loop = true;\ndom.muted = true;\ndom.play();\n\n// create video background\nconst texture = new Texture2D(engine, width, height, TextureFormat.R8G8B8, false);\nconst { background } = scene;\nbackground.mode = BackgroundMode.Sky;\nconst skyMaterial = (background.sky.material = new VideoMaterial(engine));\nbackground.sky.mesh = PrimitiveMesh.createSphere(engine, 2);\nskyMaterial.texture = texture;\n\nfunction updateVideo() {\n  texture.setImageSource(dom);\n  (dom as any).requestVideoFrameCallback(updateVideo);\n}\n\nif (\"requestVideoFrameCallback\" in dom) {\n  (dom as any).requestVideoFrameCallback(updateVideo);\n} else {\n  const script = rootEntity.addComponent(UpdateVideoScript);\n  script.video = dom;\n  script.texture = texture;\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Video Background\n * @category Scene\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  BackgroundMode<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  CompareFunction<span class=\"token punctuation\">,</span>\n  CullMode<span class=\"token punctuation\">,</span>\n  Engine<span class=\"token punctuation\">,</span>\n  Material<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  Script<span class=\"token punctuation\">,</span>\n  Shader<span class=\"token punctuation\">,</span>\n  Texture2D<span class=\"token punctuation\">,</span>\n  TextureFormat<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> camera <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncamera<span class=\"token punctuation\">.</span>fieldOfView <span class=\"token operator\">=</span> <span class=\"token number\">80</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> control <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncontrol<span class=\"token punctuation\">.</span>autoRotate <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\ncontrol<span class=\"token punctuation\">.</span>autoRotateSpeed <span class=\"token operator\">=</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// video skybox</span>\nShader<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"video\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\nattribute vec3 POSITION;\nattribute vec2 TEXCOORD_0;\nvarying vec2 v_uv;\n\nuniform mat4 u_mvpNoscale;\n\nvoid main() {\n    v_uv = TEXCOORD_0;\n    gl_Position = u_mvpNoscale * vec4( POSITION, 1.0 );\n    gl_Position.z = gl_Position.w;\n}\n  </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  uniform sampler2D u_texture;\n  varying vec2 v_uv;\n\n  void main(){\n    gl_FragColor = texture2D(u_texture, vec2(-v_uv.x,v_uv.y));\n    \n  }\n  </span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">VideoMaterial</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Material</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">engine<span class=\"token operator\">:</span> Engine</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> Shader<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"video\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>renderState<span class=\"token punctuation\">.</span>rasterState<span class=\"token punctuation\">.</span>cullMode <span class=\"token operator\">=</span> CullMode<span class=\"token punctuation\">.</span>Off<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>renderState<span class=\"token punctuation\">.</span>depthState<span class=\"token punctuation\">.</span>compareFunction <span class=\"token operator\">=</span> CompareFunction<span class=\"token punctuation\">.</span>LessEqual<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">get</span> <span class=\"token function\">texture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Texture2D <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_texture\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> Texture2D<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">set</span> <span class=\"token function\">texture</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v<span class=\"token operator\">:</span> Texture2D</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setTexture</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_texture\"</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UpdateVideoScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  video<span class=\"token operator\">:</span> HTMLVideoElement<span class=\"token punctuation\">;</span>\n  texture<span class=\"token operator\">:</span> Texture2D<span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>texture<span class=\"token punctuation\">.</span><span class=\"token function\">setImageSource</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>video<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> dom<span class=\"token operator\">:</span> HTMLVideoElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"video\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> width <span class=\"token operator\">=</span> <span class=\"token number\">3840</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> height <span class=\"token operator\">=</span> <span class=\"token number\">1920</span><span class=\"token punctuation\">;</span>\ndom<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/file/A*p_f5QYjE_2kAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">;</span>\ndom<span class=\"token punctuation\">.</span>crossOrigin <span class=\"token operator\">=</span> <span class=\"token string\">\"anonymous\"</span><span class=\"token punctuation\">;</span>\ndom<span class=\"token punctuation\">.</span>loop <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\ndom<span class=\"token punctuation\">.</span>muted <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\ndom<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// create video background</span>\n<span class=\"token keyword\">const</span> texture <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Texture2D</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> TextureFormat<span class=\"token punctuation\">.</span><span class=\"token constant\">R8G8B8</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> background <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">;</span>\nbackground<span class=\"token punctuation\">.</span>mode <span class=\"token operator\">=</span> BackgroundMode<span class=\"token punctuation\">.</span>Sky<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> skyMaterial <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>background<span class=\"token punctuation\">.</span>sky<span class=\"token punctuation\">.</span>material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">VideoMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nbackground<span class=\"token punctuation\">.</span>sky<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createSphere</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nskyMaterial<span class=\"token punctuation\">.</span>texture <span class=\"token operator\">=</span> texture<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">updateVideo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  texture<span class=\"token punctuation\">.</span><span class=\"token function\">setImageSource</span><span class=\"token punctuation\">(</span>dom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">(</span>dom <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">requestVideoFrameCallback</span><span class=\"token punctuation\">(</span>updateVideo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"requestVideoFrameCallback\"</span> <span class=\"token keyword\">in</span> dom<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">(</span>dom <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">requestVideoFrameCallback</span><span class=\"token punctuation\">(</span>updateVideo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> script <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>UpdateVideoScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  script<span class=\"token punctuation\">.</span>video <span class=\"token operator\">=</span> dom<span class=\"token punctuation\">;</span>\n  script<span class=\"token punctuation\">.</span>texture <span class=\"token operator\">=</span> texture<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  init();\n\n  function init() {\n    // Create engine object\n    var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n    engine.canvas.resizeByClientSize(); // Load texture\n\n    engine.resourceManager.load({\n      url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Umw_RJGiZLYAAAAAAAAAAAAAARQnAQ\",\n      type: _oasisEngine.AssetType.Texture2D\n    }).then(function (texture) {\n      var scene = engine.sceneManager.activeScene;\n      var rootEntity = scene.createRootEntity(); // Create camera\n\n      var cameraEntity = rootEntity.createChild(\"Camera\");\n      cameraEntity.transform.position = new _oasisEngine.Vector3(0, 0, 20);\n      cameraEntity.addComponent(_oasisEngine.Camera);\n      cameraEntity.addComponent(_controls.OrbitControl); // Create plane\n\n      var entity = rootEntity.createChild();\n      entity.transform.setRotation(90, 0, 0);\n      var renderer = entity.addComponent(_oasisEngine.MeshRenderer);\n\n      var mesh = _oasisEngine.PrimitiveMesh.createPlane(engine, 10, 10);\n\n      var material = new _oasisEngine.UnlitMaterial(engine);\n      texture.anisoLevel = 16;\n      material.renderFace = _oasisEngine.RenderFace.Double;\n      material.baseTexture = texture;\n      renderer.mesh = mesh;\n      renderer.setMaterial(material); // Add animation script\n\n      var animationScript = rootEntity.addComponent(AnimateScript); // Add data GUI\n\n      var guiData = addDataGUI(material, animationScript);\n      animationScript.guiData = guiData;\n      animationScript.material = material; // Run engine\n\n      engine.run();\n    });\n  }\n  /**\n   * Add data GUI.\n   */\n\n\n  function addDataGUI(material, animationScript) {\n    var gui = new dat.GUI();\n    var guiData = {\n      tilingX: 1,\n      tilingY: 1,\n      offsetX: 0,\n      offsetY: 0,\n      reset: function reset() {\n        guiData.tilingX = 1;\n        guiData.tilingY = 1;\n        guiData.offsetX = 0;\n        guiData.offsetY = 0;\n        material.tilingOffset.setValue(1, 1, 0, 0);\n      },\n      pause: function pause() {\n        animationScript.enabled = false;\n      },\n      resume: function resume() {\n        animationScript.enabled = true;\n      }\n    };\n    gui.add(guiData, \"tilingX\", 0, 10).onChange(function (value) {\n      material.tilingOffset.x = value;\n    }).listen();\n    gui.add(guiData, \"tilingY\", 0, 10).onChange(function (value) {\n      material.tilingOffset.y = value;\n    }).listen();\n    gui.add(guiData, \"offsetX\", 0, 1).onChange(function (value) {\n      material.tilingOffset.z = value;\n    }).listen();\n    gui.add(guiData, \"offsetY\", 0, 1).onChange(function (value) {\n      material.tilingOffset.w = value;\n    }).listen();\n    gui.add(guiData, \"reset\").name(\"重置\");\n    gui.add(guiData, \"pause\").name(\"暂停动画\");\n    gui.add(guiData, \"resume\").name(\"继续动画\");\n    return guiData;\n  }\n  /**\n   * Animation script.\n   */\n\n\n  var AnimateScript = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(AnimateScript, _Script);\n\n    function AnimateScript() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _Script.call.apply(_Script, [this].concat(args)) || this;\n      _this.guiData = void 0;\n      return _this;\n    }\n\n    var _proto = AnimateScript.prototype;\n\n    /**\n     * The main loop, called frame by frame.\n     * @param deltaTime - The deltaTime when the script update.\n     */\n    _proto.onUpdate = function onUpdate(deltaTime) {\n      var material = this.material,\n          guiData = this.guiData;\n      material.tilingOffset.x = guiData.tilingX = (guiData.tilingX - 1 + deltaTime * 0.001) % 9 + 1;\n      material.tilingOffset.y = guiData.tilingY = (guiData.tilingY - 1 + deltaTime * 0.001) % 9 + 1;\n    };\n\n    return AnimateScript;\n  }(_oasisEngine.Script);\n});"},"name":"tiling-offset","title":"Tiling Offset","category":"Material","id":"386cf00e-6fc8-53d2-8e6a-89bf74c01330","sourceCode":"/**\n * @title Tiling Offset\n * @category Material\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\nimport {\n  AssetType,\n  Camera,\n  MeshRenderer,\n  PrimitiveMesh,\n  RenderFace,\n  Script,\n  Texture2D,\n  UnlitMaterial,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\n\ninit();\n\nfunction init(): void {\n  // Create engine object\n  const engine = new WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n\n  // Load texture\n  engine.resourceManager\n    .load<Texture2D>({\n      url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Umw_RJGiZLYAAAAAAAAAAAAAARQnAQ\",\n      type: AssetType.Texture2D\n    })\n    .then((texture) => {\n      const scene = engine.sceneManager.activeScene;\n      const rootEntity = scene.createRootEntity();\n\n      // Create camera\n      const cameraEntity = rootEntity.createChild(\"Camera\");\n      cameraEntity.transform.position = new Vector3(0, 0, 20);\n      cameraEntity.addComponent(Camera);\n      cameraEntity.addComponent(OrbitControl);\n\n      // Create plane\n      const entity = rootEntity.createChild();\n      entity.transform.setRotation(90, 0, 0);\n      const renderer = entity.addComponent(MeshRenderer);\n      const mesh = PrimitiveMesh.createPlane(engine, 10, 10);\n      const material = new UnlitMaterial(engine);\n\n      texture.anisoLevel = 16;\n      material.renderFace = RenderFace.Double;\n      material.baseTexture = texture;\n\n      renderer.mesh = mesh;\n      renderer.setMaterial(material);\n\n      // Add animation script\n      const animationScript = rootEntity.addComponent(AnimateScript);\n\n      // Add data GUI\n      const guiData = addDataGUI(material, animationScript);\n      animationScript.guiData = guiData;\n      animationScript.material = material;\n\n      // Run engine\n      engine.run();\n    });\n}\n\n/**\n * Add data GUI.\n */\nfunction addDataGUI(material: UnlitMaterial, animationScript: AnimateScript): any {\n  const gui = new dat.GUI();\n  const guiData = {\n    tilingX: 1,\n    tilingY: 1,\n    offsetX: 0,\n    offsetY: 0,\n    reset: function () {\n      guiData.tilingX = 1;\n      guiData.tilingY = 1;\n      guiData.offsetX = 0;\n      guiData.offsetY = 0;\n      material.tilingOffset.setValue(1, 1, 0, 0);\n    },\n    pause: function () {\n      animationScript.enabled = false;\n    },\n    resume: function () {\n      animationScript.enabled = true;\n    }\n  };\n\n  gui\n    .add(guiData, \"tilingX\", 0, 10)\n    .onChange((value: number) => {\n      material.tilingOffset.x = value;\n    })\n    .listen();\n  gui\n    .add(guiData, \"tilingY\", 0, 10)\n    .onChange((value: number) => {\n      material.tilingOffset.y = value;\n    })\n    .listen();\n  gui\n    .add(guiData, \"offsetX\", 0, 1)\n    .onChange((value: number) => {\n      material.tilingOffset.z = value;\n    })\n    .listen();\n  gui\n    .add(guiData, \"offsetY\", 0, 1)\n    .onChange((value: number) => {\n      material.tilingOffset.w = value;\n    })\n    .listen();\n  gui.add(guiData, \"reset\").name(\"重置\");\n  gui.add(guiData, \"pause\").name(\"暂停动画\");\n  gui.add(guiData, \"resume\").name(\"继续动画\");\n\n  return guiData;\n}\n\n/**\n * Animation script.\n */\nclass AnimateScript extends Script {\n  guiData: any;\n\n  /**\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */\n  onUpdate(deltaTime: number): void {\n    const { material, guiData } = this;\n    material.tilingOffset.x = guiData.tilingX = ((guiData.tilingX - 1 + deltaTime * 0.001) % 9) + 1;\n    material.tilingOffset.y = guiData.tilingY = ((guiData.tilingY - 1 + deltaTime * 0.001) % 9) + 1;\n  }\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Tiling Offset\n * @category Material\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  RenderFace<span class=\"token punctuation\">,</span>\n  Script<span class=\"token punctuation\">,</span>\n  Texture2D<span class=\"token punctuation\">,</span>\n  UnlitMaterial<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Create engine object</span>\n  <span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  engine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Load texture</span>\n  engine<span class=\"token punctuation\">.</span>resourceManager\n    <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Umw_RJGiZLYAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Create camera</span>\n      <span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      cameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Create plane</span>\n      <span class=\"token keyword\">const</span> entity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setRotation</span><span class=\"token punctuation\">(</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> renderer <span class=\"token operator\">=</span> entity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createPlane</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnlitMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      texture<span class=\"token punctuation\">.</span>anisoLevel <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span>\n      material<span class=\"token punctuation\">.</span>renderFace <span class=\"token operator\">=</span> RenderFace<span class=\"token punctuation\">.</span>Double<span class=\"token punctuation\">;</span>\n      material<span class=\"token punctuation\">.</span>baseTexture <span class=\"token operator\">=</span> texture<span class=\"token punctuation\">;</span>\n\n      renderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> mesh<span class=\"token punctuation\">;</span>\n      renderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Add animation script</span>\n      <span class=\"token keyword\">const</span> animationScript <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>AnimateScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Add data GUI</span>\n      <span class=\"token keyword\">const</span> guiData <span class=\"token operator\">=</span> <span class=\"token function\">addDataGUI</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">,</span> animationScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      animationScript<span class=\"token punctuation\">.</span>guiData <span class=\"token operator\">=</span> guiData<span class=\"token punctuation\">;</span>\n      animationScript<span class=\"token punctuation\">.</span>material <span class=\"token operator\">=</span> material<span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Run engine</span>\n      engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * Add data GUI.\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">addDataGUI</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">material<span class=\"token operator\">:</span> UnlitMaterial<span class=\"token punctuation\">,</span> animationScript<span class=\"token operator\">:</span> AnimateScript</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> any <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> guiData <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    tilingX<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    tilingY<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    offsetX<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    offsetY<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">reset</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      guiData<span class=\"token punctuation\">.</span>tilingX <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n      guiData<span class=\"token punctuation\">.</span>tilingY <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n      guiData<span class=\"token punctuation\">.</span>offsetX <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      guiData<span class=\"token punctuation\">.</span>offsetY <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      material<span class=\"token punctuation\">.</span>tilingOffset<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">pause</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      animationScript<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">resume</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      animationScript<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  gui\n    <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"tilingX\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      material<span class=\"token punctuation\">.</span>tilingOffset<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui\n    <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"tilingY\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      material<span class=\"token punctuation\">.</span>tilingOffset<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui\n    <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"offsetX\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      material<span class=\"token punctuation\">.</span>tilingOffset<span class=\"token punctuation\">.</span>z <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui\n    <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"offsetY\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      material<span class=\"token punctuation\">.</span>tilingOffset<span class=\"token punctuation\">.</span>w <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"reset\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"重置\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"pause\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"暂停动画\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"resume\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"继续动画\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> guiData<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * Animation script.\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">AnimateScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  guiData<span class=\"token operator\">:</span> any<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/**\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */</span>\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span>deltaTime<span class=\"token operator\">:</span> number<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> material<span class=\"token punctuation\">,</span> guiData <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    material<span class=\"token punctuation\">.</span>tilingOffset<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> guiData<span class=\"token punctuation\">.</span>tilingX <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">.</span>tilingX <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> deltaTime <span class=\"token operator\">*</span> <span class=\"token number\">0.001</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    material<span class=\"token punctuation\">.</span>tilingOffset<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> guiData<span class=\"token punctuation\">.</span>tilingY <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">.</span>tilingY <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> deltaTime <span class=\"token operator\">*</span> <span class=\"token number\">0.001</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"}]}},"pageContext":{}},"staticQueryHashes":[]}