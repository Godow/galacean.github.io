{"componentChunkName":"component---src-pages-examples-tsx","path":"/0.4/examples","result":{"data":{"allPlayground":{"nodes":[{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title Blend Mode\n   * @category Material\n   */\n  var gui = new dat.GUI(); // Create engine object\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // Create camera\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 3, 10);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl);\n  scene.ambientLight.diffuseSolidColor.setValue(1, 1, 1, 1);\n  engine.resourceManager.load(\"https://gw.alipayobjects.com/os/bmw-prod/d099b30b-59a3-42e4-99eb-b158afa8e65d.glb\").then(function (asset) {\n    var defaultSceneRoot = asset.defaultSceneRoot,\n        materials = asset.materials;\n    rootEntity.addChild(defaultSceneRoot);\n    var state = {\n      alphaCutoff: 0,\n      isTransparent: false,\n      opacity: 0\n    }; // Do not debug first material\n\n    var debugMaterials = materials.slice(1);\n    gui.add(state, \"alphaCutoff\", 0, 1, 0.01).onChange(function (v) {\n      debugMaterials.forEach(function (material) {\n        material.alphaCutoff = v;\n      });\n    });\n    gui.add(state, \"isTransparent\").onChange(function (v) {\n      debugMaterials.forEach(function (material) {\n        material.isTransparent = v;\n      });\n    });\n    gui.add(state, \"opacity\", 0, 1, 0.01).onChange(function (v) {\n      debugMaterials.forEach(function (material) {\n        material.baseColor.a = v;\n      });\n    });\n  });\n  engine.run();\n});"},"name":"blend-mode","title":"Blend Mode","category":"Material","id":"2ee3e111-2f92-587b-8e03-37239a136f64","sourceCode":"/**\n * @title Blend Mode\n * @category Material\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\nimport { Camera, GLTFResource, PBRMaterial, Vector3, WebGLEngine } from \"oasis-engine\";\nconst gui = new dat.GUI();\n\n// Create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// Create camera\nconst cameraEntity = rootEntity.createChild(\"Camera\");\ncameraEntity.transform.position = new Vector3(0, 3, 10);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\nscene.ambientLight.diffuseSolidColor.setValue(1, 1, 1, 1);\n\nengine.resourceManager\n  .load<GLTFResource>(\"https://gw.alipayobjects.com/os/bmw-prod/d099b30b-59a3-42e4-99eb-b158afa8e65d.glb\")\n  .then((asset) => {\n    const { defaultSceneRoot, materials } = asset;\n    rootEntity.addChild(defaultSceneRoot);\n\n    const state = {\n      alphaCutoff: 0,\n      isTransparent: false,\n      opacity: 0\n    };\n\n    // Do not debug first material\n    const debugMaterials = materials.slice(1);\n    gui.add(state, \"alphaCutoff\", 0, 1, 0.01).onChange((v) => {\n      debugMaterials.forEach((material) => {\n        (material as PBRMaterial).alphaCutoff = v;\n      });\n    });\n\n    gui.add(state, \"isTransparent\").onChange((v) => {\n      debugMaterials.forEach((material) => {\n        (material as PBRMaterial).isTransparent = v;\n      });\n    });\n\n    gui.add(state, \"opacity\", 0, 1, 0.01).onChange((v) => {\n      debugMaterials.forEach((material) => {\n        (material as PBRMaterial).baseColor.a = v;\n      });\n    });\n  });\n\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Blend Mode\n * @category Material\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Camera<span class=\"token punctuation\">,</span> GLTFResource<span class=\"token punctuation\">,</span> PBRMaterial<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nscene<span class=\"token punctuation\">.</span>ambientLight<span class=\"token punctuation\">.</span>diffuseSolidColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>GLTFResource<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/d099b30b-59a3-42e4-99eb-b158afa8e65d.glb\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">asset</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> defaultSceneRoot<span class=\"token punctuation\">,</span> materials <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> asset<span class=\"token punctuation\">;</span>\n    rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>defaultSceneRoot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      alphaCutoff<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n      isTransparent<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      opacity<span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Do not debug first material</span>\n    <span class=\"token keyword\">const</span> debugMaterials <span class=\"token operator\">=</span> materials<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"alphaCutoff\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      debugMaterials<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">material</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">(</span>material <span class=\"token keyword\">as</span> PBRMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>alphaCutoff <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"isTransparent\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      debugMaterials<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">material</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">(</span>material <span class=\"token keyword\">as</span> PBRMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>isTransparent <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"opacity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      debugMaterials<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">material</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">(</span>material <span class=\"token keyword\">as</span> PBRMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"dat.gui\", \"oasis-engine\", \"@oasis-engine/controls\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"dat.gui\"), require(\"oasis-engine\"), require(\"@oasis-engine/controls\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.dat, global.oasisEngine, global[\"@oasisEngine/controls\"]);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (dat, _oasisEngine, _controls) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title Scene Background\n   * @category Scene\n   */\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  var scene = engine.sceneManager.activeScene;\n  var background = scene.background;\n  var root = scene.createRootEntity();\n  var cameraEntity = root.createChild();\n  cameraEntity.transform.setPosition(0, 0, 10);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl);\n  engine.run();\n  engine.resourceManager //@ts-ignore\n  .load([{\n    urls: [\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5w6_Rr6ML6IAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*TiT2TbN5cG4AAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*8GF6Q4LZefUAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*D5pdRqUHC3IAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_FooTIp6pNIAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*CYGZR7ogZfoAAAAAAAAAAAAAARQnAQ\"],\n    type: _oasisEngine.AssetType.TextureCube\n  }, {\n    urls: [\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Bk5FQKGOir4AAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_cPhR7JMDjkAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*trqjQp1nOMQAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_RXwRqwMK3EAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*q4Q6TroyuXcAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*DP5QTbTSAYgAAAAAAAAAAAAAARQnAQ\"],\n    type: _oasisEngine.AssetType.TextureCube\n  }]).then(function (_ref) {\n    var cubeMap1 = _ref[0],\n        cubeMap2 = _ref[1];\n    // 添加天空盒背景\n    background.mode = _oasisEngine.BackgroundMode.Sky; // 默认纯色背景\n\n    var skyMaterial = background.sky.material = new _oasisEngine.SkyBoxMaterial(engine); // 添加天空盒材质\n\n    skyMaterial.textureCubeMap = cubeMap1; // 设置立方体纹理\n\n    background.sky.mesh = _oasisEngine.PrimitiveMesh.createCuboid(engine, 2, 2, 2); // 设置天空盒网格\n\n    return [cubeMap1, cubeMap2];\n  }).then(function (cubeMaps) {\n    var gui = new dat.GUI();\n    gui.add(background, \"mode\", {\n      Sky: _oasisEngine.BackgroundMode.Sky,\n      SolidColor: _oasisEngine.BackgroundMode.SolidColor\n    }).onChange(function (v) {\n      background.mode = parseInt(v);\n    });\n    var solidColor = background.solidColor;\n    var colorObj = {\n      color: [solidColor.r / 255, solidColor.g / 255, solidColor.b / 255, solidColor.a]\n    };\n    gui.addColor(colorObj, \"color\").onChange(function (v) {\n      background.solidColor.setValue(v[0] / 255, v[1] / 255, v[2] / 255, v[3] / 255);\n    });\n    var obj = {\n      cubeMap: 0\n    };\n    gui.add(obj, \"cubeMap\", {\n      cubeMap1: 0,\n      cubeMap2: 1\n    }).onChange(function (v) {\n      // @ts-ignore\n      background.sky.material.textureCubeMap = cubeMaps[parseInt(v)];\n    });\n  });\n});"},"name":"background","title":"Scene Background","category":"Scene","id":"b87cc735-565d-520e-9e57-73c618c50ad4","sourceCode":"/**\n * @title Scene Background\n * @category Scene\n */\nimport * as dat from \"dat.gui\";\nimport {\n  AssetType,\n  BackgroundMode,\n  Camera,\n  PrimitiveMesh,\n  SkyBoxMaterial,\n  TextureCubeMap,\n  WebGLEngine\n} from \"oasis-engine\";\n\nimport { OrbitControl } from \"@oasis-engine/controls\";\n\nconst engine = new WebGLEngine(\"canvas\");\nconst scene = engine.sceneManager.activeScene;\nconst { background } = scene;\nconst root = scene.createRootEntity();\nconst cameraEntity = root.createChild();\ncameraEntity.transform.setPosition(0, 0, 10);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\nengine.run();\n\nengine.resourceManager\n  //@ts-ignore\n  .load<TextureCubeMap[]>([\n    {\n      urls: [\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5w6_Rr6ML6IAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*TiT2TbN5cG4AAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*8GF6Q4LZefUAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*D5pdRqUHC3IAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_FooTIp6pNIAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*CYGZR7ogZfoAAAAAAAAAAAAAARQnAQ\"\n      ],\n      type: AssetType.TextureCube\n    },\n    {\n      urls: [\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Bk5FQKGOir4AAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_cPhR7JMDjkAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*trqjQp1nOMQAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_RXwRqwMK3EAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*q4Q6TroyuXcAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*DP5QTbTSAYgAAAAAAAAAAAAAARQnAQ\"\n      ],\n      type: AssetType.TextureCube\n    }\n  ])\n  .then(([cubeMap1, cubeMap2]) => {\n    // 添加天空盒背景\n    background.mode = BackgroundMode.Sky; // 默认纯色背景\n    const skyMaterial = (background.sky.material = new SkyBoxMaterial(engine)); // 添加天空盒材质\n    skyMaterial.textureCubeMap = cubeMap1; // 设置立方体纹理\n    background.sky.mesh = PrimitiveMesh.createCuboid(engine, 2, 2, 2); // 设置天空盒网格\n    return [cubeMap1, cubeMap2];\n  })\n  .then((cubeMaps) => {\n    const gui = new dat.GUI();\n    gui.add(background, \"mode\", { Sky: BackgroundMode.Sky, SolidColor: BackgroundMode.SolidColor }).onChange((v) => {\n      background.mode = parseInt(v);\n    });\n\n    const solidColor = background.solidColor;\n    let colorObj = { color: [solidColor.r / 255, solidColor.g / 255, solidColor.b / 255, solidColor.a] };\n    gui.addColor(colorObj, \"color\").onChange((v) => {\n      background.solidColor.setValue(v[0] / 255, v[1] / 255, v[2] / 255, v[3] / 255);\n    });\n\n    const obj = {\n      cubeMap: 0\n    };\n\n    gui.add(obj, \"cubeMap\", { cubeMap1: 0, cubeMap2: 1 }).onChange((v) => {\n      // @ts-ignore\n      background.sky.material.textureCubeMap = cubeMaps[parseInt(v)];\n    });\n  });\n","formatedCode":"<span class=\"token comment\">/**\n * @title Scene Background\n * @category Scene\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  BackgroundMode<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  SkyBoxMaterial<span class=\"token punctuation\">,</span>\n  TextureCubeMap<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> background <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> root <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> root<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token comment\">//@ts-ignore</span>\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>TextureCubeMap<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      urls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5w6_Rr6ML6IAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*TiT2TbN5cG4AAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*8GF6Q4LZefUAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*D5pdRqUHC3IAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_FooTIp6pNIAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*CYGZR7ogZfoAAAAAAAAAAAAAARQnAQ\"</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>TextureCube\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      urls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Bk5FQKGOir4AAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_cPhR7JMDjkAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*trqjQp1nOMQAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_RXwRqwMK3EAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*q4Q6TroyuXcAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*DP5QTbTSAYgAAAAAAAAAAAAAARQnAQ\"</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>TextureCube\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">[</span>cubeMap1<span class=\"token punctuation\">,</span> cubeMap2<span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 添加天空盒背景</span>\n    background<span class=\"token punctuation\">.</span>mode <span class=\"token operator\">=</span> BackgroundMode<span class=\"token punctuation\">.</span>Sky<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 默认纯色背景</span>\n    <span class=\"token keyword\">const</span> skyMaterial <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>background<span class=\"token punctuation\">.</span>sky<span class=\"token punctuation\">.</span>material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SkyBoxMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 添加天空盒材质</span>\n    skyMaterial<span class=\"token punctuation\">.</span>textureCubeMap <span class=\"token operator\">=</span> cubeMap1<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 设置立方体纹理</span>\n    background<span class=\"token punctuation\">.</span>sky<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 设置天空盒网格</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>cubeMap1<span class=\"token punctuation\">,</span> cubeMap2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cubeMaps</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>background<span class=\"token punctuation\">,</span> <span class=\"token string\">\"mode\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Sky<span class=\"token operator\">:</span> BackgroundMode<span class=\"token punctuation\">.</span>Sky<span class=\"token punctuation\">,</span> SolidColor<span class=\"token operator\">:</span> BackgroundMode<span class=\"token punctuation\">.</span>SolidColor <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      background<span class=\"token punctuation\">.</span>mode <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> solidColor <span class=\"token operator\">=</span> background<span class=\"token punctuation\">.</span>solidColor<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> colorObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> color<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>solidColor<span class=\"token punctuation\">.</span>r <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> solidColor<span class=\"token punctuation\">.</span>g <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> solidColor<span class=\"token punctuation\">.</span>b <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> solidColor<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    gui<span class=\"token punctuation\">.</span><span class=\"token function\">addColor</span><span class=\"token punctuation\">(</span>colorObj<span class=\"token punctuation\">,</span> <span class=\"token string\">\"color\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      background<span class=\"token punctuation\">.</span>solidColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      cubeMap<span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token string\">\"cubeMap\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> cubeMap1<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> cubeMap2<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// @ts-ignore</span>\n      background<span class=\"token punctuation\">.</span>sky<span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">.</span>textureCubeMap <span class=\"token operator\">=</span> cubeMaps<span class=\"token punctuation\">[</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title Animation\n   * @category Benchmark\n   */\n  // Create engine object.\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize(); // Create root entity and get scene.\n\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity();\n  scene.ambientLight.diffuseSolidColor.setValue(1, 1, 1, 1); // Create camera.\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 0, 12);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl); // Load resources and add modles.\n\n  engine.resourceManager.load([{\n    url: \"https://gw.alipayobjects.com/os/loanprod/bf055064-3eec-4d40-bce0-ddf11dfbb88a/5d78db60f211d21a43834e23/4f5e6bb277dd2fab8e2097d7a418c5bc.gltf\",\n    type: _oasisEngine.AssetType.Perfab\n  }, {\n    url: \"https://gw-office.alipayobjects.com/basement_prod/3c140e43-e7d8-4c51-999e-1f68218afc54.jpg\",\n    type: _oasisEngine.AssetType.Texture2D\n  }]).then(function (reources) {\n    var gltf = reources[0];\n    var baseTexture = reources[1];\n    var huabei = gltf.defaultSceneRoot;\n    gltf.materials.forEach(function (material) {\n      material.baseTexture = baseTexture;\n      material.baseColor.setValue(1, 1, 1, 1);\n    });\n\n    for (var i = 0; i < 8; i++) {\n      for (var j = 0; j < 8; j++) {\n        var huabeiClone = huabei.clone();\n        rootEntity.addChild(huabeiClone);\n        var transform = huabeiClone.transform;\n        transform.setRotation(0, -90, 0);\n        transform.setScale(0.5, 0.5, 0.5);\n        transform.setPosition(i * 1.0 - 3.0, j * 1.2, -j * 3.5);\n        huabeiClone.getComponent(_oasisEngine.Animation).playAnimationClip(\"A\");\n      }\n    }\n  }); // Run engine\n\n  engine.run();\n});"},"name":"animation","title":"Animation","category":"Benchmark","id":"7fc1d44c-b069-540d-ab0f-bcbfc67c7dc0","sourceCode":"/**\n * @title Animation\n * @category Benchmark\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport { Animation, AssetType, Camera, GLTFResource, PBRMaterial, Texture2D, WebGLEngine } from \"oasis-engine\";\n\n// Create engine object.\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\n// Create root entity and get scene.\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\nscene.ambientLight.diffuseSolidColor.setValue(1, 1, 1, 1);\n\n// Create camera.\nconst cameraEntity = rootEntity.createChild(\"Camera\");\ncameraEntity.transform.setPosition(0, 0, 12);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\n// Load resources and add modles.\nengine.resourceManager\n  .load([\n    {\n      url: \"https://gw.alipayobjects.com/os/loanprod/bf055064-3eec-4d40-bce0-ddf11dfbb88a/5d78db60f211d21a43834e23/4f5e6bb277dd2fab8e2097d7a418c5bc.gltf\",\n      type: AssetType.Perfab\n    },\n    {\n      url: \"https://gw-office.alipayobjects.com/basement_prod/3c140e43-e7d8-4c51-999e-1f68218afc54.jpg\",\n      type: AssetType.Texture2D\n    }\n  ])\n  .then((reources: Object[]) => {\n    const gltf = <GLTFResource>reources[0];\n    const baseTexture = <Texture2D>reources[1];\n    const huabei = gltf.defaultSceneRoot;\n\n    gltf.materials.forEach((material: PBRMaterial) => {\n      material.baseTexture = baseTexture;\n      material.baseColor.setValue(1, 1, 1, 1);\n    });\n\n    for (let i = 0; i < 8; i++) {\n      for (let j = 0; j < 8; j++) {\n        const huabeiClone = huabei.clone();\n        rootEntity.addChild(huabeiClone);\n\n        const { transform } = huabeiClone;\n        transform.setRotation(0, -90, 0);\n        transform.setScale(0.5, 0.5, 0.5);\n        transform.setPosition(i * 1.0 - 3.0, j * 1.2, -j * 3.5);\n\n        huabeiClone.getComponent(Animation).playAnimationClip(\"A\");\n      }\n    }\n  });\n\n// Run engine\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Animation\n * @category Benchmark\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Animation<span class=\"token punctuation\">,</span> AssetType<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> GLTFResource<span class=\"token punctuation\">,</span> PBRMaterial<span class=\"token punctuation\">,</span> Texture2D<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine object.</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create root entity and get scene.</span>\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nscene<span class=\"token punctuation\">.</span>ambientLight<span class=\"token punctuation\">.</span>diffuseSolidColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera.</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Load resources and add modles.</span>\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/loanprod/bf055064-3eec-4d40-bce0-ddf11dfbb88a/5d78db60f211d21a43834e23/4f5e6bb277dd2fab8e2097d7a418c5bc.gltf\"</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Perfab\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw-office.alipayobjects.com/basement_prod/3c140e43-e7d8-4c51-999e-1f68218afc54.jpg\"</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">reources<span class=\"token operator\">:</span> Object<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> gltf <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>GLTFResource<span class=\"token operator\">></span>reources<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> baseTexture <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span>reources<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> huabei <span class=\"token operator\">=</span> gltf<span class=\"token punctuation\">.</span>defaultSceneRoot<span class=\"token punctuation\">;</span>\n\n    gltf<span class=\"token punctuation\">.</span>materials<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">material<span class=\"token operator\">:</span> PBRMaterial</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      material<span class=\"token punctuation\">.</span>baseTexture <span class=\"token operator\">=</span> baseTexture<span class=\"token punctuation\">;</span>\n      material<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> huabeiClone <span class=\"token operator\">=</span> huabei<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>huabeiClone<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> transform <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> huabeiClone<span class=\"token punctuation\">;</span>\n        transform<span class=\"token punctuation\">.</span><span class=\"token function\">setRotation</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        transform<span class=\"token punctuation\">.</span><span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">*</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">-</span> <span class=\"token number\">3.0</span><span class=\"token punctuation\">,</span> j <span class=\"token operator\">*</span> <span class=\"token number\">1.2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>j <span class=\"token operator\">*</span> <span class=\"token number\">3.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        huabeiClone<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>Animation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">playAnimationClip</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Run engine</span>\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title Buffer Mesh\n   * @category Mesh\n   */\n  // Create engine and get root entity.\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var rootEntity = engine.sceneManager.activeScene.createRootEntity(\"Root\"); // Create light.\n\n  var lightEntity = rootEntity.createChild(\"pointLight\");\n  var pointLight = lightEntity.addComponent(_oasisEngine.PointLight);\n  pointLight.distance = 10;\n  lightEntity.transform.setPosition(2, 5, 5); // Create camera.\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 6, 10);\n  cameraEntity.transform.lookAt(new _oasisEngine.Vector3(0, 0, 0));\n  cameraEntity.addComponent(_oasisEngine.Camera); // Create custom cube.\n  // Use createCustomMesh() to create custom cube mesh.\n\n  var cubeEntity = rootEntity.createChild(\"Cube\");\n  var cubeRenderer = cubeEntity.addComponent(_oasisEngine.MeshRenderer);\n  var cubeGeometry = createCustomMesh(engine, 1.0);\n  var material = new _oasisEngine.BlinnPhongMaterial(engine);\n  cubeEntity.transform.rotate(0, 60, 0);\n  cubeRenderer.mesh = cubeGeometry;\n  cubeRenderer.setMaterial(material); // Run engine.\n\n  engine.run();\n  /**\n   * Create cube geometry with custom BufferGeometry.\n   * @param engine - Engine\n   * @param size - Cube size\n   * @returns Cube mesh\n   */\n\n  function createCustomMesh(engine, size) {\n    var geometry = new _oasisEngine.BufferMesh(engine, \"CustomCubeGeometry\"); // prettier-ignore\n    // Create vertices data.\n\n    var vertices = new Float32Array([// Up\n    -size, size, -size, 0, 1, 0, size, size, -size, 0, 1, 0, size, size, size, 0, 1, 0, -size, size, size, 0, 1, 0, // Down\n    -size, -size, -size, 0, -1, 0, size, -size, -size, 0, -1, 0, size, -size, size, 0, -1, 0, -size, -size, size, 0, -1, 0, // Left\n    -size, size, -size, -1, 0, 0, -size, size, size, -1, 0, 0, -size, -size, size, -1, 0, 0, -size, -size, -size, -1, 0, 0, // Right\n    size, size, -size, 1, 0, 0, size, size, size, 1, 0, 0, size, -size, size, 1, 0, 0, size, -size, -size, 1, 0, 0, // Front\n    -size, size, size, 0, 0, 1, size, size, size, 0, 0, 1, size, -size, size, 0, 0, 1, -size, -size, size, 0, 0, 1, // Back\n    -size, size, -size, 0, 0, -1, size, size, -size, 0, 0, -1, size, -size, -size, 0, 0, -1, -size, -size, -size, 0, 0, -1]); // prettier-ignore\n    // Create indices data.\n\n    var indices = new Uint16Array([// Up\n    0, 2, 1, 2, 0, 3, // Down\n    4, 6, 7, 6, 4, 5, // Left\n    8, 10, 9, 10, 8, 11, // Right\n    12, 14, 15, 14, 12, 13, // Front\n    16, 18, 17, 18, 16, 19, // Back\n    20, 22, 23, 22, 20, 21]); // Create gpu vertex buffer and index buffer.\n\n    var vertexBuffer = new _oasisEngine.Buffer(engine, _oasisEngine.BufferBindFlag.VertexBuffer, vertices, _oasisEngine.BufferUsage.Static);\n    var indexBuffer = new _oasisEngine.Buffer(engine, _oasisEngine.BufferBindFlag.IndexBuffer, indices, _oasisEngine.BufferUsage.Static); // Bind buffer\n\n    geometry.setVertexBufferBinding(vertexBuffer, 24);\n    geometry.setIndexBufferBinding(indexBuffer, _oasisEngine.IndexFormat.UInt16); // Add vertexElement\n\n    geometry.setVertexElements([new _oasisEngine.VertexElement(\"POSITION\", 0, _oasisEngine.VertexElementFormat.Vector3, 0), new _oasisEngine.VertexElement(\"NORMAL\", 12, _oasisEngine.VertexElementFormat.Vector3, 0)]); // Add one sub geometry.\n\n    geometry.addSubMesh(0, indices.length);\n    return geometry;\n  }\n});"},"name":"buffer-mesh","title":"Buffer Mesh","category":"Mesh","id":"b483d65d-1da8-5c6d-9613-001a22b504a8","sourceCode":"/**\n * @title Buffer Mesh\n * @category Mesh\n */\nimport {\n  BlinnPhongMaterial,\n  Buffer,\n  BufferBindFlag,\n  BufferMesh,\n  BufferUsage,\n  Camera,\n  Color,\n  Engine,\n  IndexFormat,\n  Mesh,\n  MeshRenderer,\n  PointLight,\n  Vector3,\n  VertexElement,\n  VertexElementFormat,\n  WebGLEngine\n} from \"oasis-engine\";\n\n// Create engine and get root entity.\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst rootEntity = engine.sceneManager.activeScene.createRootEntity(\"Root\");\n\n// Create light.\nconst lightEntity = rootEntity.createChild(\"pointLight\");\nconst pointLight = lightEntity.addComponent(PointLight);\npointLight.distance = 10;\nlightEntity.transform.setPosition(2, 5, 5);\n// Create camera.\nconst cameraEntity = rootEntity.createChild(\"Camera\");\ncameraEntity.transform.setPosition(0, 6, 10);\ncameraEntity.transform.lookAt(new Vector3(0, 0, 0));\ncameraEntity.addComponent(Camera);\n\n// Create custom cube.\n// Use createCustomMesh() to create custom cube mesh.\nconst cubeEntity = rootEntity.createChild(\"Cube\");\nconst cubeRenderer = cubeEntity.addComponent(MeshRenderer);\nconst cubeGeometry = createCustomMesh(engine, 1.0);\nconst material = new BlinnPhongMaterial(engine);\ncubeEntity.transform.rotate(0, 60, 0);\ncubeRenderer.mesh = cubeGeometry;\ncubeRenderer.setMaterial(material);\n\n// Run engine.\nengine.run();\n\n/**\n * Create cube geometry with custom BufferGeometry.\n * @param engine - Engine\n * @param size - Cube size\n * @returns Cube mesh\n */\nfunction createCustomMesh(engine: Engine, size: number): Mesh {\n  const geometry = new BufferMesh(engine, \"CustomCubeGeometry\");\n\n  // prettier-ignore\n  // Create vertices data.\n  const vertices: Float32Array = new Float32Array([\n          // Up\n          -size, size, -size, 0, 1, 0, size, size, -size, 0, 1, 0, size, size, size, 0, 1, 0, -size, size, size, 0, 1, 0,\n          // Down\n          -size, -size, -size, 0, -1, 0, size, -size, -size, 0, -1, 0, size, -size, size, 0, -1, 0, -size, -size, size, 0, -1, 0,\n          // Left\n          -size, size, -size, -1, 0, 0, -size, size, size, -1, 0, 0, -size, -size, size, -1, 0, 0, -size, -size, -size, -1, 0, 0,\n          // Right\n          size, size, -size, 1, 0, 0, size, size, size, 1, 0, 0, size, -size, size, 1, 0, 0, size, -size, -size, 1, 0, 0,\n          // Front\n          -size, size, size, 0, 0, 1, size, size, size, 0, 0, 1, size, -size, size, 0, 0, 1, -size, -size, size, 0, 0, 1,\n          // Back\n          -size, size, -size, 0, 0, -1, size, size, -size, 0, 0, -1, size, -size, -size, 0, 0, -1, -size, -size, -size, 0, 0, -1]);\n\n  // prettier-ignore\n  // Create indices data.\n  const indices: Uint16Array = new Uint16Array([\n          // Up\n          0, 2, 1, 2, 0, 3,\n          // Down\n          4, 6, 7, 6, 4, 5,\n          // Left\n          8, 10, 9, 10, 8, 11,\n          // Right\n          12, 14, 15, 14, 12, 13,\n          // Front\n          16, 18, 17, 18, 16, 19,\n          // Back\n          20, 22, 23, 22, 20, 21]);\n\n  // Create gpu vertex buffer and index buffer.\n  const vertexBuffer = new Buffer(engine, BufferBindFlag.VertexBuffer, vertices, BufferUsage.Static);\n  const indexBuffer = new Buffer(engine, BufferBindFlag.IndexBuffer, indices, BufferUsage.Static);\n\n  // Bind buffer\n  geometry.setVertexBufferBinding(vertexBuffer, 24);\n  geometry.setIndexBufferBinding(indexBuffer, IndexFormat.UInt16);\n\n  // Add vertexElement\n  geometry.setVertexElements([\n    new VertexElement(\"POSITION\", 0, VertexElementFormat.Vector3, 0),\n    new VertexElement(\"NORMAL\", 12, VertexElementFormat.Vector3, 0)\n  ]);\n\n  // Add one sub geometry.\n  geometry.addSubMesh(0, indices.length);\n  return geometry;\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Buffer Mesh\n * @category Mesh\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  BlinnPhongMaterial<span class=\"token punctuation\">,</span>\n  Buffer<span class=\"token punctuation\">,</span>\n  BufferBindFlag<span class=\"token punctuation\">,</span>\n  BufferMesh<span class=\"token punctuation\">,</span>\n  BufferUsage<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  Color<span class=\"token punctuation\">,</span>\n  Engine<span class=\"token punctuation\">,</span>\n  IndexFormat<span class=\"token punctuation\">,</span>\n  Mesh<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  PointLight<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  VertexElement<span class=\"token punctuation\">,</span>\n  VertexElementFormat<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine and get root entity.</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create light.</span>\n<span class=\"token keyword\">const</span> lightEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pointLight\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> pointLight <span class=\"token operator\">=</span> lightEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>PointLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npointLight<span class=\"token punctuation\">.</span>distance <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\nlightEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Create camera.</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create custom cube.</span>\n<span class=\"token comment\">// Use createCustomMesh() to create custom cube mesh.</span>\n<span class=\"token keyword\">const</span> cubeEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Cube\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> cubeRenderer <span class=\"token operator\">=</span> cubeEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> cubeGeometry <span class=\"token operator\">=</span> <span class=\"token function\">createCustomMesh</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncubeEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncubeRenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> cubeGeometry<span class=\"token punctuation\">;</span>\ncubeRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Run engine.</span>\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Create cube geometry with custom BufferGeometry.\n * @param engine - Engine\n * @param size - Cube size\n * @returns Cube mesh\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">createCustomMesh</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">engine<span class=\"token operator\">:</span> Engine<span class=\"token punctuation\">,</span> size<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Mesh <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> geometry <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferMesh</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token string\">\"CustomCubeGeometry\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// prettier-ignore</span>\n  <span class=\"token comment\">// Create vertices data.</span>\n  <span class=\"token keyword\">const</span> vertices<span class=\"token operator\">:</span> Float32Array <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Float32Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n          <span class=\"token comment\">// Up</span>\n          <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Down</span>\n          <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Left</span>\n          <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Right</span>\n          size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Front</span>\n          <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Back</span>\n          <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// prettier-ignore</span>\n  <span class=\"token comment\">// Create indices data.</span>\n  <span class=\"token keyword\">const</span> indices<span class=\"token operator\">:</span> Uint16Array <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint16Array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n          <span class=\"token comment\">// Up</span>\n          <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Down</span>\n          <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Left</span>\n          <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Right</span>\n          <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Front</span>\n          <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19</span><span class=\"token punctuation\">,</span>\n          <span class=\"token comment\">// Back</span>\n          <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create gpu vertex buffer and index buffer.</span>\n  <span class=\"token keyword\">const</span> vertexBuffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Buffer</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> BufferBindFlag<span class=\"token punctuation\">.</span>VertexBuffer<span class=\"token punctuation\">,</span> vertices<span class=\"token punctuation\">,</span> BufferUsage<span class=\"token punctuation\">.</span>Static<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> indexBuffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Buffer</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> BufferBindFlag<span class=\"token punctuation\">.</span>IndexBuffer<span class=\"token punctuation\">,</span> indices<span class=\"token punctuation\">,</span> BufferUsage<span class=\"token punctuation\">.</span>Static<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Bind buffer</span>\n  geometry<span class=\"token punctuation\">.</span><span class=\"token function\">setVertexBufferBinding</span><span class=\"token punctuation\">(</span>vertexBuffer<span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  geometry<span class=\"token punctuation\">.</span><span class=\"token function\">setIndexBufferBinding</span><span class=\"token punctuation\">(</span>indexBuffer<span class=\"token punctuation\">,</span> IndexFormat<span class=\"token punctuation\">.</span>UInt16<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Add vertexElement</span>\n  geometry<span class=\"token punctuation\">.</span><span class=\"token function\">setVertexElements</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">VertexElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"POSITION\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> VertexElementFormat<span class=\"token punctuation\">.</span>Vector3<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">VertexElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"NORMAL\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> VertexElementFormat<span class=\"token punctuation\">.</span>Vector3<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Add one sub geometry.</span>\n  geometry<span class=\"token punctuation\">.</span><span class=\"token function\">addSubMesh</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> indices<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> geometry<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title Blinn Phong Material\n   * @category Material\n   */\n  var gui = new dat.GUI(); // Create engine object\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // Create camera\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 10, 30);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  var control = cameraEntity.addComponent(_controls.OrbitControl);\n  control.target.y = 5; // Create Direct Light\n\n  var light1 = rootEntity.createChild();\n  var light2 = rootEntity.createChild();\n  light1.transform.lookAt(new _oasisEngine.Vector3(-1, -1, -1));\n  light2.transform.lookAt(new _oasisEngine.Vector3(1, 1, 1));\n  light1.addComponent(_oasisEngine.DirectLight);\n  light2.addComponent(_oasisEngine.DirectLight);\n  engine.run();\n  engine.resourceManager.load([{\n    type: _oasisEngine.AssetType.Texture2D,\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*g_HIRqQdNUcAAAAAAAAAAAAAARQnAQ\"\n  }, {\n    type: _oasisEngine.AssetType.Texture2D,\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*H7nMRY2SuWcAAAAAAAAAAAAAARQnAQ\"\n  }, {\n    type: _oasisEngine.AssetType.Perfab,\n    url: \"https://gw.alipayobjects.com/os/bmw-prod/72a8e335-01da-4234-9e81-5f8b56464044.gltf\"\n  }]).then(function (res) {\n    var baseTexture = res[0];\n    var normalTexture = res[1];\n    var gltf = res[2];\n    var defaultSceneRoot = gltf.defaultSceneRoot;\n    var rendererArray = new Array();\n    var materials = new Array();\n    rootEntity.addChild(defaultSceneRoot);\n    defaultSceneRoot.getComponentsIncludeChildren(_oasisEngine.MeshRenderer, rendererArray);\n    rendererArray.forEach(function (renderer) {\n      var material = new _oasisEngine.BlinnPhongMaterial(engine);\n      material.baseTexture = baseTexture;\n      material.normalTexture = normalTexture;\n      material.shininess = 64;\n      material.renderFace = _oasisEngine.RenderFace.Double;\n      renderer.setMaterial(material);\n      materials.push(material);\n    });\n    addGUI(materials);\n  });\n\n  function addGUI(materials) {\n    var state = {\n      baseColor: [255, 255, 255],\n      specularColor: [255, 255, 255],\n      shininess: 64,\n      normalIntensity: 1,\n      isTransparent: false,\n      opacity: 1\n    };\n    gui.addColor(state, \"baseColor\").onChange(function (v) {\n      materials.forEach(function (material) {\n        material.baseColor.setValue(v[0] / 255, v[1] / 255, v[2] / 255, state.opacity);\n      });\n    });\n    gui.addColor(state, \"specularColor\").onChange(function (v) {\n      materials.forEach(function (material) {\n        material.specularColor.setValue(v[0] / 255, v[1] / 255, v[2] / 255, 1);\n      });\n    });\n    gui.add(state, \"shininess\", 0, 100).onChange(function (v) {\n      materials.forEach(function (material) {\n        material.shininess = v;\n      });\n    });\n    gui.add(state, \"normalIntensity\", 0, 1, 0.1).onChange(function (v) {\n      materials.forEach(function (material) {\n        material.normalIntensity = v;\n      });\n    });\n    gui.add(state, \"isTransparent\").onChange(function (v) {\n      materials.forEach(function (material) {\n        material.isTransparent = v;\n      });\n    });\n    gui.add(state, \"opacity\", 0, 1, 0.1).onChange(function (v) {\n      materials.forEach(function (material) {\n        material.baseColor.a = v;\n      });\n    });\n  }\n});"},"name":"blinn-phong","title":"Blinn Phong Material","category":"Material","id":"3dda22a3-67f1-5ae8-aa17-6f8c28cea202","sourceCode":"/**\n * @title Blinn Phong Material\n * @category Material\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\nimport {\n  AssetType,\n  BlinnPhongMaterial,\n  Camera,\n  DirectLight,\n  GLTFResource,\n  MeshRenderer,\n  RenderFace,\n  Texture2D,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\nconst gui = new dat.GUI();\n\n// Create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// Create camera\nconst cameraEntity = rootEntity.createChild(\"Camera\");\ncameraEntity.transform.setPosition(0, 10, 30);\ncameraEntity.addComponent(Camera);\nconst control = cameraEntity.addComponent(OrbitControl);\ncontrol.target.y = 5;\n\n// Create Direct Light\nconst light1 = rootEntity.createChild();\nconst light2 = rootEntity.createChild();\nlight1.transform.lookAt(new Vector3(-1, -1, -1));\nlight2.transform.lookAt(new Vector3(1, 1, 1));\nlight1.addComponent(DirectLight);\nlight2.addComponent(DirectLight);\n\nengine.run();\n\nengine.resourceManager\n  .load([\n    {\n      type: AssetType.Texture2D,\n      url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*g_HIRqQdNUcAAAAAAAAAAAAAARQnAQ\"\n    },\n    {\n      type: AssetType.Texture2D,\n      url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*H7nMRY2SuWcAAAAAAAAAAAAAARQnAQ\"\n    },\n    {\n      type: AssetType.Perfab,\n      url: \"https://gw.alipayobjects.com/os/bmw-prod/72a8e335-01da-4234-9e81-5f8b56464044.gltf\"\n    }\n  ])\n  .then((res) => {\n    const baseTexture = res[0] as Texture2D;\n    const normalTexture = res[1] as Texture2D;\n    const gltf = res[2] as GLTFResource;\n\n    const { defaultSceneRoot } = gltf;\n    const rendererArray = new Array<MeshRenderer>();\n    const materials = new Array<BlinnPhongMaterial>();\n\n    rootEntity.addChild(defaultSceneRoot);\n    defaultSceneRoot.getComponentsIncludeChildren(MeshRenderer, rendererArray);\n\n    rendererArray.forEach((renderer) => {\n      const material = new BlinnPhongMaterial(engine);\n      material.baseTexture = baseTexture;\n      material.normalTexture = normalTexture;\n      material.shininess = 64;\n      material.renderFace = RenderFace.Double;\n      renderer.setMaterial(material);\n      materials.push(material);\n    });\n\n    addGUI(materials);\n  });\n\nfunction addGUI(materials: BlinnPhongMaterial[]): void {\n  const state = {\n    baseColor: [255, 255, 255],\n    specularColor: [255, 255, 255],\n    shininess: 64,\n    normalIntensity: 1,\n    isTransparent: false,\n    opacity: 1\n  };\n\n  gui.addColor(state, \"baseColor\").onChange((v) => {\n    materials.forEach((material) => {\n      material.baseColor.setValue(v[0] / 255, v[1] / 255, v[2] / 255, state.opacity);\n    });\n  });\n\n  gui.addColor(state, \"specularColor\").onChange((v) => {\n    materials.forEach((material) => {\n      material.specularColor.setValue(v[0] / 255, v[1] / 255, v[2] / 255, 1);\n    });\n  });\n  gui.add(state, \"shininess\", 0, 100).onChange((v) => {\n    materials.forEach((material) => {\n      material.shininess = v;\n    });\n  });\n  gui.add(state, \"normalIntensity\", 0, 1, 0.1).onChange((v) => {\n    materials.forEach((material) => {\n      material.normalIntensity = v;\n    });\n  });\n  gui.add(state, \"isTransparent\").onChange((v) => {\n    materials.forEach((material) => {\n      material.isTransparent = v;\n    });\n  });\n  gui.add(state, \"opacity\", 0, 1, 0.1).onChange((v) => {\n    materials.forEach((material) => {\n      material.baseColor.a = v;\n    });\n  });\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Blinn Phong Material\n * @category Material\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  BlinnPhongMaterial<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  DirectLight<span class=\"token punctuation\">,</span>\n  GLTFResource<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  RenderFace<span class=\"token punctuation\">,</span>\n  Texture2D<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> control <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncontrol<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create Direct Light</span>\n<span class=\"token keyword\">const</span> light1 <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> light2 <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlight1<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlight2<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlight1<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlight2<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D<span class=\"token punctuation\">,</span>\n      url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*g_HIRqQdNUcAAAAAAAAAAAAAARQnAQ\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D<span class=\"token punctuation\">,</span>\n      url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*H7nMRY2SuWcAAAAAAAAAAAAAARQnAQ\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Perfab<span class=\"token punctuation\">,</span>\n      url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/72a8e335-01da-4234-9e81-5f8b56464044.gltf\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> baseTexture <span class=\"token operator\">=</span> res<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">as</span> Texture2D<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> normalTexture <span class=\"token operator\">=</span> res<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">as</span> Texture2D<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> gltf <span class=\"token operator\">=</span> res<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">as</span> GLTFResource<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> defaultSceneRoot <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> gltf<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> rendererArray <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token operator\">&lt;</span>MeshRenderer<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> materials <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token operator\">&lt;</span>BlinnPhongMaterial<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>defaultSceneRoot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    defaultSceneRoot<span class=\"token punctuation\">.</span><span class=\"token function\">getComponentsIncludeChildren</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">,</span> rendererArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    rendererArray<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">renderer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      material<span class=\"token punctuation\">.</span>baseTexture <span class=\"token operator\">=</span> baseTexture<span class=\"token punctuation\">;</span>\n      material<span class=\"token punctuation\">.</span>normalTexture <span class=\"token operator\">=</span> normalTexture<span class=\"token punctuation\">;</span>\n      material<span class=\"token punctuation\">.</span>shininess <span class=\"token operator\">=</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span>\n      material<span class=\"token punctuation\">.</span>renderFace <span class=\"token operator\">=</span> RenderFace<span class=\"token punctuation\">.</span>Double<span class=\"token punctuation\">;</span>\n      renderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      materials<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">addGUI</span><span class=\"token punctuation\">(</span>materials<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">addGUI</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">materials<span class=\"token operator\">:</span> BlinnPhongMaterial<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    baseColor<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    specularColor<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    shininess<span class=\"token operator\">:</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span>\n    normalIntensity<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    isTransparent<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    opacity<span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">addColor</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"baseColor\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    materials<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">material</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      material<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">.</span>opacity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">addColor</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"specularColor\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    materials<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">material</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      material<span class=\"token punctuation\">.</span>specularColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"shininess\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    materials<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">material</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      material<span class=\"token punctuation\">.</span>shininess <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"normalIntensity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    materials<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">material</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      material<span class=\"token punctuation\">.</span>normalIntensity <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"isTransparent\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    materials<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">material</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      material<span class=\"token punctuation\">.</span>isTransparent <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"opacity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    materials<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">material</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      material<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"@oasis-engine/framebuffer-picker\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"@oasis-engine/framebuffer-picker\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global[\"@oasisEngine/framebufferPicker\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _framebufferPicker, _oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title Framebuffer Picker\n   * @category Advance\n   */\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootNode = scene.createRootEntity(); //-- create camera\n\n  var cameraNode = rootNode.createChild(\"camera_node\");\n  cameraNode.transform.position = new _oasisEngine.Vector3(0, 0, 30);\n  var camera = cameraNode.addComponent(_oasisEngine.Camera);\n  cameraNode.addComponent(_controls.OrbitControl);\n  var resources = [{\n    url: \"https://gw.alipayobjects.com/os/bmw-prod/150e44f6-7810-4c45-8029-3575d36aff30.gltf\"\n  }, {\n    urls: [\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Bk5FQKGOir4AAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_cPhR7JMDjkAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*trqjQp1nOMQAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_RXwRqwMK3EAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*q4Q6TroyuXcAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*DP5QTbTSAYgAAAAAAAAAAAAAARQnAQ\"],\n    type: _oasisEngine.AssetType.TextureCube\n  }, {\n    urls: [\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5w6_Rr6ML6IAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*TiT2TbN5cG4AAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*8GF6Q4LZefUAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*D5pdRqUHC3IAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_FooTIp6pNIAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*CYGZR7ogZfoAAAAAAAAAAAAAARQnAQ\"],\n    type: _oasisEngine.AssetType.TextureCube\n  }];\n  engine.resourceManager.load(resources).then(function (res) {\n    var gltf = res[0];\n    var mesh = gltf.meshes[0];\n\n    for (var x = 0; x < 5; x++) {\n      for (var y = 0; y < 5; y++) {\n        var testNode = rootNode.createChild(\"test_mesh\" + x + y);\n        testNode.addChild(gltf.defaultSceneRoot.clone());\n        testNode.transform.position = new _oasisEngine.Vector3((x - 2) * 5, (y - 2) * 5, 0);\n      }\n    }\n\n    var ambientLight = scene.ambientLight;\n    ambientLight.diffuseMode = _oasisEngine.DiffuseMode.Texture;\n    ambientLight.diffuseTexture = res[1];\n    ambientLight.specularTexture = res[2]; // framebuffer picker\n\n    var lastMaterial;\n    var laseBaseColor;\n    var framebufferPicker = rootNode.addComponent(_framebufferPicker.FramebufferPicker);\n    framebufferPicker.camera = camera;\n\n    framebufferPicker.onPick = function (obj) {\n      if (lastMaterial) lastMaterial.baseColor = laseBaseColor;\n\n      if (obj) {\n        var primitive = obj.primitive,\n            component = obj.component;\n        var material = component.getInstanceMaterial();\n        lastMaterial = material;\n        laseBaseColor = material.baseColor;\n        material.baseColor = new _oasisEngine.Color(1, 0, 0, 1);\n      }\n    };\n\n    document.getElementById(\"canvas\").addEventListener(\"mousedown\", function (e) {\n      // console.log(e.offsetX, e.offsetY);\n      framebufferPicker.pick(e.offsetX, e.offsetY);\n    });\n  }); //-- run\n\n  engine.run();\n});"},"name":"framebuffer-picker","title":"Framebuffer Picker","category":"Advance","id":"2dbf822b-d1db-5fab-b2db-e273b423facb","sourceCode":"/**\n * @title Framebuffer Picker\n * @category Advance\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport { FramebufferPicker } from \"@oasis-engine/framebuffer-picker\";\nimport {\n  AssetType,\n  Camera,\n  Color,\n  GLTFResource,\n  LoadItem,\n  TextureCubeMap,\n  Vector3,\n  WebGLEngine,\n  DiffuseMode\n} from \"oasis-engine\";\n\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\nconst scene = engine.sceneManager.activeScene;\nconst rootNode = scene.createRootEntity();\n\n//-- create camera\nlet cameraNode = rootNode.createChild(\"camera_node\");\ncameraNode.transform.position = new Vector3(0, 0, 30);\nconst camera = cameraNode.addComponent(Camera);\ncameraNode.addComponent(OrbitControl);\n\nconst resources: LoadItem[] = [\n  { url: \"https://gw.alipayobjects.com/os/bmw-prod/150e44f6-7810-4c45-8029-3575d36aff30.gltf\" },\n  {\n    urls: [\n      \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Bk5FQKGOir4AAAAAAAAAAAAAARQnAQ\",\n      \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_cPhR7JMDjkAAAAAAAAAAAAAARQnAQ\",\n      \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*trqjQp1nOMQAAAAAAAAAAAAAARQnAQ\",\n      \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_RXwRqwMK3EAAAAAAAAAAAAAARQnAQ\",\n      \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*q4Q6TroyuXcAAAAAAAAAAAAAARQnAQ\",\n      \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*DP5QTbTSAYgAAAAAAAAAAAAAARQnAQ\"\n    ],\n    type: AssetType.TextureCube\n  },\n  {\n    urls: [\n      \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5w6_Rr6ML6IAAAAAAAAAAAAAARQnAQ\",\n      \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*TiT2TbN5cG4AAAAAAAAAAAAAARQnAQ\",\n      \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*8GF6Q4LZefUAAAAAAAAAAAAAARQnAQ\",\n      \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*D5pdRqUHC3IAAAAAAAAAAAAAARQnAQ\",\n      \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_FooTIp6pNIAAAAAAAAAAAAAARQnAQ\",\n      \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*CYGZR7ogZfoAAAAAAAAAAAAAARQnAQ\"\n    ],\n    type: AssetType.TextureCube\n  }\n];\n\nengine.resourceManager.load(resources).then((res) => {\n  const gltf = <GLTFResource>res[0];\n\n  let mesh = gltf.meshes[0];\n  for (let x = 0; x < 5; x++) {\n    for (let y = 0; y < 5; y++) {\n      let testNode = rootNode.createChild(\"test_mesh\" + x + y);\n      testNode.addChild(gltf.defaultSceneRoot.clone());\n      testNode.transform.position = new Vector3((x - 2) * 5, (y - 2) * 5, 0);\n    }\n  }\n\n  const ambientLight = scene.ambientLight;\n  ambientLight.diffuseMode = DiffuseMode.Texture;\n  ambientLight.diffuseTexture = <TextureCubeMap>res[1];\n  ambientLight.specularTexture = <TextureCubeMap>res[2];\n\n  // framebuffer picker\n  let lastMaterial;\n  let laseBaseColor;\n  let framebufferPicker = rootNode.addComponent(FramebufferPicker);\n  framebufferPicker.camera = camera;\n  framebufferPicker.onPick = (obj) => {\n    if (lastMaterial) lastMaterial.baseColor = laseBaseColor;\n\n    if (obj) {\n      const { primitive, component } = obj;\n      let material = component.getInstanceMaterial();\n\n      lastMaterial = material;\n      laseBaseColor = material.baseColor;\n      material.baseColor = new Color(1, 0, 0, 1);\n    }\n  };\n\n  document.getElementById(\"canvas\").addEventListener(\"mousedown\", (e) => {\n    // console.log(e.offsetX, e.offsetY);\n    framebufferPicker.pick(e.offsetX, e.offsetY);\n  });\n});\n\n//-- run\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Framebuffer Picker\n * @category Advance\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> FramebufferPicker <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/framebuffer-picker\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  Color<span class=\"token punctuation\">,</span>\n  GLTFResource<span class=\"token punctuation\">,</span>\n  LoadItem<span class=\"token punctuation\">,</span>\n  TextureCubeMap<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine<span class=\"token punctuation\">,</span>\n  DiffuseMode\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootNode <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create camera</span>\n<span class=\"token keyword\">let</span> cameraNode <span class=\"token operator\">=</span> rootNode<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> camera <span class=\"token operator\">=</span> cameraNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> resources<span class=\"token operator\">:</span> LoadItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/150e44f6-7810-4c45-8029-3575d36aff30.gltf\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    urls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Bk5FQKGOir4AAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_cPhR7JMDjkAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*trqjQp1nOMQAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_RXwRqwMK3EAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*q4Q6TroyuXcAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*DP5QTbTSAYgAAAAAAAAAAAAAARQnAQ\"</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>TextureCube\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    urls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5w6_Rr6ML6IAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*TiT2TbN5cG4AAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*8GF6Q4LZefUAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*D5pdRqUHC3IAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_FooTIp6pNIAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*CYGZR7ogZfoAAAAAAAAAAAAAARQnAQ\"</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>TextureCube\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>resources<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> gltf <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>GLTFResource<span class=\"token operator\">></span>res<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">let</span> mesh <span class=\"token operator\">=</span> gltf<span class=\"token punctuation\">.</span>meshes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> x<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> y <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> y<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> testNode <span class=\"token operator\">=</span> rootNode<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test_mesh\"</span> <span class=\"token operator\">+</span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      testNode<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>gltf<span class=\"token punctuation\">.</span>defaultSceneRoot<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      testNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> ambientLight <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span>ambientLight<span class=\"token punctuation\">;</span>\n  ambientLight<span class=\"token punctuation\">.</span>diffuseMode <span class=\"token operator\">=</span> DiffuseMode<span class=\"token punctuation\">.</span>Texture<span class=\"token punctuation\">;</span>\n  ambientLight<span class=\"token punctuation\">.</span>diffuseTexture <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>TextureCubeMap<span class=\"token operator\">></span>res<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  ambientLight<span class=\"token punctuation\">.</span>specularTexture <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>TextureCubeMap<span class=\"token operator\">></span>res<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// framebuffer picker</span>\n  <span class=\"token keyword\">let</span> lastMaterial<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> laseBaseColor<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> framebufferPicker <span class=\"token operator\">=</span> rootNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>FramebufferPicker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  framebufferPicker<span class=\"token punctuation\">.</span>camera <span class=\"token operator\">=</span> camera<span class=\"token punctuation\">;</span>\n  framebufferPicker<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onPick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">obj</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lastMaterial<span class=\"token punctuation\">)</span> lastMaterial<span class=\"token punctuation\">.</span>baseColor <span class=\"token operator\">=</span> laseBaseColor<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> primitive<span class=\"token punctuation\">,</span> component <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">let</span> material <span class=\"token operator\">=</span> component<span class=\"token punctuation\">.</span><span class=\"token function\">getInstanceMaterial</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      lastMaterial <span class=\"token operator\">=</span> material<span class=\"token punctuation\">;</span>\n      laseBaseColor <span class=\"token operator\">=</span> material<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">;</span>\n      material<span class=\"token punctuation\">.</span>baseColor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// console.log(e.offsetX, e.offsetY);</span>\n    framebufferPicker<span class=\"token punctuation\">.</span><span class=\"token function\">pick</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>offsetX<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>offsetY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- run</span>\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title Animation Cross Fade\n   * @category Animation\n   */\n  var gui = new dat.GUI(); //-- create engine object\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity();\n  var lightEntity = rootEntity.createChild(\"light\");\n  lightEntity.transform.rotate(0, 180, 0);\n  var light = lightEntity.addComponent(_oasisEngine.DirectLight);\n  light.color = new _oasisEngine.Color(0.8, 0.8, 0.8, 1.0); //-- create camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_entity\");\n  cameraEntity.transform.setPosition(0, 0, -10);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl);\n  engine.run();\n  engine.resourceManager.load(\"https://gw.alipayobjects.com/os/OasisHub/267000040/494/redPacket.gltf\").then(function (asset) {\n    var animations = asset.animations,\n        defaultSceneRoot = asset.defaultSceneRoot;\n    var animationNameList = animations.map(function (_ref) {\n      var name = _ref.name;\n      return name;\n    });\n    rootEntity.addChild(defaultSceneRoot);\n    var animator = defaultSceneRoot.getComponent(_oasisEngine.Animation);\n    animator.playAnimationClip(animationNameList[0]);\n    var debugInfo = {\n      animation: animationNameList[0],\n      crossFade: true,\n      crossTime: 1000\n    };\n    gui.add(debugInfo, \"animation\", animationNameList).onChange(function (v) {\n      var crossFade = debugInfo.crossFade,\n          crossTime = debugInfo.crossTime;\n\n      if (crossFade) {\n        animator.crossFade(v, crossTime, {});\n      } else {\n        animator.playAnimationClip(v);\n      }\n    });\n    gui.add(debugInfo, \"crossFade\");\n    gui.add(debugInfo, \"crossTime\", 0, 5000).name(\"过渡时间(毫秒)\");\n  });\n});"},"name":"animation-cross-fade","title":"Animation Cross Fade","category":"Animation","id":"c95dc88d-3e84-50b2-9524-724c58add9af","sourceCode":"/**\n * @title Animation Cross Fade\n * @category Animation\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\nimport { Animation, Camera, Color, DirectLight, GLTFResource, WebGLEngine } from \"oasis-engine\";\n\nconst gui = new dat.GUI();\n\n//-- create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\nconst lightEntity = rootEntity.createChild(\"light\");\nlightEntity.transform.rotate(0, 180, 0);\n\nconst light = lightEntity.addComponent(DirectLight);\nlight.color = new Color(0.8, 0.8, 0.8, 1.0);\n\n//-- create camera\nconst cameraEntity = rootEntity.createChild(\"camera_entity\");\ncameraEntity.transform.setPosition(0, 0, -10);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\nengine.run();\n\nengine.resourceManager\n  .load<GLTFResource>(\"https://gw.alipayobjects.com/os/OasisHub/267000040/494/redPacket.gltf\")\n  .then((asset) => {\n    const { animations, defaultSceneRoot } = asset;\n    const animationNameList = animations.map(({ name }) => name);\n\n    rootEntity.addChild(defaultSceneRoot);\n\n    const animator = defaultSceneRoot.getComponent(Animation);\n    animator.playAnimationClip(animationNameList[0]);\n\n    const debugInfo = {\n      animation: animationNameList[0],\n      crossFade: true,\n      crossTime: 1000\n    };\n\n    gui.add(debugInfo, \"animation\", animationNameList).onChange((v) => {\n      const { crossFade, crossTime } = debugInfo;\n\n      if (crossFade) {\n        animator.crossFade(v, crossTime, {});\n      } else {\n        animator.playAnimationClip(v);\n      }\n    });\n\n    gui.add(debugInfo, \"crossFade\");\n    gui.add(debugInfo, \"crossTime\", 0, 5000).name(\"过渡时间(毫秒)\");\n  });\n","formatedCode":"<span class=\"token comment\">/**\n * @title Animation Cross Fade\n * @category Animation\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Animation<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> Color<span class=\"token punctuation\">,</span> DirectLight<span class=\"token punctuation\">,</span> GLTFResource<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> lightEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"light\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">180</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> light <span class=\"token operator\">=</span> lightEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlight<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_entity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>GLTFResource<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://gw.alipayobjects.com/os/OasisHub/267000040/494/redPacket.gltf\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">asset</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> animations<span class=\"token punctuation\">,</span> defaultSceneRoot <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> asset<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> animationNameList <span class=\"token operator\">=</span> animations<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> name <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>defaultSceneRoot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> animator <span class=\"token operator\">=</span> defaultSceneRoot<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>Animation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    animator<span class=\"token punctuation\">.</span><span class=\"token function\">playAnimationClip</span><span class=\"token punctuation\">(</span>animationNameList<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> debugInfo <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      animation<span class=\"token operator\">:</span> animationNameList<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      crossFade<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      crossTime<span class=\"token operator\">:</span> <span class=\"token number\">1000</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>debugInfo<span class=\"token punctuation\">,</span> <span class=\"token string\">\"animation\"</span><span class=\"token punctuation\">,</span> animationNameList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> crossFade<span class=\"token punctuation\">,</span> crossTime <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> debugInfo<span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>crossFade<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        animator<span class=\"token punctuation\">.</span><span class=\"token function\">crossFade</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> crossTime<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        animator<span class=\"token punctuation\">.</span><span class=\"token function\">playAnimationClip</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>debugInfo<span class=\"token punctuation\">,</span> <span class=\"token string\">\"crossFade\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>debugInfo<span class=\"token punctuation\">,</span> <span class=\"token string\">\"crossTime\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"过渡时间(毫秒)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title Free Controls\n   * @category Camera\n   */\n\n  /**\n   * 本示例展示如何使用几何体渲染器功能、如何创建几何体资源对象、如何创建材质对象\n   */\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootNode = scene.createRootEntity(\"root\"); // 在场景中创建相机节点、配置位置和目标方向\n\n  var cameraNode = rootNode.createChild(\"Camera\");\n  cameraNode.transform.setPosition(0, 0, 20);\n  var camera = cameraNode.addComponent(_oasisEngine.Camera);\n  var controler = cameraNode.addComponent(_controls.FreeControl);\n  camera.farClipPlane = 2000;\n  controler.movementSpeed = 100;\n  controler.rotateSpeed = 1;\n  var lightNode = rootNode.createChild(\"Light\");\n  lightNode.transform.setRotation(-45, 45, 0);\n  lightNode.addComponent(_oasisEngine.DirectLight);\n\n  var cuboid = _oasisEngine.PrimitiveMesh.createCuboid(engine, 50, 50, 50);\n\n  var material = new _oasisEngine.BlinnPhongMaterial(engine);\n\n  var groundGeometry = _oasisEngine.PrimitiveMesh.createPlane(engine, 2000, 2000, 100, 100);\n\n  groundGeometry.subMesh.topology = _oasisEngine.MeshTopology.LineStrip;\n  var groundMaterial = new _oasisEngine.BlinnPhongMaterial(engine); // create meshes in scene\n\n  for (var i = 0; i < 100; i++) {\n    var cube = rootNode.createChild(\"cube\");\n    cube.transform.setPosition(Math.random() * 2000 - 1000, Math.random() * 200, Math.random() * 2000 - 1000);\n    var cubeRenderer = cube.addComponent(_oasisEngine.MeshRenderer);\n    cubeRenderer.mesh = cuboid;\n    cubeRenderer.setMaterial(material);\n  } // Ground\n\n\n  var ground = rootNode.createChild(\"ground\");\n  ground.transform.setPosition(0, -25, 0);\n  ground.transform.rotate(-90, 0, 0);\n  var groundRender = ground.addComponent(_oasisEngine.MeshRenderer);\n  groundRender.mesh = groundGeometry;\n  groundRender.setMaterial(groundMaterial); // Run engine\n\n  engine.run();\n});"},"name":"controls-free","title":"Free Controls","category":"Camera","id":"e2ec91ff-30fc-5ef5-8e32-f4d9db8bac38","sourceCode":"/**\n * @title Free Controls\n * @category Camera\n */\n/**\n * 本示例展示如何使用几何体渲染器功能、如何创建几何体资源对象、如何创建材质对象\n */\nimport { FreeControl } from \"@oasis-engine/controls\";\nimport {\n  BlinnPhongMaterial,\n  Camera,\n  DirectLight,\n  MeshRenderer,\n  MeshTopology,\n  PrimitiveMesh,\n  WebGLEngine\n} from \"oasis-engine\";\n\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\nconst scene = engine.sceneManager.activeScene;\nconst rootNode = scene.createRootEntity(\"root\");\n\n// 在场景中创建相机节点、配置位置和目标方向\nconst cameraNode = rootNode.createChild(\"Camera\");\ncameraNode.transform.setPosition(0, 0, 20);\nconst camera = cameraNode.addComponent(Camera);\nconst controler = cameraNode.addComponent(FreeControl);\ncamera.farClipPlane = 2000;\ncontroler.movementSpeed = 100;\ncontroler.rotateSpeed = 1;\n\nconst lightNode = rootNode.createChild(\"Light\");\nlightNode.transform.setRotation(-45, 45, 0);\nlightNode.addComponent(DirectLight);\n\nconst cuboid = PrimitiveMesh.createCuboid(engine, 50, 50, 50);\nconst material = new BlinnPhongMaterial(engine);\n\nconst groundGeometry = PrimitiveMesh.createPlane(engine, 2000, 2000, 100, 100);\ngroundGeometry.subMesh.topology = MeshTopology.LineStrip;\nconst groundMaterial = new BlinnPhongMaterial(engine);\n\n// create meshes in scene\nfor (let i = 0; i < 100; i++) {\n  let cube = rootNode.createChild(\"cube\");\n  cube.transform.setPosition(Math.random() * 2000 - 1000, Math.random() * 200, Math.random() * 2000 - 1000);\n  const cubeRenderer = cube.addComponent(MeshRenderer);\n  cubeRenderer.mesh = cuboid;\n  cubeRenderer.setMaterial(material);\n}\n\n// Ground\nconst ground = rootNode.createChild(\"ground\");\nground.transform.setPosition(0, -25, 0);\nground.transform.rotate(-90, 0, 0);\nconst groundRender = ground.addComponent(MeshRenderer);\ngroundRender.mesh = groundGeometry;\ngroundRender.setMaterial(groundMaterial);\n\n// Run engine\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Free Controls\n * @category Camera\n */</span>\n<span class=\"token comment\">/**\n * 本示例展示如何使用几何体渲染器功能、如何创建几何体资源对象、如何创建材质对象\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> FreeControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  BlinnPhongMaterial<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  DirectLight<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  MeshTopology<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootNode <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 在场景中创建相机节点、配置位置和目标方向</span>\n<span class=\"token keyword\">const</span> cameraNode <span class=\"token operator\">=</span> rootNode<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> camera <span class=\"token operator\">=</span> cameraNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> controler <span class=\"token operator\">=</span> cameraNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>FreeControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncamera<span class=\"token punctuation\">.</span>farClipPlane <span class=\"token operator\">=</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">;</span>\ncontroler<span class=\"token punctuation\">.</span>movementSpeed <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\ncontroler<span class=\"token punctuation\">.</span>rotateSpeed <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> lightNode <span class=\"token operator\">=</span> rootNode<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Light\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setRotation</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> cuboid <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> groundGeometry <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createPlane</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngroundGeometry<span class=\"token punctuation\">.</span>subMesh<span class=\"token punctuation\">.</span>topology <span class=\"token operator\">=</span> MeshTopology<span class=\"token punctuation\">.</span>LineStrip<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> groundMaterial <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// create meshes in scene</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> cube <span class=\"token operator\">=</span> rootNode<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cube\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cube<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2000</span> <span class=\"token operator\">-</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2000</span> <span class=\"token operator\">-</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> cubeRenderer <span class=\"token operator\">=</span> cube<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cubeRenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> cuboid<span class=\"token punctuation\">;</span>\n  cubeRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Ground</span>\n<span class=\"token keyword\">const</span> ground <span class=\"token operator\">=</span> rootNode<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ground\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nground<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nground<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> groundRender <span class=\"token operator\">=</span> ground<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngroundRender<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> groundGeometry<span class=\"token punctuation\">;</span>\ngroundRender<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>groundMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Run engine</span>\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (dat, o3) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n  o3 = _interopRequireWildcard(o3);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title Culling Mask\n   * @category Camera\n   */\n  o3.Logger.enable();\n  var engine = new o3.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var rootEntity = engine.sceneManager.activeScene.createRootEntity(); // init camera\n\n  var cameraEntity = rootEntity.createChild(\"camera\");\n  var camera = cameraEntity.addComponent(o3.Camera);\n  var pos = cameraEntity.transform.position;\n  pos.setValue(10, 10, 10);\n  cameraEntity.transform.position = pos;\n  cameraEntity.transform.lookAt(new o3.Vector3(0, 0, 0));\n  var lightNode = rootEntity.createChild(\"Light\");\n  lightNode.transform.setRotation(-30, 0, 0);\n  lightNode.addComponent(o3.DirectLight); // init cube\n\n  var cubeEntity = rootEntity.createChild(\"cube\");\n  var renderer = cubeEntity.addComponent(o3.MeshRenderer);\n  renderer.mesh = o3.PrimitiveMesh.createCuboid(engine, 1, 1, 1);\n  var material = new o3.BlinnPhongMaterial(engine);\n  material.baseColor = new o3.Color(1, 0.25, 0.25, 1);\n  renderer.setMaterial(material);\n  engine.run();\n\n  function addGUI() {\n    var gui = new dat.GUI();\n    var cameraFolder = gui.addFolder(\"camera cullingMask\");\n    cameraFolder.open();\n    var constMap = {\n      EveryThing: o3.Layer.Everything,\n      Layer1: o3.Layer.Layer1,\n      Layer2: o3.Layer.Layer2,\n      Layer3: o3.Layer.Layer3\n    };\n    var cameraController = cameraFolder.add({\n      cullingMask: \"EveryThing\"\n    }, \"cullingMask\", Object.keys(constMap));\n    cameraController.onChange(function (v) {\n      camera.cullingMask = constMap[v];\n    });\n    var boxFolder = gui.addFolder(\"box layer\");\n    boxFolder.open();\n    var boxController = boxFolder.add({\n      layer: \"EveryThing\"\n    }, \"layer\", Object.keys(constMap));\n    boxController.onChange(function (v) {\n      renderer.entity.layer = constMap[v];\n    });\n  }\n\n  addGUI();\n});"},"name":"culling-mask","title":"Culling Mask","category":"Camera","id":"58a1bd3d-0925-5cbe-a479-5cb80f271c4b","sourceCode":"/**\n * @title Culling Mask\n * @category Camera\n */\nimport * as dat from \"dat.gui\";\nimport * as o3 from \"oasis-engine\";\nimport { DirectLight, Logger } from \"oasis-engine\";\n\nLogger.enable();\nconst engine = new o3.WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\nconst rootEntity = engine.sceneManager.activeScene.createRootEntity();\n\n// init camera\nconst cameraEntity = rootEntity.createChild(\"camera\");\nconst camera = cameraEntity.addComponent(o3.Camera);\nconst pos = cameraEntity.transform.position;\npos.setValue(10, 10, 10);\ncameraEntity.transform.position = pos;\ncameraEntity.transform.lookAt(new o3.Vector3(0, 0, 0));\n\nconst lightNode = rootEntity.createChild(\"Light\");\nlightNode.transform.setRotation(-30, 0, 0);\nlightNode.addComponent(DirectLight);\n\n// init cube\nconst cubeEntity = rootEntity.createChild(\"cube\");\nconst renderer = cubeEntity.addComponent(o3.MeshRenderer);\nrenderer.mesh = o3.PrimitiveMesh.createCuboid(engine, 1, 1, 1);\nconst material = new o3.BlinnPhongMaterial(engine);\nmaterial.baseColor = new o3.Color(1, 0.25, 0.25, 1);\nrenderer.setMaterial(material);\n\nengine.run();\n\nfunction addGUI() {\n  const gui = new dat.GUI();\n  const cameraFolder = gui.addFolder(\"camera cullingMask\");\n  cameraFolder.open();\n  const constMap = {\n    EveryThing: o3.Layer.Everything,\n    Layer1: o3.Layer.Layer1,\n    Layer2: o3.Layer.Layer2,\n    Layer3: o3.Layer.Layer3\n  };\n  const cameraController = cameraFolder.add({ cullingMask: \"EveryThing\" }, \"cullingMask\", Object.keys(constMap));\n  cameraController.onChange((v) => {\n    camera.cullingMask = constMap[v];\n  });\n\n  const boxFolder = gui.addFolder(\"box layer\");\n  boxFolder.open();\n  const boxController = boxFolder.add({ layer: \"EveryThing\" }, \"layer\", Object.keys(constMap));\n  boxController.onChange((v) => {\n    renderer.entity.layer = constMap[v];\n  });\n}\n\naddGUI();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Culling Mask\n * @category Camera\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> o3 <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> DirectLight<span class=\"token punctuation\">,</span> Logger <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\nLogger<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">o3<span class=\"token punctuation\">.</span>WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// init camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> camera <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>o3<span class=\"token punctuation\">.</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> pos <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">;</span>\npos<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> pos<span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">o3<span class=\"token punctuation\">.</span>Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> lightNode <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Light\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setRotation</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// init cube</span>\n<span class=\"token keyword\">const</span> cubeEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cube\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> renderer <span class=\"token operator\">=</span> cubeEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>o3<span class=\"token punctuation\">.</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> o3<span class=\"token punctuation\">.</span>PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">o3<span class=\"token punctuation\">.</span>BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmaterial<span class=\"token punctuation\">.</span>baseColor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">o3<span class=\"token punctuation\">.</span>Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">addGUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> cameraFolder <span class=\"token operator\">=</span> gui<span class=\"token punctuation\">.</span><span class=\"token function\">addFolder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera cullingMask\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraFolder<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> constMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    EveryThing<span class=\"token operator\">:</span> o3<span class=\"token punctuation\">.</span>Layer<span class=\"token punctuation\">.</span>Everything<span class=\"token punctuation\">,</span>\n    Layer1<span class=\"token operator\">:</span> o3<span class=\"token punctuation\">.</span>Layer<span class=\"token punctuation\">.</span>Layer1<span class=\"token punctuation\">,</span>\n    Layer2<span class=\"token operator\">:</span> o3<span class=\"token punctuation\">.</span>Layer<span class=\"token punctuation\">.</span>Layer2<span class=\"token punctuation\">,</span>\n    Layer3<span class=\"token operator\">:</span> o3<span class=\"token punctuation\">.</span>Layer<span class=\"token punctuation\">.</span>Layer3\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> cameraController <span class=\"token operator\">=</span> cameraFolder<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> cullingMask<span class=\"token operator\">:</span> <span class=\"token string\">\"EveryThing\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"cullingMask\"</span><span class=\"token punctuation\">,</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>constMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraController<span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    camera<span class=\"token punctuation\">.</span>cullingMask <span class=\"token operator\">=</span> constMap<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> boxFolder <span class=\"token operator\">=</span> gui<span class=\"token punctuation\">.</span><span class=\"token function\">addFolder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"box layer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  boxFolder<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> boxController <span class=\"token operator\">=</span> boxFolder<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> layer<span class=\"token operator\">:</span> <span class=\"token string\">\"EveryThing\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"layer\"</span><span class=\"token punctuation\">,</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>constMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  boxController<span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    renderer<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span>layer <span class=\"token operator\">=</span> constMap<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">addGUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title GLTF Basic\n   * @category Basic\n   */\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var rootEntity = engine.sceneManager.activeScene.createRootEntity();\n  var cameraEntity = rootEntity.createChild(\"camera\");\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.transform.setPosition(3, 3, 3);\n  cameraEntity.addComponent(_controls.OrbitControl);\n  engine.sceneManager.activeScene.ambientLight.diffuseSolidColor.setValue(1, 1, 1, 1);\n  engine.resourceManager.load(\"https://gw.alipayobjects.com/os/OasisHub/267000040/9994/%25E5%25BD%2592%25E6%25A1%25A3.gltf\").then(function (gltf) {\n    rootEntity.addChild(gltf.defaultSceneRoot);\n  });\n  engine.run();\n});"},"name":"gltf-basic","title":"GLTF Basic","category":"Basic","id":"e6701cf5-1c7c-5327-9442-bd2f36a3823e","sourceCode":"/**\n * @title GLTF Basic\n * @category Basic\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport { Camera, GLTFResource, WebGLEngine } from \"oasis-engine\";\n\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst rootEntity = engine.sceneManager.activeScene.createRootEntity();\n\nconst cameraEntity = rootEntity.createChild(\"camera\");\ncameraEntity.addComponent(Camera);\ncameraEntity.transform.setPosition(3, 3, 3);\ncameraEntity.addComponent(OrbitControl);\n\nengine.sceneManager.activeScene.ambientLight.diffuseSolidColor.setValue(1, 1, 1, 1);\n\nengine.resourceManager\n  .load<GLTFResource>(\"https://gw.alipayobjects.com/os/OasisHub/267000040/9994/%25E5%25BD%2592%25E6%25A1%25A3.gltf\")\n  .then((gltf) => {\n    rootEntity.addChild(gltf.defaultSceneRoot);\n  });\n\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title GLTF Basic\n * @category Basic\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Camera<span class=\"token punctuation\">,</span> GLTFResource<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span>ambientLight<span class=\"token punctuation\">.</span>diffuseSolidColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>GLTFResource<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://gw.alipayobjects.com/os/OasisHub/267000040/9994/%25E5%25BD%2592%25E6%25A1%25A3.gltf\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">gltf</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>gltf<span class=\"token punctuation\">.</span>defaultSceneRoot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title Filter Mode\n   * @category Texture\n   */\n  var gui = new dat.GUI(); // Create engine object\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // Create camera\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 0, 1);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl); // Create Plane\n\n  var mesh = _oasisEngine.PrimitiveMesh.createPlane(engine, 2, 2);\n\n  var material = new _oasisEngine.UnlitMaterial(engine);\n  material.renderFace = _oasisEngine.RenderFace.Double;\n  var planeEntity = rootEntity.createChild(\"ground\");\n  planeEntity.transform.setRotation(-85, 0, 0);\n  var planeRenderer = planeEntity.addComponent(_oasisEngine.MeshRenderer);\n  planeRenderer.mesh = mesh;\n  planeRenderer.setMaterial(material);\n  engine.resourceManager.load({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*aHXyTqXu1_IAAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }).then(function (texture) {\n    material.baseTexture = texture;\n    addGUI(texture);\n  });\n\n  function addGUI(texture) {\n    var _filterMap;\n\n    var filterMap = (_filterMap = {}, _filterMap[_oasisEngine.TextureFilterMode.Point] = \"Point\", _filterMap[_oasisEngine.TextureFilterMode.Bilinear] = \"Bilinear\", _filterMap[_oasisEngine.TextureFilterMode.Trilinear] = \"Trilinear\", _filterMap);\n    var state = {\n      filterMode: filterMap[texture.filterMode]\n    };\n    gui.add(state, \"filterMode\", Object.values(filterMap)).onChange(function (v) {\n      for (var key in filterMap) {\n        var value = filterMap[key];\n\n        if (v === value) {\n          texture.filterMode = Number(key);\n        }\n      }\n    });\n  }\n\n  engine.run();\n});"},"name":"filter-mode","title":"Filter Mode","category":"Texture","id":"c94f6409-0b18-5508-a56b-bb483699f0cf","sourceCode":"/**\n * @title Filter Mode\n * @category Texture\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\nimport {\n  AssetType,\n  Camera,\n  MeshRenderer,\n  PrimitiveMesh,\n  RenderFace,\n  Texture2D,\n  TextureFilterMode,\n  UnlitMaterial,\n  WebGLEngine\n} from \"oasis-engine\";\nconst gui = new dat.GUI();\n\n// Create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// Create camera\nconst cameraEntity = rootEntity.createChild(\"Camera\");\ncameraEntity.transform.setPosition(0, 0, 1);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\n// Create Plane\nconst mesh = PrimitiveMesh.createPlane(engine, 2, 2);\nconst material = new UnlitMaterial(engine);\nmaterial.renderFace = RenderFace.Double;\nconst planeEntity = rootEntity.createChild(\"ground\");\nplaneEntity.transform.setRotation(-85, 0, 0);\nconst planeRenderer = planeEntity.addComponent(MeshRenderer);\nplaneRenderer.mesh = mesh;\nplaneRenderer.setMaterial(material);\n\nengine.resourceManager\n  .load<Texture2D>({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*aHXyTqXu1_IAAAAAAAAAAAAAARQnAQ\",\n    type: AssetType.Texture2D\n  })\n  .then((texture) => {\n    material.baseTexture = texture;\n    addGUI(texture);\n  });\n\nfunction addGUI(texture: Texture2D) {\n  const filterMap: Record<TextureFilterMode, string> = {\n    [TextureFilterMode.Point]: \"Point\",\n    [TextureFilterMode.Bilinear]: \"Bilinear\",\n    [TextureFilterMode.Trilinear]: \"Trilinear\"\n  };\n  const state = {\n    filterMode: filterMap[texture.filterMode]\n  };\n  gui.add(state, \"filterMode\", Object.values(filterMap)).onChange((v) => {\n    for (let key in filterMap) {\n      const value = filterMap[key];\n      if (v === value) {\n        texture.filterMode = Number(key);\n      }\n    }\n  });\n}\n\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Filter Mode\n * @category Texture\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  RenderFace<span class=\"token punctuation\">,</span>\n  Texture2D<span class=\"token punctuation\">,</span>\n  TextureFilterMode<span class=\"token punctuation\">,</span>\n  UnlitMaterial<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create Plane</span>\n<span class=\"token keyword\">const</span> mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createPlane</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnlitMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmaterial<span class=\"token punctuation\">.</span>renderFace <span class=\"token operator\">=</span> RenderFace<span class=\"token punctuation\">.</span>Double<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> planeEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ground\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nplaneEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setRotation</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> planeRenderer <span class=\"token operator\">=</span> planeEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nplaneRenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> mesh<span class=\"token punctuation\">;</span>\nplaneRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*aHXyTqXu1_IAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    material<span class=\"token punctuation\">.</span>baseTexture <span class=\"token operator\">=</span> texture<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addGUI</span><span class=\"token punctuation\">(</span>texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">addGUI</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture<span class=\"token operator\">:</span> Texture2D</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> filterMap<span class=\"token operator\">:</span> Record<span class=\"token operator\">&lt;</span>TextureFilterMode<span class=\"token punctuation\">,</span> string<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span>TextureFilterMode<span class=\"token punctuation\">.</span>Point<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Point\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span>TextureFilterMode<span class=\"token punctuation\">.</span>Bilinear<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Bilinear\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span>TextureFilterMode<span class=\"token punctuation\">.</span>Trilinear<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Trilinear\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    filterMode<span class=\"token operator\">:</span> filterMap<span class=\"token punctuation\">[</span>texture<span class=\"token punctuation\">.</span>filterMode<span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"filterMode\"</span><span class=\"token punctuation\">,</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span>filterMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> key <span class=\"token keyword\">in</span> filterMap<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> filterMap<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>v <span class=\"token operator\">===</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        texture<span class=\"token punctuation\">.</span>filterMode <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\", \"@oasis-engine/lottie\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"), require(\"@oasis-engine/lottie\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine, global[\"engine-lottie\"]);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine, _lottie) {\n  \"use strict\";\n\n  /**\n   * @title Lottie Animation\n   * @category 2D\n   */\n  // Create engine object\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // Create camera\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 0, 5);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl);\n  engine.resourceManager.load({\n    urls: [\"https://gw.alipayobjects.com/os/OasisHub/20759aba-867f-4256-8504-935743240c78/data.json\", \"https://gw.alipayobjects.com/os/bmw-prod/083ff1ac-15d9-42cb-8d7a-5b7c39b81f5f.json\", \"https://gw.alipayobjects.com/mdn/rms_e54b79/afts/img/A*Ax4DSrekVhEAAAAAAAAAAAAAARQnAQ\"],\n    type: \"lottie\"\n  }).then(function (lottieEntity) {\n    rootEntity.addChild(lottieEntity);\n    var lottie = lottieEntity.getComponent(_lottie.LottieAnimation);\n    lottieEntity.transform.setScale(1.5, 1.5, 1);\n    lottie.isLooping = true;\n    lottie.play();\n  });\n  engine.run();\n});"},"name":"lottie","title":"Lottie Animation","category":"2D","id":"ee23ee61-9c14-5ae4-8fa5-36c22015ac78","sourceCode":"/**\n * @title Lottie Animation\n * @category 2D\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport { Camera, Entity, WebGLEngine } from \"oasis-engine\";\nimport { LottieAnimation } from \"@oasis-engine/lottie\";\n\n// Create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// Create camera\nconst cameraEntity = rootEntity.createChild(\"Camera\");\ncameraEntity.transform.setPosition(0, 0, 5);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\nengine.resourceManager\n  .load<Entity>({\n    urls: [\n      \"https://gw.alipayobjects.com/os/OasisHub/20759aba-867f-4256-8504-935743240c78/data.json\",\n      \"https://gw.alipayobjects.com/os/bmw-prod/083ff1ac-15d9-42cb-8d7a-5b7c39b81f5f.json\",\n      \"https://gw.alipayobjects.com/mdn/rms_e54b79/afts/img/A*Ax4DSrekVhEAAAAAAAAAAAAAARQnAQ\"\n    ],\n    type: \"lottie\"\n  })\n  .then((lottieEntity) => {\n    rootEntity.addChild(lottieEntity);\n    const lottie = lottieEntity.getComponent(LottieAnimation);\n    lottieEntity.transform.setScale(1.5, 1.5, 1);\n    lottie.isLooping = true;\n    lottie.play();\n  });\n\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Lottie Animation\n * @category 2D\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Camera<span class=\"token punctuation\">,</span> Entity<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> LottieAnimation <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/lottie\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Entity<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    urls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/os/OasisHub/20759aba-867f-4256-8504-935743240c78/data.json\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/083ff1ac-15d9-42cb-8d7a-5b7c39b81f5f.json\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_e54b79/afts/img/A*Ax4DSrekVhEAAAAAAAAAAAAAARQnAQ\"</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> <span class=\"token string\">\"lottie\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">lottieEntity</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>lottieEntity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> lottie <span class=\"token operator\">=</span> lottieEntity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>LottieAnimation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    lottieEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    lottie<span class=\"token punctuation\">.</span>isLooping <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    lottie<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title GLTF Loader\n   * @category Advance\n   */\n  _oasisEngine.Logger.enable();\n\n  var envList = {\n    sky: [\"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*Gi7CTZqKuacAAAAAAAAAAABkARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*iRRMQIExwKMAAAAAAAAAAABkARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*ZIcPQZo20sAAAAAAAAAAAABkARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*SPYuTbHT-KgAAAAAAAAAAABkARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*mGUERbY77roAAAAAAAAAAABkARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*ilkPS7A1_JsAAAAAAAAAAABkARQnAQ\"],\n    house: [\"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*1gjTQ7P2mQoAAAAAAAAAAABkARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*entSR7DylL0AAAAAAAAAAABkARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*izQBQY_vs_4AAAAAAAAAAABkARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*x3XnRpq1U-EAAAAAAAAAAABkARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*k7FsT5Gprn0AAAAAAAAAAABkARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*8LdBQ6ixiQAAAAAAAAAAAABkARQnAQ\"],\n    sunnyDay: [\"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*4ZY8T4GpKwYAAAAAAAAAAABkARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*8QbJQZwS1wUAAAAAAAAAAABkARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*a54kSZ3LmAQAAAAAAAAAAABkARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*8CbfTb1yG8MAAAAAAAAAAABkARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*Yi4ZRZbdj8MAAAAAAAAAAABkARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*KddxSriLYjoAAAAAAAAAAABkARQnAQ\"],\n    miniSampler: [\"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*IuyGR4bdwg4AAAAAAAAAAABkARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*4rv5RZ0kll4AAAAAAAAAAABkARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*cHitTpWoJjoAAAAAAAAAAABkARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*RCEbS6k5x18AAAAAAAAAAABkARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*IRc7R7cl4CcAAAAAAAAAAABkARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*y_4hRYVgzQ4AAAAAAAAAAABkARQnAQ\"]\n  };\n\n  var Oasis = /*#__PURE__*/function () {\n    Oasis.guiToColor = function guiToColor(gui, color) {\n      color.setValue(gui[0] / 255, gui[1] / 255, gui[2] / 255, color.a);\n    };\n\n    Oasis.colorToGui = function colorToGui(color) {\n      if (color === void 0) {\n        color = new _oasisEngine.Color(1, 1, 1);\n      }\n\n      var v = [];\n      v[0] = color.r * 255;\n      v[1] = color.g * 255;\n      v[2] = color.b * 255;\n      return v;\n    };\n\n    function Oasis() {\n      var _this = this;\n\n      this.cubeTextures = {};\n      this.textures = {};\n      this.engine = new _oasisEngine.WebGLEngine(\"canvas\");\n      this.scene = this.engine.sceneManager.activeScene;\n      this.skyMaterial = new _oasisEngine.SkyBoxMaterial(this.engine);\n      this.rootEntity = this.scene.createRootEntity(\"root\");\n      this.cameraEntity = this.rootEntity.createChild(\"camera\");\n      this.gltfRootEntity = this.rootEntity.createChild(\"gltf\");\n      this.lightEntity1 = this.rootEntity.createChild(\"direct_light1\");\n      this.lightEntity2 = this.rootEntity.createChild(\"direct_light2\");\n      this.camera = this.cameraEntity.addComponent(_oasisEngine.Camera);\n      this.controler = this.cameraEntity.addComponent(_controls.OrbitControl);\n      this.light1 = this.lightEntity1.addComponent(_oasisEngine.DirectLight);\n      this.light2 = this.lightEntity2.addComponent(_oasisEngine.DirectLight);\n      this.gui = new dat.GUI();\n      this.materialFolder = null;\n      this.animationFolder = null;\n      this.state = {\n        // Scene\n        background: false,\n        // Lights\n        envTexture: \"miniSampler\",\n        envIntensity: 1,\n        addLights: true,\n        lightColor: Oasis.colorToGui(new _oasisEngine.Color(1, 1, 1)),\n        lightIntensity: 0.8,\n        // GLTF Model List\n        defaultGLTF: \"fox\",\n        gltfList: {\n          \"2CylinderEngine\": \"https://gw.alipayobjects.com/os/bmw-prod/48a1e8b3-06b4-4269-807d-79274e58283a.glb\",\n          alphaBlendModeTest: \"https://gw.alipayobjects.com/os/bmw-prod/d099b30b-59a3-42e4-99eb-b158afa8e65d.glb\",\n          animatedCube: \"https://gw.alipayobjects.com/os/bmw-prod/8cc524dd-2481-438d-8374-3c933adea3b6.gltf\",\n          antiqueCamera: \"https://gw.alipayobjects.com/os/bmw-prod/93196534-bab3-4559-ae9f-bcb3e36a6419.glb\",\n          avocado: \"https://gw.alipayobjects.com/os/bmw-prod/0f978c4d-1cd6-4cec-9a4c-b58c8186e063.glb\",\n          avocado_draco: \"https://gw.alipayobjects.com/os/bmw-prod/b3b73614-cf06-4f41-940d-c1bc04cf6410.gltf\",\n          avocado_specular: \"https://gw.alipayobjects.com/os/bmw-prod/3cf50452-0015-461e-a172-7ea1f8135e53.gltf\",\n          avocado_quantized: \"https://gw.alipayobjects.com/os/bmw-prod/6aff5409-8e82-4e77-a6ac-55b6adfd0cf5.gltf\",\n          barramundiFish: \"https://gw.alipayobjects.com/os/bmw-prod/79d7935c-404b-4d8d-9ad3-5f8c273f0e4a.glb\",\n          boomBox: \"https://gw.alipayobjects.com/os/bmw-prod/2e98b1c0-18e8-45d0-b54e-dcad6ef05e22.glb\",\n          boomBoxWithAxes: \"https://gw.alipayobjects.com/os/bmw-prod/96e1b8b2-9be6-4b64-98ea-8c008c6dc422.gltf\",\n          boxVertexColors: \"https://gw.alipayobjects.com/os/bmw-prod/6cff6fcb-5191-465e-9a38-dee42a07cc65.glb\",\n          brianStem: \"https://gw.alipayobjects.com/os/bmw-prod/e3b37dd9-9407-4b5c-91b3-c5880d081329.glb\",\n          buggy: \"https://gw.alipayobjects.com/os/bmw-prod/d6916a14-b004-42d5-86dd-d8520b719288.glb\",\n          cesiumMan: \"https://gw.alipayobjects.com/os/bmw-prod/3a7d9597-7354-4bef-b314-b84509bef9b6.glb\",\n          cesiumMilkTruck: \"https://gw.alipayobjects.com/os/bmw-prod/7701125a-7d0d-4281-a7d8-7f0dfc8d0792.glb\",\n          corset: \"https://gw.alipayobjects.com/os/bmw-prod/3deaa5a4-5b2a-4a0d-8512-a8c4377a08ff.glb\",\n          DamagedHelmet: \"https://gw.alipayobjects.com/os/bmw-prod/a1da72a4-023e-4bb1-9629-0f4b0f6b6fc4.glb\",\n          Duck: \"https://gw.alipayobjects.com/os/bmw-prod/6cb8f543-285c-491a-8cfd-57a1160dc9ab.glb\",\n          environmentTest: \"https://gw.alipayobjects.com/os/bmw-prod/7c7b887c-05d6-43dd-b354-216e738e81ed.gltf\",\n          flightHelmet: \"https://gw.alipayobjects.com/os/bmw-prod/d6dbf161-48e2-4e6d-bbca-c481ed9f1a2d.gltf\",\n          fox: \"https://gw.alipayobjects.com/os/bmw-prod/f40ef8dd-4c94-41d4-8fac-c1d2301b6e47.glb\",\n          animationInterpolationTest: \"https://gw.alipayobjects.com/os/bmw-prod/4f410ef2-20b4-494d-85f1-a806c5070bfb.glb\",\n          lantern: \"https://gw.alipayobjects.com/os/bmw-prod/9557420a-c622-4e9c-bb46-f7af8b19d7de.glb\",\n          materialsVariantsShoe: \"https://gw.alipayobjects.com/os/bmw-prod/b1a414bb-61ea-4667-94d2-ef6cf179ac0d.glb\",\n          metalRoughSpheres: \"https://gw.alipayobjects.com/os/bmw-prod/67b39ede-1c82-4321-8457-0ad83ca9413a.glb\",\n          normalTangentTest: \"https://gw.alipayobjects.com/os/bmw-prod/4bb1a66c-55e3-4898-97d7-a9cc0f239686.glb\",\n          normalTangentMirrorTest: \"https://gw.alipayobjects.com/os/bmw-prod/8335f555-2061-47f5-9252-366c6ebf882a.glb\",\n          orientationTest: \"https://gw.alipayobjects.com/os/bmw-prod/16cdf390-ac42-411c-9d2b-8e112dfd723b.glb\",\n          sparseTest: \"https://gw.alipayobjects.com/os/bmw-prod/f00de659-53ea-49d1-8f2c-d0a412542b80.gltf\",\n          specGlossVsMetalRough: \"https://gw.alipayobjects.com/os/bmw-prod/4643bd7b-f988-4144-8245-4a390023d92d.glb\",\n          sponza: \"https://gw.alipayobjects.com/os/bmw-prod/ca50859b-d736-4a3e-9fc3-241b0bd2afef.gltf\",\n          suzanne: \"https://gw.alipayobjects.com/os/bmw-prod/3869e495-2e04-4e80-9d22-13b37116379a.gltf\",\n          sheenChair: \"https://gw.alipayobjects.com/os/bmw-prod/34847225-bc1b-4bef-9cb9-6b9711ca2f8c.glb\",\n          sheenCloth: \"https://gw.alipayobjects.com/os/bmw-prod/4529d2e8-22a8-47af-9b38-8eaff835f6bf.gltf\",\n          textureCoordinateTest: \"https://gw.alipayobjects.com/os/bmw-prod/5fd23201-51dd-4eea-92d3-c4a72ecc1f2b.glb\",\n          textureEncodingTest: \"https://gw.alipayobjects.com/os/bmw-prod/b8795e57-3c2c-4412-b4f0-7ffa796e4917.glb\",\n          textureSettingTest: \"https://gw.alipayobjects.com/os/bmw-prod/a4b26d58-bd49-4051-8f05-0fe8b532e716.glb\",\n          textureTransformMultiTest: \"https://gw.alipayobjects.com/os/bmw-prod/8fa18786-5188-4c14-94d7-77bf6b8483f9.glb\",\n          textureTransform: \"https://gw.alipayobjects.com/os/bmw-prod/6c59d5d0-2e2e-4933-a737-006d431977fd.gltf\",\n          toyCar: \"https://gw.alipayobjects.com/os/bmw-prod/8138b7d7-45aa-494a-8aea-0c67598b96d2.glb\",\n          transmissionTest: \"https://gw.alipayobjects.com/os/bmw-prod/1dd51fe8-bdd3-42e4-99be-53de5dc106b8.glb\",\n          unlitTest: \"https://gw.alipayobjects.com/os/bmw-prod/06a855be-ac8c-4705-b5d7-659b8b391189.glb\",\n          vc: \"https://gw.alipayobjects.com/os/bmw-prod/b71c4212-25fb-41bb-af88-d79ce6d3cc58.glb\",\n          vertexColorTest: \"https://gw.alipayobjects.com/os/bmw-prod/8fc70cc6-66d8-43c8-b460-f7d2aaa9edcf.glb\",\n          waterBottle: \"https://gw.alipayobjects.com/os/bmw-prod/0f403530-96f5-455a-8a39-b31ac68b6ed5.glb\"\n        }\n      };\n      this._materials = [];\n      this._boundingBox = new _oasisEngine.BoundingBox();\n      this._center = new _oasisEngine.Vector3();\n      this._extent = new _oasisEngine.Vector3();\n      this.initResources().then(function () {\n        _this.initScene();\n\n        _this.addGLTFList();\n\n        _this.addSceneGUI();\n      });\n    }\n\n    var _proto = Oasis.prototype;\n\n    _proto.initResources = function initResources() {\n      var _this2 = this;\n\n      var names = Object.keys(envList);\n      return new Promise(function (resolve) {\n        _this2.engine.resourceManager.load(names.map(function (name) {\n          return {\n            type: _oasisEngine.AssetType.TextureCube,\n            urls: envList[name]\n          };\n        })).then(function (textures) {\n          textures.forEach(function (texture, index) {\n            var name = names[index];\n            _this2.cubeTextures[name] = texture;\n\n            if (name === _this2.state.envTexture) {\n              _this2.scene.ambientLight.specularTexture = texture;\n              _this2.skyMaterial.textureCubeMap = texture;\n            }\n          });\n          resolve(true);\n        });\n      });\n    };\n\n    _proto.initScene = function initScene() {\n      this.engine.canvas.resizeByClientSize();\n      this.controler.minDistance = 0; // debug sync\n\n      if (this.state.background) {\n        this.scene.background.mode = _oasisEngine.BackgroundMode.Sky;\n      }\n\n      if (!this.state.addLights) {\n        this.light1.enabled = this.light2.enabled = false;\n      }\n\n      this.light1.intensity = this.light2.intensity = this.state.lightIntensity;\n      this.lightEntity1.transform.setRotation(30, 0, 0);\n      this.lightEntity2.transform.setRotation(-30, 180, 0);\n      this.scene.ambientLight.specularIntensity = this.state.envIntensity;\n      this.scene.background.sky.material = this.skyMaterial;\n      this.scene.background.sky.mesh = _oasisEngine.PrimitiveMesh.createCuboid(this.engine, 1, 1, 1);\n      this.engine.run();\n    };\n\n    _proto.addGLTFList = function addGLTFList() {\n      var _this3 = this;\n\n      this.loadGLTF(this.state.gltfList[this.state.defaultGLTF]);\n      this.gui.add(this.state, \"defaultGLTF\", Object.keys(this.state.gltfList)).name(\"GLTF List\").onChange(function (v) {\n        _this3.loadGLTF(_this3.state.gltfList[v]);\n      });\n    };\n\n    _proto.addSceneGUI = function addSceneGUI() {\n      var _this4 = this;\n\n      var gui = this.gui; // Display controls.\n\n      var dispFolder = gui.addFolder(\"Scene\");\n      dispFolder.add(this.state, \"background\").onChange(function (v) {\n        if (v) {\n          _this4.scene.background.mode = _oasisEngine.BackgroundMode.Sky;\n        } else {\n          _this4.scene.background.mode = _oasisEngine.BackgroundMode.SolidColor;\n        }\n      }); // Lighting controls.\n\n      var lightFolder = gui.addFolder(\"Lighting\");\n      lightFolder.add(this.state, \"envTexture\", [\"None\"].concat(Object.keys(this.cubeTextures))).name(\"IBL\").onChange(function (v) {\n        _this4.scene.ambientLight.specularTexture = _this4.skyMaterial.textureCubeMap = v === \"None\" ? null : _this4.cubeTextures[v];\n      });\n      lightFolder.add(this.state, \"envIntensity\", 0, 2).onChange(function (v) {\n        _this4.scene.ambientLight.specularIntensity = v;\n      }).name(\"间接光强度\");\n      lightFolder.add(this.state, \"addLights\").onChange(function (v) {\n        _this4.light1.enabled = _this4.light2.enabled = v;\n      }).name(\"直接光\");\n      lightFolder.addColor(this.state, \"lightColor\").onChange(function (v) {\n        Oasis.guiToColor(v, _this4.light1.color);\n        Oasis.guiToColor(v, _this4.light2.color);\n      });\n      lightFolder.add(this.state, \"lightIntensity\", 0, 2).onChange(function (v) {\n        _this4.light1.intensity = _this4.light2.intensity = v;\n      }).name(\"直接光强度\");\n    };\n\n    _proto.setCenter = function setCenter(renderers) {\n      var boundingBox = this._boundingBox;\n      var center = this._center;\n      var extent = this._extent;\n      boundingBox.min.setValue(0, 0, 0);\n      boundingBox.max.setValue(0, 0, 0);\n      renderers.forEach(function (renderer) {\n        _oasisEngine.BoundingBox.merge(renderer.bounds, boundingBox, boundingBox);\n      });\n      boundingBox.getExtent(extent);\n      var size = extent.length();\n      boundingBox.getCenter(center);\n      this.controler.target.setValue(center.x, center.y, center.z);\n      this.cameraEntity.transform.setPosition(center.x, center.y, size * 3);\n      this.camera.farClipPlane = size * 12;\n\n      if (this.camera.nearClipPlane > size) {\n        this.camera.nearClipPlane = size / 10;\n      } else {\n        this.camera.nearClipPlane = 0.1;\n      }\n\n      this.controler.maxDistance = size * 10;\n    };\n\n    _proto.loadGLTF = function loadGLTF(url) {\n      var _this5 = this;\n\n      this.destroyGLTF();\n      var isGLB = /.glb$/.test(url);\n      this.engine.resourceManager.load({\n        type: _oasisEngine.AssetType.Perfab,\n        url: url + \"#\" + Math.random() + \".\" + (isGLB ? \"glb\" : \"gltf\") // @todo: resourceManager cache bug\n\n      }).then(function (asset) {\n        var defaultSceneRoot = asset.defaultSceneRoot,\n            materials = asset.materials,\n            animations = asset.animations;\n        console.log(asset);\n        _this5.gltfRootEntity = defaultSceneRoot;\n\n        _this5.rootEntity.addChild(defaultSceneRoot);\n\n        var meshRenderers = [];\n        var skinnedMeshRenderers = [];\n        defaultSceneRoot.getComponentsIncludeChildren(_oasisEngine.MeshRenderer, meshRenderers);\n        defaultSceneRoot.getComponentsIncludeChildren(_oasisEngine.SkinnedMeshRenderer, skinnedMeshRenderers);\n\n        _this5.setCenter(meshRenderers.concat(skinnedMeshRenderers));\n\n        _this5.loadMaterialGUI(materials);\n\n        _this5.loadAnimationGUI(animations);\n      })[\"catch\"](function (e) {\n        console.error(e);\n      });\n    };\n\n    _proto.destroyGLTF = function destroyGLTF() {\n      this.gltfRootEntity.destroy();\n    };\n\n    _proto.loadMaterialGUI = function loadMaterialGUI(materials) {\n      var _this6 = this;\n\n      var gui = this.gui;\n\n      if (this.materialFolder) {\n        gui.removeFolder(this.materialFolder);\n        this.materialFolder = null;\n      }\n\n      if (!materials) {\n        materials = this._materials;\n      }\n\n      this._materials = materials;\n      if (!materials.length) return;\n      var folder = this.materialFolder = gui.addFolder(\"Material\");\n      var folderName = {};\n      materials.forEach(function (material) {\n        if (!(material instanceof _oasisEngine.PBRBaseMaterial) && !(material instanceof _oasisEngine.UnlitMaterial)) return;\n\n        if (!material.name) {\n          material.name = \"default\";\n        }\n\n        var state = {\n          baseColor: Oasis.colorToGui(material.baseColor),\n          emissiveColor: Oasis.colorToGui(material.emissiveColor),\n          specularColor: Oasis.colorToGui(material.specularColor),\n          baseTexture: material.baseTexture ? \"origin\" : \"\",\n          metallicRoughnessTexture: material.metallicRoughnessTexture ? \"origin\" : \"\",\n          normalTexture: material.normalTexture ? \"origin\" : \"\",\n          emissiveTexture: material.emissiveTexture ? \"origin\" : \"\",\n          occlusionTexture: material.occlusionTexture ? \"origin\" : \"\",\n          opacityTexture: material.opacityTexture ? \"origin\" : \"\",\n          specularGlossinessTexture: material.specularGlossinessTexture ? \"origin\" : \"\"\n        };\n        var originTexture = {\n          baseTexture: material.baseTexture,\n          metallicRoughnessTexture: material.metallicRoughnessTexture,\n          normalTexture: material.normalTexture,\n          emissiveTexture: material.emissiveTexture,\n          occlusionTexture: material.occlusionTexture,\n          opacityTexture: material.opacityTexture,\n          specularGlossinessTexture: material.specularGlossinessTexture\n        };\n        var f = folder.addFolder(folderName[material.name] ? material.name + \"_\" + (folderName[material.name] + 1) : material.name);\n        folderName[material.name] = folderName[material.name] == null ? 1 : folderName[material.name] + 1; // metallic\n\n        if (material instanceof _oasisEngine.PBRMaterial) {\n          var mode1 = f.addFolder(\"金属模式\");\n          mode1.add(material, \"metallicFactor\", 0, 1).step(0.01);\n          mode1.add(material, \"roughnessFactor\", 0, 1).step(0.01);\n          mode1.add(state, \"metallicRoughnessTexture\", [\"None\", \"origin\"].concat(Object.keys(_this6.textures))).onChange(function (v) {\n            material.metallicRoughnessTexture = v === \"None\" ? null : _this6.textures[v] || originTexture.metallicRoughnessTexture;\n          });\n          mode1.open();\n        } // specular\n        else if (material instanceof _oasisEngine.PBRSpecularMaterial) {\n            var mode2 = f.addFolder(\"高光模式\");\n            mode2.add(material, \"glossinessFactor\", 0, 1).step(0.01);\n            mode2.addColor(state, \"specularColor\").onChange(function (v) {\n              Oasis.guiToColor(v, material.specularColor);\n            });\n            mode2.add(state, \"specularGlossinessTexture\", [\"None\", \"origin\"].concat(Object.keys(_this6.textures))).onChange(function (v) {\n              material.specularGlossinessTexture = v === \"None\" ? null : _this6.textures[v] || originTexture.specularGlossinessTexture;\n            });\n            mode2.open();\n          } else if (material instanceof _oasisEngine.UnlitMaterial) {\n            f.add(state, \"baseTexture\", [\"None\", \"origin\"].concat(Object.keys(_this6.textures))).onChange(function (v) {\n              material.baseTexture = v === \"None\" ? null : _this6.textures[v] || originTexture.baseTexture;\n            });\n            f.addColor(state, \"baseColor\").onChange(function (v) {\n              Oasis.guiToColor(v, material.baseColor);\n            });\n          } // common\n\n\n        if (!(material instanceof _oasisEngine.UnlitMaterial)) {\n          var common = f.addFolder(\"通用\");\n          common.add(material, \"envMapIntensity\", 0, 2).step(0.01);\n          common.add(material, \"opacity\", 0, 1).step(0.01).onChange(function (v) {\n            material.opacity = v;\n          });\n          common.add(material, \"isTransparent\");\n          common.add(material, \"alphaCutoff\", 0, 1).step(0.01);\n          common.add(material, \"getOpacityFromRGB\");\n          common.addColor(state, \"baseColor\").onChange(function (v) {\n            Oasis.guiToColor(v, material.baseColor);\n          });\n          common.addColor(state, \"emissiveColor\").onChange(function (v) {\n            Oasis.guiToColor(v, material.emissiveColor);\n          });\n          common.add(state, \"baseTexture\", [\"None\", \"origin\"].concat(Object.keys(_this6.textures))).onChange(function (v) {\n            material.baseTexture = v === \"None\" ? null : _this6.textures[v] || originTexture.baseTexture;\n          });\n          common.add(state, \"normalTexture\", [\"None\", \"origin\"].concat(Object.keys(_this6.textures))).onChange(function (v) {\n            material.normalTexture = v === \"None\" ? null : _this6.textures[v] || originTexture.normalTexture;\n          });\n          common.add(state, \"emissiveTexture\", [\"None\", \"origin\"].concat(Object.keys(_this6.textures))).onChange(function (v) {\n            material.emissiveTexture = v === \"None\" ? null : _this6.textures[v] || originTexture.emissiveTexture;\n          });\n          common.add(state, \"occlusionTexture\", [\"None\", \"origin\"].concat(Object.keys(_this6.textures))).onChange(function (v) {\n            material.occlusionTexture = v === \"None\" ? null : _this6.textures[v] || originTexture.occlusionTexture;\n          });\n          common.add(state, \"opacityTexture\", [\"None\", \"origin\"].concat(Object.keys(_this6.textures))).onChange(function (v) {\n            material.opacityTexture = v === \"None\" ? null : _this6.textures[v] || originTexture.opacityTexture;\n          });\n          common.open();\n        }\n      });\n    };\n\n    _proto.loadAnimationGUI = function loadAnimationGUI(animations) {\n      if (this.animationFolder) {\n        this.gui.removeFolder(this.animationFolder);\n        this.animationFolder = null;\n      }\n\n      if (animations != null && animations.length) {\n        this.animationFolder = this.gui.addFolder(\"Animation\");\n        this.animationFolder.open();\n        var animator = this.gltfRootEntity.getComponent(_oasisEngine.Animation);\n        animator.playAnimationClip(animations[0].name);\n        var state = {\n          animation: animations[0].name\n        };\n        this.animationFolder.add(state, \"animation\", [\"None\"].concat(animations.map(function (animation) {\n          return animation.name;\n        }))).onChange(function (name) {\n          if (name === \"None\") {\n            animator.stop(true);\n          } else {\n            animator.playAnimationClip(name);\n          }\n        });\n      }\n    };\n\n    return Oasis;\n  }();\n\n  new Oasis();\n});"},"name":"gltf-loader","title":"GLTF Loader","category":"Advance","id":"201a5a32-f3d6-5a31-8ca6-0d20e89d6e08","sourceCode":"/**\n * @title GLTF Loader\n * @category Advance\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\nimport {\n  Animation,\n  AnimationClip,\n  AssetType,\n  BackgroundMode,\n  BoundingBox,\n  Camera,\n  Color,\n  DirectLight,\n  Entity,\n  GLTFResource,\n  Logger,\n  Material,\n  MeshRenderer,\n  PBRBaseMaterial,\n  PBRMaterial,\n  PBRSpecularMaterial,\n  PrimitiveMesh,\n  Renderer,\n  Scene,\n  SkinnedMeshRenderer,\n  SkyBoxMaterial,\n  Texture2D,\n  TextureCubeMap,\n  UnlitMaterial,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\n\nLogger.enable();\n\nconst envList = {\n  sky: [\n    \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*Gi7CTZqKuacAAAAAAAAAAABkARQnAQ\",\n    \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*iRRMQIExwKMAAAAAAAAAAABkARQnAQ\",\n    \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*ZIcPQZo20sAAAAAAAAAAAABkARQnAQ\",\n    \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*SPYuTbHT-KgAAAAAAAAAAABkARQnAQ\",\n    \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*mGUERbY77roAAAAAAAAAAABkARQnAQ\",\n    \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*ilkPS7A1_JsAAAAAAAAAAABkARQnAQ\"\n  ],\n  house: [\n    \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*1gjTQ7P2mQoAAAAAAAAAAABkARQnAQ\",\n    \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*entSR7DylL0AAAAAAAAAAABkARQnAQ\",\n    \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*izQBQY_vs_4AAAAAAAAAAABkARQnAQ\",\n    \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*x3XnRpq1U-EAAAAAAAAAAABkARQnAQ\",\n    \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*k7FsT5Gprn0AAAAAAAAAAABkARQnAQ\",\n    \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*8LdBQ6ixiQAAAAAAAAAAAABkARQnAQ\"\n  ],\n  sunnyDay: [\n    \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*4ZY8T4GpKwYAAAAAAAAAAABkARQnAQ\",\n    \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*8QbJQZwS1wUAAAAAAAAAAABkARQnAQ\",\n    \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*a54kSZ3LmAQAAAAAAAAAAABkARQnAQ\",\n    \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*8CbfTb1yG8MAAAAAAAAAAABkARQnAQ\",\n    \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*Yi4ZRZbdj8MAAAAAAAAAAABkARQnAQ\",\n    \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*KddxSriLYjoAAAAAAAAAAABkARQnAQ\"\n  ],\n  miniSampler: [\n    \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*IuyGR4bdwg4AAAAAAAAAAABkARQnAQ\",\n    \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*4rv5RZ0kll4AAAAAAAAAAABkARQnAQ\",\n    \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*cHitTpWoJjoAAAAAAAAAAABkARQnAQ\",\n    \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*RCEbS6k5x18AAAAAAAAAAABkARQnAQ\",\n    \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*IRc7R7cl4CcAAAAAAAAAAABkARQnAQ\",\n    \"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*y_4hRYVgzQ4AAAAAAAAAAABkARQnAQ\"\n  ]\n};\n\nclass Oasis {\n  static guiToColor(gui: number[], color: Color) {\n    color.setValue(gui[0] / 255, gui[1] / 255, gui[2] / 255, color.a);\n  }\n\n  static colorToGui(color: Color = new Color(1, 1, 1)): number[] {\n    const v = [];\n    v[0] = color.r * 255;\n    v[1] = color.g * 255;\n    v[2] = color.b * 255;\n    return v;\n  }\n\n  cubeTextures: Record<string, TextureCubeMap> = {};\n  textures: Record<string, Texture2D> = {};\n\n  engine: WebGLEngine = new WebGLEngine(\"canvas\");\n  scene: Scene = this.engine.sceneManager.activeScene;\n  skyMaterial: SkyBoxMaterial = new SkyBoxMaterial(this.engine);\n\n  // Entity\n  rootEntity: Entity = this.scene.createRootEntity(\"root\");\n  cameraEntity: Entity = this.rootEntity.createChild(\"camera\");\n  gltfRootEntity: Entity = this.rootEntity.createChild(\"gltf\");\n  lightEntity1: Entity = this.rootEntity.createChild(\"direct_light1\");\n  lightEntity2: Entity = this.rootEntity.createChild(\"direct_light2\");\n\n  // Component\n  camera: Camera = this.cameraEntity.addComponent(Camera);\n  controler: OrbitControl = this.cameraEntity.addComponent(OrbitControl);\n  light1: DirectLight = this.lightEntity1.addComponent(DirectLight);\n  light2: DirectLight = this.lightEntity2.addComponent(DirectLight);\n\n  // Debug\n  gui = new dat.GUI();\n  materialFolder = null;\n  animationFolder = null;\n  state = {\n    // Scene\n    background: false,\n    // Lights\n    envTexture: \"miniSampler\",\n    envIntensity: 1,\n    addLights: true,\n    lightColor: Oasis.colorToGui(new Color(1, 1, 1)),\n    lightIntensity: 0.8,\n    // GLTF Model List\n    defaultGLTF: \"fox\",\n    gltfList: {\n      \"2CylinderEngine\": \"https://gw.alipayobjects.com/os/bmw-prod/48a1e8b3-06b4-4269-807d-79274e58283a.glb\",\n      alphaBlendModeTest: \"https://gw.alipayobjects.com/os/bmw-prod/d099b30b-59a3-42e4-99eb-b158afa8e65d.glb\",\n      animatedCube: \"https://gw.alipayobjects.com/os/bmw-prod/8cc524dd-2481-438d-8374-3c933adea3b6.gltf\",\n      antiqueCamera: \"https://gw.alipayobjects.com/os/bmw-prod/93196534-bab3-4559-ae9f-bcb3e36a6419.glb\",\n      avocado: \"https://gw.alipayobjects.com/os/bmw-prod/0f978c4d-1cd6-4cec-9a4c-b58c8186e063.glb\",\n      avocado_draco: \"https://gw.alipayobjects.com/os/bmw-prod/b3b73614-cf06-4f41-940d-c1bc04cf6410.gltf\",\n      avocado_specular: \"https://gw.alipayobjects.com/os/bmw-prod/3cf50452-0015-461e-a172-7ea1f8135e53.gltf\",\n      avocado_quantized: \"https://gw.alipayobjects.com/os/bmw-prod/6aff5409-8e82-4e77-a6ac-55b6adfd0cf5.gltf\",\n      barramundiFish: \"https://gw.alipayobjects.com/os/bmw-prod/79d7935c-404b-4d8d-9ad3-5f8c273f0e4a.glb\",\n      boomBox: \"https://gw.alipayobjects.com/os/bmw-prod/2e98b1c0-18e8-45d0-b54e-dcad6ef05e22.glb\",\n      boomBoxWithAxes: \"https://gw.alipayobjects.com/os/bmw-prod/96e1b8b2-9be6-4b64-98ea-8c008c6dc422.gltf\",\n      boxVertexColors: \"https://gw.alipayobjects.com/os/bmw-prod/6cff6fcb-5191-465e-9a38-dee42a07cc65.glb\",\n      brianStem: \"https://gw.alipayobjects.com/os/bmw-prod/e3b37dd9-9407-4b5c-91b3-c5880d081329.glb\",\n      buggy: \"https://gw.alipayobjects.com/os/bmw-prod/d6916a14-b004-42d5-86dd-d8520b719288.glb\",\n      cesiumMan: \"https://gw.alipayobjects.com/os/bmw-prod/3a7d9597-7354-4bef-b314-b84509bef9b6.glb\",\n      cesiumMilkTruck: \"https://gw.alipayobjects.com/os/bmw-prod/7701125a-7d0d-4281-a7d8-7f0dfc8d0792.glb\",\n      corset: \"https://gw.alipayobjects.com/os/bmw-prod/3deaa5a4-5b2a-4a0d-8512-a8c4377a08ff.glb\",\n      DamagedHelmet: \"https://gw.alipayobjects.com/os/bmw-prod/a1da72a4-023e-4bb1-9629-0f4b0f6b6fc4.glb\",\n      Duck: \"https://gw.alipayobjects.com/os/bmw-prod/6cb8f543-285c-491a-8cfd-57a1160dc9ab.glb\",\n      environmentTest: \"https://gw.alipayobjects.com/os/bmw-prod/7c7b887c-05d6-43dd-b354-216e738e81ed.gltf\",\n      flightHelmet: \"https://gw.alipayobjects.com/os/bmw-prod/d6dbf161-48e2-4e6d-bbca-c481ed9f1a2d.gltf\",\n      fox: \"https://gw.alipayobjects.com/os/bmw-prod/f40ef8dd-4c94-41d4-8fac-c1d2301b6e47.glb\",\n      animationInterpolationTest: \"https://gw.alipayobjects.com/os/bmw-prod/4f410ef2-20b4-494d-85f1-a806c5070bfb.glb\",\n      lantern: \"https://gw.alipayobjects.com/os/bmw-prod/9557420a-c622-4e9c-bb46-f7af8b19d7de.glb\",\n      materialsVariantsShoe: \"https://gw.alipayobjects.com/os/bmw-prod/b1a414bb-61ea-4667-94d2-ef6cf179ac0d.glb\",\n      metalRoughSpheres: \"https://gw.alipayobjects.com/os/bmw-prod/67b39ede-1c82-4321-8457-0ad83ca9413a.glb\",\n      normalTangentTest: \"https://gw.alipayobjects.com/os/bmw-prod/4bb1a66c-55e3-4898-97d7-a9cc0f239686.glb\",\n      normalTangentMirrorTest: \"https://gw.alipayobjects.com/os/bmw-prod/8335f555-2061-47f5-9252-366c6ebf882a.glb\",\n      orientationTest: \"https://gw.alipayobjects.com/os/bmw-prod/16cdf390-ac42-411c-9d2b-8e112dfd723b.glb\",\n      sparseTest: \"https://gw.alipayobjects.com/os/bmw-prod/f00de659-53ea-49d1-8f2c-d0a412542b80.gltf\",\n      specGlossVsMetalRough: \"https://gw.alipayobjects.com/os/bmw-prod/4643bd7b-f988-4144-8245-4a390023d92d.glb\",\n      sponza: \"https://gw.alipayobjects.com/os/bmw-prod/ca50859b-d736-4a3e-9fc3-241b0bd2afef.gltf\",\n      suzanne: \"https://gw.alipayobjects.com/os/bmw-prod/3869e495-2e04-4e80-9d22-13b37116379a.gltf\",\n      sheenChair: \"https://gw.alipayobjects.com/os/bmw-prod/34847225-bc1b-4bef-9cb9-6b9711ca2f8c.glb\",\n      sheenCloth: \"https://gw.alipayobjects.com/os/bmw-prod/4529d2e8-22a8-47af-9b38-8eaff835f6bf.gltf\",\n      textureCoordinateTest: \"https://gw.alipayobjects.com/os/bmw-prod/5fd23201-51dd-4eea-92d3-c4a72ecc1f2b.glb\",\n      textureEncodingTest: \"https://gw.alipayobjects.com/os/bmw-prod/b8795e57-3c2c-4412-b4f0-7ffa796e4917.glb\",\n      textureSettingTest: \"https://gw.alipayobjects.com/os/bmw-prod/a4b26d58-bd49-4051-8f05-0fe8b532e716.glb\",\n      textureTransformMultiTest: \"https://gw.alipayobjects.com/os/bmw-prod/8fa18786-5188-4c14-94d7-77bf6b8483f9.glb\",\n      textureTransform: \"https://gw.alipayobjects.com/os/bmw-prod/6c59d5d0-2e2e-4933-a737-006d431977fd.gltf\",\n      toyCar: \"https://gw.alipayobjects.com/os/bmw-prod/8138b7d7-45aa-494a-8aea-0c67598b96d2.glb\",\n      transmissionTest: \"https://gw.alipayobjects.com/os/bmw-prod/1dd51fe8-bdd3-42e4-99be-53de5dc106b8.glb\",\n      unlitTest: \"https://gw.alipayobjects.com/os/bmw-prod/06a855be-ac8c-4705-b5d7-659b8b391189.glb\",\n      vc: \"https://gw.alipayobjects.com/os/bmw-prod/b71c4212-25fb-41bb-af88-d79ce6d3cc58.glb\",\n      vertexColorTest: \"https://gw.alipayobjects.com/os/bmw-prod/8fc70cc6-66d8-43c8-b460-f7d2aaa9edcf.glb\",\n      waterBottle: \"https://gw.alipayobjects.com/os/bmw-prod/0f403530-96f5-455a-8a39-b31ac68b6ed5.glb\"\n    }\n  };\n  _materials: Material[] = [];\n\n  // temporary\n  _boundingBox: BoundingBox = new BoundingBox();\n  _center: Vector3 = new Vector3();\n  _extent: Vector3 = new Vector3();\n\n  constructor() {\n    this.initResources().then(() => {\n      this.initScene();\n      this.addGLTFList();\n      this.addSceneGUI();\n    });\n  }\n\n  initResources() {\n    const names = Object.keys(envList);\n\n    return new Promise((resolve) => {\n      this.engine.resourceManager\n        .load(\n          names.map((name) => {\n            return {\n              type: AssetType.TextureCube,\n              urls: envList[name]\n            };\n          })\n        )\n        .then((textures) => {\n          (textures as any).forEach((texture: TextureCubeMap, index) => {\n            const name = names[index];\n            this.cubeTextures[name] = texture;\n            if (name === this.state.envTexture) {\n              this.scene.ambientLight.specularTexture = texture;\n              this.skyMaterial.textureCubeMap = texture;\n            }\n          });\n          resolve(true);\n        });\n    });\n  }\n\n  initScene() {\n    this.engine.canvas.resizeByClientSize();\n    this.controler.minDistance = 0;\n\n    // debug sync\n    if (this.state.background) {\n      this.scene.background.mode = BackgroundMode.Sky;\n    }\n    if (!this.state.addLights) {\n      this.light1.enabled = this.light2.enabled = false;\n    }\n    this.light1.intensity = this.light2.intensity = this.state.lightIntensity;\n    this.lightEntity1.transform.setRotation(30, 0, 0);\n    this.lightEntity2.transform.setRotation(-30, 180, 0);\n    this.scene.ambientLight.specularIntensity = this.state.envIntensity;\n    this.scene.background.sky.material = this.skyMaterial;\n    this.scene.background.sky.mesh = PrimitiveMesh.createCuboid(this.engine, 1, 1, 1);\n    this.engine.run();\n  }\n\n  addGLTFList() {\n    this.loadGLTF(this.state.gltfList[this.state.defaultGLTF]);\n    this.gui\n      .add(this.state, \"defaultGLTF\", Object.keys(this.state.gltfList))\n      .name(\"GLTF List\")\n      .onChange((v) => {\n        this.loadGLTF(this.state.gltfList[v]);\n      });\n  }\n\n  addSceneGUI() {\n    const { gui } = this;\n    // Display controls.\n    const dispFolder = gui.addFolder(\"Scene\");\n    dispFolder.add(this.state, \"background\").onChange((v: boolean) => {\n      if (v) {\n        this.scene.background.mode = BackgroundMode.Sky;\n      } else {\n        this.scene.background.mode = BackgroundMode.SolidColor;\n      }\n    });\n\n    // Lighting controls.\n    const lightFolder = gui.addFolder(\"Lighting\");\n    lightFolder\n      .add(this.state, \"envTexture\", [\"None\", ...Object.keys(this.cubeTextures)])\n      .name(\"IBL\")\n      .onChange((v) => {\n        this.scene.ambientLight.specularTexture = this.skyMaterial.textureCubeMap =\n          v === \"None\" ? null : this.cubeTextures[v];\n      });\n    lightFolder\n      .add(this.state, \"envIntensity\", 0, 2)\n      .onChange((v) => {\n        this.scene.ambientLight.specularIntensity = v;\n      })\n      .name(\"间接光强度\");\n    lightFolder\n      .add(this.state, \"addLights\")\n      .onChange((v) => {\n        this.light1.enabled = this.light2.enabled = v;\n      })\n      .name(\"直接光\");\n    lightFolder.addColor(this.state, \"lightColor\").onChange((v) => {\n      Oasis.guiToColor(v, this.light1.color);\n      Oasis.guiToColor(v, this.light2.color);\n    });\n    lightFolder\n      .add(this.state, \"lightIntensity\", 0, 2)\n      .onChange((v) => {\n        this.light1.intensity = this.light2.intensity = v;\n      })\n      .name(\"直接光强度\");\n  }\n\n  setCenter(renderers: Renderer[]) {\n    const boundingBox = this._boundingBox;\n    const center = this._center;\n    const extent = this._extent;\n\n    boundingBox.min.setValue(0, 0, 0);\n    boundingBox.max.setValue(0, 0, 0);\n\n    renderers.forEach((renderer) => {\n      BoundingBox.merge(renderer.bounds, boundingBox, boundingBox);\n    });\n    boundingBox.getExtent(extent);\n    const size = extent.length();\n\n    boundingBox.getCenter(center);\n    this.controler.target.setValue(center.x, center.y, center.z);\n    this.cameraEntity.transform.setPosition(center.x, center.y, size * 3);\n\n    this.camera.farClipPlane = size * 12;\n\n    if (this.camera.nearClipPlane > size) {\n      this.camera.nearClipPlane = size / 10;\n    } else {\n      this.camera.nearClipPlane = 0.1;\n    }\n\n    this.controler.maxDistance = size * 10;\n  }\n\n  loadGLTF(url: string) {\n    this.destroyGLTF();\n    const isGLB = /.glb$/.test(url);\n    this.engine.resourceManager\n      .load<GLTFResource>({\n        type: AssetType.Perfab,\n        url: `${url}#${Math.random()}.${isGLB ? \"glb\" : \"gltf\"}` // @todo: resourceManager cache bug\n      })\n      .then((asset) => {\n        const { defaultSceneRoot, materials, animations } = asset;\n        console.log(asset);\n        this.gltfRootEntity = defaultSceneRoot;\n        this.rootEntity.addChild(defaultSceneRoot);\n\n        const meshRenderers = [];\n        const skinnedMeshRenderers = [];\n        defaultSceneRoot.getComponentsIncludeChildren(MeshRenderer, meshRenderers);\n        defaultSceneRoot.getComponentsIncludeChildren(SkinnedMeshRenderer, skinnedMeshRenderers);\n\n        this.setCenter(meshRenderers.concat(skinnedMeshRenderers));\n        this.loadMaterialGUI(materials);\n        this.loadAnimationGUI(animations);\n      })\n      .catch((e) => {\n        console.error(e);\n      });\n  }\n\n  destroyGLTF() {\n    this.gltfRootEntity.destroy();\n  }\n\n  loadMaterialGUI(materials?: Material[]) {\n    const { gui } = this;\n    if (this.materialFolder) {\n      gui.removeFolder(this.materialFolder);\n      this.materialFolder = null;\n    }\n    if (!materials) {\n      materials = this._materials;\n    }\n    this._materials = materials;\n    if (!materials.length) return;\n\n    const folder = (this.materialFolder = gui.addFolder(\"Material\"));\n    const folderName = {};\n\n    materials.forEach((material) => {\n      if (!(material instanceof PBRBaseMaterial) && !(material instanceof UnlitMaterial)) return;\n      if (!material.name) {\n        material.name = \"default\";\n      }\n      const state = {\n        baseColor: Oasis.colorToGui(material.baseColor),\n        emissiveColor: Oasis.colorToGui((material as PBRBaseMaterial).emissiveColor),\n        specularColor: Oasis.colorToGui((material as PBRSpecularMaterial).specularColor),\n        baseTexture: material.baseTexture ? \"origin\" : \"\",\n        metallicRoughnessTexture: (material as PBRMaterial).metallicRoughnessTexture ? \"origin\" : \"\",\n        normalTexture: (material as PBRBaseMaterial).normalTexture ? \"origin\" : \"\",\n        emissiveTexture: (material as PBRBaseMaterial).emissiveTexture ? \"origin\" : \"\",\n        occlusionTexture: (material as PBRBaseMaterial).occlusionTexture ? \"origin\" : \"\",\n        opacityTexture: (material as PBRBaseMaterial).opacityTexture ? \"origin\" : \"\",\n        specularGlossinessTexture: (material as PBRSpecularMaterial).specularGlossinessTexture ? \"origin\" : \"\"\n      };\n\n      const originTexture = {\n        baseTexture: material.baseTexture,\n        metallicRoughnessTexture: (material as PBRMaterial).metallicRoughnessTexture,\n        normalTexture: (material as PBRBaseMaterial).normalTexture,\n        emissiveTexture: (material as PBRBaseMaterial).emissiveTexture,\n        occlusionTexture: (material as PBRBaseMaterial).occlusionTexture,\n        opacityTexture: (material as PBRBaseMaterial).opacityTexture,\n        specularGlossinessTexture: (material as PBRSpecularMaterial).specularGlossinessTexture\n      };\n\n      const f = folder.addFolder(\n        folderName[material.name] ? `${material.name}_${folderName[material.name] + 1}` : material.name\n      );\n\n      folderName[material.name] = folderName[material.name] == null ? 1 : folderName[material.name] + 1;\n\n      // metallic\n      if (material instanceof PBRMaterial) {\n        const mode1 = f.addFolder(\"金属模式\");\n        mode1.add(material, \"metallicFactor\", 0, 1).step(0.01);\n        mode1.add(material, \"roughnessFactor\", 0, 1).step(0.01);\n        mode1\n          .add(state, \"metallicRoughnessTexture\", [\"None\", \"origin\", ...Object.keys(this.textures)])\n          .onChange((v) => {\n            material.metallicRoughnessTexture =\n              v === \"None\" ? null : this.textures[v] || originTexture.metallicRoughnessTexture;\n          });\n        mode1.open();\n      }\n      // specular\n      else if (material instanceof PBRSpecularMaterial) {\n        const mode2 = f.addFolder(\"高光模式\");\n        mode2.add(material, \"glossinessFactor\", 0, 1).step(0.01);\n        mode2.addColor(state, \"specularColor\").onChange((v) => {\n          Oasis.guiToColor(v, material.specularColor);\n        });\n        mode2\n          .add(state, \"specularGlossinessTexture\", [\"None\", \"origin\", ...Object.keys(this.textures)])\n          .onChange((v) => {\n            material.specularGlossinessTexture =\n              v === \"None\" ? null : this.textures[v] || originTexture.specularGlossinessTexture;\n          });\n        mode2.open();\n      } else if (material instanceof UnlitMaterial) {\n        f.add(state, \"baseTexture\", [\"None\", \"origin\", ...Object.keys(this.textures)]).onChange((v) => {\n          material.baseTexture = v === \"None\" ? null : this.textures[v] || originTexture.baseTexture;\n        });\n\n        f.addColor(state, \"baseColor\").onChange((v) => {\n          Oasis.guiToColor(v, material.baseColor);\n        });\n      }\n\n      // common\n      if (!(material instanceof UnlitMaterial)) {\n        const common = f.addFolder(\"通用\");\n\n        common.add(material, \"envMapIntensity\", 0, 2).step(0.01);\n        common\n          .add(material, \"opacity\", 0, 1)\n          .step(0.01)\n          .onChange((v) => {\n            material.opacity = v;\n          });\n        common.add(material, \"isTransparent\");\n        common.add(material, \"alphaCutoff\", 0, 1).step(0.01);\n        common.add(material, \"getOpacityFromRGB\");\n\n        common.addColor(state, \"baseColor\").onChange((v) => {\n          Oasis.guiToColor(v, material.baseColor);\n        });\n        common.addColor(state, \"emissiveColor\").onChange((v) => {\n          Oasis.guiToColor(v, material.emissiveColor);\n        });\n        common.add(state, \"baseTexture\", [\"None\", \"origin\", ...Object.keys(this.textures)]).onChange((v) => {\n          material.baseTexture = v === \"None\" ? null : this.textures[v] || originTexture.baseTexture;\n        });\n        common.add(state, \"normalTexture\", [\"None\", \"origin\", ...Object.keys(this.textures)]).onChange((v) => {\n          material.normalTexture = v === \"None\" ? null : this.textures[v] || originTexture.normalTexture;\n        });\n        common.add(state, \"emissiveTexture\", [\"None\", \"origin\", ...Object.keys(this.textures)]).onChange((v) => {\n          material.emissiveTexture = v === \"None\" ? null : this.textures[v] || originTexture.emissiveTexture;\n        });\n        common.add(state, \"occlusionTexture\", [\"None\", \"origin\", ...Object.keys(this.textures)]).onChange((v) => {\n          material.occlusionTexture = v === \"None\" ? null : this.textures[v] || originTexture.occlusionTexture;\n        });\n        common.add(state, \"opacityTexture\", [\"None\", \"origin\", ...Object.keys(this.textures)]).onChange((v) => {\n          material.opacityTexture = v === \"None\" ? null : this.textures[v] || originTexture.opacityTexture;\n        });\n        common.open();\n      }\n    });\n  }\n\n  loadAnimationGUI(animations: AnimationClip[]) {\n    if (this.animationFolder) {\n      this.gui.removeFolder(this.animationFolder);\n      this.animationFolder = null;\n    }\n\n    if (animations?.length) {\n      this.animationFolder = this.gui.addFolder(\"Animation\");\n      this.animationFolder.open();\n      const animator = this.gltfRootEntity.getComponent(Animation);\n      animator.playAnimationClip(animations[0].name);\n      const state = {\n        animation: animations[0].name\n      };\n      this.animationFolder\n        .add(state, \"animation\", [\"None\", ...animations.map((animation) => animation.name)])\n        .onChange((name) => {\n          if (name === \"None\") {\n            animator.stop(true);\n          } else {\n            animator.playAnimationClip(name);\n          }\n        });\n    }\n  }\n}\n\nnew Oasis();\n","formatedCode":"<span class=\"token comment\">/**\n * @title GLTF Loader\n * @category Advance\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  Animation<span class=\"token punctuation\">,</span>\n  AnimationClip<span class=\"token punctuation\">,</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  BackgroundMode<span class=\"token punctuation\">,</span>\n  BoundingBox<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  Color<span class=\"token punctuation\">,</span>\n  DirectLight<span class=\"token punctuation\">,</span>\n  Entity<span class=\"token punctuation\">,</span>\n  GLTFResource<span class=\"token punctuation\">,</span>\n  Logger<span class=\"token punctuation\">,</span>\n  Material<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  PBRBaseMaterial<span class=\"token punctuation\">,</span>\n  PBRMaterial<span class=\"token punctuation\">,</span>\n  PBRSpecularMaterial<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  Renderer<span class=\"token punctuation\">,</span>\n  Scene<span class=\"token punctuation\">,</span>\n  SkinnedMeshRenderer<span class=\"token punctuation\">,</span>\n  SkyBoxMaterial<span class=\"token punctuation\">,</span>\n  Texture2D<span class=\"token punctuation\">,</span>\n  TextureCubeMap<span class=\"token punctuation\">,</span>\n  UnlitMaterial<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\nLogger<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> envList <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  sky<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*Gi7CTZqKuacAAAAAAAAAAABkARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*iRRMQIExwKMAAAAAAAAAAABkARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*ZIcPQZo20sAAAAAAAAAAAABkARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*SPYuTbHT-KgAAAAAAAAAAABkARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*mGUERbY77roAAAAAAAAAAABkARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*ilkPS7A1_JsAAAAAAAAAAABkARQnAQ\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  house<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*1gjTQ7P2mQoAAAAAAAAAAABkARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*entSR7DylL0AAAAAAAAAAABkARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*izQBQY_vs_4AAAAAAAAAAABkARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*x3XnRpq1U-EAAAAAAAAAAABkARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*k7FsT5Gprn0AAAAAAAAAAABkARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*8LdBQ6ixiQAAAAAAAAAAAABkARQnAQ\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  sunnyDay<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*4ZY8T4GpKwYAAAAAAAAAAABkARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*8QbJQZwS1wUAAAAAAAAAAABkARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*a54kSZ3LmAQAAAAAAAAAAABkARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*8CbfTb1yG8MAAAAAAAAAAABkARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*Yi4ZRZbdj8MAAAAAAAAAAABkARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*KddxSriLYjoAAAAAAAAAAABkARQnAQ\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  miniSampler<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*IuyGR4bdwg4AAAAAAAAAAABkARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*4rv5RZ0kll4AAAAAAAAAAABkARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*cHitTpWoJjoAAAAAAAAAAABkARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*RCEbS6k5x18AAAAAAAAAAABkARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*IRc7R7cl4CcAAAAAAAAAAABkARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_475770/afts/img/A*y_4hRYVgzQ4AAAAAAAAAAABkARQnAQ\"</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Oasis</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> <span class=\"token function\">guiToColor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">gui<span class=\"token operator\">:</span> number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">:</span> Color</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    color<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>gui<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> gui<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> gui<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">static</span> <span class=\"token function\">colorToGui</span><span class=\"token punctuation\">(</span>color<span class=\"token operator\">:</span> Color <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> v <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span>r <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n    v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span>g <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n    v<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span>b <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> v<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  cubeTextures<span class=\"token operator\">:</span> Record<span class=\"token operator\">&lt;</span>string<span class=\"token punctuation\">,</span> TextureCubeMap<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  textures<span class=\"token operator\">:</span> Record<span class=\"token operator\">&lt;</span>string<span class=\"token punctuation\">,</span> Texture2D<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  engine<span class=\"token operator\">:</span> WebGLEngine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  scene<span class=\"token operator\">:</span> Scene <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n  skyMaterial<span class=\"token operator\">:</span> SkyBoxMaterial <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SkyBoxMaterial</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Entity</span>\n  rootEntity<span class=\"token operator\">:</span> Entity <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraEntity<span class=\"token operator\">:</span> Entity <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gltfRootEntity<span class=\"token operator\">:</span> Entity <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gltf\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  lightEntity1<span class=\"token operator\">:</span> Entity <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"direct_light1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  lightEntity2<span class=\"token operator\">:</span> Entity <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"direct_light2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Component</span>\n  camera<span class=\"token operator\">:</span> Camera <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  controler<span class=\"token operator\">:</span> OrbitControl <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  light1<span class=\"token operator\">:</span> DirectLight <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lightEntity1<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  light2<span class=\"token operator\">:</span> DirectLight <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lightEntity2<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Debug</span>\n  gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  materialFolder <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  animationFolder <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Scene</span>\n    background<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// Lights</span>\n    envTexture<span class=\"token operator\">:</span> <span class=\"token string\">\"miniSampler\"</span><span class=\"token punctuation\">,</span>\n    envIntensity<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    addLights<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    lightColor<span class=\"token operator\">:</span> Oasis<span class=\"token punctuation\">.</span><span class=\"token function\">colorToGui</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    lightIntensity<span class=\"token operator\">:</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// GLTF Model List</span>\n    defaultGLTF<span class=\"token operator\">:</span> <span class=\"token string\">\"fox\"</span><span class=\"token punctuation\">,</span>\n    gltfList<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"2CylinderEngine\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/48a1e8b3-06b4-4269-807d-79274e58283a.glb\"</span><span class=\"token punctuation\">,</span>\n      alphaBlendModeTest<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/d099b30b-59a3-42e4-99eb-b158afa8e65d.glb\"</span><span class=\"token punctuation\">,</span>\n      animatedCube<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/8cc524dd-2481-438d-8374-3c933adea3b6.gltf\"</span><span class=\"token punctuation\">,</span>\n      antiqueCamera<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/93196534-bab3-4559-ae9f-bcb3e36a6419.glb\"</span><span class=\"token punctuation\">,</span>\n      avocado<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/0f978c4d-1cd6-4cec-9a4c-b58c8186e063.glb\"</span><span class=\"token punctuation\">,</span>\n      avocado_draco<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/b3b73614-cf06-4f41-940d-c1bc04cf6410.gltf\"</span><span class=\"token punctuation\">,</span>\n      avocado_specular<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/3cf50452-0015-461e-a172-7ea1f8135e53.gltf\"</span><span class=\"token punctuation\">,</span>\n      avocado_quantized<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/6aff5409-8e82-4e77-a6ac-55b6adfd0cf5.gltf\"</span><span class=\"token punctuation\">,</span>\n      barramundiFish<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/79d7935c-404b-4d8d-9ad3-5f8c273f0e4a.glb\"</span><span class=\"token punctuation\">,</span>\n      boomBox<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/2e98b1c0-18e8-45d0-b54e-dcad6ef05e22.glb\"</span><span class=\"token punctuation\">,</span>\n      boomBoxWithAxes<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/96e1b8b2-9be6-4b64-98ea-8c008c6dc422.gltf\"</span><span class=\"token punctuation\">,</span>\n      boxVertexColors<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/6cff6fcb-5191-465e-9a38-dee42a07cc65.glb\"</span><span class=\"token punctuation\">,</span>\n      brianStem<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/e3b37dd9-9407-4b5c-91b3-c5880d081329.glb\"</span><span class=\"token punctuation\">,</span>\n      buggy<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/d6916a14-b004-42d5-86dd-d8520b719288.glb\"</span><span class=\"token punctuation\">,</span>\n      cesiumMan<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/3a7d9597-7354-4bef-b314-b84509bef9b6.glb\"</span><span class=\"token punctuation\">,</span>\n      cesiumMilkTruck<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/7701125a-7d0d-4281-a7d8-7f0dfc8d0792.glb\"</span><span class=\"token punctuation\">,</span>\n      corset<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/3deaa5a4-5b2a-4a0d-8512-a8c4377a08ff.glb\"</span><span class=\"token punctuation\">,</span>\n      DamagedHelmet<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/a1da72a4-023e-4bb1-9629-0f4b0f6b6fc4.glb\"</span><span class=\"token punctuation\">,</span>\n      Duck<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/6cb8f543-285c-491a-8cfd-57a1160dc9ab.glb\"</span><span class=\"token punctuation\">,</span>\n      environmentTest<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/7c7b887c-05d6-43dd-b354-216e738e81ed.gltf\"</span><span class=\"token punctuation\">,</span>\n      flightHelmet<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/d6dbf161-48e2-4e6d-bbca-c481ed9f1a2d.gltf\"</span><span class=\"token punctuation\">,</span>\n      fox<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/f40ef8dd-4c94-41d4-8fac-c1d2301b6e47.glb\"</span><span class=\"token punctuation\">,</span>\n      animationInterpolationTest<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/4f410ef2-20b4-494d-85f1-a806c5070bfb.glb\"</span><span class=\"token punctuation\">,</span>\n      lantern<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/9557420a-c622-4e9c-bb46-f7af8b19d7de.glb\"</span><span class=\"token punctuation\">,</span>\n      materialsVariantsShoe<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/b1a414bb-61ea-4667-94d2-ef6cf179ac0d.glb\"</span><span class=\"token punctuation\">,</span>\n      metalRoughSpheres<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/67b39ede-1c82-4321-8457-0ad83ca9413a.glb\"</span><span class=\"token punctuation\">,</span>\n      normalTangentTest<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/4bb1a66c-55e3-4898-97d7-a9cc0f239686.glb\"</span><span class=\"token punctuation\">,</span>\n      normalTangentMirrorTest<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/8335f555-2061-47f5-9252-366c6ebf882a.glb\"</span><span class=\"token punctuation\">,</span>\n      orientationTest<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/16cdf390-ac42-411c-9d2b-8e112dfd723b.glb\"</span><span class=\"token punctuation\">,</span>\n      sparseTest<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/f00de659-53ea-49d1-8f2c-d0a412542b80.gltf\"</span><span class=\"token punctuation\">,</span>\n      specGlossVsMetalRough<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/4643bd7b-f988-4144-8245-4a390023d92d.glb\"</span><span class=\"token punctuation\">,</span>\n      sponza<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/ca50859b-d736-4a3e-9fc3-241b0bd2afef.gltf\"</span><span class=\"token punctuation\">,</span>\n      suzanne<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/3869e495-2e04-4e80-9d22-13b37116379a.gltf\"</span><span class=\"token punctuation\">,</span>\n      sheenChair<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/34847225-bc1b-4bef-9cb9-6b9711ca2f8c.glb\"</span><span class=\"token punctuation\">,</span>\n      sheenCloth<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/4529d2e8-22a8-47af-9b38-8eaff835f6bf.gltf\"</span><span class=\"token punctuation\">,</span>\n      textureCoordinateTest<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/5fd23201-51dd-4eea-92d3-c4a72ecc1f2b.glb\"</span><span class=\"token punctuation\">,</span>\n      textureEncodingTest<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/b8795e57-3c2c-4412-b4f0-7ffa796e4917.glb\"</span><span class=\"token punctuation\">,</span>\n      textureSettingTest<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/a4b26d58-bd49-4051-8f05-0fe8b532e716.glb\"</span><span class=\"token punctuation\">,</span>\n      textureTransformMultiTest<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/8fa18786-5188-4c14-94d7-77bf6b8483f9.glb\"</span><span class=\"token punctuation\">,</span>\n      textureTransform<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/6c59d5d0-2e2e-4933-a737-006d431977fd.gltf\"</span><span class=\"token punctuation\">,</span>\n      toyCar<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/8138b7d7-45aa-494a-8aea-0c67598b96d2.glb\"</span><span class=\"token punctuation\">,</span>\n      transmissionTest<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/1dd51fe8-bdd3-42e4-99be-53de5dc106b8.glb\"</span><span class=\"token punctuation\">,</span>\n      unlitTest<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/06a855be-ac8c-4705-b5d7-659b8b391189.glb\"</span><span class=\"token punctuation\">,</span>\n      vc<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/b71c4212-25fb-41bb-af88-d79ce6d3cc58.glb\"</span><span class=\"token punctuation\">,</span>\n      vertexColorTest<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/8fc70cc6-66d8-43c8-b460-f7d2aaa9edcf.glb\"</span><span class=\"token punctuation\">,</span>\n      waterBottle<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/0f403530-96f5-455a-8a39-b31ac68b6ed5.glb\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  _materials<span class=\"token operator\">:</span> Material<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// temporary</span>\n  _boundingBox<span class=\"token operator\">:</span> BoundingBox <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BoundingBox</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  _center<span class=\"token operator\">:</span> Vector3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  _extent<span class=\"token operator\">:</span> Vector3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">initResources</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">initScene</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">addGLTFList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">addSceneGUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">initResources</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> names <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>envList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>engine<span class=\"token punctuation\">.</span>resourceManager\n        <span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>\n          names<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n              type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>TextureCube<span class=\"token punctuation\">,</span>\n              urls<span class=\"token operator\">:</span> envList<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">textures</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token punctuation\">(</span>textures <span class=\"token keyword\">as</span> any<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture<span class=\"token operator\">:</span> TextureCubeMap<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> names<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cubeTextures<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> texture<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>name <span class=\"token operator\">===</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>envTexture<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>scene<span class=\"token punctuation\">.</span>ambientLight<span class=\"token punctuation\">.</span>specularTexture <span class=\"token operator\">=</span> texture<span class=\"token punctuation\">;</span>\n              <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>skyMaterial<span class=\"token punctuation\">.</span>textureCubeMap <span class=\"token operator\">=</span> texture<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">initScene</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>engine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>controler<span class=\"token punctuation\">.</span>minDistance <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// debug sync</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>background<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>scene<span class=\"token punctuation\">.</span>background<span class=\"token punctuation\">.</span>mode <span class=\"token operator\">=</span> BackgroundMode<span class=\"token punctuation\">.</span>Sky<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>addLights<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>light1<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>light2<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>light1<span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>light2<span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>lightIntensity<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lightEntity1<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setRotation</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lightEntity2<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setRotation</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">180</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>scene<span class=\"token punctuation\">.</span>ambientLight<span class=\"token punctuation\">.</span>specularIntensity <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>envIntensity<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>scene<span class=\"token punctuation\">.</span>background<span class=\"token punctuation\">.</span>sky<span class=\"token punctuation\">.</span>material <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>skyMaterial<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>scene<span class=\"token punctuation\">.</span>background<span class=\"token punctuation\">.</span>sky<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">addGLTFList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">loadGLTF</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>gltfList<span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>defaultGLTF<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gui\n      <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"defaultGLTF\"</span><span class=\"token punctuation\">,</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>gltfList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GLTF List\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">loadGLTF</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>gltfList<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">addSceneGUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> gui <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display controls.</span>\n    <span class=\"token keyword\">const</span> dispFolder <span class=\"token operator\">=</span> gui<span class=\"token punctuation\">.</span><span class=\"token function\">addFolder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Scene\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    dispFolder<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"background\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v<span class=\"token operator\">:</span> boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>scene<span class=\"token punctuation\">.</span>background<span class=\"token punctuation\">.</span>mode <span class=\"token operator\">=</span> BackgroundMode<span class=\"token punctuation\">.</span>Sky<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>scene<span class=\"token punctuation\">.</span>background<span class=\"token punctuation\">.</span>mode <span class=\"token operator\">=</span> BackgroundMode<span class=\"token punctuation\">.</span>SolidColor<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Lighting controls.</span>\n    <span class=\"token keyword\">const</span> lightFolder <span class=\"token operator\">=</span> gui<span class=\"token punctuation\">.</span><span class=\"token function\">addFolder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Lighting\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    lightFolder\n      <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"envTexture\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"None\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cubeTextures<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"IBL\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>scene<span class=\"token punctuation\">.</span>ambientLight<span class=\"token punctuation\">.</span>specularTexture <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>skyMaterial<span class=\"token punctuation\">.</span>textureCubeMap <span class=\"token operator\">=</span>\n          v <span class=\"token operator\">===</span> <span class=\"token string\">\"None\"</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cubeTextures<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    lightFolder\n      <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"envIntensity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>scene<span class=\"token punctuation\">.</span>ambientLight<span class=\"token punctuation\">.</span>specularIntensity <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"间接光强度\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    lightFolder\n      <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"addLights\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>light1<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>light2<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"直接光\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    lightFolder<span class=\"token punctuation\">.</span><span class=\"token function\">addColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"lightColor\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      Oasis<span class=\"token punctuation\">.</span><span class=\"token function\">guiToColor</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>light1<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      Oasis<span class=\"token punctuation\">.</span><span class=\"token function\">guiToColor</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>light2<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    lightFolder\n      <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"lightIntensity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>light1<span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>light2<span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"直接光强度\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">setCenter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">renderers<span class=\"token operator\">:</span> Renderer<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> boundingBox <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_boundingBox<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> center <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_center<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> extent <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_extent<span class=\"token punctuation\">;</span>\n\n    boundingBox<span class=\"token punctuation\">.</span>min<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    boundingBox<span class=\"token punctuation\">.</span>max<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    renderers<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">renderer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      BoundingBox<span class=\"token punctuation\">.</span><span class=\"token function\">merge</span><span class=\"token punctuation\">(</span>renderer<span class=\"token punctuation\">.</span>bounds<span class=\"token punctuation\">,</span> boundingBox<span class=\"token punctuation\">,</span> boundingBox<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    boundingBox<span class=\"token punctuation\">.</span><span class=\"token function\">getExtent</span><span class=\"token punctuation\">(</span>extent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> size <span class=\"token operator\">=</span> extent<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    boundingBox<span class=\"token punctuation\">.</span><span class=\"token function\">getCenter</span><span class=\"token punctuation\">(</span>center<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>controler<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>center<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> center<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> center<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>center<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> center<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> size <span class=\"token operator\">*</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>camera<span class=\"token punctuation\">.</span>farClipPlane <span class=\"token operator\">=</span> size <span class=\"token operator\">*</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>camera<span class=\"token punctuation\">.</span>nearClipPlane <span class=\"token operator\">></span> size<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>camera<span class=\"token punctuation\">.</span>nearClipPlane <span class=\"token operator\">=</span> size <span class=\"token operator\">/</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>camera<span class=\"token punctuation\">.</span>nearClipPlane <span class=\"token operator\">=</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>controler<span class=\"token punctuation\">.</span>maxDistance <span class=\"token operator\">=</span> size <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">loadGLTF</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">url<span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">destroyGLTF</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> isGLB <span class=\"token operator\">=</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">.glb$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>engine<span class=\"token punctuation\">.</span>resourceManager\n      <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>GLTFResource<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Perfab<span class=\"token punctuation\">,</span>\n        url<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">#</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>isGLB <span class=\"token operator\">?</span> <span class=\"token string\">\"glb\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"gltf\"</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token comment\">// @todo: resourceManager cache bug</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">asset</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> defaultSceneRoot<span class=\"token punctuation\">,</span> materials<span class=\"token punctuation\">,</span> animations <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> asset<span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>asset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gltfRootEntity <span class=\"token operator\">=</span> defaultSceneRoot<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>defaultSceneRoot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">const</span> meshRenderers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> skinnedMeshRenderers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        defaultSceneRoot<span class=\"token punctuation\">.</span><span class=\"token function\">getComponentsIncludeChildren</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">,</span> meshRenderers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        defaultSceneRoot<span class=\"token punctuation\">.</span><span class=\"token function\">getComponentsIncludeChildren</span><span class=\"token punctuation\">(</span>SkinnedMeshRenderer<span class=\"token punctuation\">,</span> skinnedMeshRenderers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setCenter</span><span class=\"token punctuation\">(</span>meshRenderers<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>skinnedMeshRenderers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">loadMaterialGUI</span><span class=\"token punctuation\">(</span>materials<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">loadAnimationGUI</span><span class=\"token punctuation\">(</span>animations<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">destroyGLTF</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gltfRootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">loadMaterialGUI</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">materials<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Material<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> gui <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>materialFolder<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      gui<span class=\"token punctuation\">.</span><span class=\"token function\">removeFolder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>materialFolder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>materialFolder <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>materials<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      materials <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_materials<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_materials <span class=\"token operator\">=</span> materials<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>materials<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> folder <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>materialFolder <span class=\"token operator\">=</span> gui<span class=\"token punctuation\">.</span><span class=\"token function\">addFolder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Material\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> folderName <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    materials<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">material</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>material <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">PBRBaseMaterial</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>material <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">UnlitMaterial</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>material<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        material<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"default\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        baseColor<span class=\"token operator\">:</span> Oasis<span class=\"token punctuation\">.</span><span class=\"token function\">colorToGui</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        emissiveColor<span class=\"token operator\">:</span> Oasis<span class=\"token punctuation\">.</span><span class=\"token function\">colorToGui</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>material <span class=\"token keyword\">as</span> PBRBaseMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>emissiveColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        specularColor<span class=\"token operator\">:</span> Oasis<span class=\"token punctuation\">.</span><span class=\"token function\">colorToGui</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>material <span class=\"token keyword\">as</span> PBRSpecularMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>specularColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        baseTexture<span class=\"token operator\">:</span> material<span class=\"token punctuation\">.</span>baseTexture <span class=\"token operator\">?</span> <span class=\"token string\">\"origin\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n        metallicRoughnessTexture<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>material <span class=\"token keyword\">as</span> PBRMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>metallicRoughnessTexture <span class=\"token operator\">?</span> <span class=\"token string\">\"origin\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n        normalTexture<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>material <span class=\"token keyword\">as</span> PBRBaseMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>normalTexture <span class=\"token operator\">?</span> <span class=\"token string\">\"origin\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n        emissiveTexture<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>material <span class=\"token keyword\">as</span> PBRBaseMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>emissiveTexture <span class=\"token operator\">?</span> <span class=\"token string\">\"origin\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n        occlusionTexture<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>material <span class=\"token keyword\">as</span> PBRBaseMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>occlusionTexture <span class=\"token operator\">?</span> <span class=\"token string\">\"origin\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n        opacityTexture<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>material <span class=\"token keyword\">as</span> PBRBaseMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>opacityTexture <span class=\"token operator\">?</span> <span class=\"token string\">\"origin\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n        specularGlossinessTexture<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>material <span class=\"token keyword\">as</span> PBRSpecularMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>specularGlossinessTexture <span class=\"token operator\">?</span> <span class=\"token string\">\"origin\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">const</span> originTexture <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        baseTexture<span class=\"token operator\">:</span> material<span class=\"token punctuation\">.</span>baseTexture<span class=\"token punctuation\">,</span>\n        metallicRoughnessTexture<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>material <span class=\"token keyword\">as</span> PBRMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>metallicRoughnessTexture<span class=\"token punctuation\">,</span>\n        normalTexture<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>material <span class=\"token keyword\">as</span> PBRBaseMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>normalTexture<span class=\"token punctuation\">,</span>\n        emissiveTexture<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>material <span class=\"token keyword\">as</span> PBRBaseMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>emissiveTexture<span class=\"token punctuation\">,</span>\n        occlusionTexture<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>material <span class=\"token keyword\">as</span> PBRBaseMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>occlusionTexture<span class=\"token punctuation\">,</span>\n        opacityTexture<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>material <span class=\"token keyword\">as</span> PBRBaseMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>opacityTexture<span class=\"token punctuation\">,</span>\n        specularGlossinessTexture<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>material <span class=\"token keyword\">as</span> PBRSpecularMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>specularGlossinessTexture\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">const</span> f <span class=\"token operator\">=</span> folder<span class=\"token punctuation\">.</span><span class=\"token function\">addFolder</span><span class=\"token punctuation\">(</span>\n        folderName<span class=\"token punctuation\">[</span>material<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>material<span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">_</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>folderName<span class=\"token punctuation\">[</span>material<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token operator\">:</span> material<span class=\"token punctuation\">.</span>name\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      folderName<span class=\"token punctuation\">[</span>material<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> folderName<span class=\"token punctuation\">[</span>material<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> folderName<span class=\"token punctuation\">[</span>material<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// metallic</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>material <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">PBRMaterial</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> mode1 <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span><span class=\"token function\">addFolder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"金属模式\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mode1<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">,</span> <span class=\"token string\">\"metallicFactor\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">step</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mode1<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">,</span> <span class=\"token string\">\"roughnessFactor\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">step</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mode1\n          <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"metallicRoughnessTexture\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"None\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"origin\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textures<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            material<span class=\"token punctuation\">.</span>metallicRoughnessTexture <span class=\"token operator\">=</span>\n              v <span class=\"token operator\">===</span> <span class=\"token string\">\"None\"</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textures<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> originTexture<span class=\"token punctuation\">.</span>metallicRoughnessTexture<span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mode1<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token comment\">// specular</span>\n      <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>material <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">PBRSpecularMaterial</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> mode2 <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span><span class=\"token function\">addFolder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"高光模式\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mode2<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">,</span> <span class=\"token string\">\"glossinessFactor\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">step</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mode2<span class=\"token punctuation\">.</span><span class=\"token function\">addColor</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"specularColor\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          Oasis<span class=\"token punctuation\">.</span><span class=\"token function\">guiToColor</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> material<span class=\"token punctuation\">.</span>specularColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mode2\n          <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"specularGlossinessTexture\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"None\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"origin\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textures<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            material<span class=\"token punctuation\">.</span>specularGlossinessTexture <span class=\"token operator\">=</span>\n              v <span class=\"token operator\">===</span> <span class=\"token string\">\"None\"</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textures<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> originTexture<span class=\"token punctuation\">.</span>specularGlossinessTexture<span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mode2<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>material <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">UnlitMaterial</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        f<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"baseTexture\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"None\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"origin\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textures<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          material<span class=\"token punctuation\">.</span>baseTexture <span class=\"token operator\">=</span> v <span class=\"token operator\">===</span> <span class=\"token string\">\"None\"</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textures<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> originTexture<span class=\"token punctuation\">.</span>baseTexture<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        f<span class=\"token punctuation\">.</span><span class=\"token function\">addColor</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"baseColor\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          Oasis<span class=\"token punctuation\">.</span><span class=\"token function\">guiToColor</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> material<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token comment\">// common</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>material <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">UnlitMaterial</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> common <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span><span class=\"token function\">addFolder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"通用\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        common<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">,</span> <span class=\"token string\">\"envMapIntensity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">step</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        common\n          <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">,</span> <span class=\"token string\">\"opacity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">step</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            material<span class=\"token punctuation\">.</span>opacity <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        common<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">,</span> <span class=\"token string\">\"isTransparent\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        common<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">,</span> <span class=\"token string\">\"alphaCutoff\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">step</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        common<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">,</span> <span class=\"token string\">\"getOpacityFromRGB\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        common<span class=\"token punctuation\">.</span><span class=\"token function\">addColor</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"baseColor\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          Oasis<span class=\"token punctuation\">.</span><span class=\"token function\">guiToColor</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> material<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        common<span class=\"token punctuation\">.</span><span class=\"token function\">addColor</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"emissiveColor\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          Oasis<span class=\"token punctuation\">.</span><span class=\"token function\">guiToColor</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> material<span class=\"token punctuation\">.</span>emissiveColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        common<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"baseTexture\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"None\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"origin\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textures<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          material<span class=\"token punctuation\">.</span>baseTexture <span class=\"token operator\">=</span> v <span class=\"token operator\">===</span> <span class=\"token string\">\"None\"</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textures<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> originTexture<span class=\"token punctuation\">.</span>baseTexture<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        common<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"normalTexture\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"None\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"origin\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textures<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          material<span class=\"token punctuation\">.</span>normalTexture <span class=\"token operator\">=</span> v <span class=\"token operator\">===</span> <span class=\"token string\">\"None\"</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textures<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> originTexture<span class=\"token punctuation\">.</span>normalTexture<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        common<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"emissiveTexture\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"None\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"origin\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textures<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          material<span class=\"token punctuation\">.</span>emissiveTexture <span class=\"token operator\">=</span> v <span class=\"token operator\">===</span> <span class=\"token string\">\"None\"</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textures<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> originTexture<span class=\"token punctuation\">.</span>emissiveTexture<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        common<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"occlusionTexture\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"None\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"origin\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textures<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          material<span class=\"token punctuation\">.</span>occlusionTexture <span class=\"token operator\">=</span> v <span class=\"token operator\">===</span> <span class=\"token string\">\"None\"</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textures<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> originTexture<span class=\"token punctuation\">.</span>occlusionTexture<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        common<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"opacityTexture\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"None\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"origin\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textures<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          material<span class=\"token punctuation\">.</span>opacityTexture <span class=\"token operator\">=</span> v <span class=\"token operator\">===</span> <span class=\"token string\">\"None\"</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>textures<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> originTexture<span class=\"token punctuation\">.</span>opacityTexture<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        common<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">loadAnimationGUI</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">animations<span class=\"token operator\">:</span> AnimationClip<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>animationFolder<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gui<span class=\"token punctuation\">.</span><span class=\"token function\">removeFolder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>animationFolder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>animationFolder <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>animations<span class=\"token operator\">?.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>animationFolder <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gui<span class=\"token punctuation\">.</span><span class=\"token function\">addFolder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Animation\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>animationFolder<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> animator <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gltfRootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>Animation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      animator<span class=\"token punctuation\">.</span><span class=\"token function\">playAnimationClip</span><span class=\"token punctuation\">(</span>animations<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        animation<span class=\"token operator\">:</span> animations<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>animationFolder\n        <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"animation\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"None\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>animations<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">animation</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> animation<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>name <span class=\"token operator\">===</span> <span class=\"token string\">\"None\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            animator<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            animator<span class=\"token punctuation\">.</span><span class=\"token function\">playAnimationClip</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Oasis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\", \"@oasis-engine/lottie\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"), require(\"@oasis-engine/lottie\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine, global[\"engine-lottie\"]);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine, _lottie) {\n  \"use strict\";\n\n  /**\n   * @title Lottie 3D Rotation\n   * @category 2D\n   */\n  // Create engine object\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // Create camera\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 0, 5);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl);\n  engine.resourceManager.load({\n    urls: ['https://gw.alipayobjects.com/os/bmw-prod/b0019edb-1a08-4f22-8071-74b9d4eb22bf.json', 'https://gw.alipayobjects.com/os/bmw-prod/39d48a7c-0a55-4e61-9f67-952f0bab02b4.json', 'https://gw.alipayobjects.com/mdn/rms_d27172/afts/img/A*XfdwTLGz-psAAAAAAAAAAAAAARQnAQ'],\n    type: \"lottie\"\n  }).then(function (lottieEntity) {\n    rootEntity.addChild(lottieEntity);\n    var lottie = lottieEntity.getComponent(_lottie.LottieAnimation);\n    lottieEntity.transform.setScale(0.5, 0.5, 1);\n    lottie.isLooping = true;\n    lottie.play();\n  });\n  engine.run();\n});"},"name":"lottie-3d-rotation","title":"Lottie 3D Rotation","category":"2D","id":"b7eb712e-d623-5788-a1d8-37dba9f41410","sourceCode":"/**\n * @title Lottie 3D Rotation\n * @category 2D\n */\n import { OrbitControl } from \"@oasis-engine/controls\";\n import { Camera, Entity, WebGLEngine } from \"oasis-engine\";\n import { LottieAnimation } from \"@oasis-engine/lottie\";\n \n // Create engine object\n const engine = new WebGLEngine(\"canvas\");\n engine.canvas.resizeByClientSize();\n \n const scene = engine.sceneManager.activeScene;\n const rootEntity = scene.createRootEntity();\n \n // Create camera\n const cameraEntity = rootEntity.createChild(\"Camera\");\n cameraEntity.transform.setPosition(0, 0, 5);\n cameraEntity.addComponent(Camera);\n cameraEntity.addComponent(OrbitControl);\n \n engine.resourceManager\n   .load<Entity>({\n     urls: [\n      'https://gw.alipayobjects.com/os/bmw-prod/b0019edb-1a08-4f22-8071-74b9d4eb22bf.json',\n      'https://gw.alipayobjects.com/os/bmw-prod/39d48a7c-0a55-4e61-9f67-952f0bab02b4.json',\n      'https://gw.alipayobjects.com/mdn/rms_d27172/afts/img/A*XfdwTLGz-psAAAAAAAAAAAAAARQnAQ'\n     ],\n     type: \"lottie\"\n   })\n   .then((lottieEntity) => {\n     rootEntity.addChild(lottieEntity);\n     const lottie = lottieEntity.getComponent(LottieAnimation);\n     lottieEntity.transform.setScale(0.5, 0.5, 1);\n     lottie.isLooping = true;\n     lottie.play();\n   });\n \n engine.run();","formatedCode":"<span class=\"token comment\">/**\n * @title Lottie 3D Rotation\n * @category 2D\n */</span>\n <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Camera<span class=\"token punctuation\">,</span> Entity<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> LottieAnimation <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/lottie\"</span><span class=\"token punctuation\">;</span>\n \n <span class=\"token comment\">// Create engine object</span>\n <span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n engine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n <span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n <span class=\"token comment\">// Create camera</span>\n <span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n cameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n engine<span class=\"token punctuation\">.</span>resourceManager\n   <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Entity<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n     urls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">'https://gw.alipayobjects.com/os/bmw-prod/b0019edb-1a08-4f22-8071-74b9d4eb22bf.json'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'https://gw.alipayobjects.com/os/bmw-prod/39d48a7c-0a55-4e61-9f67-952f0bab02b4.json'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'https://gw.alipayobjects.com/mdn/rms_d27172/afts/img/A*XfdwTLGz-psAAAAAAAAAAAAAARQnAQ'</span>\n     <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n     type<span class=\"token operator\">:</span> <span class=\"token string\">\"lottie\"</span>\n   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">lottieEntity</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n     rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>lottieEntity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">const</span> lottie <span class=\"token operator\">=</span> lottieEntity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>LottieAnimation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     lottieEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     lottie<span class=\"token punctuation\">.</span>isLooping <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n     lottie<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title Particle Renderer\n   * @category Particle\n   */\n  // import { OrbitControl } from \"@oasis-engine/controls\";\n  //-- create engine object\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); //-- create camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_entity\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 0, 50);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  engine.run();\n  var particleEntity = rootEntity.createChild(\"particle\");\n  var particles = particleEntity.addComponent(_oasisEngine.ParticleRenderer);\n  engine.resourceManager.load({\n    url: \"https://gw.alipayobjects.com/mdn/rms_d27172/afts/img/A*kxloQYq2YDEAAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }).then(function (resource) {\n    particles.maxCount = 100;\n    particles.startTimeRandomness = 10;\n    particles.lifetime = 4;\n    particles.position = new _oasisEngine.Vector3(0, 20, 0);\n    particles.positionRandomness = new _oasisEngine.Vector3(100, 0, 0);\n    particles.velocity = new _oasisEngine.Vector3(0, -3, 0);\n    particles.velocityRandomness = new _oasisEngine.Vector3(1, 2, 0);\n    particles.accelerationRandomness = new _oasisEngine.Vector3(0, 1, 0);\n    particles.velocityRandomness = new _oasisEngine.Vector3(-1, -1, -1);\n    particles.rotateVelocity = 1;\n    particles.rotateVelocityRandomness = 1;\n    particles.size = 1;\n    particles.sizeRandomness = 0.8;\n    particles.color = new _oasisEngine.Color(0.5, 0.5, 0.5);\n    particles.colorRandomness = 1;\n    particles.isFadeIn = true;\n    particles.isFadeOut = true;\n    particles.texture = resource;\n    particles.start();\n  });\n});"},"name":"particle-renderer","title":"Particle Renderer","category":"Particle","id":"dd4d12c2-d951-5240-87e7-c59e106364bc","sourceCode":"/**\n * @title Particle Renderer\n * @category Particle\n */\n// import { OrbitControl } from \"@oasis-engine/controls\";\nimport { AssetType, Camera, Color, ParticleRenderer, Texture2D, Vector3, WebGLEngine } from \"oasis-engine\";\n\n//-- create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n//-- create camera\nconst cameraEntity = rootEntity.createChild(\"camera_entity\");\ncameraEntity.transform.position = new Vector3(0, 0, 50);\ncameraEntity.addComponent(Camera);\n\nengine.run();\n\nconst particleEntity = rootEntity.createChild(\"particle\");\n\nlet particles: ParticleRenderer = particleEntity.addComponent(ParticleRenderer);\n\nengine.resourceManager\n  .load<Texture2D>({\n    url: \"https://gw.alipayobjects.com/mdn/rms_d27172/afts/img/A*kxloQYq2YDEAAAAAAAAAAAAAARQnAQ\",\n    type: AssetType.Texture2D\n  })\n  .then((resource) => {\n    particles.maxCount = 100;\n    particles.startTimeRandomness = 10;\n    particles.lifetime = 4;\n    particles.position = new Vector3(0, 20, 0);\n    particles.positionRandomness = new Vector3(100, 0, 0);\n    particles.velocity = new Vector3(0, -3, 0);\n    particles.velocityRandomness = new Vector3(1, 2, 0);\n    particles.accelerationRandomness = new Vector3(0, 1, 0);\n    particles.velocityRandomness = new Vector3(-1, -1, -1);\n    particles.rotateVelocity = 1;\n    particles.rotateVelocityRandomness = 1;\n    particles.size = 1;\n    particles.sizeRandomness = 0.8;\n    particles.color = new Color(0.5, 0.5, 0.5);\n    particles.colorRandomness = 1;\n    particles.isFadeIn = true;\n    particles.isFadeOut = true;\n    particles.texture = resource;\n    particles.start();\n  });\n","formatedCode":"<span class=\"token comment\">/**\n * @title Particle Renderer\n * @category Particle\n */</span>\n<span class=\"token comment\">// import { OrbitControl } from \"@oasis-engine/controls\";</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AssetType<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> Color<span class=\"token punctuation\">,</span> ParticleRenderer<span class=\"token punctuation\">,</span> Texture2D<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_entity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> particleEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"particle\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> particles<span class=\"token operator\">:</span> ParticleRenderer <span class=\"token operator\">=</span> particleEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>ParticleRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_d27172/afts/img/A*kxloQYq2YDEAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resource</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    particles<span class=\"token punctuation\">.</span>maxCount <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>startTimeRandomness <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>lifetime <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>positionRandomness <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>velocity <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>velocityRandomness <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>accelerationRandomness <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>velocityRandomness <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>rotateVelocity <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>rotateVelocityRandomness <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>sizeRandomness <span class=\"token operator\">=</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>colorRandomness <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>isFadeIn <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>isFadeOut <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>texture <span class=\"token operator\">=</span> resource<span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine) {\n  \"use strict\";\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  init();\n\n  function init() {\n    // Create engine\n    var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n    engine.canvas.resizeByClientSize(); // Create root entity\n\n    var rootEntity = engine.sceneManager.activeScene.createRootEntity(); // Create camera\n\n    var cameraEntity = rootEntity.createChild(\"Camera\");\n    cameraEntity.transform.setPosition(0, 10, 10);\n    cameraEntity.transform.lookAt(new _oasisEngine.Vector3(0, 8, 0));\n    var camera = cameraEntity.addComponent(_oasisEngine.Camera);\n    camera.farClipPlane = 2000;\n    camera.fieldOfView = 55;\n    createPlane(engine, rootEntity);\n    engine.run();\n  }\n  /**\n   * Create a plane as a child of entity.\n   */\n\n\n  function createPlane(engine, entity) {\n    engine.resourceManager.load({\n      url: \"https://gw.alipayobjects.com/mdn/rms_2e421e/afts/img/A*fRtNTKrsq3YAAAAAAAAAAAAAARQnAQ\",\n      type: _oasisEngine.AssetType.Texture2D\n    }).then(function (texture) {\n      var planeEntity = entity.createChild(\"plane\");\n      var meshRenderer = planeEntity.addComponent(_oasisEngine.MeshRenderer);\n      var material = new _oasisEngine.Material(engine, shader);\n      planeEntity.transform.setRotation(-90, 0, 0);\n      meshRenderer.mesh = _oasisEngine.PrimitiveMesh.createPlane(engine, 1245, 1245, 100, 100, false);\n      meshRenderer.setMaterial(material);\n      planeEntity.addComponent(PlaneAnimation);\n      var shaderData = material.shaderData;\n      shaderData.setTexture(\"u_baseColor\", texture);\n      shaderData.setColor(\"u_fogColor\", new _oasisEngine.Color(0.25, 0.25, 0.25, 1));\n      shaderData.setFloat(\"u_fogDensity\", 0.004);\n      shaderData.setColor(\"u_color\", new _oasisEngine.Color(86 / 255, 182 / 255, 194 / 255, 1));\n    });\n  }\n  /**\n   * Plane animation script.\n   */\n\n\n  var PlaneAnimation = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(PlaneAnimation, _Script);\n\n    function PlaneAnimation() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _Script.call.apply(_Script, [this].concat(args)) || this;\n      _this._planeMesh = void 0;\n      _this._initZ = void 0;\n      _this._counter = 0;\n      return _this;\n    }\n\n    var _proto = PlaneAnimation.prototype;\n\n    /**\n     * @override\n     * Called when be enabled first time, only once.\n     */\n    _proto.onAwake = function onAwake() {\n      var renderer = this.entity.getComponent(_oasisEngine.MeshRenderer);\n      var mesh = renderer.mesh;\n      var vertexCount = mesh.vertexCount;\n      var positions = mesh.getPositions();\n      var initZ = new Array(vertexCount);\n\n      for (var i = 0; i < vertexCount; i++) {\n        var position = positions[i];\n        position.z += Math.random() * 10 - 10;\n        initZ[i] = position.z;\n      }\n\n      this._initZ = initZ;\n      this._planeMesh = mesh;\n    }\n    /**\n     * @override\n     * The main loop, called frame by frame.\n     * @param deltaTime - The deltaTime when the script update.\n     */\n    ;\n\n    _proto.onUpdate = function onUpdate(deltaTime) {\n      var mesh = this._planeMesh;\n      var counter = this._counter,\n          initZ = this._initZ;\n      var positions = mesh.getPositions();\n\n      for (var i = 0, n = positions.length; i < n; i++) {\n        var position = positions[i];\n        position.z = Math.sin(i + counter * 0.00002) * (initZ[i] - initZ[i] * 0.6);\n        counter += 0.1;\n      }\n\n      mesh.setPositions(positions);\n      mesh.uploadData(false);\n      this._counter = counter;\n    };\n\n    return PlaneAnimation;\n  }(_oasisEngine.Script);\n\n  var shader = _oasisEngine.Shader.create(\"test-plane\", \"uniform mat4 u_MVPMat;\\n    attribute vec4 POSITION;\\n    attribute vec2 TEXCOORD_0;\\n    \\n    uniform mat4 u_MVMat;\\n    \\n    varying vec2 v_uv;\\n    varying vec3 v_position;\\n    \\n    void main() {\\n      v_uv = TEXCOORD_0;\\n      v_position = (u_MVMat * POSITION).xyz;\\n      gl_Position = u_MVPMat * POSITION;\\n    }\", \"\\n    uniform sampler2D u_baseColor;\\n    uniform vec4 u_color;\\n    uniform vec4 u_fogColor;\\n    uniform float u_fogDensity;\\n    \\n    varying vec2 v_uv;\\n    varying vec3 v_position;\\n    \\n    void main() {\\n      vec4 color = texture2D(u_baseColor, v_uv) * u_color;\\n      float fogDistance = length(v_position);\\n      float fogAmount = 1. - exp2(-u_fogDensity * u_fogDensity * fogDistance * fogDistance * 1.442695);\\n      fogAmount = clamp(fogAmount, 0., 1.);\\n      gl_FragColor = mix(color, u_fogColor, fogAmount); \\n    }\\n    \");\n});"},"name":"model-mesh","title":"Model Mesh","category":"Mesh","id":"1477c3bc-6a05-58af-bae5-abe39cd2bb11","sourceCode":"/**\n * @title Model Mesh\n * @category Mesh\n */\nimport {\n  AssetType,\n  Camera,\n  Color,\n  Engine,\n  Entity,\n  Material,\n  MeshRenderer,\n  ModelMesh,\n  PrimitiveMesh,\n  Script,\n  Shader,\n  Texture2D,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\n\ninit();\n\nfunction init(): void {\n  // Create engine\n  const engine = new WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n\n  // Create root entity\n  const rootEntity = engine.sceneManager.activeScene.createRootEntity();\n\n  // Create camera\n  const cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 10, 10);\n  cameraEntity.transform.lookAt(new Vector3(0, 8, 0));\n  const camera = cameraEntity.addComponent(Camera);\n  camera.farClipPlane = 2000;\n  camera.fieldOfView = 55;\n\n  createPlane(engine, rootEntity);\n  engine.run();\n}\n\n/**\n * Create a plane as a child of entity.\n */\nfunction createPlane(engine: Engine, entity: Entity): void {\n  engine.resourceManager\n    .load<Texture2D>({\n      url: \"https://gw.alipayobjects.com/mdn/rms_2e421e/afts/img/A*fRtNTKrsq3YAAAAAAAAAAAAAARQnAQ\",\n      type: AssetType.Texture2D\n    })\n    .then((texture) => {\n      const planeEntity = entity.createChild(\"plane\");\n      const meshRenderer = planeEntity.addComponent(MeshRenderer);\n      const material = new Material(engine, shader);\n\n      planeEntity.transform.setRotation(-90, 0, 0);\n      meshRenderer.mesh = PrimitiveMesh.createPlane(engine, 1245, 1245, 100, 100, false);\n      meshRenderer.setMaterial(material);\n\n      planeEntity.addComponent(PlaneAnimation);\n\n      const { shaderData } = material;\n      shaderData.setTexture(\"u_baseColor\", texture);\n      shaderData.setColor(\"u_fogColor\", new Color(0.25, 0.25, 0.25, 1));\n      shaderData.setFloat(\"u_fogDensity\", 0.004);\n      shaderData.setColor(\"u_color\", new Color(86 / 255, 182 / 255, 194 / 255, 1));\n    });\n}\n\n/**\n * Plane animation script.\n */\nclass PlaneAnimation extends Script {\n  private _planeMesh: ModelMesh;\n  private _initZ: number[];\n  private _counter: number = 0;\n\n  /**\n   * @override\n   * Called when be enabled first time, only once.\n   */\n  onAwake(): void {\n    const renderer = this.entity.getComponent(MeshRenderer);\n    const mesh = <ModelMesh>renderer.mesh;\n    const { vertexCount } = mesh;\n    const positions = mesh.getPositions();\n    const initZ = new Array<number>(vertexCount);\n\n    for (var i = 0; i < vertexCount; i++) {\n      const position = positions[i];\n      position.z += Math.random() * 10 - 10;\n      initZ[i] = position.z;\n    }\n    this._initZ = initZ;\n    this._planeMesh = mesh;\n  }\n\n  /**\n   * @override\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */\n  onUpdate(deltaTime: number): void {\n    const mesh = this._planeMesh;\n    let { _counter: counter, _initZ: initZ } = this;\n    const positions = mesh.getPositions();\n    for (let i = 0, n = positions.length; i < n; i++) {\n      const position = positions[i];\n      position.z = Math.sin(i + counter * 0.00002) * (initZ[i] - initZ[i] * 0.6);\n      counter += 0.1;\n    }\n    mesh.setPositions(positions);\n    mesh.uploadData(false);\n    this._counter = counter;\n  }\n}\n\nconst shader = Shader.create(\n  \"test-plane\",\n  `uniform mat4 u_MVPMat;\n    attribute vec4 POSITION;\n    attribute vec2 TEXCOORD_0;\n    \n    uniform mat4 u_MVMat;\n    \n    varying vec2 v_uv;\n    varying vec3 v_position;\n    \n    void main() {\n      v_uv = TEXCOORD_0;\n      v_position = (u_MVMat * POSITION).xyz;\n      gl_Position = u_MVPMat * POSITION;\n    }`,\n\n  `\n    uniform sampler2D u_baseColor;\n    uniform vec4 u_color;\n    uniform vec4 u_fogColor;\n    uniform float u_fogDensity;\n    \n    varying vec2 v_uv;\n    varying vec3 v_position;\n    \n    void main() {\n      vec4 color = texture2D(u_baseColor, v_uv) * u_color;\n      float fogDistance = length(v_position);\n      float fogAmount = 1. - exp2(-u_fogDensity * u_fogDensity * fogDistance * fogDistance * 1.442695);\n      fogAmount = clamp(fogAmount, 0., 1.);\n      gl_FragColor = mix(color, u_fogColor, fogAmount); \n    }\n    `\n);\n","formatedCode":"<span class=\"token comment\">/**\n * @title Model Mesh\n * @category Mesh\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  Color<span class=\"token punctuation\">,</span>\n  Engine<span class=\"token punctuation\">,</span>\n  Entity<span class=\"token punctuation\">,</span>\n  Material<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  ModelMesh<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  Script<span class=\"token punctuation\">,</span>\n  Shader<span class=\"token punctuation\">,</span>\n  Texture2D<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Create engine</span>\n  <span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  engine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create root entity</span>\n  <span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create camera</span>\n  <span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> camera <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  camera<span class=\"token punctuation\">.</span>farClipPlane <span class=\"token operator\">=</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">;</span>\n  camera<span class=\"token punctuation\">.</span>fieldOfView <span class=\"token operator\">=</span> <span class=\"token number\">55</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">createPlane</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> rootEntity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * Create a plane as a child of entity.\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">createPlane</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">engine<span class=\"token operator\">:</span> Engine<span class=\"token punctuation\">,</span> entity<span class=\"token operator\">:</span> Entity</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  engine<span class=\"token punctuation\">.</span>resourceManager\n    <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_2e421e/afts/img/A*fRtNTKrsq3YAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> planeEntity <span class=\"token operator\">=</span> entity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"plane\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> meshRenderer <span class=\"token operator\">=</span> planeEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Material</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> shader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      planeEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setRotation</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      meshRenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createPlane</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">1245</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1245</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      meshRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      planeEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>PlaneAnimation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> shaderData <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> material<span class=\"token punctuation\">;</span>\n      shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setTexture</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_baseColor\"</span><span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_fogColor\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_fogDensity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.004</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_color\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">86</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">182</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">194</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * Plane animation script.\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">PlaneAnimation</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> _planeMesh<span class=\"token operator\">:</span> ModelMesh<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> _initZ<span class=\"token operator\">:</span> number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> _counter<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/**\n   * @override\n   * Called when be enabled first time, only once.\n   */</span>\n  <span class=\"token function\">onAwake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> renderer <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> mesh <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span>ModelMesh<span class=\"token operator\">></span>renderer<span class=\"token punctuation\">.</span>mesh<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> vertexCount <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> mesh<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> positions <span class=\"token operator\">=</span> mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getPositions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> initZ <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token operator\">&lt;</span>number<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>vertexCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> vertexCount<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> position <span class=\"token operator\">=</span> positions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      position<span class=\"token punctuation\">.</span>z <span class=\"token operator\">+=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">-</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n      initZ<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> position<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_initZ <span class=\"token operator\">=</span> initZ<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_planeMesh <span class=\"token operator\">=</span> mesh<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/**\n   * @override\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */</span>\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span>deltaTime<span class=\"token operator\">:</span> number<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> mesh <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_planeMesh<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> <span class=\"token punctuation\">{</span> _counter<span class=\"token operator\">:</span> counter<span class=\"token punctuation\">,</span> _initZ<span class=\"token operator\">:</span> initZ <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> positions <span class=\"token operator\">=</span> mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getPositions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> n <span class=\"token operator\">=</span> positions<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> position <span class=\"token operator\">=</span> positions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      position<span class=\"token punctuation\">.</span>z <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> counter <span class=\"token operator\">*</span> <span class=\"token number\">0.00002</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>initZ<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> initZ<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      counter <span class=\"token operator\">+=</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    mesh<span class=\"token punctuation\">.</span><span class=\"token function\">setPositions</span><span class=\"token punctuation\">(</span>positions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    mesh<span class=\"token punctuation\">.</span><span class=\"token function\">uploadData</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_counter <span class=\"token operator\">=</span> counter<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> shader <span class=\"token operator\">=</span> Shader<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"test-plane\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">uniform mat4 u_MVPMat;\n    attribute vec4 POSITION;\n    attribute vec2 TEXCOORD_0;\n    \n    uniform mat4 u_MVMat;\n    \n    varying vec2 v_uv;\n    varying vec3 v_position;\n    \n    void main() {\n      v_uv = TEXCOORD_0;\n      v_position = (u_MVMat * POSITION).xyz;\n      gl_Position = u_MVPMat * POSITION;\n    }</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n    uniform sampler2D u_baseColor;\n    uniform vec4 u_color;\n    uniform vec4 u_fogColor;\n    uniform float u_fogDensity;\n    \n    varying vec2 v_uv;\n    varying vec3 v_position;\n    \n    void main() {\n      vec4 color = texture2D(u_baseColor, v_uv) * u_color;\n      float fogDistance = length(v_position);\n      float fogAmount = 1. - exp2(-u_fogDensity * u_fogDensity * fogDistance * fogDistance * 1.442695);\n      fogAmount = clamp(fogAmount, 0., 1.);\n      gl_FragColor = mix(color, u_fogColor, fogAmount); \n    }\n    </span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title Ortho Controls\n   * @category Camera\n   */\n  // Create engine object\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // Create camera\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 0, 50);\n  var camera = cameraEntity.addComponent(_oasisEngine.Camera);\n  camera.isOrthographic = true; // Add camera control.\n\n  var cameraControl = cameraEntity.addComponent(_controls.OrthoControl);\n  var mainElement = engine.canvas._webCanvas;\n  mainElement.addEventListener(\"wheel\", function (e) {\n    // @ts-ignore\n    if (e.deltaY < 0) {\n      cameraControl.zoomIn();\n    } else {\n      cameraControl.zoomOut();\n    }\n  }, false);\n  mainElement.addEventListener(\"mousedown\", function (e) {\n    // @ts-ignore\n    cameraControl.panStart(e.clientX, e.clientY);\n  });\n  mainElement.addEventListener(\"mousemove\", function (e) {\n    // @ts-ignore\n    cameraControl.panMove(e.clientX, e.clientY);\n  });\n  mainElement.addEventListener(\"mouseup\", function (e) {\n    // @ts-ignore\n    cameraControl.panEnd();\n  });\n  engine.resourceManager.load({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*KjnzTpE8LdAAAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }).then(function (texture) {\n    // Create sprite entity.\n    var spriteEntity = rootEntity.createChild(\"sprite\");\n    var spriteRenderer = spriteEntity.addComponent(_oasisEngine.SpriteRenderer);\n    spriteRenderer.sprite = new _oasisEngine.Sprite(engine, texture);\n  });\n  engine.run();\n});"},"name":"ortho-control","title":"Ortho Controls","category":"Camera","id":"e25950bb-995f-5149-b98d-3407ae30b1d9","sourceCode":"/**\n * @title Ortho Controls\n * @category Camera\n */\nimport { OrthoControl } from \"@oasis-engine/controls\";\nimport { AssetType, Camera, Sprite, SpriteRenderer, Texture2D, WebGLEngine } from \"oasis-engine\";\n\n// Create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// Create camera\nconst cameraEntity = rootEntity.createChild(\"Camera\");\ncameraEntity.transform.setPosition(0, 0, 50);\nconst camera = cameraEntity.addComponent(Camera);\ncamera.isOrthographic = true;\n\n// Add camera control.\nconst cameraControl = cameraEntity.addComponent(OrthoControl);\nconst mainElement = engine.canvas._webCanvas;\nmainElement.addEventListener(\n  \"wheel\",\n  (e) => {\n    // @ts-ignore\n    if (e.deltaY < 0) {\n      cameraControl.zoomIn();\n    } else {\n      cameraControl.zoomOut();\n    }\n  },\n  false\n);\nmainElement.addEventListener(\"mousedown\", (e) => {\n  // @ts-ignore\n  cameraControl.panStart(e.clientX, e.clientY);\n});\nmainElement.addEventListener(\"mousemove\", (e) => {\n  // @ts-ignore\n  cameraControl.panMove(e.clientX, e.clientY);\n});\nmainElement.addEventListener(\"mouseup\", (e) => {\n  // @ts-ignore\n  cameraControl.panEnd();\n});\n\nengine.resourceManager\n  .load<Texture2D>({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*KjnzTpE8LdAAAAAAAAAAAAAAARQnAQ\",\n    type: AssetType.Texture2D\n  })\n  .then((texture) => {\n    // Create sprite entity.\n    const spriteEntity = rootEntity.createChild(\"sprite\");\n    const spriteRenderer = spriteEntity.addComponent(SpriteRenderer);\n    spriteRenderer.sprite = new Sprite(engine, texture);\n  });\n\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Ortho Controls\n * @category Camera\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrthoControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AssetType<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> Sprite<span class=\"token punctuation\">,</span> SpriteRenderer<span class=\"token punctuation\">,</span> Texture2D<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> camera <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncamera<span class=\"token punctuation\">.</span>isOrthographic <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Add camera control.</span>\n<span class=\"token keyword\">const</span> cameraControl <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrthoControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> mainElement <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span>_webCanvas<span class=\"token punctuation\">;</span>\nmainElement<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"wheel\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// @ts-ignore</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>deltaY <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      cameraControl<span class=\"token punctuation\">.</span><span class=\"token function\">zoomIn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      cameraControl<span class=\"token punctuation\">.</span><span class=\"token function\">zoomOut</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmainElement<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousedown\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// @ts-ignore</span>\n  cameraControl<span class=\"token punctuation\">.</span><span class=\"token function\">panStart</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>clientX<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>clientY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmainElement<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mousemove\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// @ts-ignore</span>\n  cameraControl<span class=\"token punctuation\">.</span><span class=\"token function\">panMove</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>clientX<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>clientY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmainElement<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mouseup\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// @ts-ignore</span>\n  cameraControl<span class=\"token punctuation\">.</span><span class=\"token function\">panEnd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*KjnzTpE8LdAAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Create sprite entity.</span>\n    <span class=\"token keyword\">const</span> spriteEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sprite\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> spriteRenderer <span class=\"token operator\">=</span> spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    spriteRenderer<span class=\"token punctuation\">.</span>sprite <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title OBJ Loader Use Model Mesh\n   * @category Mesh\n   */\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // init camera\n\n  var cameraEntity = rootEntity.createChild(\"camera\");\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl);\n  cameraEntity.transform.setPosition(0.5, 0.5, 0.5);\n  cameraEntity.transform.lookAt(new _oasisEngine.Vector3(0, 0, 0)); // init light\n\n  rootEntity.addComponent(_oasisEngine.DirectLight);\n  fetch(\"https://gw.alipayobjects.com/os/bmw-prod/b885a803-5315-44f0-af54-6787ec47ed1b.obj\").then(function (res) {\n    return res.text();\n  }).then(function (objText) {\n    var lines = objText.split(/\\n/);\n    var positions = [];\n    var indices = [];\n    lines.map(function (lineText) {\n      return lineText.split(\" \");\n    }).forEach(function (parseTexts) {\n      if (parseTexts[0] === \"v\") {\n        positions.push(new _oasisEngine.Vector3(parseFloat(parseTexts[1]), parseFloat(parseTexts[2]), parseFloat(parseTexts[3])));\n      } else if (parseTexts[0] === \"f\") {\n        indices.push(parseInt(parseTexts[1]) - 1, parseInt(parseTexts[2]) - 1, parseInt(parseTexts[3]) - 1);\n      }\n    });\n    var mesh = new _oasisEngine.ModelMesh(engine);\n    mesh.setPositions(positions);\n    mesh.setIndices(Uint16Array.from(indices));\n    mesh.addSubMesh(0, indices.length, _oasisEngine.MeshTopology.Triangles);\n    mesh.uploadData(false); // init cube\n\n    var cubeEntity = rootEntity.createChild(\"cube\");\n    var renderer = cubeEntity.addComponent(_oasisEngine.MeshRenderer);\n    renderer.mesh = mesh;\n    var material = new _oasisEngine.BlinnPhongMaterial(engine);\n    material.baseColor = new _oasisEngine.Color(1, 0.25, 0.25, 1);\n    renderer.setMaterial(material);\n  });\n  engine.run();\n});"},"name":"obj-loader","title":"OBJ Loader Use Model Mesh","category":"Mesh","id":"a44bf202-1546-5e99-8895-98d5d49b7ec5","sourceCode":"/**\n * @title OBJ Loader Use Model Mesh\n * @category Mesh\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport {\n  BlinnPhongMaterial,\n  Camera,\n  Color,\n  DirectLight,\n  MeshRenderer,\n  MeshTopology,\n  ModelMesh,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\n\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// init camera\nconst cameraEntity = rootEntity.createChild(\"camera\");\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\ncameraEntity.transform.setPosition(0.5, 0.5, 0.5);\ncameraEntity.transform.lookAt(new Vector3(0, 0, 0));\n\n// init light\nrootEntity.addComponent(DirectLight);\n\nfetch(\"https://gw.alipayobjects.com/os/bmw-prod/b885a803-5315-44f0-af54-6787ec47ed1b.obj\")\n  .then((res) => res.text())\n  .then((objText) => {\n    const lines = objText.split(/\\n/);\n    const positions = [];\n    const indices: number[] = [];\n    lines\n      .map((lineText) => lineText.split(\" \"))\n      .forEach((parseTexts) => {\n        if (parseTexts[0] === \"v\") {\n          positions.push(new Vector3(parseFloat(parseTexts[1]), parseFloat(parseTexts[2]), parseFloat(parseTexts[3])));\n        } else if (parseTexts[0] === \"f\") {\n          indices.push(parseInt(parseTexts[1]) - 1, parseInt(parseTexts[2]) - 1, parseInt(parseTexts[3]) - 1);\n        }\n      });\n\n    const mesh = new ModelMesh(engine);\n    mesh.setPositions(positions);\n    mesh.setIndices(Uint16Array.from(indices));\n    mesh.addSubMesh(0, indices.length, MeshTopology.Triangles);\n    mesh.uploadData(false);\n\n    // init cube\n    const cubeEntity = rootEntity.createChild(\"cube\");\n    const renderer = cubeEntity.addComponent(MeshRenderer);\n    renderer.mesh = mesh;\n    const material = new BlinnPhongMaterial(engine);\n    material.baseColor = new Color(1, 0.25, 0.25, 1);\n    renderer.setMaterial(material);\n  });\n\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title OBJ Loader Use Model Mesh\n * @category Mesh\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  BlinnPhongMaterial<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  Color<span class=\"token punctuation\">,</span>\n  DirectLight<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  MeshTopology<span class=\"token punctuation\">,</span>\n  ModelMesh<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// init camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// init light</span>\nrootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/b885a803-5315-44f0-af54-6787ec47ed1b.obj\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> res<span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">objText</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> lines <span class=\"token operator\">=</span> objText<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\n</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> positions <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> indices<span class=\"token operator\">:</span> number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    lines\n      <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">lineText</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> lineText<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">parseTexts</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>parseTexts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"v\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          positions<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>parseTexts<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>parseTexts<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>parseTexts<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>parseTexts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string\">\"f\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          indices<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>parseTexts<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>parseTexts<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>parseTexts<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> mesh <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ModelMesh</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    mesh<span class=\"token punctuation\">.</span><span class=\"token function\">setPositions</span><span class=\"token punctuation\">(</span>positions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    mesh<span class=\"token punctuation\">.</span><span class=\"token function\">setIndices</span><span class=\"token punctuation\">(</span>Uint16Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>indices<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    mesh<span class=\"token punctuation\">.</span><span class=\"token function\">addSubMesh</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> indices<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> MeshTopology<span class=\"token punctuation\">.</span>Triangles<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    mesh<span class=\"token punctuation\">.</span><span class=\"token function\">uploadData</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// init cube</span>\n    <span class=\"token keyword\">const</span> cubeEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cube\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> renderer <span class=\"token operator\">=</span> cubeEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    renderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> mesh<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    material<span class=\"token punctuation\">.</span>baseColor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    renderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title Particle Sprite Sheet\n   * @category Particle\n   */\n  //-- create engine object\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); //-- create camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_entity\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 0, 50);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  var controls = cameraEntity.addComponent(_controls.OrbitControl);\n  controls.autoRotate = true;\n  controls.autoRotateSpeed = Math.PI / 5;\n  engine.run();\n  var particleEntity = rootEntity.createChild(\"particle\");\n  var particles = particleEntity.addComponent(_oasisEngine.ParticleRenderer);\n  var spriteSheet = [{\n    x: 0,\n    y: 0,\n    w: 100,\n    h: 95,\n    offX: 0,\n    offY: 0,\n    sourceW: 100,\n    sourceH: 95\n  }, {\n    x: 100,\n    y: 0,\n    w: 48,\n    h: 46,\n    offX: 0,\n    offY: 0,\n    sourceW: 48,\n    sourceH: 46\n  }, {\n    x: 148,\n    y: 0,\n    w: 97,\n    h: 90,\n    offX: 0,\n    offY: 0,\n    sourceW: 97,\n    sourceH: 90\n  }, {\n    x: 245,\n    y: 0,\n    w: 148,\n    h: 128,\n    offX: 0,\n    offY: 0,\n    sourceW: 148,\n    sourceH: 128\n  }, {\n    x: 393,\n    y: 0,\n    w: 118,\n    h: 249,\n    offX: 0,\n    offY: 0,\n    sourceW: 118,\n    sourceH: 249\n  }, {\n    x: 100,\n    y: 90,\n    w: 124,\n    h: 94,\n    offX: 0,\n    offY: 0,\n    sourceW: 124,\n    sourceH: 94\n  }, {\n    x: 0,\n    y: 184,\n    w: 249,\n    h: 185,\n    offX: 0,\n    offY: 0,\n    sourceW: 249,\n    sourceH: 185\n  }, {\n    x: 0,\n    y: 95,\n    w: 86,\n    h: 83,\n    offX: 0,\n    offY: 0,\n    sourceW: 86,\n    sourceH: 83\n  }];\n  engine.resourceManager.load({\n    url: \"https://gw.alipayobjects.com/mdn/rms_d27172/afts/img/A*_oorR5SrpXcAAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }).then(function (resource) {\n    particles.maxCount = 400;\n    particles.startTimeRandomness = 5;\n    particles.position = new _oasisEngine.Vector3(0, -10, 0);\n    particles.velocity = new _oasisEngine.Vector3(0, 20, 0);\n    particles.velocityRandomness = new _oasisEngine.Vector3(10, 2, 10);\n    particles.acceleration = new _oasisEngine.Vector3(0, -10, 0);\n    particles.accelerationRandomness = new _oasisEngine.Vector3(2, 4, 5);\n    particles.rotateVelocity = 1;\n    particles.rotateVelocityRandomness = 1;\n    particles.size = 1;\n    particles.sizeRandomness = 1;\n    particles.color = new _oasisEngine.Color(0.5, 0.5, 0.5);\n    particles.colorRandomness = 1;\n    particles.isFadeIn = true;\n    particles.isFadeOut = true;\n    particles.texture = resource;\n    particles.spriteSheet = spriteSheet;\n    particles.blendMode = _oasisEngine.ParticleRendererBlendMode.Additive;\n    particles.start();\n  });\n});"},"name":"particle-sprite-sheet","title":"Particle Sprite Sheet","category":"Particle","id":"d4628d7f-18c9-53fe-bf55-bd662da8202f","sourceCode":"/**\n * @title Particle Sprite Sheet\n * @category Particle\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport {\n  AssetType,\n  Camera,\n  Color,\n  ParticleRenderer,\n  ParticleRendererBlendMode,\n  Texture2D,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\n\n//-- create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n//-- create camera\nconst cameraEntity = rootEntity.createChild(\"camera_entity\");\ncameraEntity.transform.position = new Vector3(0, 0, 50);\ncameraEntity.addComponent(Camera);\nconst controls = cameraEntity.addComponent(OrbitControl);\ncontrols.autoRotate = true;\ncontrols.autoRotateSpeed = Math.PI / 5;\n\nengine.run();\n\nconst particleEntity = rootEntity.createChild(\"particle\");\n\nlet particles: ParticleRenderer = particleEntity.addComponent(ParticleRenderer);\n\nconst spriteSheet = [\n  {\n    x: 0,\n    y: 0,\n    w: 100,\n    h: 95,\n    offX: 0,\n    offY: 0,\n    sourceW: 100,\n    sourceH: 95\n  },\n  {\n    x: 100,\n    y: 0,\n    w: 48,\n    h: 46,\n    offX: 0,\n    offY: 0,\n    sourceW: 48,\n    sourceH: 46\n  },\n  {\n    x: 148,\n    y: 0,\n    w: 97,\n    h: 90,\n    offX: 0,\n    offY: 0,\n    sourceW: 97,\n    sourceH: 90\n  },\n  {\n    x: 245,\n    y: 0,\n    w: 148,\n    h: 128,\n    offX: 0,\n    offY: 0,\n    sourceW: 148,\n    sourceH: 128\n  },\n  {\n    x: 393,\n    y: 0,\n    w: 118,\n    h: 249,\n    offX: 0,\n    offY: 0,\n    sourceW: 118,\n    sourceH: 249\n  },\n  {\n    x: 100,\n    y: 90,\n    w: 124,\n    h: 94,\n    offX: 0,\n    offY: 0,\n    sourceW: 124,\n    sourceH: 94\n  },\n  {\n    x: 0,\n    y: 184,\n    w: 249,\n    h: 185,\n    offX: 0,\n    offY: 0,\n    sourceW: 249,\n    sourceH: 185\n  },\n  {\n    x: 0,\n    y: 95,\n    w: 86,\n    h: 83,\n    offX: 0,\n    offY: 0,\n    sourceW: 86,\n    sourceH: 83\n  }\n];\n\nengine.resourceManager\n  .load<Texture2D>({\n    url: \"https://gw.alipayobjects.com/mdn/rms_d27172/afts/img/A*_oorR5SrpXcAAAAAAAAAAAAAARQnAQ\",\n    type: AssetType.Texture2D\n  })\n  .then((resource) => {\n    particles.maxCount = 400;\n    particles.startTimeRandomness = 5;\n    particles.position = new Vector3(0, -10, 0);\n    particles.velocity = new Vector3(0, 20, 0);\n    particles.velocityRandomness = new Vector3(10, 2, 10);\n    particles.acceleration = new Vector3(0, -10, 0);\n    particles.accelerationRandomness = new Vector3(2, 4, 5);\n    particles.rotateVelocity = 1;\n    particles.rotateVelocityRandomness = 1;\n    particles.size = 1;\n    particles.sizeRandomness = 1;\n    particles.color = new Color(0.5, 0.5, 0.5);\n    particles.colorRandomness = 1;\n    particles.isFadeIn = true;\n    particles.isFadeOut = true;\n    particles.texture = resource;\n    particles.spriteSheet = spriteSheet;\n    particles.blendMode = ParticleRendererBlendMode.Additive;\n    particles.start();\n  });\n","formatedCode":"<span class=\"token comment\">/**\n * @title Particle Sprite Sheet\n * @category Particle\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  Color<span class=\"token punctuation\">,</span>\n  ParticleRenderer<span class=\"token punctuation\">,</span>\n  ParticleRendererBlendMode<span class=\"token punctuation\">,</span>\n  Texture2D<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_entity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> controls <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncontrols<span class=\"token punctuation\">.</span>autoRotate <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\ncontrols<span class=\"token punctuation\">.</span>autoRotateSpeed <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span> <span class=\"token operator\">/</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> particleEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"particle\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> particles<span class=\"token operator\">:</span> ParticleRenderer <span class=\"token operator\">=</span> particleEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>ParticleRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> spriteSheet <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    x<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    y<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    w<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n    h<span class=\"token operator\">:</span> <span class=\"token number\">95</span><span class=\"token punctuation\">,</span>\n    offX<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    offY<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    sourceW<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n    sourceH<span class=\"token operator\">:</span> <span class=\"token number\">95</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    x<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n    y<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    w<span class=\"token operator\">:</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span>\n    h<span class=\"token operator\">:</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span>\n    offX<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    offY<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    sourceW<span class=\"token operator\">:</span> <span class=\"token number\">48</span><span class=\"token punctuation\">,</span>\n    sourceH<span class=\"token operator\">:</span> <span class=\"token number\">46</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    x<span class=\"token operator\">:</span> <span class=\"token number\">148</span><span class=\"token punctuation\">,</span>\n    y<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    w<span class=\"token operator\">:</span> <span class=\"token number\">97</span><span class=\"token punctuation\">,</span>\n    h<span class=\"token operator\">:</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span>\n    offX<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    offY<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    sourceW<span class=\"token operator\">:</span> <span class=\"token number\">97</span><span class=\"token punctuation\">,</span>\n    sourceH<span class=\"token operator\">:</span> <span class=\"token number\">90</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    x<span class=\"token operator\">:</span> <span class=\"token number\">245</span><span class=\"token punctuation\">,</span>\n    y<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    w<span class=\"token operator\">:</span> <span class=\"token number\">148</span><span class=\"token punctuation\">,</span>\n    h<span class=\"token operator\">:</span> <span class=\"token number\">128</span><span class=\"token punctuation\">,</span>\n    offX<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    offY<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    sourceW<span class=\"token operator\">:</span> <span class=\"token number\">148</span><span class=\"token punctuation\">,</span>\n    sourceH<span class=\"token operator\">:</span> <span class=\"token number\">128</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    x<span class=\"token operator\">:</span> <span class=\"token number\">393</span><span class=\"token punctuation\">,</span>\n    y<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    w<span class=\"token operator\">:</span> <span class=\"token number\">118</span><span class=\"token punctuation\">,</span>\n    h<span class=\"token operator\">:</span> <span class=\"token number\">249</span><span class=\"token punctuation\">,</span>\n    offX<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    offY<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    sourceW<span class=\"token operator\">:</span> <span class=\"token number\">118</span><span class=\"token punctuation\">,</span>\n    sourceH<span class=\"token operator\">:</span> <span class=\"token number\">249</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    x<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n    y<span class=\"token operator\">:</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span>\n    w<span class=\"token operator\">:</span> <span class=\"token number\">124</span><span class=\"token punctuation\">,</span>\n    h<span class=\"token operator\">:</span> <span class=\"token number\">94</span><span class=\"token punctuation\">,</span>\n    offX<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    offY<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    sourceW<span class=\"token operator\">:</span> <span class=\"token number\">124</span><span class=\"token punctuation\">,</span>\n    sourceH<span class=\"token operator\">:</span> <span class=\"token number\">94</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    x<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    y<span class=\"token operator\">:</span> <span class=\"token number\">184</span><span class=\"token punctuation\">,</span>\n    w<span class=\"token operator\">:</span> <span class=\"token number\">249</span><span class=\"token punctuation\">,</span>\n    h<span class=\"token operator\">:</span> <span class=\"token number\">185</span><span class=\"token punctuation\">,</span>\n    offX<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    offY<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    sourceW<span class=\"token operator\">:</span> <span class=\"token number\">249</span><span class=\"token punctuation\">,</span>\n    sourceH<span class=\"token operator\">:</span> <span class=\"token number\">185</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    x<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    y<span class=\"token operator\">:</span> <span class=\"token number\">95</span><span class=\"token punctuation\">,</span>\n    w<span class=\"token operator\">:</span> <span class=\"token number\">86</span><span class=\"token punctuation\">,</span>\n    h<span class=\"token operator\">:</span> <span class=\"token number\">83</span><span class=\"token punctuation\">,</span>\n    offX<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    offY<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    sourceW<span class=\"token operator\">:</span> <span class=\"token number\">86</span><span class=\"token punctuation\">,</span>\n    sourceH<span class=\"token operator\">:</span> <span class=\"token number\">83</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_d27172/afts/img/A*_oorR5SrpXcAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resource</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    particles<span class=\"token punctuation\">.</span>maxCount <span class=\"token operator\">=</span> <span class=\"token number\">400</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>startTimeRandomness <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>velocity <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>velocityRandomness <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>acceleration <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>accelerationRandomness <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>rotateVelocity <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>rotateVelocityRandomness <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>sizeRandomness <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>colorRandomness <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>isFadeIn <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>isFadeOut <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>texture <span class=\"token operator\">=</span> resource<span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>spriteSheet <span class=\"token operator\">=</span> spriteSheet<span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span>blendMode <span class=\"token operator\">=</span> ParticleRendererBlendMode<span class=\"token punctuation\">.</span>Additive<span class=\"token punctuation\">;</span>\n    particles<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title PBR Helmet\n   * @category Material\n   */\n  //-- create engine object\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var ambientLight = scene.ambientLight,\n      background = scene.background;\n  var rootEntity = scene.createRootEntity();\n\n  var color2glColor = function color2glColor(color) {\n    return new _oasisEngine.Color(color[0] / 255, color[1] / 255, color[2] / 255);\n  };\n\n  var glColor2Color = function glColor2Color(color) {\n    return new _oasisEngine.Color(color[0] * 255, color[1] * 255, color[2] * 255);\n  };\n\n  var gui = new dat.GUI();\n  gui.domElement.style = \"position:absolute;top:0px;left:50vw\";\n  var envFolder = gui.addFolder(\"EnvironmentMapLight\");\n  envFolder.add(ambientLight, \"specularIntensity\", 0, 1);\n  envFolder.add(ambientLight, \"diffuseIntensity\", 0, 1);\n  var directLightColor = {\n    color: [255, 255, 255]\n  };\n  var directLightNode = rootEntity.createChild(\"dir_light\");\n  var directLight = directLightNode.addComponent(_oasisEngine.DirectLight);\n  directLight.color = new _oasisEngine.Color(1, 1, 1);\n  var dirFolder = gui.addFolder(\"DirectionalLight1\");\n  dirFolder.add(directLight, \"enabled\");\n  dirFolder.addColor(directLightColor, \"color\").onChange(function (v) {\n    return directLight.color = color2glColor(v);\n  });\n  dirFolder.add(directLight, \"intensity\", 0, 1); //Create camera\n\n  var cameraNode = rootEntity.createChild(\"camera_node\");\n  cameraNode.transform.position = new _oasisEngine.Vector3(0, 0, 5);\n  cameraNode.addComponent(_oasisEngine.Camera);\n  cameraNode.addComponent(_controls.OrbitControl); // Create sky\n\n  var sky = background.sky;\n  var skyMaterial = new _oasisEngine.SkyBoxMaterial(engine);\n  background.mode = _oasisEngine.BackgroundMode.Sky;\n  sky.material = skyMaterial;\n  sky.mesh = _oasisEngine.PrimitiveMesh.createCuboid(engine, 1, 1, 1);\n  Promise.all([engine.resourceManager.load(\"https://gw.alipayobjects.com/os/bmw-prod/150e44f6-7810-4c45-8029-3575d36aff30.gltf\").then(function (gltf) {\n    rootEntity.addChild(gltf.defaultSceneRoot);\n    console.log(gltf);\n  }), engine.resourceManager.load({\n    urls: [\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Bk5FQKGOir4AAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_cPhR7JMDjkAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*trqjQp1nOMQAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_RXwRqwMK3EAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*q4Q6TroyuXcAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*DP5QTbTSAYgAAAAAAAAAAAAAARQnAQ\"],\n    type: _oasisEngine.AssetType.TextureCube\n  }).then(function (cubeMap) {\n    ambientLight.diffuseMode = _oasisEngine.DiffuseMode.Texture;\n    ambientLight.diffuseTexture = cubeMap;\n  }), engine.resourceManager.load({\n    urls: [\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5w6_Rr6ML6IAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*TiT2TbN5cG4AAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*8GF6Q4LZefUAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*D5pdRqUHC3IAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_FooTIp6pNIAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*CYGZR7ogZfoAAAAAAAAAAAAAARQnAQ\"],\n    type: _oasisEngine.AssetType.TextureCube\n  }).then(function (cubeMap) {\n    ambientLight.specularTexture = cubeMap;\n    skyMaterial.textureCubeMap = cubeMap;\n  })]).then(function () {\n    engine.run();\n  });\n});"},"name":"pbr-helmet","title":"PBR Helmet","category":"Material","id":"63a71f46-98b5-55ed-bb81-43c6953e6cbe","sourceCode":"/**\n * @title PBR Helmet\n * @category Material\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\nimport {\n  AssetType,\n  BackgroundMode,\n  Camera,\n  Color,\n  DiffuseMode,\n  DirectLight,\n  GLTFResource,\n  PrimitiveMesh,\n  SkyBoxMaterial,\n  TextureCubeMap,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\n\n//-- create engine object\nlet engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nlet scene = engine.sceneManager.activeScene;\nconst { ambientLight, background } = scene;\nconst rootEntity = scene.createRootEntity();\n\nconst color2glColor = (color) => new Color(color[0] / 255, color[1] / 255, color[2] / 255);\nconst glColor2Color = (color) => new Color(color[0] * 255, color[1] * 255, color[2] * 255);\nconst gui = new dat.GUI();\ngui.domElement.style = \"position:absolute;top:0px;left:50vw\";\n\nlet envFolder = gui.addFolder(\"EnvironmentMapLight\");\nenvFolder.add(ambientLight, \"specularIntensity\", 0, 1);\nenvFolder.add(ambientLight, \"diffuseIntensity\", 0, 1);\n\nlet directLightColor = { color: [255, 255, 255] };\nlet directLightNode = rootEntity.createChild(\"dir_light\");\nlet directLight = directLightNode.addComponent(DirectLight);\ndirectLight.color = new Color(1, 1, 1);\nlet dirFolder = gui.addFolder(\"DirectionalLight1\");\ndirFolder.add(directLight, \"enabled\");\ndirFolder.addColor(directLightColor, \"color\").onChange((v) => (directLight.color = color2glColor(v)));\ndirFolder.add(directLight, \"intensity\", 0, 1);\n\n//Create camera\nlet cameraNode = rootEntity.createChild(\"camera_node\");\ncameraNode.transform.position = new Vector3(0, 0, 5);\ncameraNode.addComponent(Camera);\ncameraNode.addComponent(OrbitControl);\n\n// Create sky\nconst sky = background.sky;\nconst skyMaterial = new SkyBoxMaterial(engine);\nbackground.mode = BackgroundMode.Sky;\nsky.material = skyMaterial;\nsky.mesh = PrimitiveMesh.createCuboid(engine, 1, 1, 1);\n\nPromise.all([\n  engine.resourceManager\n    .load<GLTFResource>(\"https://gw.alipayobjects.com/os/bmw-prod/150e44f6-7810-4c45-8029-3575d36aff30.gltf\")\n    .then((gltf) => {\n      rootEntity.addChild(gltf.defaultSceneRoot);\n      console.log(gltf);\n    }),\n  engine.resourceManager\n    .load<TextureCubeMap>({\n      urls: [\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Bk5FQKGOir4AAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_cPhR7JMDjkAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*trqjQp1nOMQAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_RXwRqwMK3EAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*q4Q6TroyuXcAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*DP5QTbTSAYgAAAAAAAAAAAAAARQnAQ\"\n      ],\n      type: AssetType.TextureCube\n    })\n    .then((cubeMap) => {\n      ambientLight.diffuseMode = DiffuseMode.Texture;\n      ambientLight.diffuseTexture = cubeMap;\n    }),\n  engine.resourceManager\n    .load<TextureCubeMap>({\n      urls: [\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5w6_Rr6ML6IAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*TiT2TbN5cG4AAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*8GF6Q4LZefUAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*D5pdRqUHC3IAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_FooTIp6pNIAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*CYGZR7ogZfoAAAAAAAAAAAAAARQnAQ\"\n      ],\n      type: AssetType.TextureCube\n    })\n    .then((cubeMap) => {\n      ambientLight.specularTexture = cubeMap;\n      skyMaterial.textureCubeMap = cubeMap;\n    })\n]).then(() => {\n  engine.run();\n});\n","formatedCode":"<span class=\"token comment\">/**\n * @title PBR Helmet\n * @category Material\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  BackgroundMode<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  Color<span class=\"token punctuation\">,</span>\n  DiffuseMode<span class=\"token punctuation\">,</span>\n  DirectLight<span class=\"token punctuation\">,</span>\n  GLTFResource<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  SkyBoxMaterial<span class=\"token punctuation\">,</span>\n  TextureCubeMap<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create engine object</span>\n<span class=\"token keyword\">let</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> ambientLight<span class=\"token punctuation\">,</span> background <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">color2glColor</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">color</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">glColor2Color</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">color</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngui<span class=\"token punctuation\">.</span>domElement<span class=\"token punctuation\">.</span>style <span class=\"token operator\">=</span> <span class=\"token string\">\"position:absolute;top:0px;left:50vw\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> envFolder <span class=\"token operator\">=</span> gui<span class=\"token punctuation\">.</span><span class=\"token function\">addFolder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"EnvironmentMapLight\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nenvFolder<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>ambientLight<span class=\"token punctuation\">,</span> <span class=\"token string\">\"specularIntensity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nenvFolder<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>ambientLight<span class=\"token punctuation\">,</span> <span class=\"token string\">\"diffuseIntensity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> directLightColor <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> color<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> directLightNode <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dir_light\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> directLight <span class=\"token operator\">=</span> directLightNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndirectLight<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> dirFolder <span class=\"token operator\">=</span> gui<span class=\"token punctuation\">.</span><span class=\"token function\">addFolder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DirectionalLight1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndirFolder<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>directLight<span class=\"token punctuation\">,</span> <span class=\"token string\">\"enabled\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndirFolder<span class=\"token punctuation\">.</span><span class=\"token function\">addColor</span><span class=\"token punctuation\">(</span>directLightColor<span class=\"token punctuation\">,</span> <span class=\"token string\">\"color\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>directLight<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token function\">color2glColor</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndirFolder<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>directLight<span class=\"token punctuation\">,</span> <span class=\"token string\">\"intensity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//Create camera</span>\n<span class=\"token keyword\">let</span> cameraNode <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create sky</span>\n<span class=\"token keyword\">const</span> sky <span class=\"token operator\">=</span> background<span class=\"token punctuation\">.</span>sky<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> skyMaterial <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SkyBoxMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nbackground<span class=\"token punctuation\">.</span>mode <span class=\"token operator\">=</span> BackgroundMode<span class=\"token punctuation\">.</span>Sky<span class=\"token punctuation\">;</span>\nsky<span class=\"token punctuation\">.</span>material <span class=\"token operator\">=</span> skyMaterial<span class=\"token punctuation\">;</span>\nsky<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nPromise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  engine<span class=\"token punctuation\">.</span>resourceManager\n    <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>GLTFResource<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/150e44f6-7810-4c45-8029-3575d36aff30.gltf\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">gltf</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>gltf<span class=\"token punctuation\">.</span>defaultSceneRoot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>gltf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  engine<span class=\"token punctuation\">.</span>resourceManager\n    <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>TextureCubeMap<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      urls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Bk5FQKGOir4AAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_cPhR7JMDjkAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*trqjQp1nOMQAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_RXwRqwMK3EAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*q4Q6TroyuXcAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*DP5QTbTSAYgAAAAAAAAAAAAAARQnAQ\"</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>TextureCube\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cubeMap</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      ambientLight<span class=\"token punctuation\">.</span>diffuseMode <span class=\"token operator\">=</span> DiffuseMode<span class=\"token punctuation\">.</span>Texture<span class=\"token punctuation\">;</span>\n      ambientLight<span class=\"token punctuation\">.</span>diffuseTexture <span class=\"token operator\">=</span> cubeMap<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  engine<span class=\"token punctuation\">.</span>resourceManager\n    <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>TextureCubeMap<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      urls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5w6_Rr6ML6IAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*TiT2TbN5cG4AAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*8GF6Q4LZefUAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*D5pdRqUHC3IAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_FooTIp6pNIAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*CYGZR7ogZfoAAAAAAAAAAAAAARQnAQ\"</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>TextureCube\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cubeMap</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      ambientLight<span class=\"token punctuation\">.</span>specularTexture <span class=\"token operator\">=</span> cubeMap<span class=\"token punctuation\">;</span>\n      skyMaterial<span class=\"token punctuation\">.</span>textureCubeMap <span class=\"token operator\">=</span> cubeMap<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  init();\n\n  function init() {\n    // Create engine\n    var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n    engine.canvas.resizeByClientSize(); // Create root entity\n\n    var scene = engine.sceneManager.activeScene;\n    var rootEntity = scene.createRootEntity();\n    scene.ambientLight.diffuseSolidColor = new _oasisEngine.Color(0.6, 0.6, 0.6); // Create camera\n\n    var cameraEntity = rootEntity.createChild(\"Camera\");\n    cameraEntity.transform.setPosition(0, 0, 20);\n    cameraEntity.addComponent(_oasisEngine.Camera);\n    cameraEntity.addComponent(_controls.OrbitControl); // Create direct light\n\n    var lightEntity = rootEntity.createChild(\"DirectLight\");\n    var light = lightEntity.addComponent(_oasisEngine.DirectLight);\n    light.intensity = 0.6;\n    engine.resourceManager.load({\n      url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*ArCHTbfVPXUAAAAAAAAAAAAAARQnAQ\",\n      type: _oasisEngine.AssetType.Texture2D\n    }).then(function (texture) {\n      var distanceX = 2.5;\n      var distanceY = 2.5;\n      var position = new _oasisEngine.Vector3(); // Create material\n\n      var material = new _oasisEngine.BlinnPhongMaterial(engine);\n      material.baseTexture = texture;\n\n      for (var i = 0; i < 3; i++) {\n        var posX = (i - 1) * distanceX; // Create cuboid\n\n        position.setValue(posX, distanceY * 2.5, 0);\n        generatePrimitiveEntity(rootEntity, \"cuboid\", position, material, _oasisEngine.PrimitiveMesh.createCuboid(engine)); // Create sphere\n\n        position.setValue(posX, distanceY * 1.5, 0);\n        generatePrimitiveEntity(rootEntity, \"sphere\", position, material, _oasisEngine.PrimitiveMesh.createSphere(engine)); // Create plane\n\n        position.setValue(posX, distanceY * 0.5, 0);\n        generatePrimitiveEntity(rootEntity, \"plane\", position, material, _oasisEngine.PrimitiveMesh.createPlane(engine)); // Create cylinder\n\n        position.setValue(posX, -distanceY * 0.5, 0);\n        generatePrimitiveEntity(rootEntity, \"cylinder\", position, material, _oasisEngine.PrimitiveMesh.createCylinder(engine)); // Create cone\n\n        position.setValue(posX, -distanceY * 1.5, 0);\n        generatePrimitiveEntity(rootEntity, \"cone\", position, material, _oasisEngine.PrimitiveMesh.createCone(engine)); // Create turos\n\n        position.setValue(posX, -distanceY * 2.5, 0);\n        generatePrimitiveEntity(rootEntity, \"torus\", position, material, _oasisEngine.PrimitiveMesh.createTorus(engine));\n      }\n    }); // Run engine\n\n    engine.run();\n  }\n  /**\n   * generate primitive mesh entity.\n   */\n\n\n  function generatePrimitiveEntity(rootEntity, name, position, material, mesh) {\n    var entity = rootEntity.createChild(name);\n    entity.transform.setPosition(position.x, position.y, position.z);\n    entity.addComponent(RotateScript);\n    var renderer = entity.addComponent(_oasisEngine.MeshRenderer);\n    renderer.mesh = mesh;\n    renderer.setMaterial(material);\n    return entity;\n  }\n  /**\n   * Script for rotate.\n   */\n\n\n  var RotateScript = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(RotateScript, _Script);\n\n    function RotateScript() {\n      return _Script.apply(this, arguments) || this;\n    }\n\n    var _proto = RotateScript.prototype;\n\n    /**\n     * @override\n     * The main loop, called frame by frame.\n     * @param deltaTime - The deltaTime when the script update.\n     */\n    _proto.onUpdate = function onUpdate(deltaTime) {\n      this.entity.transform.rotate(0.5, 0.6, 0);\n    };\n\n    return RotateScript;\n  }(_oasisEngine.Script);\n});"},"name":"primitive-mesh","title":"Primitive Mesh","category":"Mesh","id":"8e4fd869-fa04-582d-8e7b-04c66a649199","sourceCode":"/**\n * @title Primitive Mesh\n * @category Mesh\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport {\n  AssetType,\n  BlinnPhongMaterial,\n  Camera,\n  Color,\n  DirectLight,\n  Entity,\n  Material,\n  MeshRenderer,\n  ModelMesh,\n  PrimitiveMesh,\n  Script,\n  Texture2D,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\n\ninit();\n\nfunction init(): void {\n  // Create engine\n  const engine = new WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n\n  // Create root entity\n  const scene = engine.sceneManager.activeScene;\n  const rootEntity = scene.createRootEntity();\n  scene.ambientLight.diffuseSolidColor = new Color(0.6, 0.6, 0.6);\n\n  // Create camera\n  const cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 0, 20);\n  cameraEntity.addComponent(Camera);\n  cameraEntity.addComponent(OrbitControl);\n\n  // Create direct light\n  const lightEntity = rootEntity.createChild(\"DirectLight\");\n  const light = lightEntity.addComponent(DirectLight);\n  light.intensity = 0.6;\n\n  engine.resourceManager\n    .load<Texture2D>({\n      url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*ArCHTbfVPXUAAAAAAAAAAAAAARQnAQ\",\n      type: AssetType.Texture2D\n    })\n    .then((texture) => {\n      const distanceX = 2.5;\n      const distanceY = 2.5;\n      const position = new Vector3();\n\n      // Create material\n      const material = new BlinnPhongMaterial(engine);\n      material.baseTexture = texture;\n\n      for (let i = 0; i < 3; i++) {\n        const posX = (i - 1) * distanceX;\n\n        // Create cuboid\n        position.setValue(posX, distanceY * 2.5, 0);\n        generatePrimitiveEntity(rootEntity, \"cuboid\", position, material, PrimitiveMesh.createCuboid(engine));\n\n        // Create sphere\n        position.setValue(posX, distanceY * 1.5, 0);\n        generatePrimitiveEntity(rootEntity, \"sphere\", position, material, PrimitiveMesh.createSphere(engine));\n\n        // Create plane\n        position.setValue(posX, distanceY * 0.5, 0);\n        generatePrimitiveEntity(rootEntity, \"plane\", position, material, PrimitiveMesh.createPlane(engine));\n\n        // Create cylinder\n        position.setValue(posX, -distanceY * 0.5, 0);\n        generatePrimitiveEntity(rootEntity, \"cylinder\", position, material, PrimitiveMesh.createCylinder(engine));\n\n        // Create cone\n        position.setValue(posX, -distanceY * 1.5, 0);\n        generatePrimitiveEntity(rootEntity, \"cone\", position, material, PrimitiveMesh.createCone(engine));\n\n        // Create turos\n        position.setValue(posX, -distanceY * 2.5, 0);\n        generatePrimitiveEntity(rootEntity, \"torus\", position, material, PrimitiveMesh.createTorus(engine));\n      }\n    });\n\n  // Run engine\n  engine.run();\n}\n\n/**\n * generate primitive mesh entity.\n */\nfunction generatePrimitiveEntity(\n  rootEntity: Entity,\n  name: string,\n  position: Vector3,\n  material: Material,\n  mesh: ModelMesh\n): Entity {\n  const entity = rootEntity.createChild(name);\n  entity.transform.setPosition(position.x, position.y, position.z);\n  entity.addComponent(RotateScript);\n  const renderer = entity.addComponent(MeshRenderer);\n  renderer.mesh = mesh;\n  renderer.setMaterial(material);\n\n  return entity;\n}\n\n/**\n * Script for rotate.\n */\nclass RotateScript extends Script {\n  /**\n   * @override\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */\n  onUpdate(deltaTime: number): void {\n    this.entity.transform.rotate(0.5, 0.6, 0);\n  }\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Primitive Mesh\n * @category Mesh\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  BlinnPhongMaterial<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  Color<span class=\"token punctuation\">,</span>\n  DirectLight<span class=\"token punctuation\">,</span>\n  Entity<span class=\"token punctuation\">,</span>\n  Material<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  ModelMesh<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  Script<span class=\"token punctuation\">,</span>\n  Texture2D<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Create engine</span>\n  <span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  engine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create root entity</span>\n  <span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  scene<span class=\"token punctuation\">.</span>ambientLight<span class=\"token punctuation\">.</span>diffuseSolidColor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create camera</span>\n  <span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create direct light</span>\n  <span class=\"token keyword\">const</span> lightEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DirectLight\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> light <span class=\"token operator\">=</span> lightEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  light<span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">;</span>\n\n  engine<span class=\"token punctuation\">.</span>resourceManager\n    <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*ArCHTbfVPXUAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> distanceX <span class=\"token operator\">=</span> <span class=\"token number\">2.5</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> distanceY <span class=\"token operator\">=</span> <span class=\"token number\">2.5</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Create material</span>\n      <span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      material<span class=\"token punctuation\">.</span>baseTexture <span class=\"token operator\">=</span> texture<span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> posX <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> distanceX<span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Create cuboid</span>\n        position<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>posX<span class=\"token punctuation\">,</span> distanceY <span class=\"token operator\">*</span> <span class=\"token number\">2.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">generatePrimitiveEntity</span><span class=\"token punctuation\">(</span>rootEntity<span class=\"token punctuation\">,</span> <span class=\"token string\">\"cuboid\"</span><span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">,</span> material<span class=\"token punctuation\">,</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Create sphere</span>\n        position<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>posX<span class=\"token punctuation\">,</span> distanceY <span class=\"token operator\">*</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">generatePrimitiveEntity</span><span class=\"token punctuation\">(</span>rootEntity<span class=\"token punctuation\">,</span> <span class=\"token string\">\"sphere\"</span><span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">,</span> material<span class=\"token punctuation\">,</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createSphere</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Create plane</span>\n        position<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>posX<span class=\"token punctuation\">,</span> distanceY <span class=\"token operator\">*</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">generatePrimitiveEntity</span><span class=\"token punctuation\">(</span>rootEntity<span class=\"token punctuation\">,</span> <span class=\"token string\">\"plane\"</span><span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">,</span> material<span class=\"token punctuation\">,</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createPlane</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Create cylinder</span>\n        position<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>posX<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>distanceY <span class=\"token operator\">*</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">generatePrimitiveEntity</span><span class=\"token punctuation\">(</span>rootEntity<span class=\"token punctuation\">,</span> <span class=\"token string\">\"cylinder\"</span><span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">,</span> material<span class=\"token punctuation\">,</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCylinder</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Create cone</span>\n        position<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>posX<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>distanceY <span class=\"token operator\">*</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">generatePrimitiveEntity</span><span class=\"token punctuation\">(</span>rootEntity<span class=\"token punctuation\">,</span> <span class=\"token string\">\"cone\"</span><span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">,</span> material<span class=\"token punctuation\">,</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCone</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Create turos</span>\n        position<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>posX<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>distanceY <span class=\"token operator\">*</span> <span class=\"token number\">2.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">generatePrimitiveEntity</span><span class=\"token punctuation\">(</span>rootEntity<span class=\"token punctuation\">,</span> <span class=\"token string\">\"torus\"</span><span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">,</span> material<span class=\"token punctuation\">,</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createTorus</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Run engine</span>\n  engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * generate primitive mesh entity.\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">generatePrimitiveEntity</span><span class=\"token punctuation\">(</span>\n  <span class=\"token parameter\">rootEntity<span class=\"token operator\">:</span> Entity<span class=\"token punctuation\">,</span>\n  name<span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span>\n  position<span class=\"token operator\">:</span> Vector3<span class=\"token punctuation\">,</span>\n  material<span class=\"token operator\">:</span> Material<span class=\"token punctuation\">,</span>\n  mesh<span class=\"token operator\">:</span> ModelMesh</span>\n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Entity <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> entity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  entity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>RotateScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> renderer <span class=\"token operator\">=</span> entity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  renderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> mesh<span class=\"token punctuation\">;</span>\n  renderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> entity<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * Script for rotate.\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">RotateScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/**\n   * @override\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */</span>\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span>deltaTime<span class=\"token operator\">:</span> number<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title PBR Base\n   * @category Material\n   */\n  //-- create engine object\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var ambientLight = scene.ambientLight,\n      background = scene.background;\n  var rootEntity = scene.createRootEntity();\n\n  var color2glColor = function color2glColor(color) {\n    return new _oasisEngine.Color(color[0] / 255, color[1] / 255, color[2] / 255);\n  };\n\n  var gui = new dat.GUI();\n  var envFolder = gui.addFolder(\"EnvironmentMapLight\");\n  envFolder.add(ambientLight, \"specularIntensity\", 0, 1);\n  envFolder.add(ambientLight, \"diffuseIntensity\", 0, 1);\n  var directLightColor = {\n    color: [255, 255, 255]\n  };\n  var directLightNode = rootEntity.createChild(\"dir_light\");\n  var directLight = directLightNode.addComponent(_oasisEngine.DirectLight);\n  directLight.color = new _oasisEngine.Color(1, 1, 1);\n  var dirFolder = gui.addFolder(\"DirectionalLight1\");\n  dirFolder.add(directLight, \"enabled\");\n  dirFolder.addColor(directLightColor, \"color\").onChange(function (v) {\n    return directLight.color = color2glColor(v);\n  });\n  dirFolder.add(directLight, \"intensity\", 0, 1); //Create camera\n\n  var cameraNode = rootEntity.createChild(\"camera_node\");\n  cameraNode.transform.position = new _oasisEngine.Vector3(0.25, 0.5, 1.5);\n  cameraNode.addComponent(_oasisEngine.Camera);\n  var control = cameraNode.addComponent(_controls.OrbitControl);\n  control.target.setValue(0.25, 0.25, 0); // Create sky\n\n  var sky = background.sky;\n  var skyMaterial = new _oasisEngine.SkyBoxMaterial(engine);\n  background.mode = _oasisEngine.BackgroundMode.Sky;\n  sky.material = skyMaterial;\n  sky.mesh = _oasisEngine.PrimitiveMesh.createCuboid(engine, 1, 1, 1);\n  Promise.all([engine.resourceManager.load(\"https://gw.alipayobjects.com/os/bmw-prod/dda73ec2-6921-42c7-b109-b5cd386f4410.glb\").then(function (gltf) {\n    rootEntity.addChild(gltf.defaultSceneRoot);\n    gltf.defaultSceneRoot.transform.setScale(100, 100, 100);\n    console.log(gltf);\n  }), engine.resourceManager.load({\n    urls: [\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Bk5FQKGOir4AAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_cPhR7JMDjkAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*trqjQp1nOMQAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_RXwRqwMK3EAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*q4Q6TroyuXcAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*DP5QTbTSAYgAAAAAAAAAAAAAARQnAQ\"],\n    type: _oasisEngine.AssetType.TextureCube\n  }).then(function (cubeMap) {\n    ambientLight.diffuseMode = _oasisEngine.DiffuseMode.Texture;\n    ambientLight.diffuseTexture = cubeMap;\n  }), engine.resourceManager.load({\n    urls: [\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5bs-Sb80qcUAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*rLUCT4VPBeEAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*LjSHTI5iSPoAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*pgCvTJ85RUYAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*0BKxR6jgRDAAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Pir4RoxLm3EAAAAAAAAAAAAAARQnAQ\"],\n    type: _oasisEngine.AssetType.TextureCube\n  }).then(function (cubeMap) {\n    ambientLight.specularTexture = cubeMap;\n    skyMaterial.textureCubeMap = cubeMap;\n  })]).then(function () {\n    engine.run();\n  });\n});"},"name":"pbr-base","title":"PBR Base","category":"Material","id":"a778faa3-8665-5f68-8dd3-df194525f333","sourceCode":"/**\n * @title PBR Base\n * @category Material\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\nimport {\n  AssetType,\n  BackgroundMode,\n  Camera,\n  Color,\n  DiffuseMode,\n  DirectLight,\n  GLTFResource,\n  PrimitiveMesh,\n  SkyBoxMaterial,\n  TextureCubeMap,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\n\n//-- create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst { ambientLight, background } = scene;\nconst rootEntity = scene.createRootEntity();\n\nconst color2glColor = (color) => new Color(color[0] / 255, color[1] / 255, color[2] / 255);\nconst gui = new dat.GUI();\n\nconst envFolder = gui.addFolder(\"EnvironmentMapLight\");\nenvFolder.add(ambientLight, \"specularIntensity\", 0, 1);\nenvFolder.add(ambientLight, \"diffuseIntensity\", 0, 1);\n\nconst directLightColor = { color: [255, 255, 255] };\nconst directLightNode = rootEntity.createChild(\"dir_light\");\nconst directLight = directLightNode.addComponent(DirectLight);\ndirectLight.color = new Color(1, 1, 1);\nconst dirFolder = gui.addFolder(\"DirectionalLight1\");\ndirFolder.add(directLight, \"enabled\");\ndirFolder.addColor(directLightColor, \"color\").onChange((v) => (directLight.color = color2glColor(v)));\ndirFolder.add(directLight, \"intensity\", 0, 1);\n\n//Create camera\nconst cameraNode = rootEntity.createChild(\"camera_node\");\ncameraNode.transform.position = new Vector3(0.25, 0.5, 1.5);\ncameraNode.addComponent(Camera);\nconst control = cameraNode.addComponent(OrbitControl);\ncontrol.target.setValue(0.25, 0.25, 0);\n\n// Create sky\nconst sky = background.sky;\nconst skyMaterial = new SkyBoxMaterial(engine);\nbackground.mode = BackgroundMode.Sky;\nsky.material = skyMaterial;\nsky.mesh = PrimitiveMesh.createCuboid(engine, 1, 1, 1);\n\nPromise.all([\n  engine.resourceManager\n    .load<GLTFResource>(\"https://gw.alipayobjects.com/os/bmw-prod/dda73ec2-6921-42c7-b109-b5cd386f4410.glb\")\n    .then((gltf) => {\n      rootEntity.addChild(gltf.defaultSceneRoot);\n      gltf.defaultSceneRoot.transform.setScale(100, 100, 100);\n      console.log(gltf);\n    }),\n  engine.resourceManager\n    .load<TextureCubeMap>({\n      urls: [\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Bk5FQKGOir4AAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_cPhR7JMDjkAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*trqjQp1nOMQAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_RXwRqwMK3EAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*q4Q6TroyuXcAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*DP5QTbTSAYgAAAAAAAAAAAAAARQnAQ\"\n      ],\n      type: AssetType.TextureCube\n    })\n    .then((cubeMap) => {\n      ambientLight.diffuseMode = DiffuseMode.Texture;\n      ambientLight.diffuseTexture = cubeMap;\n    }),\n  engine.resourceManager\n    .load<TextureCubeMap>({\n      urls: [\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5bs-Sb80qcUAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*rLUCT4VPBeEAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*LjSHTI5iSPoAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*pgCvTJ85RUYAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*0BKxR6jgRDAAAAAAAAAAAAAAARQnAQ\",\n        \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Pir4RoxLm3EAAAAAAAAAAAAAARQnAQ\"\n      ],\n      type: AssetType.TextureCube\n    })\n    .then((cubeMap) => {\n      ambientLight.specularTexture = cubeMap;\n      skyMaterial.textureCubeMap = cubeMap;\n    })\n]).then(() => {\n  engine.run();\n});\n","formatedCode":"<span class=\"token comment\">/**\n * @title PBR Base\n * @category Material\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  BackgroundMode<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  Color<span class=\"token punctuation\">,</span>\n  DiffuseMode<span class=\"token punctuation\">,</span>\n  DirectLight<span class=\"token punctuation\">,</span>\n  GLTFResource<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  SkyBoxMaterial<span class=\"token punctuation\">,</span>\n  TextureCubeMap<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> ambientLight<span class=\"token punctuation\">,</span> background <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">color2glColor</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">color</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> envFolder <span class=\"token operator\">=</span> gui<span class=\"token punctuation\">.</span><span class=\"token function\">addFolder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"EnvironmentMapLight\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nenvFolder<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>ambientLight<span class=\"token punctuation\">,</span> <span class=\"token string\">\"specularIntensity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nenvFolder<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>ambientLight<span class=\"token punctuation\">,</span> <span class=\"token string\">\"diffuseIntensity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> directLightColor <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> color<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> directLightNode <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dir_light\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> directLight <span class=\"token operator\">=</span> directLightNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndirectLight<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> dirFolder <span class=\"token operator\">=</span> gui<span class=\"token punctuation\">.</span><span class=\"token function\">addFolder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DirectionalLight1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndirFolder<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>directLight<span class=\"token punctuation\">,</span> <span class=\"token string\">\"enabled\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndirFolder<span class=\"token punctuation\">.</span><span class=\"token function\">addColor</span><span class=\"token punctuation\">(</span>directLightColor<span class=\"token punctuation\">,</span> <span class=\"token string\">\"color\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>directLight<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token function\">color2glColor</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndirFolder<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>directLight<span class=\"token punctuation\">,</span> <span class=\"token string\">\"intensity\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//Create camera</span>\n<span class=\"token keyword\">const</span> cameraNode <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> control <span class=\"token operator\">=</span> cameraNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncontrol<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create sky</span>\n<span class=\"token keyword\">const</span> sky <span class=\"token operator\">=</span> background<span class=\"token punctuation\">.</span>sky<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> skyMaterial <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SkyBoxMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nbackground<span class=\"token punctuation\">.</span>mode <span class=\"token operator\">=</span> BackgroundMode<span class=\"token punctuation\">.</span>Sky<span class=\"token punctuation\">;</span>\nsky<span class=\"token punctuation\">.</span>material <span class=\"token operator\">=</span> skyMaterial<span class=\"token punctuation\">;</span>\nsky<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nPromise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  engine<span class=\"token punctuation\">.</span>resourceManager\n    <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>GLTFResource<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/dda73ec2-6921-42c7-b109-b5cd386f4410.glb\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">gltf</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>gltf<span class=\"token punctuation\">.</span>defaultSceneRoot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      gltf<span class=\"token punctuation\">.</span>defaultSceneRoot<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>gltf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  engine<span class=\"token punctuation\">.</span>resourceManager\n    <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>TextureCubeMap<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      urls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Bk5FQKGOir4AAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_cPhR7JMDjkAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*trqjQp1nOMQAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_RXwRqwMK3EAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*q4Q6TroyuXcAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*DP5QTbTSAYgAAAAAAAAAAAAAARQnAQ\"</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>TextureCube\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cubeMap</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      ambientLight<span class=\"token punctuation\">.</span>diffuseMode <span class=\"token operator\">=</span> DiffuseMode<span class=\"token punctuation\">.</span>Texture<span class=\"token punctuation\">;</span>\n      ambientLight<span class=\"token punctuation\">.</span>diffuseTexture <span class=\"token operator\">=</span> cubeMap<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  engine<span class=\"token punctuation\">.</span>resourceManager\n    <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>TextureCubeMap<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      urls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5bs-Sb80qcUAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*rLUCT4VPBeEAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*LjSHTI5iSPoAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*pgCvTJ85RUYAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*0BKxR6jgRDAAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Pir4RoxLm3EAAAAAAAAAAAAAARQnAQ\"</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>TextureCube\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cubeMap</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      ambientLight<span class=\"token punctuation\">.</span>specularTexture <span class=\"token operator\">=</span> cubeMap<span class=\"token punctuation\">;</span>\n      skyMaterial<span class=\"token punctuation\">.</span>textureCubeMap <span class=\"token operator\">=</span> cubeMap<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  // Create engine object\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity();\n  var ambientLight = scene.ambientLight,\n      background = scene.background;\n  var gui = new dat.GUI();\n  gui.domElement.style = \"position:absolute;top:0px;left:50vw\";\n  var directLightNode = rootEntity.createChild(\"dir_light\");\n  directLightNode.addComponent(_oasisEngine.DirectLight); // Create camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_node\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 0, 5);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl); // Create sky\n\n  var sky = background.sky;\n  var skyMaterial = new _oasisEngine.SkyBoxMaterial(engine);\n  background.mode = _oasisEngine.BackgroundMode.Sky;\n  sky.material = skyMaterial;\n  sky.mesh = _oasisEngine.PrimitiveMesh.createCuboid(engine, 1, 1, 1);\n\n  function loadModel() {\n    return Promise.all([engine.resourceManager.load(\"https://gw.alipayobjects.com/os/bmw-prod/150e44f6-7810-4c45-8029-3575d36aff30.gltf\").then(function (gltf) {\n      rootEntity.addChild(gltf.defaultSceneRoot);\n      console.log(gltf);\n    }), engine.resourceManager.load({\n      urls: [\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Bk5FQKGOir4AAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_cPhR7JMDjkAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*trqjQp1nOMQAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_RXwRqwMK3EAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*q4Q6TroyuXcAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*DP5QTbTSAYgAAAAAAAAAAAAAARQnAQ\"],\n      type: _oasisEngine.AssetType.TextureCube\n    }).then(function (cubeMap) {\n      ambientLight.diffuseMode = _oasisEngine.DiffuseMode.Texture;\n      ambientLight.diffuseTexture = cubeMap;\n    }), engine.resourceManager.load({\n      urls: [\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5w6_Rr6ML6IAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*TiT2TbN5cG4AAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*8GF6Q4LZefUAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*D5pdRqUHC3IAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_FooTIp6pNIAAAAAAAAAAAAAARQnAQ\", \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*CYGZR7ogZfoAAAAAAAAAAAAAARQnAQ\"],\n      type: _oasisEngine.AssetType.TextureCube\n    }).then(function (cubeMap) {\n      ambientLight.specularTexture = cubeMap;\n      skyMaterial.textureCubeMap = cubeMap;\n    })]).then(function () {});\n  }\n\n  function createSphere(material) {\n    var sphereEntity = rootEntity.createChild(\"sphere\");\n    var sphereRender = sphereEntity.addComponent(_oasisEngine.MeshRenderer);\n\n    var geometry = _oasisEngine.PrimitiveMesh.createSphere(engine, 1, 64);\n\n    sphereRender.mesh = geometry;\n    sphereRender.setMaterial(material);\n    return sphereEntity;\n  }\n\n  function reflectionDemo() {\n    var sphere1Mat = new _oasisEngine.BlinnPhongMaterial(engine);\n    sphere1Mat.baseColor = new _oasisEngine.Color(1, 0, 0, 1);\n    var sphere2Mat = new _oasisEngine.BlinnPhongMaterial(engine);\n    sphere2Mat.baseColor = new _oasisEngine.Color(0, 1, 0, 1);\n    var sphere3Mat = new _oasisEngine.BlinnPhongMaterial(engine);\n    sphere3Mat.baseColor = new _oasisEngine.Color(0, 0, 1, 1);\n    var sphere1 = createSphere(sphere1Mat);\n    var sphere2 = createSphere(sphere2Mat);\n    var sphere3 = createSphere(sphere3Mat);\n    var aMove1 = sphere1.addComponent(MoveScript);\n    aMove1.radius = 4;\n\n    aMove1.onX = function () {\n      return 0;\n    };\n\n    var aMove2 = sphere2.addComponent(MoveScript);\n    aMove2.radius = 3;\n\n    aMove2.onY = function () {\n      return 0;\n    };\n\n    var aMove3 = sphere3.addComponent(MoveScript);\n\n    aMove3.onX = function (time) {\n      return Math.sin(time + 2) * 5;\n    };\n\n    aMove3.onY = function (time) {\n      return Math.cos(time + 2) * 5;\n    };\n\n    aMove3.onZ = function () {\n      return 0;\n    };\n\n    var probe = null; // debug\n\n    var state = {\n      enableAnimate: true,\n      enableProbe: true,\n      size: 1024,\n      samples: 1\n    };\n    probe = cameraEntity.addComponent(_oasisEngine.CubeProbe);\n    probe.probeLayer = _oasisEngine.Layer.Layer30;\n    sphere1.layer = _oasisEngine.Layer.Layer30;\n    sphere2.layer = _oasisEngine.Layer.Layer30;\n    sphere3.layer = _oasisEngine.Layer.Layer30;\n    rootEntity.layer = _oasisEngine.Layer.Layer30;\n\n    probe.onTextureChange = function (texture) {\n      ambientLight.specularTexture = texture;\n    };\n\n    gui.add(state, \"enableAnimate\").onChange(function (v) {\n      aMove1.enabled = v;\n      aMove2.enabled = v;\n      aMove3.enabled = v;\n    }).name(\"动画开关\");\n    gui.add(state, \"enableProbe\").onChange(function (v) {\n      probe.enabled = v;\n    }).name(\"环境反射开关\");\n    gui.add(state, \"size\", 1, 2048).onChange(function (size) {\n      probe.width = probe.height = size;\n    }).name(\"分辨率\");\n    var rhi = engine._hardwareRenderer;\n\n    if (rhi.isWebGL2) {\n      var max = rhi.capability.maxAntiAliasing;\n      gui.add(state, \"samples\", 0, max, 1).name(\"MSAA\").onChange(function (samples) {\n        probe.antiAliasing = samples;\n      });\n    }\n  }\n  /**\n   * 旋转移动脚本\n   */\n\n\n  var MoveScript = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(MoveScript, _Script);\n\n    function MoveScript(node) {\n      var _this;\n\n      _this = _Script.call(this, node) || this;\n      _this.time = 0;\n      _this.radius = 5;\n      _this.onX = void 0;\n      _this.onY = void 0;\n      _this.onZ = void 0;\n\n      _this.onX = function (time) {\n        return Math.cos(time) * _this.radius;\n      };\n\n      _this.onY = function (time) {\n        return Math.cos(time) * _this.radius;\n      };\n\n      _this.onZ = function (time) {\n        return Math.sin(time) * _this.radius;\n      };\n\n      return _this;\n    }\n\n    var _proto = MoveScript.prototype;\n\n    _proto.onUpdate = function onUpdate(deltaTime) {\n      this.time += deltaTime / 1000;\n      var x = this.onX(this.time);\n      var y = this.onY(this.time);\n      var z = this.onZ(this.time);\n      this.entity.transform.setPosition(x, y, z);\n    };\n\n    return MoveScript;\n  }(_oasisEngine.Script);\n\n  loadModel().then(function () {\n    engine.run();\n    reflectionDemo();\n  });\n});"},"name":"probe-reflection","title":"Probe Reflection","category":"Advance","id":"deda5e4c-23a0-5ef6-b4c5-e2d7646ac882","sourceCode":"/**\n * @title Probe Reflection\n * @category Advance\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\nimport {\n  AssetType,\n  BackgroundMode,\n  BlinnPhongMaterial,\n  Camera,\n  Color,\n  CubeProbe,\n  DiffuseMode,\n  DirectLight,\n  GLTFResource,\n  Layer,\n  MeshRenderer,\n  PrimitiveMesh,\n  Script,\n  SkyBoxMaterial,\n  TextureCubeMap,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\n\n// Create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\nconst { ambientLight, background } = scene;\n\nconst gui = new dat.GUI();\ngui.domElement.style = \"position:absolute;top:0px;left:50vw\";\n\nconst directLightNode = rootEntity.createChild(\"dir_light\");\ndirectLightNode.addComponent(DirectLight);\n\n// Create camera\nconst cameraEntity = rootEntity.createChild(\"camera_node\");\ncameraEntity.transform.position = new Vector3(0, 0, 5);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\n// Create sky\nconst sky = background.sky;\nconst skyMaterial = new SkyBoxMaterial(engine);\nbackground.mode = BackgroundMode.Sky;\nsky.material = skyMaterial;\nsky.mesh = PrimitiveMesh.createCuboid(engine, 1, 1, 1);\n\nfunction loadModel() {\n  return Promise.all([\n    engine.resourceManager\n      .load<GLTFResource>(\"https://gw.alipayobjects.com/os/bmw-prod/150e44f6-7810-4c45-8029-3575d36aff30.gltf\")\n      .then((gltf) => {\n        rootEntity.addChild(gltf.defaultSceneRoot);\n        console.log(gltf);\n      }),\n    engine.resourceManager\n      .load<TextureCubeMap>({\n        urls: [\n          \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Bk5FQKGOir4AAAAAAAAAAAAAARQnAQ\",\n          \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_cPhR7JMDjkAAAAAAAAAAAAAARQnAQ\",\n          \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*trqjQp1nOMQAAAAAAAAAAAAAARQnAQ\",\n          \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_RXwRqwMK3EAAAAAAAAAAAAAARQnAQ\",\n          \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*q4Q6TroyuXcAAAAAAAAAAAAAARQnAQ\",\n          \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*DP5QTbTSAYgAAAAAAAAAAAAAARQnAQ\"\n        ],\n        type: AssetType.TextureCube\n      })\n      .then((cubeMap) => {\n        ambientLight.diffuseMode = DiffuseMode.Texture;\n        ambientLight.diffuseTexture = cubeMap;\n      }),\n    engine.resourceManager\n      .load<TextureCubeMap>({\n        urls: [\n          \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5w6_Rr6ML6IAAAAAAAAAAAAAARQnAQ\",\n          \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*TiT2TbN5cG4AAAAAAAAAAAAAARQnAQ\",\n          \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*8GF6Q4LZefUAAAAAAAAAAAAAARQnAQ\",\n          \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*D5pdRqUHC3IAAAAAAAAAAAAAARQnAQ\",\n          \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_FooTIp6pNIAAAAAAAAAAAAAARQnAQ\",\n          \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*CYGZR7ogZfoAAAAAAAAAAAAAARQnAQ\"\n        ],\n        type: AssetType.TextureCube\n      })\n      .then((cubeMap) => {\n        ambientLight.specularTexture = cubeMap;\n        skyMaterial.textureCubeMap = cubeMap;\n      })\n  ]).then(() => {});\n}\n\nfunction createSphere(material) {\n  const sphereEntity = rootEntity.createChild(\"sphere\");\n  const sphereRender = sphereEntity.addComponent(MeshRenderer);\n  const geometry = PrimitiveMesh.createSphere(engine, 1, 64);\n  sphereRender.mesh = geometry;\n  sphereRender.setMaterial(material);\n  return sphereEntity;\n}\n\nfunction reflectionDemo() {\n  const sphere1Mat = new BlinnPhongMaterial(engine);\n  sphere1Mat.baseColor = new Color(1, 0, 0, 1);\n  const sphere2Mat = new BlinnPhongMaterial(engine);\n  sphere2Mat.baseColor = new Color(0, 1, 0, 1);\n  const sphere3Mat = new BlinnPhongMaterial(engine);\n  sphere3Mat.baseColor = new Color(0, 0, 1, 1);\n\n  const sphere1 = createSphere(sphere1Mat);\n  const sphere2 = createSphere(sphere2Mat);\n  const sphere3 = createSphere(sphere3Mat);\n  const aMove1 = sphere1.addComponent(MoveScript);\n  aMove1.radius = 4;\n  aMove1.onX = () => 0;\n  const aMove2 = sphere2.addComponent(MoveScript);\n  aMove2.radius = 3;\n  aMove2.onY = () => 0;\n  const aMove3 = sphere3.addComponent(MoveScript);\n  aMove3.onX = (time) => Math.sin(time + 2) * 5;\n  aMove3.onY = (time) => Math.cos(time + 2) * 5;\n  aMove3.onZ = () => 0;\n\n  let probe = null;\n\n  // debug\n  const state = {\n    enableAnimate: true,\n    enableProbe: true,\n    size: 1024,\n    samples: 1\n  };\n\n  probe = cameraEntity.addComponent(CubeProbe);\n  probe.probeLayer = Layer.Layer30;\n  sphere1.layer = Layer.Layer30;\n  sphere2.layer = Layer.Layer30;\n  sphere3.layer = Layer.Layer30;\n  rootEntity.layer = Layer.Layer30;\n\n  probe.onTextureChange = (texture) => {\n    ambientLight.specularTexture = texture;\n  };\n  gui\n    .add(state, \"enableAnimate\")\n    .onChange((v) => {\n      aMove1.enabled = v;\n      aMove2.enabled = v;\n      aMove3.enabled = v;\n    })\n    .name(\"动画开关\");\n  gui\n    .add(state, \"enableProbe\")\n    .onChange((v) => {\n      probe.enabled = v;\n    })\n    .name(\"环境反射开关\");\n  gui\n    .add(state, \"size\", 1, 2048)\n    .onChange((size) => {\n      probe.width = probe.height = size;\n    })\n    .name(\"分辨率\");\n\n  const rhi = engine._hardwareRenderer;\n  if (rhi.isWebGL2) {\n    const max = rhi.capability.maxAntiAliasing;\n    gui\n      .add(state, \"samples\", 0, max, 1)\n      .name(\"MSAA\")\n      .onChange((samples) => {\n        probe.antiAliasing = samples;\n      });\n  }\n}\n\n/**\n * 旋转移动脚本\n */\nclass MoveScript extends Script {\n  time = 0;\n  radius = 5;\n  onX;\n  onY;\n  onZ;\n\n  constructor(node) {\n    super(node);\n    this.onX = (time) => {\n      return Math.cos(time) * this.radius;\n    };\n    this.onY = (time) => {\n      return Math.cos(time) * this.radius;\n    };\n    this.onZ = (time) => {\n      return Math.sin(time) * this.radius;\n    };\n  }\n\n  onUpdate(deltaTime) {\n    this.time += deltaTime / 1000;\n    let x = this.onX(this.time);\n    let y = this.onY(this.time);\n    let z = this.onZ(this.time);\n    this.entity.transform.setPosition(x, y, z);\n  }\n}\n\nloadModel().then(() => {\n  engine.run();\n  reflectionDemo();\n});\n","formatedCode":"<span class=\"token comment\">/**\n * @title Probe Reflection\n * @category Advance\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  BackgroundMode<span class=\"token punctuation\">,</span>\n  BlinnPhongMaterial<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  Color<span class=\"token punctuation\">,</span>\n  CubeProbe<span class=\"token punctuation\">,</span>\n  DiffuseMode<span class=\"token punctuation\">,</span>\n  DirectLight<span class=\"token punctuation\">,</span>\n  GLTFResource<span class=\"token punctuation\">,</span>\n  Layer<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  Script<span class=\"token punctuation\">,</span>\n  SkyBoxMaterial<span class=\"token punctuation\">,</span>\n  TextureCubeMap<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> ambientLight<span class=\"token punctuation\">,</span> background <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ngui<span class=\"token punctuation\">.</span>domElement<span class=\"token punctuation\">.</span>style <span class=\"token operator\">=</span> <span class=\"token string\">\"position:absolute;top:0px;left:50vw\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> directLightNode <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dir_light\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndirectLightNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create sky</span>\n<span class=\"token keyword\">const</span> sky <span class=\"token operator\">=</span> background<span class=\"token punctuation\">.</span>sky<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> skyMaterial <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SkyBoxMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nbackground<span class=\"token punctuation\">.</span>mode <span class=\"token operator\">=</span> BackgroundMode<span class=\"token punctuation\">.</span>Sky<span class=\"token punctuation\">;</span>\nsky<span class=\"token punctuation\">.</span>material <span class=\"token operator\">=</span> skyMaterial<span class=\"token punctuation\">;</span>\nsky<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">loadModel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    engine<span class=\"token punctuation\">.</span>resourceManager\n      <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>GLTFResource<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/150e44f6-7810-4c45-8029-3575d36aff30.gltf\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">gltf</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>gltf<span class=\"token punctuation\">.</span>defaultSceneRoot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>gltf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    engine<span class=\"token punctuation\">.</span>resourceManager\n      <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>TextureCubeMap<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        urls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Bk5FQKGOir4AAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_cPhR7JMDjkAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*trqjQp1nOMQAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_RXwRqwMK3EAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*q4Q6TroyuXcAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*DP5QTbTSAYgAAAAAAAAAAAAAARQnAQ\"</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>TextureCube\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cubeMap</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        ambientLight<span class=\"token punctuation\">.</span>diffuseMode <span class=\"token operator\">=</span> DiffuseMode<span class=\"token punctuation\">.</span>Texture<span class=\"token punctuation\">;</span>\n        ambientLight<span class=\"token punctuation\">.</span>diffuseTexture <span class=\"token operator\">=</span> cubeMap<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    engine<span class=\"token punctuation\">.</span>resourceManager\n      <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>TextureCubeMap<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        urls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*5w6_Rr6ML6IAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*TiT2TbN5cG4AAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*8GF6Q4LZefUAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*D5pdRqUHC3IAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*_FooTIp6pNIAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*CYGZR7ogZfoAAAAAAAAAAAAAARQnAQ\"</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>TextureCube\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cubeMap</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        ambientLight<span class=\"token punctuation\">.</span>specularTexture <span class=\"token operator\">=</span> cubeMap<span class=\"token punctuation\">;</span>\n        skyMaterial<span class=\"token punctuation\">.</span>textureCubeMap <span class=\"token operator\">=</span> cubeMap<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">createSphere</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">material</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> sphereEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sphere\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> sphereRender <span class=\"token operator\">=</span> sphereEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> geometry <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createSphere</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  sphereRender<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> geometry<span class=\"token punctuation\">;</span>\n  sphereRender<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> sphereEntity<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">reflectionDemo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> sphere1Mat <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  sphere1Mat<span class=\"token punctuation\">.</span>baseColor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> sphere2Mat <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  sphere2Mat<span class=\"token punctuation\">.</span>baseColor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> sphere3Mat <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  sphere3Mat<span class=\"token punctuation\">.</span>baseColor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> sphere1 <span class=\"token operator\">=</span> <span class=\"token function\">createSphere</span><span class=\"token punctuation\">(</span>sphere1Mat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> sphere2 <span class=\"token operator\">=</span> <span class=\"token function\">createSphere</span><span class=\"token punctuation\">(</span>sphere2Mat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> sphere3 <span class=\"token operator\">=</span> <span class=\"token function\">createSphere</span><span class=\"token punctuation\">(</span>sphere3Mat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> aMove1 <span class=\"token operator\">=</span> sphere1<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MoveScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  aMove1<span class=\"token punctuation\">.</span>radius <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n  aMove1<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onX</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> aMove2 <span class=\"token operator\">=</span> sphere2<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MoveScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  aMove2<span class=\"token punctuation\">.</span>radius <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n  aMove2<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onY</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> aMove3 <span class=\"token operator\">=</span> sphere3<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MoveScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  aMove3<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onX</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">time</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>time <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n  aMove3<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onY</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">time</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>time <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n  aMove3<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onZ</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">let</span> probe <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// debug</span>\n  <span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    enableAnimate<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    enableProbe<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    size<span class=\"token operator\">:</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">,</span>\n    samples<span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  probe <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>CubeProbe<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  probe<span class=\"token punctuation\">.</span>probeLayer <span class=\"token operator\">=</span> Layer<span class=\"token punctuation\">.</span>Layer30<span class=\"token punctuation\">;</span>\n  sphere1<span class=\"token punctuation\">.</span>layer <span class=\"token operator\">=</span> Layer<span class=\"token punctuation\">.</span>Layer30<span class=\"token punctuation\">;</span>\n  sphere2<span class=\"token punctuation\">.</span>layer <span class=\"token operator\">=</span> Layer<span class=\"token punctuation\">.</span>Layer30<span class=\"token punctuation\">;</span>\n  sphere3<span class=\"token punctuation\">.</span>layer <span class=\"token operator\">=</span> Layer<span class=\"token punctuation\">.</span>Layer30<span class=\"token punctuation\">;</span>\n  rootEntity<span class=\"token punctuation\">.</span>layer <span class=\"token operator\">=</span> Layer<span class=\"token punctuation\">.</span>Layer30<span class=\"token punctuation\">;</span>\n\n  probe<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onTextureChange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">texture</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    ambientLight<span class=\"token punctuation\">.</span>specularTexture <span class=\"token operator\">=</span> texture<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  gui\n    <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"enableAnimate\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      aMove1<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n      aMove2<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n      aMove3<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"动画开关\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui\n    <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"enableProbe\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      probe<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"环境反射开关\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui\n    <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"size\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2048</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">size</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      probe<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> probe<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> size<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"分辨率\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> rhi <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>_hardwareRenderer<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rhi<span class=\"token punctuation\">.</span>isWebGL2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> max <span class=\"token operator\">=</span> rhi<span class=\"token punctuation\">.</span>capability<span class=\"token punctuation\">.</span>maxAntiAliasing<span class=\"token punctuation\">;</span>\n    gui\n      <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"samples\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> max<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MSAA\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">samples</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        probe<span class=\"token punctuation\">.</span>antiAliasing <span class=\"token operator\">=</span> samples<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * 旋转移动脚本\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MoveScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  time <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  radius <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n  onX<span class=\"token punctuation\">;</span>\n  onY<span class=\"token punctuation\">;</span>\n  onZ<span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onX</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">time</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onY</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">time</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onZ</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">time</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>radius<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">deltaTime</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>time <span class=\"token operator\">+=</span> deltaTime <span class=\"token operator\">/</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">onX</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">onY</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> z <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">onZ</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">loadModel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">reflectionDemo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@oasis-engine/spine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@oasis-engine/spine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global.oasisSpine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, _spine) {\n  \"use strict\";\n\n  /**\n   * @title Spine Animation\n   * @category 2D\n   */\n  _oasisEngine.Logger.enable();\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_node\");\n  var camera = cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 0, 60);\n  engine.resourceManager.load({\n    urls: [\"https://gw.alipayobjects.com/os/OasisHub/a66ef194-6bc8-4325-9a59-6ea9097225b1/1620888427489.json\", \"https://gw.alipayobjects.com/os/OasisHub/a1e3e67b-a783-4832-ba1b-37a95bd55291/1620888427490.atlas\", \"https://gw.alipayobjects.com/zos/OasisHub/a3ca8f62-1068-43a5-bb64-5c9a0f823dde/1620888427490.png\"],\n    type: \"spine\"\n  }).then(function (spineEntity) {\n    spineEntity.transform.setPosition(0, -12, 0);\n    rootEntity.addChild(spineEntity);\n    var spineAnimation = spineEntity.getComponent(_spine.SpineAnimation);\n    spineAnimation.state.setAnimation(0, \"walk\", true);\n    spineAnimation.scale = 0.05;\n  });\n  engine.run();\n});"},"name":"spine-animation","title":"Spine Animation","category":"2D","id":"d57b17c4-ec2c-53b4-9bb7-5c21de66a464","sourceCode":"/**\n * @title Spine Animation\n * @category 2D\n */\nimport { Camera, Logger, SystemInfo, Vector3, WebGLEngine, Entity } from \"oasis-engine\";\nimport { SpineAnimation } from \"@oasis-engine/spine\";\n\nLogger.enable();\n\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// camera\nconst cameraEntity = rootEntity.createChild(\"camera_node\");\nconst camera = cameraEntity.addComponent(Camera);\ncameraEntity.transform.position = new Vector3(0, 0, 60);\n\nengine.resourceManager\n  .load({\n    urls: [ \n      \"https://gw.alipayobjects.com/os/OasisHub/a66ef194-6bc8-4325-9a59-6ea9097225b1/1620888427489.json\",\n      \"https://gw.alipayobjects.com/os/OasisHub/a1e3e67b-a783-4832-ba1b-37a95bd55291/1620888427490.atlas\",\n      \"https://gw.alipayobjects.com/zos/OasisHub/a3ca8f62-1068-43a5-bb64-5c9a0f823dde/1620888427490.png\"\n    ],\n    type: \"spine\"\n  })\n  .then((spineEntity: Entity) => {\n    spineEntity.transform.setPosition(0, -12, 0);\n    rootEntity.addChild(spineEntity);\n    const spineAnimation = spineEntity.getComponent(SpineAnimation);\n    spineAnimation.state.setAnimation(0, \"walk\", true);\n    spineAnimation.scale = 0.05;\n  });\n\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Spine Animation\n * @category 2D\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Camera<span class=\"token punctuation\">,</span> Logger<span class=\"token punctuation\">,</span> SystemInfo<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> WebGLEngine<span class=\"token punctuation\">,</span> Entity <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> SpineAnimation <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/spine\"</span><span class=\"token punctuation\">;</span>\n\nLogger<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> camera <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    urls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> \n      <span class=\"token string\">\"https://gw.alipayobjects.com/os/OasisHub/a66ef194-6bc8-4325-9a59-6ea9097225b1/1620888427489.json\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/os/OasisHub/a1e3e67b-a783-4832-ba1b-37a95bd55291/1620888427490.atlas\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/zos/OasisHub/a3ca8f62-1068-43a5-bb64-5c9a0f823dde/1620888427490.png\"</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> <span class=\"token string\">\"spine\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">spineEntity<span class=\"token operator\">:</span> Entity</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    spineEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>spineEntity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> spineAnimation <span class=\"token operator\">=</span> spineEntity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>SpineAnimation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    spineAnimation<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span><span class=\"token function\">setAnimation</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"walk\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    spineAnimation<span class=\"token punctuation\">.</span>scale <span class=\"token operator\">=</span> <span class=\"token number\">0.05</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title Scene Basic\n   * @category Basic\n   */\n  // Import Modules\n  // Init Engine\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\"); // Adapter to screen\n\n  engine.canvas.resizeByClientSize(); // Get root entity of current scene\n\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(\"root\"); // Init Camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_entity\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 5, 10);\n  cameraEntity.transform.lookAt(new _oasisEngine.Vector3(0, 0, 0));\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  scene.background.solidColor.setValue(1, 1, 1, 1); // Create a entity to add light component\n\n  var lightEntity = rootEntity.createChild(\"light\"); // Create light component\n\n  var directLight = lightEntity.addComponent(_oasisEngine.DirectLight);\n  directLight.color = new _oasisEngine.Color(1.0, 1.0, 1.0);\n  directLight.intensity = 0.5; // Control light direction by entity's transform\n\n  lightEntity.transform.rotation = new _oasisEngine.Vector3(45, 45, 45); // Create Cube\n\n  var cubeEntity = rootEntity.createChild(\"cube\");\n  var cube = cubeEntity.addComponent(_oasisEngine.MeshRenderer);\n  cube.mesh = _oasisEngine.PrimitiveMesh.createCuboid(engine, 2, 2, 2);\n  cube.setMaterial(new _oasisEngine.BlinnPhongMaterial(engine)); // Run Engine\n\n  engine.run();\n});"},"name":"scene-basic","title":"Scene Basic","category":"Basic","id":"17813e22-7453-50ee-9722-25394aa5ff9b","sourceCode":"/**\n * @title Scene Basic\n * @category Basic\n */\n// Import Modules\nimport {\n  BlinnPhongMaterial,\n  Camera,\n  Color,\n  DirectLight,\n  MeshRenderer,\n  PrimitiveMesh,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\n\n// Init Engine\nconst engine = new WebGLEngine(\"canvas\");\n// Adapter to screen\nengine.canvas.resizeByClientSize();\n\n// Get root entity of current scene\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity(\"root\");\n\n// Init Camera\nlet cameraEntity = rootEntity.createChild(\"camera_entity\");\ncameraEntity.transform.position = new Vector3(0, 5, 10);\ncameraEntity.transform.lookAt(new Vector3(0, 0, 0));\ncameraEntity.addComponent(Camera);\nscene.background.solidColor.setValue(1, 1, 1, 1);\n\n// Create a entity to add light component\nlet lightEntity = rootEntity.createChild(\"light\");\n\n// Create light component\nlet directLight = lightEntity.addComponent(DirectLight);\ndirectLight.color = new Color(1.0, 1.0, 1.0);\ndirectLight.intensity = 0.5;\n\n// Control light direction by entity's transform\nlightEntity.transform.rotation = new Vector3(45, 45, 45);\n\n// Create Cube\nlet cubeEntity = rootEntity.createChild(\"cube\");\nlet cube = cubeEntity.addComponent(MeshRenderer);\ncube.mesh = PrimitiveMesh.createCuboid(engine, 2, 2, 2);\ncube.setMaterial(new BlinnPhongMaterial(engine));\n\n// Run Engine\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Scene Basic\n * @category Basic\n */</span>\n<span class=\"token comment\">// Import Modules</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  BlinnPhongMaterial<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  Color<span class=\"token punctuation\">,</span>\n  DirectLight<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Init Engine</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Adapter to screen</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Get root entity of current scene</span>\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Init Camera</span>\n<span class=\"token keyword\">let</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_entity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nscene<span class=\"token punctuation\">.</span>background<span class=\"token punctuation\">.</span>solidColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create a entity to add light component</span>\n<span class=\"token keyword\">let</span> lightEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"light\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create light component</span>\n<span class=\"token keyword\">let</span> directLight <span class=\"token operator\">=</span> lightEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndirectLight<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndirectLight<span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Control light direction by entity's transform</span>\nlightEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>rotation <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create Cube</span>\n<span class=\"token keyword\">let</span> cubeEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cube\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> cube <span class=\"token operator\">=</span> cubeEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncube<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncube<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Run Engine</span>\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title Skeleton Animation\n   * @category Animation\n   */\n  _oasisEngine.Logger.enable();\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_node\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 1, 5);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl).target = new _oasisEngine.Vector3(0, 1, 0);\n  var lightNode = rootEntity.createChild(\"light_node\");\n  lightNode.addComponent(_oasisEngine.DirectLight).intensity = 0.8;\n  lightNode.transform.lookAt(new _oasisEngine.Vector3(0, 0, 1));\n  lightNode.transform.rotate(new _oasisEngine.Vector3(0, 90, 0));\n  engine.resourceManager.load(\"https://gw.alipayobjects.com/os/basement_prod/aa318303-d7c9-4cb8-8c5a-9cf3855fd1e6.gltf\").then(function (asset) {\n    var animations = asset.animations,\n        defaultSceneRoot = asset.defaultSceneRoot;\n    rootEntity.addChild(defaultSceneRoot);\n    var animator = defaultSceneRoot.getComponent(_oasisEngine.Animation);\n    animator.playAnimationClip(animations[0].name);\n  });\n  engine.run();\n});"},"name":"skeleton-animation","title":"Skeleton Animation","category":"Animation","id":"9bc1db50-5063-59ee-ac97-4ec093b8d8e6","sourceCode":"/**\n * @title Skeleton Animation\n * @category Animation\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport { Animation, Camera, DirectLight, GLTFResource, Logger, Vector3, WebGLEngine } from \"oasis-engine\";\n\nLogger.enable();\n\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// camera\nconst cameraEntity = rootEntity.createChild(\"camera_node\");\ncameraEntity.transform.position = new Vector3(0, 1, 5);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl).target = new Vector3(0, 1, 0);\n\nconst lightNode = rootEntity.createChild(\"light_node\");\nlightNode.addComponent(DirectLight).intensity = 0.8;\nlightNode.transform.lookAt(new Vector3(0, 0, 1));\nlightNode.transform.rotate(new Vector3(0, 90, 0));\n\nengine.resourceManager\n  .load<GLTFResource>(\"https://gw.alipayobjects.com/os/basement_prod/aa318303-d7c9-4cb8-8c5a-9cf3855fd1e6.gltf\")\n  .then((asset) => {\n    const { animations, defaultSceneRoot } = asset;\n    rootEntity.addChild(defaultSceneRoot);\n\n    const animator = defaultSceneRoot.getComponent(Animation);\n    animator.playAnimationClip(animations[0].name);\n  });\n\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Skeleton Animation\n * @category Animation\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Animation<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> DirectLight<span class=\"token punctuation\">,</span> GLTFResource<span class=\"token punctuation\">,</span> Logger<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\nLogger<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>target <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> lightNode <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"light_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>GLTFResource<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://gw.alipayobjects.com/os/basement_prod/aa318303-d7c9-4cb8-8c5a-9cf3855fd1e6.gltf\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">asset</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> animations<span class=\"token punctuation\">,</span> defaultSceneRoot <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> asset<span class=\"token punctuation\">;</span>\n    rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>defaultSceneRoot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> animator <span class=\"token operator\">=</span> defaultSceneRoot<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>Animation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    animator<span class=\"token punctuation\">.</span><span class=\"token function\">playAnimationClip</span><span class=\"token punctuation\">(</span>animations<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  var gui = new dat.GUI(); //-- create engine object\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); //-- create camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_entity\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 0, 15);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  var orbitControl = cameraEntity.addComponent(_controls.OrbitControl);\n  orbitControl.minDistance = 15;\n  orbitControl.maxDistance = 15; // 自定义材质\n\n  var vertexSource = \"\\nuniform mat4 u_MVPMat;\\nattribute vec3 POSITION;\\nattribute vec2 TEXCOORD_0;\\nattribute vec3 NORMAL;\\n\\nvarying vec2 v_uv;\\nvarying vec3 v_position;\\nvarying vec3 v_normal;\\n\\n\\nuniform float uTime;\\n\\nuniform sampler2D u_texture;\\n\\nvoid main() {\\n\\n  gl_Position = u_MVPMat  *  vec4( POSITION, 1.0 );\\n  v_uv = TEXCOORD_0;\\n  v_normal = NORMAL;\\n  v_position = POSITION;\\n}\\n \";\n  var fragSource = \"\\nvarying vec2 v_uv;\\nvarying vec3 v_position;\\nvarying vec3 v_normal;\\n\\nuniform float u_time;\\nuniform sampler2D u_texture;\\nuniform vec3 u_cameraPos;\\n\\n#define EPS 0.001\\n#define MAX_ITR 100\\n#define MAX_DIS 100.0\\n#define PI\\t \\t  3.141592\\n\\nuniform float u_water_scale;\\nuniform float u_water_speed;\\n\\nuniform vec3 u_sea_base;\\nuniform vec3 u_water_color;\\nuniform float u_sea_height;\\n\\n// Distance Functions\\nfloat sd_sph(vec3 p, float r) { return length(p) - r; }\\n\\n// Distance Map\\nfloat map(vec3 p, vec2 sc)\\n{    \\n    float l = cos(length(p * 2.0));\\n    vec2 u = vec2(l, sc.y);\\n    vec2 um = u * 0.3;\\n    um.x += u_time * 0.1 * u_water_speed;\\n    um.y += -u_time * 0.025 * u_water_speed;\\n    um.x += (um.y) * 2.0;    \\n    float a1 = texture2D(u_texture, (p.yz  *  .4 + um) * u_water_scale).x;\\n    float a2 = texture2D(u_texture, (p.zx  *  .4 + um) * u_water_scale).x;\\n    float a3 = texture2D(u_texture, (p.xy  *  .4 + um) * u_water_scale).x;\\n    \\n    float t1 = a1 + a2 + a3;\\n    t1 /= 15.0 * u_water_scale;\\n    \\n    float b1 = texture2D(u_texture, (p.yz  *  1. + u) * u_water_scale).x;\\n    float b2 = texture2D(u_texture, (p.zx  *  1. + u) * u_water_scale).x;\\n    float b3 = texture2D(u_texture, (p.xy  *  1. + u) * u_water_scale).x;\\n    \\n    float t2 = b1 + b2 + b3;\\n    t2 /= 15.0  *  u_water_scale;\\n    \\n    float comb = t1 * 0.4 + t2 * 0.1 * (1.0 - t1);\\n    \\n    return comb + sd_sph(p, 3.); // sd_box(p, vec3(1., 1., 1.)) + sdPlane(p, vec4(0., 0., 1.0, 0.));//\\n}\\n\\nfloat diffuse(vec3 n,vec3 l,float p) {\\n    return pow(dot(n,l) * 0.4 + 0.6,p);\\n}\\n\\nfloat specular(vec3 n,vec3 l,vec3 e,float s) {    \\n    float nrm = (s + 8.0) / (PI * 8.0);\\n    return pow(max(dot(reflect(e,n),l),0.0),s) * nrm;\\n}\\n\\n// sky\\nvec3 getSkyColor(vec3 e) {\\n    e.y = max(e.y,0.0);\\n    return vec3(pow(1.0-e.y,2.0), 1.0-e.y, 0.6+(1.0-e.y)*0.4);\\n}\\n\\nvec3 getSeaColor(vec3 p, vec3 n, vec3 l, vec3 eye, vec3 dist) {  \\n    float fresnel = clamp(1.0 - dot(n,-eye), 0.0, 1.0);\\n    fresnel = pow(fresnel,3.0) * 0.65;\\n\\n    vec3 reflected = getSkyColor(reflect(eye,n));    \\n    vec3 refracted = u_sea_base + diffuse(normalize(n),l,80.0) * u_water_color * 0.12; \\n\\n    vec3 color =  mix(refracted,reflected,fresnel);\\n\\n    float atten = max(1.0 - dot(dist,dist) * 0.001, 0.0);\\n    color += u_water_color * (length(p) - u_sea_height) * 0.18 * atten; // \\n\\n    color += vec3(specular(n,l,eye,20.0));\\n\\n    return color;\\n}\\n\\nvoid main (void) {\\n\\n    vec2 uv = vec2(v_uv.x * 0.5, v_uv.y * 0.5);//  / iResolution.xy;\\n    \\n    vec3 pos = v_position; \\n    vec3 dist = pos - u_cameraPos;\\n\\n    float dis = EPS;\\n    vec3 rayDir = normalize(dist);\\n    \\n    // Ray marching\\n    for(int i = 0; i < MAX_ITR; i++)\\n    {\\n        if(dis < EPS || dis > MAX_DIS)\\n          break;\\n        dis = map(pos, uv);\\n        pos += dis * rayDir;\\n    }\\n    \\n    if (dis >= EPS) \\n    {\\n      discard;\\n    }\\n    \\n    vec3 lig = normalize(vec3(-1., -3, -4.5));\\n    vec2 eps = vec2(0.0, EPS);\\n    vec3 normal = normalize(vec3(\\n        map(pos + eps.yxx, uv) - map(pos - eps.yxx, uv),\\n        map(pos + eps.xyx, uv) - map(pos - eps.xyx, uv),\\n        map(pos + eps.xxy, uv) - map(pos - eps.xxy, uv)\\n    ));\\n    \\n    vec3 col = getSeaColor(pos, normal, lig, rayDir, dist);\\n    \\n    gl_FragColor = vec4(col,1.0);\\n}\\n\"; // 初始化 shader\n\n  _oasisEngine.Shader.create(\"water\", vertexSource, fragSource);\n\n  var ShaderMaterial = /*#__PURE__*/function (_Material) {\n    _inheritsLoose(ShaderMaterial, _Material);\n\n    function ShaderMaterial(engine) {\n      var _this;\n\n      _this = _Material.call(this, engine, _oasisEngine.Shader.find(\"water\")) || this;\n\n      _this.shaderData.setFloat(\"u_sea_height\", 0.6);\n\n      _this.shaderData.setFloat(\"u_water_scale\", 0.2);\n\n      _this.shaderData.setFloat(\"u_water_speed\", 3.5);\n\n      _this.shaderData.setColor(\"u_sea_base\", new _oasisEngine.Color(0.1, 0.2, 0.22));\n\n      _this.shaderData.setColor(\"u_water_color\", new _oasisEngine.Color(0.8, 0.9, 0.6));\n\n      return _this;\n    }\n\n    return ShaderMaterial;\n  }(_oasisEngine.Material);\n\n  var material = new ShaderMaterial(engine); // 创建球体形的海面\n\n  var sphereEntity = rootEntity.createChild(\"sphere\");\n  var renderer = sphereEntity.addComponent(_oasisEngine.MeshRenderer);\n  renderer.mesh = _oasisEngine.PrimitiveMesh.createSphere(engine, 3, 50);\n  renderer.setMaterial(material); // 加载噪声纹理\n\n  engine.resourceManager.load({\n    type: _oasisEngine.AssetType.Texture2D,\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*AC4IQZ6mfCIAAAAAAAAAAAAAARQnAQ\"\n  }).then(function (texture) {\n    material.shaderData.setTexture(\"u_texture\", texture);\n    engine.run();\n  }); // u_time 更新脚本\n\n  var WaterScript = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(WaterScript, _Script);\n\n    function WaterScript() {\n      return _Script.apply(this, arguments) || this;\n    }\n\n    var _proto = WaterScript.prototype;\n\n    _proto.onUpdate = function onUpdate() {\n      material.shaderData.setFloat(\"u_time\", engine.time.timeSinceStartup * 0.001);\n    };\n\n    return WaterScript;\n  }(_oasisEngine.Script);\n\n  sphereEntity.addComponent(WaterScript); // debug\n\n  function openDebug() {\n    var shaderData = material.shaderData;\n    var baseColor = shaderData.getColor(\"u_sea_base\");\n    var waterColor = shaderData.getColor(\"u_water_color\");\n    var debug = {\n      sea_height: shaderData.getFloat(\"u_sea_height\"),\n      water_scale: shaderData.getFloat(\"u_water_scale\"),\n      water_speed: shaderData.getFloat(\"u_water_speed\"),\n      sea_base: [baseColor.r * 255, baseColor.g * 255, baseColor.b * 255],\n      water_color: [waterColor.r * 255, waterColor.g * 255, waterColor.b * 255]\n    };\n    gui.add(debug, \"sea_height\", 0, 3).onChange(function (v) {\n      shaderData.setFloat(\"u_sea_height\", v);\n    });\n    gui.add(debug, \"water_scale\", 0, 4).onChange(function (v) {\n      shaderData.setFloat(\"u_water_scale\", v);\n    });\n    gui.add(debug, \"water_speed\", 0, 4).onChange(function (v) {\n      shaderData.setFloat(\"u_water_speed\", v);\n    });\n    gui.addColor(debug, \"sea_base\").onChange(function (v) {\n      baseColor.r = v[0] / 255;\n      baseColor.g = v[1] / 255;\n      baseColor.b = v[2] / 255;\n    });\n    gui.addColor(debug, \"water_color\").onChange(function (v) {\n      waterColor.r = v[0] / 255;\n      waterColor.g = v[1] / 255;\n      waterColor.b = v[2] / 255;\n    });\n  }\n\n  openDebug();\n});"},"name":"shader-water","title":"Shader Water","category":"Material","id":"aabdd0ba-3e99-5489-8165-3bf52e469877","sourceCode":"/**\n * @title Shader Water\n * @category Material\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\nimport {\n  AssetType,\n  Camera,\n  Color,\n  Engine,\n  Material,\n  MeshRenderer,\n  PrimitiveMesh,\n  Script,\n  Shader,\n  Texture2D,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\n\nconst gui = new dat.GUI();\n//-- create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n//-- create camera\nconst cameraEntity = rootEntity.createChild(\"camera_entity\");\ncameraEntity.transform.position = new Vector3(0, 0, 15);\ncameraEntity.addComponent(Camera);\nconst orbitControl = cameraEntity.addComponent(OrbitControl);\norbitControl.minDistance = 15;\norbitControl.maxDistance = 15;\n\n// 自定义材质\nconst vertexSource = `\nuniform mat4 u_MVPMat;\nattribute vec3 POSITION;\nattribute vec2 TEXCOORD_0;\nattribute vec3 NORMAL;\n\nvarying vec2 v_uv;\nvarying vec3 v_position;\nvarying vec3 v_normal;\n\n\nuniform float uTime;\n\nuniform sampler2D u_texture;\n\nvoid main() {\n\n  gl_Position = u_MVPMat  *  vec4( POSITION, 1.0 );\n  v_uv = TEXCOORD_0;\n  v_normal = NORMAL;\n  v_position = POSITION;\n}\n `;\n\nconst fragSource = `\nvarying vec2 v_uv;\nvarying vec3 v_position;\nvarying vec3 v_normal;\n\nuniform float u_time;\nuniform sampler2D u_texture;\nuniform vec3 u_cameraPos;\n\n#define EPS 0.001\n#define MAX_ITR 100\n#define MAX_DIS 100.0\n#define PI\t \t  3.141592\n\nuniform float u_water_scale;\nuniform float u_water_speed;\n\nuniform vec3 u_sea_base;\nuniform vec3 u_water_color;\nuniform float u_sea_height;\n\n// Distance Functions\nfloat sd_sph(vec3 p, float r) { return length(p) - r; }\n\n// Distance Map\nfloat map(vec3 p, vec2 sc)\n{    \n    float l = cos(length(p * 2.0));\n    vec2 u = vec2(l, sc.y);\n    vec2 um = u * 0.3;\n    um.x += u_time * 0.1 * u_water_speed;\n    um.y += -u_time * 0.025 * u_water_speed;\n    um.x += (um.y) * 2.0;    \n    float a1 = texture2D(u_texture, (p.yz  *  .4 + um) * u_water_scale).x;\n    float a2 = texture2D(u_texture, (p.zx  *  .4 + um) * u_water_scale).x;\n    float a3 = texture2D(u_texture, (p.xy  *  .4 + um) * u_water_scale).x;\n    \n    float t1 = a1 + a2 + a3;\n    t1 /= 15.0 * u_water_scale;\n    \n    float b1 = texture2D(u_texture, (p.yz  *  1. + u) * u_water_scale).x;\n    float b2 = texture2D(u_texture, (p.zx  *  1. + u) * u_water_scale).x;\n    float b3 = texture2D(u_texture, (p.xy  *  1. + u) * u_water_scale).x;\n    \n    float t2 = b1 + b2 + b3;\n    t2 /= 15.0  *  u_water_scale;\n    \n    float comb = t1 * 0.4 + t2 * 0.1 * (1.0 - t1);\n    \n    return comb + sd_sph(p, 3.); // sd_box(p, vec3(1., 1., 1.)) + sdPlane(p, vec4(0., 0., 1.0, 0.));//\n}\n\nfloat diffuse(vec3 n,vec3 l,float p) {\n    return pow(dot(n,l) * 0.4 + 0.6,p);\n}\n\nfloat specular(vec3 n,vec3 l,vec3 e,float s) {    \n    float nrm = (s + 8.0) / (PI * 8.0);\n    return pow(max(dot(reflect(e,n),l),0.0),s) * nrm;\n}\n\n// sky\nvec3 getSkyColor(vec3 e) {\n    e.y = max(e.y,0.0);\n    return vec3(pow(1.0-e.y,2.0), 1.0-e.y, 0.6+(1.0-e.y)*0.4);\n}\n\nvec3 getSeaColor(vec3 p, vec3 n, vec3 l, vec3 eye, vec3 dist) {  \n    float fresnel = clamp(1.0 - dot(n,-eye), 0.0, 1.0);\n    fresnel = pow(fresnel,3.0) * 0.65;\n\n    vec3 reflected = getSkyColor(reflect(eye,n));    \n    vec3 refracted = u_sea_base + diffuse(normalize(n),l,80.0) * u_water_color * 0.12; \n\n    vec3 color =  mix(refracted,reflected,fresnel);\n\n    float atten = max(1.0 - dot(dist,dist) * 0.001, 0.0);\n    color += u_water_color * (length(p) - u_sea_height) * 0.18 * atten; // \n\n    color += vec3(specular(n,l,eye,20.0));\n\n    return color;\n}\n\nvoid main (void) {\n\n    vec2 uv = vec2(v_uv.x * 0.5, v_uv.y * 0.5);//  / iResolution.xy;\n    \n    vec3 pos = v_position; \n    vec3 dist = pos - u_cameraPos;\n\n    float dis = EPS;\n    vec3 rayDir = normalize(dist);\n    \n    // Ray marching\n    for(int i = 0; i < MAX_ITR; i++)\n    {\n        if(dis < EPS || dis > MAX_DIS)\n          break;\n        dis = map(pos, uv);\n        pos += dis * rayDir;\n    }\n    \n    if (dis >= EPS) \n    {\n      discard;\n    }\n    \n    vec3 lig = normalize(vec3(-1., -3, -4.5));\n    vec2 eps = vec2(0.0, EPS);\n    vec3 normal = normalize(vec3(\n        map(pos + eps.yxx, uv) - map(pos - eps.yxx, uv),\n        map(pos + eps.xyx, uv) - map(pos - eps.xyx, uv),\n        map(pos + eps.xxy, uv) - map(pos - eps.xxy, uv)\n    ));\n    \n    vec3 col = getSeaColor(pos, normal, lig, rayDir, dist);\n    \n    gl_FragColor = vec4(col,1.0);\n}\n`;\n\n// 初始化 shader\nShader.create(\"water\", vertexSource, fragSource);\n\nclass ShaderMaterial extends Material {\n  constructor(engine: Engine) {\n    super(engine, Shader.find(\"water\"));\n\n    this.shaderData.setFloat(\"u_sea_height\", 0.6);\n    this.shaderData.setFloat(\"u_water_scale\", 0.2);\n    this.shaderData.setFloat(\"u_water_speed\", 3.5);\n    this.shaderData.setColor(\"u_sea_base\", new Color(0.1, 0.2, 0.22));\n    this.shaderData.setColor(\"u_water_color\", new Color(0.8, 0.9, 0.6));\n  }\n}\nconst material = new ShaderMaterial(engine);\n\n// 创建球体形的海面\nconst sphereEntity = rootEntity.createChild(\"sphere\");\nconst renderer = sphereEntity.addComponent(MeshRenderer);\nrenderer.mesh = PrimitiveMesh.createSphere(engine, 3, 50);\nrenderer.setMaterial(material);\n\n// 加载噪声纹理\nengine.resourceManager\n  .load({\n    type: AssetType.Texture2D,\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*AC4IQZ6mfCIAAAAAAAAAAAAAARQnAQ\"\n  })\n  .then((texture: Texture2D) => {\n    material.shaderData.setTexture(\"u_texture\", texture);\n    engine.run();\n  });\n\n// u_time 更新脚本\nclass WaterScript extends Script {\n  onUpdate() {\n    material.shaderData.setFloat(\"u_time\", engine.time.timeSinceStartup * 0.001);\n  }\n}\nsphereEntity.addComponent(WaterScript);\n\n// debug\nfunction openDebug() {\n  const shaderData = material.shaderData;\n  const baseColor = shaderData.getColor(\"u_sea_base\");\n  const waterColor = shaderData.getColor(\"u_water_color\");\n  const debug = {\n    sea_height: shaderData.getFloat(\"u_sea_height\"),\n    water_scale: shaderData.getFloat(\"u_water_scale\"),\n    water_speed: shaderData.getFloat(\"u_water_speed\"),\n    sea_base: [baseColor.r * 255, baseColor.g * 255, baseColor.b * 255],\n    water_color: [waterColor.r * 255, waterColor.g * 255, waterColor.b * 255]\n  };\n\n  gui.add(debug, \"sea_height\", 0, 3).onChange((v) => {\n    shaderData.setFloat(\"u_sea_height\", v);\n  });\n  gui.add(debug, \"water_scale\", 0, 4).onChange((v) => {\n    shaderData.setFloat(\"u_water_scale\", v);\n  });\n  gui.add(debug, \"water_speed\", 0, 4).onChange((v) => {\n    shaderData.setFloat(\"u_water_speed\", v);\n  });\n  gui.addColor(debug, \"sea_base\").onChange((v) => {\n    baseColor.r = v[0] / 255;\n    baseColor.g = v[1] / 255;\n    baseColor.b = v[2] / 255;\n  });\n  gui.addColor(debug, \"water_color\").onChange((v) => {\n    waterColor.r = v[0] / 255;\n    waterColor.g = v[1] / 255;\n    waterColor.b = v[2] / 255;\n  });\n}\n\nopenDebug();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Shader Water\n * @category Material\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  Color<span class=\"token punctuation\">,</span>\n  Engine<span class=\"token punctuation\">,</span>\n  Material<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  Script<span class=\"token punctuation\">,</span>\n  Shader<span class=\"token punctuation\">,</span>\n  Texture2D<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//-- create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_entity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> orbitControl <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\norbitControl<span class=\"token punctuation\">.</span>minDistance <span class=\"token operator\">=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span>\norbitControl<span class=\"token punctuation\">.</span>maxDistance <span class=\"token operator\">=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 自定义材质</span>\n<span class=\"token keyword\">const</span> vertexSource <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\nuniform mat4 u_MVPMat;\nattribute vec3 POSITION;\nattribute vec2 TEXCOORD_0;\nattribute vec3 NORMAL;\n\nvarying vec2 v_uv;\nvarying vec3 v_position;\nvarying vec3 v_normal;\n\n\nuniform float uTime;\n\nuniform sampler2D u_texture;\n\nvoid main() {\n\n  gl_Position = u_MVPMat  *  vec4( POSITION, 1.0 );\n  v_uv = TEXCOORD_0;\n  v_normal = NORMAL;\n  v_position = POSITION;\n}\n </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> fragSource <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\nvarying vec2 v_uv;\nvarying vec3 v_position;\nvarying vec3 v_normal;\n\nuniform float u_time;\nuniform sampler2D u_texture;\nuniform vec3 u_cameraPos;\n\n#define EPS 0.001\n#define MAX_ITR 100\n#define MAX_DIS 100.0\n#define PI\t \t  3.141592\n\nuniform float u_water_scale;\nuniform float u_water_speed;\n\nuniform vec3 u_sea_base;\nuniform vec3 u_water_color;\nuniform float u_sea_height;\n\n// Distance Functions\nfloat sd_sph(vec3 p, float r) { return length(p) - r; }\n\n// Distance Map\nfloat map(vec3 p, vec2 sc)\n{    \n    float l = cos(length(p * 2.0));\n    vec2 u = vec2(l, sc.y);\n    vec2 um = u * 0.3;\n    um.x += u_time * 0.1 * u_water_speed;\n    um.y += -u_time * 0.025 * u_water_speed;\n    um.x += (um.y) * 2.0;    \n    float a1 = texture2D(u_texture, (p.yz  *  .4 + um) * u_water_scale).x;\n    float a2 = texture2D(u_texture, (p.zx  *  .4 + um) * u_water_scale).x;\n    float a3 = texture2D(u_texture, (p.xy  *  .4 + um) * u_water_scale).x;\n    \n    float t1 = a1 + a2 + a3;\n    t1 /= 15.0 * u_water_scale;\n    \n    float b1 = texture2D(u_texture, (p.yz  *  1. + u) * u_water_scale).x;\n    float b2 = texture2D(u_texture, (p.zx  *  1. + u) * u_water_scale).x;\n    float b3 = texture2D(u_texture, (p.xy  *  1. + u) * u_water_scale).x;\n    \n    float t2 = b1 + b2 + b3;\n    t2 /= 15.0  *  u_water_scale;\n    \n    float comb = t1 * 0.4 + t2 * 0.1 * (1.0 - t1);\n    \n    return comb + sd_sph(p, 3.); // sd_box(p, vec3(1., 1., 1.)) + sdPlane(p, vec4(0., 0., 1.0, 0.));//\n}\n\nfloat diffuse(vec3 n,vec3 l,float p) {\n    return pow(dot(n,l) * 0.4 + 0.6,p);\n}\n\nfloat specular(vec3 n,vec3 l,vec3 e,float s) {    \n    float nrm = (s + 8.0) / (PI * 8.0);\n    return pow(max(dot(reflect(e,n),l),0.0),s) * nrm;\n}\n\n// sky\nvec3 getSkyColor(vec3 e) {\n    e.y = max(e.y,0.0);\n    return vec3(pow(1.0-e.y,2.0), 1.0-e.y, 0.6+(1.0-e.y)*0.4);\n}\n\nvec3 getSeaColor(vec3 p, vec3 n, vec3 l, vec3 eye, vec3 dist) {  \n    float fresnel = clamp(1.0 - dot(n,-eye), 0.0, 1.0);\n    fresnel = pow(fresnel,3.0) * 0.65;\n\n    vec3 reflected = getSkyColor(reflect(eye,n));    \n    vec3 refracted = u_sea_base + diffuse(normalize(n),l,80.0) * u_water_color * 0.12; \n\n    vec3 color =  mix(refracted,reflected,fresnel);\n\n    float atten = max(1.0 - dot(dist,dist) * 0.001, 0.0);\n    color += u_water_color * (length(p) - u_sea_height) * 0.18 * atten; // \n\n    color += vec3(specular(n,l,eye,20.0));\n\n    return color;\n}\n\nvoid main (void) {\n\n    vec2 uv = vec2(v_uv.x * 0.5, v_uv.y * 0.5);//  / iResolution.xy;\n    \n    vec3 pos = v_position; \n    vec3 dist = pos - u_cameraPos;\n\n    float dis = EPS;\n    vec3 rayDir = normalize(dist);\n    \n    // Ray marching\n    for(int i = 0; i &lt; MAX_ITR; i++)\n    {\n        if(dis &lt; EPS || dis > MAX_DIS)\n          break;\n        dis = map(pos, uv);\n        pos += dis * rayDir;\n    }\n    \n    if (dis >= EPS) \n    {\n      discard;\n    }\n    \n    vec3 lig = normalize(vec3(-1., -3, -4.5));\n    vec2 eps = vec2(0.0, EPS);\n    vec3 normal = normalize(vec3(\n        map(pos + eps.yxx, uv) - map(pos - eps.yxx, uv),\n        map(pos + eps.xyx, uv) - map(pos - eps.xyx, uv),\n        map(pos + eps.xxy, uv) - map(pos - eps.xxy, uv)\n    ));\n    \n    vec3 col = getSeaColor(pos, normal, lig, rayDir, dist);\n    \n    gl_FragColor = vec4(col,1.0);\n}\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 初始化 shader</span>\nShader<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"water\"</span><span class=\"token punctuation\">,</span> vertexSource<span class=\"token punctuation\">,</span> fragSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ShaderMaterial</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Material</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">engine<span class=\"token operator\">:</span> Engine</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> Shader<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"water\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_sea_height\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_water_scale\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_water_speed\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_sea_base\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.22</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_water_color\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ShaderMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 创建球体形的海面</span>\n<span class=\"token keyword\">const</span> sphereEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sphere\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> renderer <span class=\"token operator\">=</span> sphereEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createSphere</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 加载噪声纹理</span>\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D<span class=\"token punctuation\">,</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*AC4IQZ6mfCIAAAAAAAAAAAAAARQnAQ\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture<span class=\"token operator\">:</span> Texture2D</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    material<span class=\"token punctuation\">.</span>shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setTexture</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_texture\"</span><span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// u_time 更新脚本</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">WaterScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    material<span class=\"token punctuation\">.</span>shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_time\"</span><span class=\"token punctuation\">,</span> engine<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">.</span>timeSinceStartup <span class=\"token operator\">*</span> <span class=\"token number\">0.001</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nsphereEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>WaterScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// debug</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">openDebug</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> shaderData <span class=\"token operator\">=</span> material<span class=\"token punctuation\">.</span>shaderData<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> baseColor <span class=\"token operator\">=</span> shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_sea_base\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> waterColor <span class=\"token operator\">=</span> shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_water_color\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> debug <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    sea_height<span class=\"token operator\">:</span> shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">getFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_sea_height\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    water_scale<span class=\"token operator\">:</span> shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">getFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_water_scale\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    water_speed<span class=\"token operator\">:</span> shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">getFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_water_speed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    sea_base<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>baseColor<span class=\"token punctuation\">.</span>r <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> baseColor<span class=\"token punctuation\">.</span>g <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> baseColor<span class=\"token punctuation\">.</span>b <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    water_color<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>waterColor<span class=\"token punctuation\">.</span>r <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> waterColor<span class=\"token punctuation\">.</span>g <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> waterColor<span class=\"token punctuation\">.</span>b <span class=\"token operator\">*</span> <span class=\"token number\">255</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>debug<span class=\"token punctuation\">,</span> <span class=\"token string\">\"sea_height\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_sea_height\"</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>debug<span class=\"token punctuation\">,</span> <span class=\"token string\">\"water_scale\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_water_scale\"</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>debug<span class=\"token punctuation\">,</span> <span class=\"token string\">\"water_speed\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_water_speed\"</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">addColor</span><span class=\"token punctuation\">(</span>debug<span class=\"token punctuation\">,</span> <span class=\"token string\">\"sea_base\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    baseColor<span class=\"token punctuation\">.</span>r <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n    baseColor<span class=\"token punctuation\">.</span>g <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n    baseColor<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">addColor</span><span class=\"token punctuation\">(</span>debug<span class=\"token punctuation\">,</span> <span class=\"token string\">\"water_color\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    waterColor<span class=\"token punctuation\">.</span>r <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n    waterColor<span class=\"token punctuation\">.</span>g <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n    waterColor<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">openDebug</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\", \"@oasis-engine/spine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"), require(\"@oasis-engine/spine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine, global.oasisSpine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine, _spine) {\n  \"use strict\";\n\n  /**\n   * @title Spine\n   * @category Benchmark\n   */\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_node\");\n  var camera = cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 0, 110);\n  camera.farClipPlane = 200;\n  engine.resourceManager.load({\n    urls: [\"https://gw.alipayobjects.com/os/OasisHub/a66ef194-6bc8-4325-9a59-6ea9097225b1/1620888427489.json\", \"https://gw.alipayobjects.com/os/OasisHub/a1e3e67b-a783-4832-ba1b-37a95bd55291/1620888427490.atlas\", \"https://gw.alipayobjects.com/zos/OasisHub/a3ca8f62-1068-43a5-bb64-5c9a0f823dde/1620888427490.png\"],\n    type: \"spine\"\n  }).then(function (spineEntity) {\n    for (var i = -5; i < 5; i++) {\n      for (var j = -5; j < 5; j++) {\n        var clone = spineEntity.clone();\n        clone.transform.setPosition(8 * i, 8 * j, 0);\n        rootEntity.addChild(clone);\n        var spineAnimation = clone.getComponent(_spine.SpineAnimation);\n        spineAnimation.state.setAnimation(0, \"walk\", true);\n        spineAnimation.scale = 0.01;\n      }\n    }\n  });\n  engine.run();\n});"},"name":"spine-performance","title":"Spine","category":"Benchmark","id":"50450271-4858-51b1-b447-f31597239177","sourceCode":"/**\n * @title Spine\n * @category Benchmark\n */\nimport { Camera, Logger, SystemInfo, Vector3, WebGLEngine, Entity } from \"oasis-engine\";\nimport { SpineAnimation } from \"@oasis-engine/spine\";\n\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// camera\nconst cameraEntity = rootEntity.createChild(\"camera_node\");\nconst camera = cameraEntity.addComponent(Camera);\ncameraEntity.transform.position = new Vector3(0, 0, 110);\ncamera.farClipPlane = 200;\n\nengine.resourceManager\n  .load({\n    urls: [ \n      \"https://gw.alipayobjects.com/os/OasisHub/a66ef194-6bc8-4325-9a59-6ea9097225b1/1620888427489.json\",\n      \"https://gw.alipayobjects.com/os/OasisHub/a1e3e67b-a783-4832-ba1b-37a95bd55291/1620888427490.atlas\",\n      \"https://gw.alipayobjects.com/zos/OasisHub/a3ca8f62-1068-43a5-bb64-5c9a0f823dde/1620888427490.png\"\n    ],\n    type: \"spine\"\n  })\n  .then((spineEntity: Entity) => {\n    for (let i = -5; i < 5; i++) {\n      for (let j = -5; j < 5; j++) {\n        const clone = spineEntity.clone();\n        clone.transform.setPosition(8 * i, 8 * j, 0);\n        rootEntity.addChild(clone);\n        const spineAnimation = clone.getComponent(SpineAnimation);\n        spineAnimation.state.setAnimation(0, \"walk\", true);\n        spineAnimation.scale = 0.01;\n      }\n    }\n  });\n\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Spine\n * @category Benchmark\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Camera<span class=\"token punctuation\">,</span> Logger<span class=\"token punctuation\">,</span> SystemInfo<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> WebGLEngine<span class=\"token punctuation\">,</span> Entity <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> SpineAnimation <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/spine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> camera <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">110</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncamera<span class=\"token punctuation\">.</span>farClipPlane <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    urls<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> \n      <span class=\"token string\">\"https://gw.alipayobjects.com/os/OasisHub/a66ef194-6bc8-4325-9a59-6ea9097225b1/1620888427489.json\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/os/OasisHub/a1e3e67b-a783-4832-ba1b-37a95bd55291/1620888427490.atlas\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"https://gw.alipayobjects.com/zos/OasisHub/a3ca8f62-1068-43a5-bb64-5c9a0f823dde/1620888427490.png\"</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> <span class=\"token string\">\"spine\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">spineEntity<span class=\"token operator\">:</span> Entity</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> j <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> clone <span class=\"token operator\">=</span> spineEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        clone<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">,</span> <span class=\"token number\">8</span> <span class=\"token operator\">*</span> j<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>clone<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> spineAnimation <span class=\"token operator\">=</span> clone<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>SpineAnimation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        spineAnimation<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span><span class=\"token function\">setAnimation</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"walk\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        spineAnimation<span class=\"token punctuation\">.</span>scale <span class=\"token operator\">=</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var rootEntity = engine.sceneManager.activeScene.createRootEntity();\n  var cameraEntity = rootEntity.createChild(\"camera\");\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.transform.setPosition(3, 3, 3);\n  cameraEntity.transform.lookAt(new _oasisEngine.Vector3(0, 0, 0));\n  cameraEntity.addComponent(_controls.OrbitControl);\n  engine.sceneManager.activeScene.ambientLight.diffuseSolidColor.setValue(1, 1, 1, 1); // Create Rotate Script\n\n  var Rotate = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(Rotate, _Script);\n\n    function Rotate() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _Script.call.apply(_Script, [this].concat(args)) || this;\n      _this._tempVector = new _oasisEngine.Vector3(0, 1, 0);\n      return _this;\n    }\n\n    var _proto = Rotate.prototype;\n\n    _proto.onUpdate = function onUpdate() {\n      this.entity.transform.rotate(this._tempVector);\n    };\n\n    return Rotate;\n  }(_oasisEngine.Script);\n\n  engine.resourceManager.load(\"https://gw.alipayobjects.com/os/OasisHub/267000040/9994/%25E5%25BD%2592%25E6%25A1%25A3.gltf\").then(function (gltf) {\n    var duck = gltf.defaultSceneRoot;\n    rootEntity.addChild(duck); // Add Script\n\n    duck.addComponent(Rotate);\n  });\n  engine.run();\n});"},"name":"script-basic","title":"Script Basic","category":"Basic","id":"970a3b49-7c28-5d36-aed2-fd4e6dc8da0a","sourceCode":"/**\n * @title Script Basic\n * @category Basic\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport { Camera, GLTFResource, Script, Vector3, WebGLEngine } from \"oasis-engine\";\n\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst rootEntity = engine.sceneManager.activeScene.createRootEntity();\n\nconst cameraEntity = rootEntity.createChild(\"camera\");\ncameraEntity.addComponent(Camera);\ncameraEntity.transform.setPosition(3, 3, 3);\ncameraEntity.transform.lookAt(new Vector3(0, 0, 0));\ncameraEntity.addComponent(OrbitControl);\n\nengine.sceneManager.activeScene.ambientLight.diffuseSolidColor.setValue(1, 1, 1, 1);\n\n// Create Rotate Script\nclass Rotate extends Script {\n  private _tempVector = new Vector3(0, 1, 0);\n  onUpdate() {\n    this.entity.transform.rotate(this._tempVector);\n  }\n}\n\nengine.resourceManager\n  .load<GLTFResource>(\"https://gw.alipayobjects.com/os/OasisHub/267000040/9994/%25E5%25BD%2592%25E6%25A1%25A3.gltf\")\n  .then((gltf) => {\n    const duck = gltf.defaultSceneRoot;\n\n    rootEntity.addChild(duck);\n\n    // Add Script\n    duck.addComponent(Rotate);\n  });\n\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Script Basic\n * @category Basic\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Camera<span class=\"token punctuation\">,</span> GLTFResource<span class=\"token punctuation\">,</span> Script<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span>ambientLight<span class=\"token punctuation\">.</span>diffuseSolidColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create Rotate Script</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Rotate</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> _tempVector <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_tempVector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>GLTFResource<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://gw.alipayobjects.com/os/OasisHub/267000040/9994/%25E5%25BD%2592%25E6%25A1%25A3.gltf\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">gltf</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> duck <span class=\"token operator\">=</span> gltf<span class=\"token punctuation\">.</span>defaultSceneRoot<span class=\"token punctuation\">;</span>\n\n    rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>duck<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Add Script</span>\n    duck<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Rotate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  var gui = new dat.GUI(); //-- create engine object\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); //-- create camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_entity\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 0, 50);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  var control = cameraEntity.addComponent(_controls.FreeControl);\n  control.movementSpeed = 50;\n  engine.run(); // create two renderer\n\n  var cube = rootEntity.createChild(\"cube1\");\n  var cube2 = rootEntity.createChild(\"cube2\");\n  cube.transform.position = new _oasisEngine.Vector3(-10, 0, 0);\n  cube2.transform.position = new _oasisEngine.Vector3(10, 0, 0);\n  var lightNode = rootEntity.createChild(\"Light\");\n  lightNode.transform.setRotation(-45, 0, 0);\n  lightNode.addComponent(_oasisEngine.DirectLight);\n  var material = new _oasisEngine.BlinnPhongMaterial(engine);\n  material.baseColor = new _oasisEngine.Color(1, 0, 0, 1);\n  var material2 = new _oasisEngine.BlinnPhongMaterial(engine);\n  material2.baseColor = new _oasisEngine.Color(0, 0, 1, 1);\n\n  var geometry = _oasisEngine.PrimitiveMesh.createCuboid(engine, 5, 5, 5);\n\n  var sphereGeometry = _oasisEngine.PrimitiveMesh.createSphere(engine, 5);\n\n  var cubeRenderer = cube.addComponent(_oasisEngine.MeshRenderer);\n  var cubeRenderer2 = cube2.addComponent(_oasisEngine.MeshRenderer);\n  cubeRenderer.mesh = geometry;\n  cubeRenderer.setMaterial(material);\n  cubeRenderer2.mesh = sphereGeometry;\n  cubeRenderer2.setMaterial(material2); // rotate\n\n  var RotationScript = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(RotationScript, _Script);\n\n    function RotationScript() {\n      return _Script.apply(this, arguments) || this;\n    }\n\n    var _proto = RotationScript.prototype;\n\n    _proto.onUpdate = function onUpdate() {\n      this.entity.transform.rotate(1, 1, 1);\n    };\n\n    return RotationScript;\n  }(_oasisEngine.Script);\n\n  cube.addComponent(RotationScript);\n  cube2.addComponent(RotationScript); // observe renderer-cull\n\n  var state = {\n    cube1: \"正常渲染\",\n    cube2: \"正常渲染\"\n  };\n\n  var ObserverScript = /*#__PURE__*/function (_Script2) {\n    _inheritsLoose(ObserverScript, _Script2);\n\n    function ObserverScript() {\n      return _Script2.apply(this, arguments) || this;\n    }\n\n    var _proto2 = ObserverScript.prototype;\n\n    _proto2.onUpdate = function onUpdate() {\n      state.cube1 = cubeRenderer.isCulled ? \"视锥体裁剪\" : \"正常渲染\";\n      state.cube2 = cubeRenderer2.isCulled ? \"视锥体裁剪\" : \"正常渲染\";\n    };\n\n    return ObserverScript;\n  }(_oasisEngine.Script);\n\n  rootEntity.addComponent(ObserverScript);\n  var folder = gui.addFolder(\"移动视角，观察视锥体裁剪情况\");\n  folder.add(state, \"cube1\").name(\"红色立方体\").listen();\n  folder.add(state, \"cube2\").name(\"蓝色球体\").listen();\n  folder.open();\n});"},"name":"renderer-cull","title":"Renderer Cull","category":"Camera","id":"ba51acd0-afdd-54e1-86f3-435e276b5be2","sourceCode":"/**\n * @title Renderer Cull\n * @category Camera\n */\nimport { FreeControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\nimport {\n  BlinnPhongMaterial,\n  Camera,\n  Color,\n  DirectLight,\n  MeshRenderer,\n  PrimitiveMesh,\n  Script,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\nconst gui = new dat.GUI();\n\n//-- create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n//-- create camera\nconst cameraEntity = rootEntity.createChild(\"camera_entity\");\ncameraEntity.transform.position = new Vector3(0, 0, 50);\ncameraEntity.addComponent(Camera);\nconst control = cameraEntity.addComponent(FreeControl);\ncontrol.movementSpeed = 50;\n\nengine.run();\n\n// create two renderer\nconst cube = rootEntity.createChild(\"cube1\");\nconst cube2 = rootEntity.createChild(\"cube2\");\ncube.transform.position = new Vector3(-10, 0, 0);\ncube2.transform.position = new Vector3(10, 0, 0);\n\nconst lightNode = rootEntity.createChild(\"Light\");\nlightNode.transform.setRotation(-45, 0, 0);\nlightNode.addComponent(DirectLight);\n\nconst material = new BlinnPhongMaterial(engine);\nmaterial.baseColor = new Color(1, 0, 0, 1);\nconst material2 = new BlinnPhongMaterial(engine);\nmaterial2.baseColor = new Color(0, 0, 1, 1);\nconst geometry = PrimitiveMesh.createCuboid(engine, 5, 5, 5);\nconst sphereGeometry = PrimitiveMesh.createSphere(engine, 5);\n\nconst cubeRenderer = cube.addComponent(MeshRenderer);\nconst cubeRenderer2 = cube2.addComponent(MeshRenderer);\n\ncubeRenderer.mesh = geometry;\ncubeRenderer.setMaterial(material);\n\ncubeRenderer2.mesh = sphereGeometry;\ncubeRenderer2.setMaterial(material2);\n\n// rotate\nclass RotationScript extends Script {\n  onUpdate() {\n    this.entity.transform.rotate(1, 1, 1);\n  }\n}\ncube.addComponent(RotationScript);\ncube2.addComponent(RotationScript);\n\n// observe renderer-cull\nconst state = {\n  cube1: \"正常渲染\",\n  cube2: \"正常渲染\"\n};\n\nclass ObserverScript extends Script {\n  onUpdate() {\n    state.cube1 = cubeRenderer.isCulled ? \"视锥体裁剪\" : \"正常渲染\";\n    state.cube2 = cubeRenderer2.isCulled ? \"视锥体裁剪\" : \"正常渲染\";\n  }\n}\n\nrootEntity.addComponent(ObserverScript);\n\nconst folder = gui.addFolder(\"移动视角，观察视锥体裁剪情况\");\nfolder.add(state, \"cube1\").name(\"红色立方体\").listen();\nfolder.add(state, \"cube2\").name(\"蓝色球体\").listen();\nfolder.open();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Renderer Cull\n * @category Camera\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> FreeControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  BlinnPhongMaterial<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  Color<span class=\"token punctuation\">,</span>\n  DirectLight<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  Script<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_entity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> control <span class=\"token operator\">=</span> cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>FreeControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncontrol<span class=\"token punctuation\">.</span>movementSpeed <span class=\"token operator\">=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// create two renderer</span>\n<span class=\"token keyword\">const</span> cube <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cube1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> cube2 <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cube2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncube<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncube2<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> lightNode <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Light\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setRotation</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlightNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmaterial<span class=\"token punctuation\">.</span>baseColor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> material2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmaterial2<span class=\"token punctuation\">.</span>baseColor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> geometry <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> sphereGeometry <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createSphere</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> cubeRenderer <span class=\"token operator\">=</span> cube<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> cubeRenderer2 <span class=\"token operator\">=</span> cube2<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ncubeRenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> geometry<span class=\"token punctuation\">;</span>\ncubeRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ncubeRenderer2<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> sphereGeometry<span class=\"token punctuation\">;</span>\ncubeRenderer2<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// rotate</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">RotationScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\ncube<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>RotationScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncube2<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>RotationScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// observe renderer-cull</span>\n<span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  cube1<span class=\"token operator\">:</span> <span class=\"token string\">\"正常渲染\"</span><span class=\"token punctuation\">,</span>\n  cube2<span class=\"token operator\">:</span> <span class=\"token string\">\"正常渲染\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ObserverScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    state<span class=\"token punctuation\">.</span>cube1 <span class=\"token operator\">=</span> cubeRenderer<span class=\"token punctuation\">.</span>isCulled <span class=\"token operator\">?</span> <span class=\"token string\">\"视锥体裁剪\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"正常渲染\"</span><span class=\"token punctuation\">;</span>\n    state<span class=\"token punctuation\">.</span>cube2 <span class=\"token operator\">=</span> cubeRenderer2<span class=\"token punctuation\">.</span>isCulled <span class=\"token operator\">?</span> <span class=\"token string\">\"视锥体裁剪\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"正常渲染\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nrootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>ObserverScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> folder <span class=\"token operator\">=</span> gui<span class=\"token punctuation\">.</span><span class=\"token function\">addFolder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"移动视角，观察视锥体裁剪情况\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfolder<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"cube1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"红色立方体\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfolder<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"cube2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"蓝色球体\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfolder<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  var target = new _oasisEngine.Vector3(0, -3, 0);\n  var up = new _oasisEngine.Vector3(0, 1, 0);\n\n  var Move = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(Move, _Script);\n\n    function Move(node) {\n      var _this;\n\n      _this = _Script.call(this, node) || this;\n      _this.time = 0;\n      _this.y = 3;\n      _this.range = 5;\n      return _this;\n    }\n\n    var _proto = Move.prototype;\n\n    _proto.onUpdate = function onUpdate(deltaTime) {\n      this.time += deltaTime / 1000;\n      var x = Math.cos(this.time) * this.range;\n      var y = Math.sin(this.time) * this.range * 0.2 + this.y;\n      var z = Math.cos(this.time) * this.range;\n      this.entity.transform.position = new _oasisEngine.Vector3(x, y, z);\n    };\n\n    return Move;\n  }(_oasisEngine.Script); // 控制 light entity 始终看向固定点\n\n\n  var LookAtFocus = /*#__PURE__*/function (_Script2) {\n    _inheritsLoose(LookAtFocus, _Script2);\n\n    function LookAtFocus() {\n      return _Script2.apply(this, arguments) || this;\n    }\n\n    var _proto2 = LookAtFocus.prototype;\n\n    _proto2.onUpdate = function onUpdate(deltaTime) {\n      light1.transform.lookAt(target, up);\n    };\n\n    return LookAtFocus;\n  }(_oasisEngine.Script); //-- create engine object\n\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // Logger.enable();\n\n  function createCuboidGeometry(name, position, rotation, w, h, d, castShadow) {\n    if (castShadow === void 0) {\n      castShadow = false;\n    }\n\n    var obj = rootEntity.createChild(name);\n    obj.position = _construct(_oasisEngine.Vector3, position);\n    obj.transform.rotation = new _oasisEngine.Vector3(rotation[0], rotation[0], rotation[0]);\n    var cubeRenderer = obj.addComponent(_oasisEngine.MeshRenderer);\n    cubeRenderer.mesh = _oasisEngine.PrimitiveMesh.createCuboid(rootEntity.engine, w, h, d);\n    cubeRenderer.setMaterial(mtl);\n    cubeRenderer[\"recieveShadow\"] = !castShadow;\n    cubeRenderer[\"castShadow\"] = castShadow;\n  }\n\n  var mtl = new _oasisEngine.BlinnPhongMaterial(engine);\n  mtl.baseColor = new _oasisEngine.Color(0.1, 0.9, 0.8, 1); //-- create light entity\n\n  var lighthouse = rootEntity.createChild(\"lighthouse\");\n  var light1 = lighthouse.createChild(\"light1\");\n  light1.addComponent(Move);\n  light1.addComponent(LookAtFocus);\n  var spotLight = light1.addComponent(_oasisEngine.SpotLight);\n  spotLight.angle = Math.PI / 12;\n  spotLight[\"enableShadow\"] = true;\n  spotLight[\"shadow\"].bias = 0.0001;\n  spotLight[\"shadow\"].intensity = 0.2;\n  var sphereRenderer3 = light1.addComponent(_oasisEngine.MeshRenderer);\n  sphereRenderer3.mesh = _oasisEngine.PrimitiveMesh.createSphere(engine, 0.1);\n  sphereRenderer3.setMaterial(mtl); //-- create geometry\n\n  createCuboidGeometry(\"cubiod1\", [0, -3, 0], [0, 0, 0], 10, 0.1, 10);\n  createCuboidGeometry(\"cubiod2\", [5, -2, 0], [0, 0, 0], 0.1, 2, 10);\n  createCuboidGeometry(\"cubiod3\", [-5, -2, 0], [0, 0, 0], 0.1, 2, 10);\n  createCuboidGeometry(\"cubiod4\", [0, -2, -5], [0, 0, 0], 10, 2, 0.1);\n  createCuboidGeometry(\"cubiod-cast-shadow\", [0, -1, 0], [0, 0, 0], 1, 1, 1, true); //-- create camera\n\n  var cameraNode = rootEntity.createChild(\"camera_node\");\n  cameraNode.transform.position = new _oasisEngine.Vector3(0, 5, 17);\n  cameraNode.transform.lookAt(new _oasisEngine.Vector3(), new _oasisEngine.Vector3(0, 1, 0));\n  cameraNode.addComponent(_oasisEngine.Camera);\n  cameraNode.addComponent(_controls.OrbitControl); //-- run\n\n  engine.run();\n});"},"name":"spotlight-shadow","title":"Spot Light","category":"Light","id":"bfd4e9ab-e4f1-5b61-9325-72ff2a0175eb","sourceCode":"/**\n * @title Spot Light\n * @category Light\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport {\n  BlinnPhongMaterial,\n  Camera,\n  Color,\n  MeshRenderer,\n  PrimitiveMesh,\n  Script,\n  SpotLight,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\nconst target = new Vector3(0, -3, 0);\nconst up = new Vector3(0, 1, 0);\n\nclass Move extends Script {\n  time = 0;\n  y = 3;\n  range = 5;\n\n  constructor(node) {\n    super(node);\n  }\n\n  onUpdate(deltaTime) {\n    this.time += deltaTime / 1000;\n    let x = Math.cos(this.time) * this.range;\n    let y = Math.sin(this.time) * this.range * 0.2 + this.y;\n    let z = Math.cos(this.time) * this.range;\n    this.entity.transform.position = new Vector3(x, y, z);\n  }\n}\n\n// 控制 light entity 始终看向固定点\nclass LookAtFocus extends Script {\n  onUpdate(deltaTime) {\n    light1.transform.lookAt(target, up);\n  }\n}\n\n//-- create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// Logger.enable();\nfunction createCuboidGeometry(name, position, rotation, w, h, d, castShadow: boolean = false) {\n  let obj = rootEntity.createChild(name);\n  obj.position = new Vector3(...position);\n  obj.transform.rotation = new Vector3(rotation[0], rotation[0], rotation[0]);\n  let cubeRenderer = obj.addComponent(MeshRenderer);\n  cubeRenderer.mesh = PrimitiveMesh.createCuboid(rootEntity.engine, w, h, d);\n  cubeRenderer.setMaterial(mtl);\n  cubeRenderer[\"recieveShadow\"] = !castShadow;\n  cubeRenderer[\"castShadow\"] = castShadow;\n}\n\nlet mtl = new BlinnPhongMaterial(engine);\nmtl.baseColor = new Color(0.1, 0.9, 0.8, 1);\n//-- create light entity\nlet lighthouse = rootEntity.createChild(\"lighthouse\");\nlet light1 = lighthouse.createChild(\"light1\");\nlight1.addComponent(Move);\nlight1.addComponent(LookAtFocus);\n\nlet spotLight = light1.addComponent(SpotLight);\nspotLight.angle = Math.PI / 12;\nspotLight[\"enableShadow\"] = true;\nspotLight[\"shadow\"].bias = 0.0001;\nspotLight[\"shadow\"].intensity = 0.2;\n\nlet sphereRenderer3 = light1.addComponent(MeshRenderer);\nsphereRenderer3.mesh = PrimitiveMesh.createSphere(engine, 0.1);\nsphereRenderer3.setMaterial(mtl);\n\n//-- create geometry\ncreateCuboidGeometry(\"cubiod1\", [0, -3, 0], [0, 0, 0], 10, 0.1, 10);\ncreateCuboidGeometry(\"cubiod2\", [5, -2, 0], [0, 0, 0], 0.1, 2, 10);\ncreateCuboidGeometry(\"cubiod3\", [-5, -2, 0], [0, 0, 0], 0.1, 2, 10);\ncreateCuboidGeometry(\"cubiod4\", [0, -2, -5], [0, 0, 0], 10, 2, 0.1);\ncreateCuboidGeometry(\"cubiod-cast-shadow\", [0, -1, 0], [0, 0, 0], 1, 1, 1, true);\n\n//-- create camera\nlet cameraNode = rootEntity.createChild(\"camera_node\");\ncameraNode.transform.position = new Vector3(0, 5, 17);\ncameraNode.transform.lookAt(new Vector3(), new Vector3(0, 1, 0));\ncameraNode.addComponent(Camera);\ncameraNode.addComponent(OrbitControl);\n\n//-- run\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Spot Light\n * @category Light\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  BlinnPhongMaterial<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  Color<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  Script<span class=\"token punctuation\">,</span>\n  SpotLight<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> target <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> up <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Move</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  time <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  y <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n  range <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">deltaTime</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>time <span class=\"token operator\">+=</span> deltaTime <span class=\"token operator\">/</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>range<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> y <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>range <span class=\"token operator\">*</span> <span class=\"token number\">0.2</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> z <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>range<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 控制 light entity 始终看向固定点</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">LookAtFocus</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">deltaTime</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    light1<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> up<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//-- create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Logger.enable();</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">createCuboidGeometry</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">,</span> rotation<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> castShadow<span class=\"token operator\">:</span> boolean <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> obj <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  obj<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  obj<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>rotation <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span>rotation<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> rotation<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> rotation<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> cubeRenderer <span class=\"token operator\">=</span> obj<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cubeRenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createCuboid</span><span class=\"token punctuation\">(</span>rootEntity<span class=\"token punctuation\">.</span>engine<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cubeRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>mtl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cubeRenderer<span class=\"token punctuation\">[</span><span class=\"token string\">\"recieveShadow\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>castShadow<span class=\"token punctuation\">;</span>\n  cubeRenderer<span class=\"token punctuation\">[</span><span class=\"token string\">\"castShadow\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> castShadow<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> mtl <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BlinnPhongMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmtl<span class=\"token punctuation\">.</span>baseColor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//-- create light entity</span>\n<span class=\"token keyword\">let</span> lighthouse <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lighthouse\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> light1 <span class=\"token operator\">=</span> lighthouse<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"light1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlight1<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Move<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nlight1<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>LookAtFocus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> spotLight <span class=\"token operator\">=</span> light1<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpotLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nspotLight<span class=\"token punctuation\">.</span>angle <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span> <span class=\"token operator\">/</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\nspotLight<span class=\"token punctuation\">[</span><span class=\"token string\">\"enableShadow\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\nspotLight<span class=\"token punctuation\">[</span><span class=\"token string\">\"shadow\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>bias <span class=\"token operator\">=</span> <span class=\"token number\">0.0001</span><span class=\"token punctuation\">;</span>\nspotLight<span class=\"token punctuation\">[</span><span class=\"token string\">\"shadow\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>intensity <span class=\"token operator\">=</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> sphereRenderer3 <span class=\"token operator\">=</span> light1<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsphereRenderer3<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createSphere</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsphereRenderer3<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>mtl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create geometry</span>\n<span class=\"token function\">createCuboidGeometry</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cubiod1\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">createCuboidGeometry</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cubiod2\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">createCuboidGeometry</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cubiod3\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">createCuboidGeometry</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cubiod4\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">createCuboidGeometry</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cubiod-cast-shadow\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- create camera</span>\n<span class=\"token keyword\">let</span> cameraNode <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_node\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraNode<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//-- run</span>\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  // Create engine.\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize(); // Create root entity.\n\n  var rootEntity = engine.sceneManager.activeScene.createRootEntity(); // Create camera.\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 0, 50);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl); // Create sprite and mask.\n\n  engine.resourceManager.load([{\n    // \bSprite texture\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*rgNGR4Vb7lQAAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }, {\n    // Mask texture\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*qyhFT5Un5AgAAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }, {\n    // Mask texture\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*pgrpQIneqSUAAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }]).then(function (textures) {\n    var pos = new _oasisEngine.Vector3();\n    var scale = new _oasisEngine.Vector3(); // Create sprites.\n\n    var sprite = new _oasisEngine.Sprite(engine, textures[0]);\n    var maskSprite0 = new _oasisEngine.Sprite(engine, textures[1]);\n    var maksSprite1 = new _oasisEngine.Sprite(engine, textures[2]); // Show inside mask.\n\n    pos.setValue(-5, 0, 0);\n    scale.setValue(2, 2, 2);\n    addSpriteRenderer(pos, scale, sprite, _oasisEngine.SpriteMaskInteraction.VisibleInsideMask, _oasisEngine.SpriteMaskLayer.Layer0);\n    addMask(pos, maskSprite0, _oasisEngine.SpriteMaskLayer.Layer0, ScaleScript); // Show outside mask.\n\n    pos.setValue(5, 0, 0);\n    scale.setValue(2, 2, 2);\n    addSpriteRenderer(pos, scale, sprite, _oasisEngine.SpriteMaskInteraction.VisibleOutsideMask, _oasisEngine.SpriteMaskLayer.Layer1);\n    addMask(pos, maksSprite1, _oasisEngine.SpriteMaskLayer.Layer1, RotationScript);\n  });\n  engine.run();\n  /**\n   * Add sprite renderer and set mask interaction and layer.\n   */\n\n  function addSpriteRenderer(pos, scale, sprite, maskInteraction, maskLayer) {\n    var entity = rootEntity.createChild(\"Sprite\");\n    var renderer = entity.addComponent(_oasisEngine.SpriteRenderer);\n    var transform = entity.transform;\n    transform.position = pos;\n    transform.scale = scale;\n    renderer.sprite = sprite;\n    renderer.maskInteraction = maskInteraction;\n    renderer.maskLayer = maskLayer;\n  }\n  /**\n   * Add sprite mask and set influence layers, include mask animation script.\n   */\n\n\n  function addMask(pos, sprite, influenceLayers, scriptType) {\n    var entity = rootEntity.createChild(\"Mask\");\n    var mask = entity.addComponent(_oasisEngine.SpriteMask);\n    entity.addComponent(scriptType);\n    entity.transform.position = pos;\n    mask.sprite = sprite;\n    mask.influenceLayers = influenceLayers;\n  }\n\n  var ScaleScript = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(ScaleScript, _Script);\n\n    function ScaleScript() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _Script.call.apply(_Script, [this].concat(args)) || this;\n      _this._scaleSpeed = 0.01;\n      return _this;\n    }\n\n    var _proto = ScaleScript.prototype;\n\n    /**\n     * The main loop, called frame by frame.\n     * @param deltaTime - The deltaTime when the script update.\n     */\n    _proto.onUpdate = function onUpdate(deltaTime) {\n      var transform = this.entity.transform;\n      var curScale = transform.scale.x;\n\n      if (curScale <= 0 || curScale >= 2) {\n        this._scaleSpeed *= -1;\n      }\n\n      curScale += this._scaleSpeed;\n      transform.setScale(curScale, curScale, curScale);\n    };\n\n    return ScaleScript;\n  }(_oasisEngine.Script);\n\n  var RotationScript = /*#__PURE__*/function (_Script2) {\n    _inheritsLoose(RotationScript, _Script2);\n\n    function RotationScript() {\n      var _this2;\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this2 = _Script2.call.apply(_Script2, [this].concat(args)) || this;\n      _this2._rotationSpeed = -0.5;\n      return _this2;\n    }\n\n    var _proto2 = RotationScript.prototype;\n\n    /**\n     * The main loop, called frame by frame.\n     * @param deltaTime - The deltaTime when the script update.\n     */\n    _proto2.onUpdate = function onUpdate(deltaTime) {\n      this.entity.transform.rotate(0, 0, this._rotationSpeed);\n    };\n\n    return RotationScript;\n  }(_oasisEngine.Script);\n});"},"name":"sprite-mask","title":"Sprite Mask","category":"2D","id":"9340a92d-4651-542d-940b-b202985df1a3","sourceCode":"/**\n * @title Sprite Mask\n * @category 2D\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport {\n  AssetType,\n  Camera,\n  Entity,\n  Script,\n  Sprite,\n  SpriteMask,\n  SpriteMaskInteraction,\n  SpriteMaskLayer,\n  SpriteRenderer,\n  Texture2D,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\n\n// Create engine.\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\n// Create root entity.\nconst rootEntity = engine.sceneManager.activeScene.createRootEntity();\n\n// Create camera.\nconst cameraEntity = rootEntity.createChild(\"Camera\");\ncameraEntity.transform.setPosition(0, 0, 50);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\n// Create sprite and mask.\nengine.resourceManager\n  .load([\n    {\n      // \bSprite texture\n      url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*rgNGR4Vb7lQAAAAAAAAAAAAAARQnAQ\",\n      type: AssetType.Texture2D\n    },\n    {\n      // Mask texture\n      url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*qyhFT5Un5AgAAAAAAAAAAAAAARQnAQ\",\n      type: AssetType.Texture2D\n    },\n    {\n      // Mask texture\n      url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*pgrpQIneqSUAAAAAAAAAAAAAARQnAQ\",\n      type: AssetType.Texture2D\n    }\n  ])\n  .then((textures: Texture2D[]) => {\n    const pos = new Vector3();\n    const scale = new Vector3();\n\n    // Create sprites.\n    const sprite = new Sprite(engine, textures[0]);\n    const maskSprite0 = new Sprite(engine, textures[1]);\n    const maksSprite1 = new Sprite(engine, textures[2]);\n\n    // Show inside mask.\n    pos.setValue(-5, 0, 0);\n    scale.setValue(2, 2, 2);\n    addSpriteRenderer(pos, scale, sprite, SpriteMaskInteraction.VisibleInsideMask, SpriteMaskLayer.Layer0);\n    addMask(pos, maskSprite0, SpriteMaskLayer.Layer0, ScaleScript);\n\n    // Show outside mask.\n    pos.setValue(5, 0, 0);\n    scale.setValue(2, 2, 2);\n    addSpriteRenderer(pos, scale, sprite, SpriteMaskInteraction.VisibleOutsideMask, SpriteMaskLayer.Layer1);\n    addMask(pos, maksSprite1, SpriteMaskLayer.Layer1, RotationScript);\n  });\n\nengine.run();\n\n/**\n * Add sprite renderer and set mask interaction and layer.\n */\nfunction addSpriteRenderer(\n  pos: Vector3,\n  scale: Vector3,\n  sprite: Sprite,\n  maskInteraction: SpriteMaskInteraction,\n  maskLayer: number\n): void {\n  const entity = rootEntity.createChild(\"Sprite\");\n  const renderer = entity.addComponent(SpriteRenderer);\n  const { transform } = entity;\n\n  transform.position = pos;\n  transform.scale = scale;\n  renderer.sprite = sprite;\n  renderer.maskInteraction = maskInteraction;\n  renderer.maskLayer = maskLayer;\n}\n\n/**\n * Add sprite mask and set influence layers, include mask animation script.\n */\nfunction addMask<T extends Script>(\n  pos: Vector3,\n  sprite: Sprite,\n  influenceLayers: number,\n  scriptType: new (entity: Entity) => T\n): void {\n  const entity = rootEntity.createChild(\"Mask\");\n  const mask = entity.addComponent(SpriteMask);\n\n  entity.addComponent(scriptType);\n  entity.transform.position = pos;\n  mask.sprite = sprite;\n  mask.influenceLayers = influenceLayers;\n}\n\nclass ScaleScript extends Script {\n  private _scaleSpeed: number = 0.01;\n\n  /**\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */\n  onUpdate(deltaTime: number): void {\n    const { transform } = this.entity;\n    let curScale = transform.scale.x;\n\n    if (curScale <= 0 || curScale >= 2) {\n      this._scaleSpeed *= -1;\n    }\n\n    curScale += this._scaleSpeed;\n    transform.setScale(curScale, curScale, curScale);\n  }\n}\n\nclass RotationScript extends Script {\n  private _rotationSpeed: number = -0.5;\n\n  /**\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */\n  onUpdate(deltaTime: number): void {\n    this.entity.transform.rotate(0, 0, this._rotationSpeed);\n  }\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Sprite Mask\n * @category 2D\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  Entity<span class=\"token punctuation\">,</span>\n  Script<span class=\"token punctuation\">,</span>\n  Sprite<span class=\"token punctuation\">,</span>\n  SpriteMask<span class=\"token punctuation\">,</span>\n  SpriteMaskInteraction<span class=\"token punctuation\">,</span>\n  SpriteMaskLayer<span class=\"token punctuation\">,</span>\n  SpriteRenderer<span class=\"token punctuation\">,</span>\n  Texture2D<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine.</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create root entity.</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera.</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create sprite and mask.</span>\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// \bSprite texture</span>\n      url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*rgNGR4Vb7lQAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Mask texture</span>\n      url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*qyhFT5Un5AgAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Mask texture</span>\n      url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*pgrpQIneqSUAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">textures<span class=\"token operator\">:</span> Texture2D<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> pos <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> scale <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Create sprites.</span>\n    <span class=\"token keyword\">const</span> sprite <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> textures<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> maskSprite0 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> textures<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> maksSprite1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> textures<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Show inside mask.</span>\n    pos<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    scale<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addSpriteRenderer</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">,</span> scale<span class=\"token punctuation\">,</span> sprite<span class=\"token punctuation\">,</span> SpriteMaskInteraction<span class=\"token punctuation\">.</span>VisibleInsideMask<span class=\"token punctuation\">,</span> SpriteMaskLayer<span class=\"token punctuation\">.</span>Layer0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addMask</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">,</span> maskSprite0<span class=\"token punctuation\">,</span> SpriteMaskLayer<span class=\"token punctuation\">.</span>Layer0<span class=\"token punctuation\">,</span> ScaleScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Show outside mask.</span>\n    pos<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    scale<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addSpriteRenderer</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">,</span> scale<span class=\"token punctuation\">,</span> sprite<span class=\"token punctuation\">,</span> SpriteMaskInteraction<span class=\"token punctuation\">.</span>VisibleOutsideMask<span class=\"token punctuation\">,</span> SpriteMaskLayer<span class=\"token punctuation\">.</span>Layer1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addMask</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">,</span> maksSprite1<span class=\"token punctuation\">,</span> SpriteMaskLayer<span class=\"token punctuation\">.</span>Layer1<span class=\"token punctuation\">,</span> RotationScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Add sprite renderer and set mask interaction and layer.\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">addSpriteRenderer</span><span class=\"token punctuation\">(</span>\n  <span class=\"token parameter\">pos<span class=\"token operator\">:</span> Vector3<span class=\"token punctuation\">,</span>\n  scale<span class=\"token operator\">:</span> Vector3<span class=\"token punctuation\">,</span>\n  sprite<span class=\"token operator\">:</span> Sprite<span class=\"token punctuation\">,</span>\n  maskInteraction<span class=\"token operator\">:</span> SpriteMaskInteraction<span class=\"token punctuation\">,</span>\n  maskLayer<span class=\"token operator\">:</span> number</span>\n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> entity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sprite\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> renderer <span class=\"token operator\">=</span> entity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> transform <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> entity<span class=\"token punctuation\">;</span>\n\n  transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> pos<span class=\"token punctuation\">;</span>\n  transform<span class=\"token punctuation\">.</span>scale <span class=\"token operator\">=</span> scale<span class=\"token punctuation\">;</span>\n  renderer<span class=\"token punctuation\">.</span>sprite <span class=\"token operator\">=</span> sprite<span class=\"token punctuation\">;</span>\n  renderer<span class=\"token punctuation\">.</span>maskInteraction <span class=\"token operator\">=</span> maskInteraction<span class=\"token punctuation\">;</span>\n  renderer<span class=\"token punctuation\">.</span>maskLayer <span class=\"token operator\">=</span> maskLayer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * Add sprite mask and set influence layers, include mask animation script.\n */</span>\n<span class=\"token keyword\">function</span> addMask<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>\n  pos<span class=\"token operator\">:</span> Vector3<span class=\"token punctuation\">,</span>\n  sprite<span class=\"token operator\">:</span> Sprite<span class=\"token punctuation\">,</span>\n  influenceLayers<span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span>\n  scriptType<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">entity<span class=\"token operator\">:</span> Entity</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token constant\">T</span>\n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> entity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Mask\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> mask <span class=\"token operator\">=</span> entity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpriteMask<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  entity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>scriptType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> pos<span class=\"token punctuation\">;</span>\n  mask<span class=\"token punctuation\">.</span>sprite <span class=\"token operator\">=</span> sprite<span class=\"token punctuation\">;</span>\n  mask<span class=\"token punctuation\">.</span>influenceLayers <span class=\"token operator\">=</span> influenceLayers<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ScaleScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> _scaleSpeed<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/**\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */</span>\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span>deltaTime<span class=\"token operator\">:</span> number<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> transform <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> curScale <span class=\"token operator\">=</span> transform<span class=\"token punctuation\">.</span>scale<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>curScale <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> curScale <span class=\"token operator\">>=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scaleSpeed <span class=\"token operator\">*=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    curScale <span class=\"token operator\">+=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scaleSpeed<span class=\"token punctuation\">;</span>\n    transform<span class=\"token punctuation\">.</span><span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span>curScale<span class=\"token punctuation\">,</span> curScale<span class=\"token punctuation\">,</span> curScale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">RotationScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> _rotationSpeed<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/**\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */</span>\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span>deltaTime<span class=\"token operator\">:</span> number<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_rotationSpeed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title Sprite Color\n   * @category 2D\n   */\n  // Create engine object\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // Create camera\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 0, 50);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl);\n  engine.resourceManager.load({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*KjnzTpE8LdAAAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }).then(function (texture) {\n    // Create origin sprite entity.\n    var spriteEntity = new _oasisEngine.Entity(engine, \"spriteColor\");\n    var spriteRenderer = spriteEntity.addComponent(_oasisEngine.SpriteRenderer);\n    spriteRenderer.sprite = new _oasisEngine.Sprite(engine, texture);\n    var color = new _oasisEngine.Color(); // Display normal\n\n    addColorEntity(spriteEntity, -20, color.setValue(1, 1, 1, 1)); // Display red\n\n    addColorEntity(spriteEntity.clone(), -10, color.setValue(1, 0, 0, 1)); // Display green\n\n    addColorEntity(spriteEntity.clone(), 0, color.setValue(0, 1, 0, 1)); // Display blue\n\n    addColorEntity(spriteEntity.clone(), 10, color.setValue(0, 0, 1, 1)); // Display alpha\n\n    addColorEntity(spriteEntity.clone(), 20, color.setValue(1, 1, 1, 0.2));\n  });\n  engine.run();\n\n  function addColorEntity(entity, posX, color) {\n    rootEntity.addChild(entity);\n    entity.transform.setPosition(posX, 0, 0);\n    entity.getComponent(_oasisEngine.SpriteRenderer).color = color;\n  }\n});"},"name":"sprite-color","title":"Sprite Color","category":"2D","id":"3308e02a-c63d-551b-b2db-96d43d1f0c6a","sourceCode":"/**\n * @title Sprite Color\n * @category 2D\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport {\n  AssetType,\n  Camera,\n  Color,\n  Entity,\n  Sprite,\n  SpriteRenderer,\n  Texture2D,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\n\n// Create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// Create camera\nconst cameraEntity = rootEntity.createChild(\"Camera\");\ncameraEntity.transform.position = new Vector3(0, 0, 50);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\nengine.resourceManager\n  .load<Texture2D>({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*KjnzTpE8LdAAAAAAAAAAAAAAARQnAQ\",\n    type: AssetType.Texture2D\n  })\n  .then((texture) => {\n    // Create origin sprite entity.\n    const spriteEntity = new Entity(engine, \"spriteColor\");\n    const spriteRenderer = spriteEntity.addComponent(SpriteRenderer);\n    spriteRenderer.sprite = new Sprite(engine, texture);\n    const color = new Color();\n    // Display normal\n    addColorEntity(spriteEntity, -20, color.setValue(1, 1, 1, 1));\n    // Display red\n    addColorEntity(spriteEntity.clone(), -10, color.setValue(1, 0, 0, 1));\n    // Display green\n    addColorEntity(spriteEntity.clone(), 0, color.setValue(0, 1, 0, 1));\n    // Display blue\n    addColorEntity(spriteEntity.clone(), 10, color.setValue(0, 0, 1, 1));\n    // Display alpha\n    addColorEntity(spriteEntity.clone(), 20, color.setValue(1, 1, 1, 0.2));\n  });\n\nengine.run();\n\nfunction addColorEntity(entity: Entity, posX: number, color: Color): void {\n  rootEntity.addChild(entity);\n  entity.transform.setPosition(posX, 0, 0);\n  entity.getComponent(SpriteRenderer).color = color;\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Sprite Color\n * @category 2D\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  Color<span class=\"token punctuation\">,</span>\n  Entity<span class=\"token punctuation\">,</span>\n  Sprite<span class=\"token punctuation\">,</span>\n  SpriteRenderer<span class=\"token punctuation\">,</span>\n  Texture2D<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*KjnzTpE8LdAAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Create origin sprite entity.</span>\n    <span class=\"token keyword\">const</span> spriteEntity <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Entity</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token string\">\"spriteColor\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> spriteRenderer <span class=\"token operator\">=</span> spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    spriteRenderer<span class=\"token punctuation\">.</span>sprite <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> color <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display normal</span>\n    <span class=\"token function\">addColorEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display red</span>\n    <span class=\"token function\">addColorEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display green</span>\n    <span class=\"token function\">addColorEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display blue</span>\n    <span class=\"token function\">addColorEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display alpha</span>\n    <span class=\"token function\">addColorEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">addColorEntity</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entity<span class=\"token operator\">:</span> Entity<span class=\"token punctuation\">,</span> posX<span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span> color<span class=\"token operator\">:</span> Color</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>entity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>posX<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  entity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title Sprite Flip\n   * @category 2D\n   */\n  // Create engine object.\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize(); // Create root entity.\n\n  var rootEntity = engine.sceneManager.activeScene.createRootEntity(); // Create camera.\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 0, 50);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl);\n  engine.resourceManager.load({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*KjnzTpE8LdAAAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }).then(function (texture) {\n    // Create origin sprite entity.\n    var spriteEntity = new _oasisEngine.Entity(engine, \"spriteFlip\");\n    var spriteRenderer = spriteEntity.addComponent(_oasisEngine.SpriteRenderer);\n    spriteRenderer.sprite = new _oasisEngine.Sprite(engine, texture); // Display mormal.\n\n    addFlipEntity(spriteEntity, -15, false, false); // Display flip x.\n\n    addFlipEntity(spriteEntity.clone(), -5, true, false); // Display flip y.\n\n    addFlipEntity(spriteEntity.clone(), 5, false, true); // Display flip x and y.\n\n    addFlipEntity(spriteEntity.clone(), 15, true, true);\n  });\n  engine.run();\n  /**\n   * Add flip entity.\n   */\n\n  function addFlipEntity(entity, posX, flipX, flipY) {\n    rootEntity.addChild(entity);\n    entity.transform.setPosition(posX, 0, 0);\n    var flipRenderer = entity.getComponent(_oasisEngine.SpriteRenderer);\n    flipRenderer.flipX = flipX;\n    flipRenderer.flipY = flipY;\n  }\n});"},"name":"sprite-flip","title":"Sprite Flip","category":"2D","id":"f268e663-f3b2-564b-ab41-6eeae6b5f261","sourceCode":"/**\n * @title Sprite Flip\n * @category 2D\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport { AssetType, Camera, Entity, Sprite, SpriteRenderer, Texture2D, WebGLEngine } from \"oasis-engine\";\n\n// Create engine object.\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\n// Create root entity.\nconst rootEntity = engine.sceneManager.activeScene.createRootEntity();\n\n// Create camera.\nconst cameraEntity = rootEntity.createChild(\"Camera\");\ncameraEntity.transform.setPosition(0, 0, 50);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\nengine.resourceManager\n  .load<Texture2D>({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*KjnzTpE8LdAAAAAAAAAAAAAAARQnAQ\",\n    type: AssetType.Texture2D\n  })\n  .then((texture) => {\n    // Create origin sprite entity.\n    const spriteEntity = new Entity(engine, \"spriteFlip\");\n    const spriteRenderer = spriteEntity.addComponent(SpriteRenderer);\n    spriteRenderer.sprite = new Sprite(engine, texture);\n\n    // Display mormal.\n    addFlipEntity(spriteEntity, -15, false, false);\n    // Display flip x.\n    addFlipEntity(spriteEntity.clone(), -5, true, false);\n    // Display flip y.\n    addFlipEntity(spriteEntity.clone(), 5, false, true);\n    // Display flip x and y.\n    addFlipEntity(spriteEntity.clone(), 15, true, true);\n  });\n\nengine.run();\n\n/**\n * Add flip entity.\n */\nfunction addFlipEntity(entity: Entity, posX: number, flipX: boolean, flipY: boolean): void {\n  rootEntity.addChild(entity);\n  entity.transform.setPosition(posX, 0, 0);\n  const flipRenderer = entity.getComponent(SpriteRenderer);\n  flipRenderer.flipX = flipX;\n  flipRenderer.flipY = flipY;\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Sprite Flip\n * @category 2D\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AssetType<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> Entity<span class=\"token punctuation\">,</span> Sprite<span class=\"token punctuation\">,</span> SpriteRenderer<span class=\"token punctuation\">,</span> Texture2D<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine object.</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create root entity.</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera.</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*KjnzTpE8LdAAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Create origin sprite entity.</span>\n    <span class=\"token keyword\">const</span> spriteEntity <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Entity</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token string\">\"spriteFlip\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> spriteRenderer <span class=\"token operator\">=</span> spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    spriteRenderer<span class=\"token punctuation\">.</span>sprite <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Display mormal.</span>\n    <span class=\"token function\">addFlipEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display flip x.</span>\n    <span class=\"token function\">addFlipEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display flip y.</span>\n    <span class=\"token function\">addFlipEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display flip x and y.</span>\n    <span class=\"token function\">addFlipEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Add flip entity.\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">addFlipEntity</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entity<span class=\"token operator\">:</span> Entity<span class=\"token punctuation\">,</span> posX<span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span> flipX<span class=\"token operator\">:</span> boolean<span class=\"token punctuation\">,</span> flipY<span class=\"token operator\">:</span> boolean</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>entity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>posX<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> flipRenderer <span class=\"token operator\">=</span> entity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  flipRenderer<span class=\"token punctuation\">.</span>flipX <span class=\"token operator\">=</span> flipX<span class=\"token punctuation\">;</span>\n  flipRenderer<span class=\"token punctuation\">.</span>flipY <span class=\"token operator\">=</span> flipY<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title Sprite Pivot\n   * @category 2D\n   */\n  // Create engine object.\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize(); // Create root entity.\n\n  var rootEntity = engine.sceneManager.activeScene.createRootEntity(); // Create camera.\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 0, 50);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl);\n  engine.resourceManager.load({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*d3N9RYpcKncAAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }).then(function (texture) {\n    // Create origin sprite entity.\n    var spriteEntity = new _oasisEngine.Entity(engine, \"spritePivot\");\n    var transform = spriteEntity.transform;\n    transform.setScale(3, 3, 3);\n    transform.setPosition(0, 5, 0);\n    spriteEntity.addComponent(_oasisEngine.SpriteRenderer); // Display normal.\n\n    addPivotEntity(spriteEntity, texture, 8); // Display pivot entity\n\n    var pivotEntity = spriteEntity.clone();\n    addPivotEntity(pivotEntity, texture, -8);\n    addDataGUI(pivotEntity);\n  });\n  engine.run();\n  /**\n   * Add flip entity.\n   */\n\n  function addPivotEntity(entity, texture, posY) {\n    rootEntity.addChild(entity);\n    entity.transform.setPosition(0, posY, 0);\n    entity.getComponent(_oasisEngine.SpriteRenderer).sprite = new _oasisEngine.Sprite(entity.engine, texture);\n  }\n  /**\n   * Add data GUI.\n   */\n\n\n  function addDataGUI(entity) {\n    var sprite = entity.getComponent(_oasisEngine.SpriteRenderer).sprite;\n    var pivot = new _oasisEngine.Vector2(0.5, 0.5);\n    var gui = new dat.GUI();\n    var guiData = {\n      pivotX: 0.5,\n      pivotY: 0.5,\n      reset: function reset() {\n        guiData.pivotX = 0.5;\n        guiData.pivotY = 0.5;\n        pivot.setValue(0.5, 0.5);\n        sprite.pivot = pivot;\n      }\n    };\n    gui.add(guiData, \"pivotX\", 0.0, 1.0, 0.01).onChange(function (value) {\n      pivot.x = value;\n      sprite.pivot = pivot;\n    }).listen();\n    gui.add(guiData, \"pivotY\", 0.0, 1.0, 0.01).onChange(function (value) {\n      pivot.y = value;\n      sprite.pivot = pivot;\n    }).listen();\n    gui.add(guiData, \"reset\").name(\"重置\");\n    return guiData;\n  }\n});"},"name":"sprite-pivot","title":"Sprite Pivot","category":"2D","id":"6f81d7ba-bfc4-5f3f-9e40-0437ca2bda04","sourceCode":"/**\n * @title Sprite Pivot\n * @category 2D\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\nimport { AssetType, Camera, Entity, Sprite, SpriteRenderer, Texture2D, Vector2, WebGLEngine } from \"oasis-engine\";\n\n// Create engine object.\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\n// Create root entity.\nconst rootEntity = engine.sceneManager.activeScene.createRootEntity();\n\n// Create camera.\nconst cameraEntity = rootEntity.createChild(\"Camera\");\ncameraEntity.transform.setPosition(0, 0, 50);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\nengine.resourceManager\n  .load<Texture2D>({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*d3N9RYpcKncAAAAAAAAAAAAAARQnAQ\",\n    type: AssetType.Texture2D\n  })\n  .then((texture) => {\n    // Create origin sprite entity.\n    const spriteEntity = new Entity(engine, \"spritePivot\");\n    const { transform } = spriteEntity;\n    transform.setScale(3, 3, 3);\n    transform.setPosition(0, 5, 0);\n    spriteEntity.addComponent(SpriteRenderer);\n\n    // Display normal.\n    addPivotEntity(spriteEntity, texture, 8);\n    // Display pivot entity\n    const pivotEntity = spriteEntity.clone();\n    addPivotEntity(pivotEntity, texture, -8);\n    addDataGUI(pivotEntity);\n  });\n\nengine.run();\n\n/**\n * Add flip entity.\n */\nfunction addPivotEntity(entity: Entity, texture: Texture2D, posY: number): void {\n  rootEntity.addChild(entity);\n  entity.transform.setPosition(0, posY, 0);\n  entity.getComponent(SpriteRenderer).sprite = new Sprite(entity.engine, texture);\n}\n\n/**\n * Add data GUI.\n */\nfunction addDataGUI(entity: Entity) {\n  const sprite = entity.getComponent(SpriteRenderer).sprite;\n  const pivot = new Vector2(0.5, 0.5);\n  const gui = new dat.GUI();\n  const guiData = {\n    pivotX: 0.5,\n    pivotY: 0.5,\n    reset: () => {\n      guiData.pivotX = 0.5;\n      guiData.pivotY = 0.5;\n      pivot.setValue(0.5, 0.5);\n      sprite.pivot = pivot;\n    }\n  };\n\n  gui\n    .add(guiData, \"pivotX\", 0.0, 1.0, 0.01)\n    .onChange((value: number) => {\n      pivot.x = value;\n      sprite.pivot = pivot;\n    })\n    .listen();\n  gui\n    .add(guiData, \"pivotY\", 0.0, 1.0, 0.01)\n    .onChange((value: number) => {\n      pivot.y = value;\n      sprite.pivot = pivot;\n    })\n    .listen();\n  gui.add(guiData, \"reset\").name(\"重置\");\n\n  return guiData;\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Sprite Pivot\n * @category 2D\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AssetType<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> Entity<span class=\"token punctuation\">,</span> Sprite<span class=\"token punctuation\">,</span> SpriteRenderer<span class=\"token punctuation\">,</span> Texture2D<span class=\"token punctuation\">,</span> Vector2<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine object.</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create root entity.</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera.</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*d3N9RYpcKncAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Create origin sprite entity.</span>\n    <span class=\"token keyword\">const</span> spriteEntity <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Entity</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token string\">\"spritePivot\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> transform <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> spriteEntity<span class=\"token punctuation\">;</span>\n    transform<span class=\"token punctuation\">.</span><span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Display normal.</span>\n    <span class=\"token function\">addPivotEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display pivot entity</span>\n    <span class=\"token keyword\">const</span> pivotEntity <span class=\"token operator\">=</span> spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addPivotEntity</span><span class=\"token punctuation\">(</span>pivotEntity<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addDataGUI</span><span class=\"token punctuation\">(</span>pivotEntity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Add flip entity.\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">addPivotEntity</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entity<span class=\"token operator\">:</span> Entity<span class=\"token punctuation\">,</span> texture<span class=\"token operator\">:</span> Texture2D<span class=\"token punctuation\">,</span> posY<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>entity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> posY<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  entity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>sprite <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">(</span>entity<span class=\"token punctuation\">.</span>engine<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * Add data GUI.\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">addDataGUI</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entity<span class=\"token operator\">:</span> Entity</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> sprite <span class=\"token operator\">=</span> entity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>sprite<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> pivot <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector2</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> guiData <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    pivotX<span class=\"token operator\">:</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span>\n    pivotY<span class=\"token operator\">:</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">reset</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      guiData<span class=\"token punctuation\">.</span>pivotX <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n      guiData<span class=\"token punctuation\">.</span>pivotY <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n      pivot<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      sprite<span class=\"token punctuation\">.</span>pivot <span class=\"token operator\">=</span> pivot<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  gui\n    <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"pivotX\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      pivot<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n      sprite<span class=\"token punctuation\">.</span>pivot <span class=\"token operator\">=</span> pivot<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui\n    <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"pivotY\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      pivot<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n      sprite<span class=\"token punctuation\">.</span>pivot <span class=\"token operator\">=</span> pivot<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"reset\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"重置\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> guiData<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title Sprite Material Blur\n   * @category 2D\n   */\n  // Create engine object\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // Create camera\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 0, 20);\n  cameraEntity.addComponent(_oasisEngine.Camera).isOrthographic = true;\n  engine.resourceManager.load({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*L2GNRLWn9EAAAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }).then(function (texture) {\n    // Create origin sprite entity.\n    var texSize = new _oasisEngine.Vector2(texture.width, texture.height);\n    var spriteEntity = rootEntity.createChild(\"spriteBlur\");\n    spriteEntity.addComponent(_oasisEngine.SpriteRenderer).sprite = new _oasisEngine.Sprite(engine, texture); // The blur algorithm will sample the edges of the texture.\n    // Set the clamp warp mode to avoid mis-sampling caused by repeate warp mode.\n\n    texture.wrapModeU = texture.wrapModeV = _oasisEngine.TextureWrapMode.Clamp; // Display normal\n\n    addCustomMaterialSpriteEntity(spriteEntity, -7.5, texSize, 0.0); // Display low blur\n\n    addCustomMaterialSpriteEntity(spriteEntity.clone(), -2.5, texSize, 1.0); // Display moderate blur\n\n    addCustomMaterialSpriteEntity(spriteEntity.clone(), 2.5, texSize, 2.0); // Display highly blur\n\n    addCustomMaterialSpriteEntity(spriteEntity.clone(), 7.5, texSize, 3.0);\n  });\n  engine.run();\n\n  function addCustomMaterialSpriteEntity(entity, posX, texSize, blurSize) {\n    rootEntity.addChild(entity);\n    entity.transform.setPosition(posX, 0, 0); // Create material\n\n    var material = new _oasisEngine.Material(engine, _oasisEngine.Shader.find(\"SpriteBlur\"));\n    entity.getComponent(_oasisEngine.SpriteRenderer).setMaterial(material); // Init state\n\n    var target = material.renderState.blendState.targetBlendState;\n    target.enabled = true;\n    target.sourceColorBlendFactor = _oasisEngine.BlendFactor.SourceAlpha;\n    target.destinationColorBlendFactor = _oasisEngine.BlendFactor.OneMinusSourceAlpha;\n    target.sourceAlphaBlendFactor = _oasisEngine.BlendFactor.One;\n    target.destinationAlphaBlendFactor = _oasisEngine.BlendFactor.OneMinusSourceAlpha;\n    target.colorBlendOperation = target.alphaBlendOperation = _oasisEngine.BlendOperation.Add;\n    material.renderState.depthState.writeEnabled = false;\n    material.renderQueueType = _oasisEngine.RenderQueueType.Transparent;\n    material.renderState.rasterState.cullMode = _oasisEngine.CullMode.Off; // Set uniform\n\n    material.shaderData.setVector2(\"u_texSize\", texSize);\n    material.shaderData.setFloat(\"u_blurSize\", blurSize);\n  } // Custom shader\n\n\n  var spriteVertShader = \"\\n  precision highp float;\\n\\n  uniform mat4 u_VPMat;\\n\\n  attribute vec3 POSITION;\\n  attribute vec2 TEXCOORD_0;\\n  attribute vec4 COLOR_0;\\n\\n  varying vec4 v_color;\\n  varying vec2 v_uv;\\n\\n  void main()\\n  {\\n    gl_Position = u_VPMat * vec4(POSITION, 1.0);\\n    v_color = COLOR_0;\\n    v_uv = TEXCOORD_0;\\n  }\\n\";\n  var spriteFragmentShader = \"\\n  precision mediump float;\\n  precision mediump int;\\n\\n  uniform sampler2D u_spriteTexture;\\n  uniform float u_blurSize;\\n  uniform vec2 u_texSize;\\n\\n  varying vec2 v_uv;\\n  varying vec4 v_color;\\n\\n  float normpdf(float x, float sigma) {\\n    return 0.39894 * exp(-0.5 * x * x / (sigma * sigma)) / sigma;\\n  }\\n\\n  void main() {\\n    vec4 color = texture2D(u_spriteTexture, v_uv);\\n    const int mSize = 11;\\n    const int kSize = (mSize - 1) / 2;\\n    float kernel[mSize];\\n    vec3 final_colour = vec3(0.0);\\n\\n    // create the 1-D kernel\\n    float sigma = 7.0;\\n    float Z = 0.0;\\n    for (int i = 0; i <= kSize; ++i) {\\n      kernel[kSize+i] = kernel[kSize - i] = normpdf(float(i), sigma);\\n    }\\n\\n    // get the normalization factor (as the gaussian has been clamped)\\n    for (int i = 0; i < mSize; ++i) {\\n      Z += kernel[i];\\n    }\\n\\n    // read out the texels\\n    float offsetX = u_blurSize / u_texSize.x;\\n    float offsetY = u_blurSize / u_texSize.y;\\n    vec2 uv;\\n    for (int i = -kSize; i <= kSize; ++i) {\\n      for (int j = -kSize; j <= kSize; ++j) {\\n        uv = v_uv.xy + vec2(float(i) * offsetX, float(j) * offsetY);\\n        final_colour += kernel[kSize + j] * kernel[kSize + i] * texture2D(u_spriteTexture, uv).rgb;\\n      }\\n    }\\n\\n    gl_FragColor = vec4(final_colour / (Z * Z), color.a) * v_color;\\n  }\\n\";\n\n  _oasisEngine.Shader.create(\"SpriteBlur\", spriteVertShader, spriteFragmentShader);\n});"},"name":"sprite-material-blur","title":"Sprite Material Blur","category":"2D","id":"a5b9313d-34bc-54ea-b1a9-c4bcecffff80","sourceCode":"/**\n * @title Sprite Material Blur\n * @category 2D\n */\nimport {\n  AssetType,\n  BlendFactor,\n  BlendOperation,\n  Camera,\n  CullMode,\n  Entity,\n  Material,\n  RenderQueueType,\n  Shader,\n  Sprite,\n  SpriteRenderer,\n  Texture2D,\n  TextureWrapMode,\n  Vector2,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\n\n// Create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// Create camera\nconst cameraEntity = rootEntity.createChild(\"Camera\");\ncameraEntity.transform.position = new Vector3(0, 0, 20);\ncameraEntity.addComponent(Camera).isOrthographic = true;\n\nengine.resourceManager\n  .load<Texture2D>({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*L2GNRLWn9EAAAAAAAAAAAAAAARQnAQ\",\n    type: AssetType.Texture2D\n  })\n  .then((texture) => {\n    // Create origin sprite entity.\n    const texSize = new Vector2(texture.width, texture.height);\n    const spriteEntity = rootEntity.createChild(\"spriteBlur\");\n\n    spriteEntity.addComponent(SpriteRenderer).sprite = new Sprite(engine, texture);\n    // The blur algorithm will sample the edges of the texture.\n    // Set the clamp warp mode to avoid mis-sampling caused by repeate warp mode.\n    texture.wrapModeU = texture.wrapModeV = TextureWrapMode.Clamp;\n\n    // Display normal\n    addCustomMaterialSpriteEntity(spriteEntity, -7.5, texSize, 0.0);\n    // Display low blur\n    addCustomMaterialSpriteEntity(spriteEntity.clone(), -2.5, texSize, 1.0);\n    // Display moderate blur\n    addCustomMaterialSpriteEntity(spriteEntity.clone(), 2.5, texSize, 2.0);\n    // Display highly blur\n    addCustomMaterialSpriteEntity(spriteEntity.clone(), 7.5, texSize, 3.0);\n  });\n\nengine.run();\n\nfunction addCustomMaterialSpriteEntity(entity: Entity, posX: number, texSize: Vector2, blurSize: number): void {\n  rootEntity.addChild(entity);\n  entity.transform.setPosition(posX, 0, 0);\n  // Create material\n  const material = new Material(engine, Shader.find(\"SpriteBlur\"));\n  entity.getComponent(SpriteRenderer).setMaterial(material);\n  // Init state\n  const target = material.renderState.blendState.targetBlendState;\n  target.enabled = true;\n  target.sourceColorBlendFactor = BlendFactor.SourceAlpha;\n  target.destinationColorBlendFactor = BlendFactor.OneMinusSourceAlpha;\n  target.sourceAlphaBlendFactor = BlendFactor.One;\n  target.destinationAlphaBlendFactor = BlendFactor.OneMinusSourceAlpha;\n  target.colorBlendOperation = target.alphaBlendOperation = BlendOperation.Add;\n  material.renderState.depthState.writeEnabled = false;\n  material.renderQueueType = RenderQueueType.Transparent;\n  material.renderState.rasterState.cullMode = CullMode.Off;\n  // Set uniform\n  material.shaderData.setVector2(\"u_texSize\", texSize);\n  material.shaderData.setFloat(\"u_blurSize\", blurSize);\n}\n\n// Custom shader\nconst spriteVertShader = `\n  precision highp float;\n\n  uniform mat4 u_VPMat;\n\n  attribute vec3 POSITION;\n  attribute vec2 TEXCOORD_0;\n  attribute vec4 COLOR_0;\n\n  varying vec4 v_color;\n  varying vec2 v_uv;\n\n  void main()\n  {\n    gl_Position = u_VPMat * vec4(POSITION, 1.0);\n    v_color = COLOR_0;\n    v_uv = TEXCOORD_0;\n  }\n`;\n\nconst spriteFragmentShader = `\n  precision mediump float;\n  precision mediump int;\n\n  uniform sampler2D u_spriteTexture;\n  uniform float u_blurSize;\n  uniform vec2 u_texSize;\n\n  varying vec2 v_uv;\n  varying vec4 v_color;\n\n  float normpdf(float x, float sigma) {\n    return 0.39894 * exp(-0.5 * x * x / (sigma * sigma)) / sigma;\n  }\n\n  void main() {\n    vec4 color = texture2D(u_spriteTexture, v_uv);\n    const int mSize = 11;\n    const int kSize = (mSize - 1) / 2;\n    float kernel[mSize];\n    vec3 final_colour = vec3(0.0);\n\n    // create the 1-D kernel\n    float sigma = 7.0;\n    float Z = 0.0;\n    for (int i = 0; i <= kSize; ++i) {\n      kernel[kSize+i] = kernel[kSize - i] = normpdf(float(i), sigma);\n    }\n\n    // get the normalization factor (as the gaussian has been clamped)\n    for (int i = 0; i < mSize; ++i) {\n      Z += kernel[i];\n    }\n\n    // read out the texels\n    float offsetX = u_blurSize / u_texSize.x;\n    float offsetY = u_blurSize / u_texSize.y;\n    vec2 uv;\n    for (int i = -kSize; i <= kSize; ++i) {\n      for (int j = -kSize; j <= kSize; ++j) {\n        uv = v_uv.xy + vec2(float(i) * offsetX, float(j) * offsetY);\n        final_colour += kernel[kSize + j] * kernel[kSize + i] * texture2D(u_spriteTexture, uv).rgb;\n      }\n    }\n\n    gl_FragColor = vec4(final_colour / (Z * Z), color.a) * v_color;\n  }\n`;\n\nShader.create(\"SpriteBlur\", spriteVertShader, spriteFragmentShader);\n","formatedCode":"<span class=\"token comment\">/**\n * @title Sprite Material Blur\n * @category 2D\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  BlendFactor<span class=\"token punctuation\">,</span>\n  BlendOperation<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  CullMode<span class=\"token punctuation\">,</span>\n  Entity<span class=\"token punctuation\">,</span>\n  Material<span class=\"token punctuation\">,</span>\n  RenderQueueType<span class=\"token punctuation\">,</span>\n  Shader<span class=\"token punctuation\">,</span>\n  Sprite<span class=\"token punctuation\">,</span>\n  SpriteRenderer<span class=\"token punctuation\">,</span>\n  Texture2D<span class=\"token punctuation\">,</span>\n  TextureWrapMode<span class=\"token punctuation\">,</span>\n  Vector2<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>isOrthographic <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*L2GNRLWn9EAAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Create origin sprite entity.</span>\n    <span class=\"token keyword\">const</span> texSize <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector2</span><span class=\"token punctuation\">(</span>texture<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> spriteEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"spriteBlur\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>sprite <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// The blur algorithm will sample the edges of the texture.</span>\n    <span class=\"token comment\">// Set the clamp warp mode to avoid mis-sampling caused by repeate warp mode.</span>\n    texture<span class=\"token punctuation\">.</span>wrapModeU <span class=\"token operator\">=</span> texture<span class=\"token punctuation\">.</span>wrapModeV <span class=\"token operator\">=</span> TextureWrapMode<span class=\"token punctuation\">.</span>Clamp<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Display normal</span>\n    <span class=\"token function\">addCustomMaterialSpriteEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">7.5</span><span class=\"token punctuation\">,</span> texSize<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display low blur</span>\n    <span class=\"token function\">addCustomMaterialSpriteEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2.5</span><span class=\"token punctuation\">,</span> texSize<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display moderate blur</span>\n    <span class=\"token function\">addCustomMaterialSpriteEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.5</span><span class=\"token punctuation\">,</span> texSize<span class=\"token punctuation\">,</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display highly blur</span>\n    <span class=\"token function\">addCustomMaterialSpriteEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7.5</span><span class=\"token punctuation\">,</span> texSize<span class=\"token punctuation\">,</span> <span class=\"token number\">3.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">addCustomMaterialSpriteEntity</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entity<span class=\"token operator\">:</span> Entity<span class=\"token punctuation\">,</span> posX<span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span> texSize<span class=\"token operator\">:</span> Vector2<span class=\"token punctuation\">,</span> blurSize<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>entity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>posX<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Create material</span>\n  <span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Material</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> Shader<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SpriteBlur\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  entity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Init state</span>\n  <span class=\"token keyword\">const</span> target <span class=\"token operator\">=</span> material<span class=\"token punctuation\">.</span>renderState<span class=\"token punctuation\">.</span>blendState<span class=\"token punctuation\">.</span>targetBlendState<span class=\"token punctuation\">;</span>\n  target<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  target<span class=\"token punctuation\">.</span>sourceColorBlendFactor <span class=\"token operator\">=</span> BlendFactor<span class=\"token punctuation\">.</span>SourceAlpha<span class=\"token punctuation\">;</span>\n  target<span class=\"token punctuation\">.</span>destinationColorBlendFactor <span class=\"token operator\">=</span> BlendFactor<span class=\"token punctuation\">.</span>OneMinusSourceAlpha<span class=\"token punctuation\">;</span>\n  target<span class=\"token punctuation\">.</span>sourceAlphaBlendFactor <span class=\"token operator\">=</span> BlendFactor<span class=\"token punctuation\">.</span>One<span class=\"token punctuation\">;</span>\n  target<span class=\"token punctuation\">.</span>destinationAlphaBlendFactor <span class=\"token operator\">=</span> BlendFactor<span class=\"token punctuation\">.</span>OneMinusSourceAlpha<span class=\"token punctuation\">;</span>\n  target<span class=\"token punctuation\">.</span>colorBlendOperation <span class=\"token operator\">=</span> target<span class=\"token punctuation\">.</span>alphaBlendOperation <span class=\"token operator\">=</span> BlendOperation<span class=\"token punctuation\">.</span>Add<span class=\"token punctuation\">;</span>\n  material<span class=\"token punctuation\">.</span>renderState<span class=\"token punctuation\">.</span>depthState<span class=\"token punctuation\">.</span>writeEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  material<span class=\"token punctuation\">.</span>renderQueueType <span class=\"token operator\">=</span> RenderQueueType<span class=\"token punctuation\">.</span>Transparent<span class=\"token punctuation\">;</span>\n  material<span class=\"token punctuation\">.</span>renderState<span class=\"token punctuation\">.</span>rasterState<span class=\"token punctuation\">.</span>cullMode <span class=\"token operator\">=</span> CullMode<span class=\"token punctuation\">.</span>Off<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Set uniform</span>\n  material<span class=\"token punctuation\">.</span>shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setVector2</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_texSize\"</span><span class=\"token punctuation\">,</span> texSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  material<span class=\"token punctuation\">.</span>shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_blurSize\"</span><span class=\"token punctuation\">,</span> blurSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Custom shader</span>\n<span class=\"token keyword\">const</span> spriteVertShader <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  precision highp float;\n\n  uniform mat4 u_VPMat;\n\n  attribute vec3 POSITION;\n  attribute vec2 TEXCOORD_0;\n  attribute vec4 COLOR_0;\n\n  varying vec4 v_color;\n  varying vec2 v_uv;\n\n  void main()\n  {\n    gl_Position = u_VPMat * vec4(POSITION, 1.0);\n    v_color = COLOR_0;\n    v_uv = TEXCOORD_0;\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> spriteFragmentShader <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  precision mediump float;\n  precision mediump int;\n\n  uniform sampler2D u_spriteTexture;\n  uniform float u_blurSize;\n  uniform vec2 u_texSize;\n\n  varying vec2 v_uv;\n  varying vec4 v_color;\n\n  float normpdf(float x, float sigma) {\n    return 0.39894 * exp(-0.5 * x * x / (sigma * sigma)) / sigma;\n  }\n\n  void main() {\n    vec4 color = texture2D(u_spriteTexture, v_uv);\n    const int mSize = 11;\n    const int kSize = (mSize - 1) / 2;\n    float kernel[mSize];\n    vec3 final_colour = vec3(0.0);\n\n    // create the 1-D kernel\n    float sigma = 7.0;\n    float Z = 0.0;\n    for (int i = 0; i &lt;= kSize; ++i) {\n      kernel[kSize+i] = kernel[kSize - i] = normpdf(float(i), sigma);\n    }\n\n    // get the normalization factor (as the gaussian has been clamped)\n    for (int i = 0; i &lt; mSize; ++i) {\n      Z += kernel[i];\n    }\n\n    // read out the texels\n    float offsetX = u_blurSize / u_texSize.x;\n    float offsetY = u_blurSize / u_texSize.y;\n    vec2 uv;\n    for (int i = -kSize; i &lt;= kSize; ++i) {\n      for (int j = -kSize; j &lt;= kSize; ++j) {\n        uv = v_uv.xy + vec2(float(i) * offsetX, float(j) * offsetY);\n        final_colour += kernel[kSize + j] * kernel[kSize + i] * texture2D(u_spriteTexture, uv).rgb;\n      }\n    }\n\n    gl_FragColor = vec4(final_colour / (Z * Z), color.a) * v_color;\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\nShader<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SpriteBlur\"</span><span class=\"token punctuation\">,</span> spriteVertShader<span class=\"token punctuation\">,</span> spriteFragmentShader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  /**\n   * @title Sprite Region\n   * @category 2D\n   */\n  // Create engine object.\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize(); // Create root entity.\n\n  var rootEntity = engine.sceneManager.activeScene.createRootEntity(); // Create camera.\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 0, 50);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl);\n  engine.resourceManager.load({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*d3N9RYpcKncAAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }).then(function (texture) {\n    // Create origin sprite entity.\n    var spriteEntity = new _oasisEngine.Entity(engine, \"spriteRegion\");\n    spriteEntity.transform.setScale(3, 3, 3);\n    spriteEntity.addComponent(_oasisEngine.SpriteRenderer);\n    var rect = new _oasisEngine.Rect(); // Display normal.\n\n    rect.setValue(0, 0, 1, 1);\n    addRegionEntity(spriteEntity, texture, 0, 5, rect); // Display top left half.\n\n    rect.setValue(0, 0, 0.5, 0.5);\n    addRegionEntity(spriteEntity.clone(), texture, -7.5, -5, rect); // Display top right half.\n\n    rect.setValue(0.5, 0, 1, 0.5);\n    addRegionEntity(spriteEntity.clone(), texture, -2.5, -5, rect); // Display bottom left half.\n\n    rect.setValue(0, 0.5, 0.5, 0.5);\n    addRegionEntity(spriteEntity.clone(), texture, 2.5, -5, rect); // Display bottom right half.\n\n    rect.setValue(0.5, 0.5, 1, 1);\n    addRegionEntity(spriteEntity.clone(), texture, 7.5, -5, rect);\n  });\n  engine.run();\n  /**\n   * Add flip entity.\n   */\n\n  function addRegionEntity(entity, texture, posX, posY, region) {\n    rootEntity.addChild(entity);\n    entity.transform.setPosition(posX, posY, 0);\n    var regionRenderer = entity.getComponent(_oasisEngine.SpriteRenderer);\n    var sprite = new _oasisEngine.Sprite(entity.engine, texture);\n    sprite.region = region;\n    regionRenderer.sprite = sprite;\n  }\n});"},"name":"sprite-region","title":"Sprite Region","category":"2D","id":"777a4bd8-29a4-5d76-917b-c762cdc2c049","sourceCode":"/**\n * @title Sprite Region\n * @category 2D\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport { AssetType, Camera, Entity, Rect, Sprite, SpriteRenderer, Texture2D, WebGLEngine } from \"oasis-engine\";\n\n// Create engine object.\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\n// Create root entity.\nconst rootEntity = engine.sceneManager.activeScene.createRootEntity();\n\n// Create camera.\nconst cameraEntity = rootEntity.createChild(\"Camera\");\ncameraEntity.transform.setPosition(0, 0, 50);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\nengine.resourceManager\n  .load<Texture2D>({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*d3N9RYpcKncAAAAAAAAAAAAAARQnAQ\",\n    type: AssetType.Texture2D\n  })\n  .then((texture) => {\n    // Create origin sprite entity.\n    const spriteEntity = new Entity(engine, \"spriteRegion\");\n    spriteEntity.transform.setScale(3, 3, 3);\n    spriteEntity.addComponent(SpriteRenderer);\n\n    const rect = new Rect();\n    // Display normal.\n    rect.setValue(0, 0, 1, 1);\n    addRegionEntity(spriteEntity, texture, 0, 5, rect);\n    // Display top left half.\n    rect.setValue(0, 0, 0.5, 0.5);\n    addRegionEntity(spriteEntity.clone(), texture, -7.5, -5, rect);\n    // Display top right half.\n    rect.setValue(0.5, 0, 1, 0.5);\n    addRegionEntity(spriteEntity.clone(), texture, -2.5, -5, rect);\n    // Display bottom left half.\n    rect.setValue(0, 0.5, 0.5, 0.5);\n    addRegionEntity(spriteEntity.clone(), texture, 2.5, -5, rect);\n    // Display bottom right half.\n    rect.setValue(0.5, 0.5, 1, 1);\n    addRegionEntity(spriteEntity.clone(), texture, 7.5, -5, rect);\n  });\n\nengine.run();\n\n/**\n * Add flip entity.\n */\nfunction addRegionEntity(entity: Entity, texture: Texture2D, posX: number, posY: number, region: Rect): void {\n  rootEntity.addChild(entity);\n  entity.transform.setPosition(posX, posY, 0);\n  const regionRenderer = entity.getComponent(SpriteRenderer);\n  const sprite = new Sprite(entity.engine, texture);\n  sprite.region = region;\n  regionRenderer.sprite = sprite;\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Sprite Region\n * @category 2D\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AssetType<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> Entity<span class=\"token punctuation\">,</span> Rect<span class=\"token punctuation\">,</span> Sprite<span class=\"token punctuation\">,</span> SpriteRenderer<span class=\"token punctuation\">,</span> Texture2D<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine object.</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create root entity.</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera.</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*d3N9RYpcKncAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Create origin sprite entity.</span>\n    <span class=\"token keyword\">const</span> spriteEntity <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Entity</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token string\">\"spriteRegion\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    spriteEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> rect <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Rect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display normal.</span>\n    rect<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addRegionEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display top left half.</span>\n    rect<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addRegionEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">7.5</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display top right half.</span>\n    rect<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addRegionEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2.5</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display bottom left half.</span>\n    rect<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addRegionEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">,</span> <span class=\"token number\">2.5</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Display bottom right half.</span>\n    rect<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addRegionEntity</span><span class=\"token punctuation\">(</span>spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">,</span> <span class=\"token number\">7.5</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Add flip entity.\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">addRegionEntity</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">entity<span class=\"token operator\">:</span> Entity<span class=\"token punctuation\">,</span> texture<span class=\"token operator\">:</span> Texture2D<span class=\"token punctuation\">,</span> posX<span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span> posY<span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span> region<span class=\"token operator\">:</span> Rect</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>entity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  entity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>posX<span class=\"token punctuation\">,</span> posY<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> regionRenderer <span class=\"token operator\">=</span> entity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> sprite <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">(</span>entity<span class=\"token punctuation\">.</span>engine<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  sprite<span class=\"token punctuation\">.</span>region <span class=\"token operator\">=</span> region<span class=\"token punctuation\">;</span>\n  regionRenderer<span class=\"token punctuation\">.</span>sprite <span class=\"token operator\">=</span> sprite<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  init();\n\n  function init() {\n    // Create engine.\n    var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n    engine.canvas.resizeByClientSize(); // Create root entity.\n\n    var rootEntity = engine.sceneManager.activeScene.createRootEntity(); // Create camera.\n\n    var cameraEntity = rootEntity.createChild(\"Camera\");\n    cameraEntity.transform.setPosition(0, 0, 12);\n    cameraEntity.addComponent(_oasisEngine.Camera);\n    cameraEntity.addComponent(_controls.OrbitControl);\n    engine.resourceManager.load([{\n      // \bSprite texture\n      url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*L2GNRLWn9EAAAAAAAAAAAAAAARQnAQ\",\n      type: _oasisEngine.AssetType.Texture2D\n    }, {\n      // Noise texture\n      url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*j2xJQL0e6J4AAAAAAAAAAAAAARQnAQ\",\n      type: _oasisEngine.AssetType.Texture2D\n    }, {\n      // Ramp texture\n      url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*ygj3S7sm4hQAAAAAAAAAAAAAARQnAQ\",\n      type: _oasisEngine.AssetType.Texture2D\n    }]).then(function (textures) {\n      // Create origin sprite entity.\n      var spriteEntity = rootEntity.createChild(\"DissolveSprite\");\n      var material = addCustomMaterial(engine, textures[1], textures[2]);\n      var renderer = spriteEntity.addComponent(_oasisEngine.SpriteRenderer);\n      renderer.sprite = new _oasisEngine.Sprite(engine, textures[0]);\n      renderer.setMaterial(material); // Add dissolve animate script.\n\n      var script = spriteEntity.addComponent(AnimateScript); // Add custom material.\n\n      script.material = material; // Add Data UI.\n\n      script.guiData = addDataGUI(script.material, script);\n    });\n    engine.run();\n  }\n\n  function addCustomMaterial(engine, noiseTexture, rampTexture) {\n    var material = new _oasisEngine.Material(engine, _oasisEngine.Shader.find(\"SpriteDissolve\")); // Init state.\n\n    var renderState = material.renderState;\n    var target = renderState.blendState.targetBlendState;\n    target.enabled = true;\n    target.sourceColorBlendFactor = _oasisEngine.BlendFactor.SourceAlpha;\n    target.destinationColorBlendFactor = _oasisEngine.BlendFactor.OneMinusSourceAlpha;\n    target.sourceAlphaBlendFactor = _oasisEngine.BlendFactor.One;\n    target.destinationAlphaBlendFactor = _oasisEngine.BlendFactor.OneMinusSourceAlpha;\n    renderState.depthState.writeEnabled = false;\n    renderState.rasterState.cullMode = _oasisEngine.CullMode.Off;\n    material.renderQueueType = _oasisEngine.RenderQueueType.Transparent; // Set material shader data.\n\n    var shaderData = material.shaderData;\n    shaderData.setFloat(\"u_threshold\", 0.0);\n    shaderData.setFloat(\"u_edgeLength\", 0.1);\n    shaderData.setTexture(\"u_rampTexture\", rampTexture);\n    shaderData.setTexture(\"u_noiseTexture\", noiseTexture);\n    return material;\n  }\n  /**\n   * Add data GUI.\n   */\n\n\n  function addDataGUI(material, animationScript) {\n    var shaderData = material.shaderData;\n    var gui = new dat.GUI();\n    var guiData = {\n      threshold: 0.0,\n      edgeLength: 0.1,\n      reset: function reset() {\n        guiData.threshold = 0.0;\n        guiData.edgeLength = 0.1;\n        shaderData.setFloat(\"u_threshold\", 0.0);\n        shaderData.setFloat(\"u_edgeLength\", 0.1);\n      },\n      pause: function pause() {\n        animationScript.enabled = false;\n      },\n      resume: function resume() {\n        animationScript.enabled = true;\n      }\n    };\n    gui.add(guiData, \"threshold\", 0.0, 1.0, 0.01).onChange(function (value) {\n      shaderData.setFloat(\"u_threshold\", value);\n    }).listen();\n    gui.add(guiData, \"edgeLength\", 0.0, 0.2, 0.001).onChange(function (value) {\n      shaderData.setFloat(\"u_edgeLength\", value);\n    }).listen();\n    gui.add(guiData, \"reset\").name(\"重置\");\n    gui.add(guiData, \"pause\").name(\"暂停动画\");\n    gui.add(guiData, \"resume\").name(\"继续动画\");\n    return guiData;\n  }\n\n  var AnimateScript = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(AnimateScript, _Script);\n\n    function AnimateScript() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _Script.call.apply(_Script, [this].concat(args)) || this;\n      _this.guiData = void 0;\n      _this.material = void 0;\n      return _this;\n    }\n\n    var _proto = AnimateScript.prototype;\n\n    /**\n     * The main loop, called frame by frame.\n     * @param deltaTime - The deltaTime when the script update.\n     */\n    _proto.onUpdate = function onUpdate(deltaTime) {\n      var guiData = this.guiData;\n      var threshold = (guiData.threshold + deltaTime * 0.0003) % 1.0; // Update gui data.\n\n      guiData.threshold = threshold; // Update material data.\n\n      this.material.shaderData.setFloat(\"u_threshold\", threshold);\n    };\n\n    return AnimateScript;\n  }(_oasisEngine.Script); // Custom shader\n\n\n  var spriteVertShader = \"\\n  precision highp float;\\n\\n  uniform mat4 u_VPMat;\\n\\n  attribute vec3 POSITION;\\n  attribute vec2 TEXCOORD_0;\\n  attribute vec4 COLOR_0;\\n\\n  varying vec4 v_color;\\n  varying vec2 v_uv;\\n\\n  void main()\\n  {\\n    gl_Position = u_VPMat * vec4(POSITION, 1.0);\\n    v_color = COLOR_0;\\n    v_uv = TEXCOORD_0;\\n  }\\n\";\n  var spriteFragmentShader = \"\\n  precision mediump float;\\n  precision mediump int;\\n\\n  uniform sampler2D u_spriteTexture;\\n  uniform sampler2D u_noiseTexture;\\n  uniform sampler2D u_rampTexture;\\n  uniform float u_threshold;\\n  uniform float u_edgeLength;\\n\\n  varying vec2 v_uv;\\n  varying vec4 v_color;\\n\\n  vec4 lerp(vec4 a, vec4 b, float w) {\\n    return a + w * (b - a);\\n  }\\n\\n  void main() {\\n    float r = texture2D(u_noiseTexture, v_uv).r;\\n    float diff = r - u_threshold;\\n    if (diff <= 0.0) {\\n      discard;\\n    }\\n\\n    float degree = clamp(0.0, 1.0, diff / u_edgeLength);\\n    vec4 edgeColor = texture2D(u_rampTexture, vec2(degree, degree));\\n    vec4 color = texture2D(u_spriteTexture, v_uv);\\n    vec4 finalColor = lerp(edgeColor, color, degree);\\n    gl_FragColor = vec4(finalColor.rgb, color.a) * v_color;\\n  }\\n\";\n\n  _oasisEngine.Shader.create(\"SpriteDissolve\", spriteVertShader, spriteFragmentShader);\n});"},"name":"sprite-material-dissolve","title":"Sprite Material Dissolve","category":"2D","id":"362265ca-27b9-5d21-a12c-0ba850d9db50","sourceCode":"/**\n * @title Sprite Material Dissolve\n * @category 2D\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\nimport {\n  AssetType,\n  BlendFactor,\n  Camera,\n  CullMode,\n  Engine,\n  Material,\n  RenderQueueType,\n  Script,\n  Shader,\n  Sprite,\n  SpriteRenderer,\n  Texture2D,\n  WebGLEngine\n} from \"oasis-engine\";\n\ninit();\n\nfunction init(): void {\n  // Create engine.\n  const engine = new WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n\n  // Create root entity.\n  const rootEntity = engine.sceneManager.activeScene.createRootEntity();\n\n  // Create camera.\n  const cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 0, 12);\n  cameraEntity.addComponent(Camera);\n  cameraEntity.addComponent(OrbitControl);\n\n  engine.resourceManager\n    .load([\n      {\n        // \bSprite texture\n        url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*L2GNRLWn9EAAAAAAAAAAAAAAARQnAQ\",\n        type: AssetType.Texture2D\n      },\n      {\n        // Noise texture\n        url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*j2xJQL0e6J4AAAAAAAAAAAAAARQnAQ\",\n        type: AssetType.Texture2D\n      },\n      {\n        // Ramp texture\n        url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*ygj3S7sm4hQAAAAAAAAAAAAAARQnAQ\",\n        type: AssetType.Texture2D\n      }\n    ])\n    .then((textures: Texture2D[]) => {\n      // Create origin sprite entity.\n      const spriteEntity = rootEntity.createChild(\"DissolveSprite\");\n      const material = addCustomMaterial(engine, textures[1], textures[2]);\n      const renderer = spriteEntity.addComponent(SpriteRenderer);\n      renderer.sprite = new Sprite(engine, textures[0]);\n      renderer.setMaterial(material);\n\n      // Add dissolve animate script.\n      const script = spriteEntity.addComponent(AnimateScript);\n      // Add custom material.\n      script.material = material;\n      // Add Data UI.\n      script.guiData = addDataGUI(script.material, script);\n    });\n\n  engine.run();\n}\n\nfunction addCustomMaterial(engine: Engine, noiseTexture: Texture2D, rampTexture: Texture2D): Material {\n  const material = new Material(engine, Shader.find(\"SpriteDissolve\"));\n\n  // Init state.\n  const renderState = material.renderState;\n  const target = renderState.blendState.targetBlendState;\n  target.enabled = true;\n  target.sourceColorBlendFactor = BlendFactor.SourceAlpha;\n  target.destinationColorBlendFactor = BlendFactor.OneMinusSourceAlpha;\n  target.sourceAlphaBlendFactor = BlendFactor.One;\n  target.destinationAlphaBlendFactor = BlendFactor.OneMinusSourceAlpha;\n  renderState.depthState.writeEnabled = false;\n  renderState.rasterState.cullMode = CullMode.Off;\n  material.renderQueueType = RenderQueueType.Transparent;\n\n  // Set material shader data.\n  const { shaderData } = material;\n  shaderData.setFloat(\"u_threshold\", 0.0);\n  shaderData.setFloat(\"u_edgeLength\", 0.1);\n  shaderData.setTexture(\"u_rampTexture\", rampTexture);\n  shaderData.setTexture(\"u_noiseTexture\", noiseTexture);\n\n  return material;\n}\n\n/**\n * Add data GUI.\n */\nfunction addDataGUI(material: Material, animationScript: AnimateScript) {\n  const { shaderData } = material;\n  const gui = new dat.GUI();\n  const guiData = {\n    threshold: 0.0,\n    edgeLength: 0.1,\n    reset: () => {\n      guiData.threshold = 0.0;\n      guiData.edgeLength = 0.1;\n      shaderData.setFloat(\"u_threshold\", 0.0);\n      shaderData.setFloat(\"u_edgeLength\", 0.1);\n    },\n    pause: function () {\n      animationScript.enabled = false;\n    },\n    resume: function () {\n      animationScript.enabled = true;\n    }\n  };\n\n  gui\n    .add(guiData, \"threshold\", 0.0, 1.0, 0.01)\n    .onChange((value: number) => {\n      shaderData.setFloat(\"u_threshold\", value);\n    })\n    .listen();\n  gui\n    .add(guiData, \"edgeLength\", 0.0, 0.2, 0.001)\n    .onChange((value: number) => {\n      shaderData.setFloat(\"u_edgeLength\", value);\n    })\n    .listen();\n  gui.add(guiData, \"reset\").name(\"重置\");\n  gui.add(guiData, \"pause\").name(\"暂停动画\");\n  gui.add(guiData, \"resume\").name(\"继续动画\");\n\n  return guiData;\n}\n\nclass AnimateScript extends Script {\n  guiData: any;\n  material: Material;\n\n  /**\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */\n  onUpdate(deltaTime: number): void {\n    const { guiData } = this;\n    const threshold = (guiData.threshold + deltaTime * 0.0003) % 1.0;\n\n    // Update gui data.\n    guiData.threshold = threshold;\n    // Update material data.\n    this.material.shaderData.setFloat(\"u_threshold\", threshold);\n  }\n}\n\n// Custom shader\nconst spriteVertShader = `\n  precision highp float;\n\n  uniform mat4 u_VPMat;\n\n  attribute vec3 POSITION;\n  attribute vec2 TEXCOORD_0;\n  attribute vec4 COLOR_0;\n\n  varying vec4 v_color;\n  varying vec2 v_uv;\n\n  void main()\n  {\n    gl_Position = u_VPMat * vec4(POSITION, 1.0);\n    v_color = COLOR_0;\n    v_uv = TEXCOORD_0;\n  }\n`;\n\nconst spriteFragmentShader = `\n  precision mediump float;\n  precision mediump int;\n\n  uniform sampler2D u_spriteTexture;\n  uniform sampler2D u_noiseTexture;\n  uniform sampler2D u_rampTexture;\n  uniform float u_threshold;\n  uniform float u_edgeLength;\n\n  varying vec2 v_uv;\n  varying vec4 v_color;\n\n  vec4 lerp(vec4 a, vec4 b, float w) {\n    return a + w * (b - a);\n  }\n\n  void main() {\n    float r = texture2D(u_noiseTexture, v_uv).r;\n    float diff = r - u_threshold;\n    if (diff <= 0.0) {\n      discard;\n    }\n\n    float degree = clamp(0.0, 1.0, diff / u_edgeLength);\n    vec4 edgeColor = texture2D(u_rampTexture, vec2(degree, degree));\n    vec4 color = texture2D(u_spriteTexture, v_uv);\n    vec4 finalColor = lerp(edgeColor, color, degree);\n    gl_FragColor = vec4(finalColor.rgb, color.a) * v_color;\n  }\n`;\n\nShader.create(\"SpriteDissolve\", spriteVertShader, spriteFragmentShader);\n","formatedCode":"<span class=\"token comment\">/**\n * @title Sprite Material Dissolve\n * @category 2D\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  BlendFactor<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  CullMode<span class=\"token punctuation\">,</span>\n  Engine<span class=\"token punctuation\">,</span>\n  Material<span class=\"token punctuation\">,</span>\n  RenderQueueType<span class=\"token punctuation\">,</span>\n  Script<span class=\"token punctuation\">,</span>\n  Shader<span class=\"token punctuation\">,</span>\n  Sprite<span class=\"token punctuation\">,</span>\n  SpriteRenderer<span class=\"token punctuation\">,</span>\n  Texture2D<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Create engine.</span>\n  <span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  engine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create root entity.</span>\n  <span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create camera.</span>\n  <span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  engine<span class=\"token punctuation\">.</span>resourceManager\n    <span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// \bSprite texture</span>\n        url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*L2GNRLWn9EAAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Noise texture</span>\n        url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*j2xJQL0e6J4AAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Ramp texture</span>\n        url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*ygj3S7sm4hQAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n        type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">textures<span class=\"token operator\">:</span> Texture2D<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Create origin sprite entity.</span>\n      <span class=\"token keyword\">const</span> spriteEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DissolveSprite\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token function\">addCustomMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> textures<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> textures<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> renderer <span class=\"token operator\">=</span> spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      renderer<span class=\"token punctuation\">.</span>sprite <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> textures<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      renderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Add dissolve animate script.</span>\n      <span class=\"token keyword\">const</span> script <span class=\"token operator\">=</span> spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>AnimateScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// Add custom material.</span>\n      script<span class=\"token punctuation\">.</span>material <span class=\"token operator\">=</span> material<span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// Add Data UI.</span>\n      script<span class=\"token punctuation\">.</span>guiData <span class=\"token operator\">=</span> <span class=\"token function\">addDataGUI</span><span class=\"token punctuation\">(</span>script<span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">,</span> script<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">addCustomMaterial</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">engine<span class=\"token operator\">:</span> Engine<span class=\"token punctuation\">,</span> noiseTexture<span class=\"token operator\">:</span> Texture2D<span class=\"token punctuation\">,</span> rampTexture<span class=\"token operator\">:</span> Texture2D</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Material <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Material</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> Shader<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SpriteDissolve\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Init state.</span>\n  <span class=\"token keyword\">const</span> renderState <span class=\"token operator\">=</span> material<span class=\"token punctuation\">.</span>renderState<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> target <span class=\"token operator\">=</span> renderState<span class=\"token punctuation\">.</span>blendState<span class=\"token punctuation\">.</span>targetBlendState<span class=\"token punctuation\">;</span>\n  target<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  target<span class=\"token punctuation\">.</span>sourceColorBlendFactor <span class=\"token operator\">=</span> BlendFactor<span class=\"token punctuation\">.</span>SourceAlpha<span class=\"token punctuation\">;</span>\n  target<span class=\"token punctuation\">.</span>destinationColorBlendFactor <span class=\"token operator\">=</span> BlendFactor<span class=\"token punctuation\">.</span>OneMinusSourceAlpha<span class=\"token punctuation\">;</span>\n  target<span class=\"token punctuation\">.</span>sourceAlphaBlendFactor <span class=\"token operator\">=</span> BlendFactor<span class=\"token punctuation\">.</span>One<span class=\"token punctuation\">;</span>\n  target<span class=\"token punctuation\">.</span>destinationAlphaBlendFactor <span class=\"token operator\">=</span> BlendFactor<span class=\"token punctuation\">.</span>OneMinusSourceAlpha<span class=\"token punctuation\">;</span>\n  renderState<span class=\"token punctuation\">.</span>depthState<span class=\"token punctuation\">.</span>writeEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  renderState<span class=\"token punctuation\">.</span>rasterState<span class=\"token punctuation\">.</span>cullMode <span class=\"token operator\">=</span> CullMode<span class=\"token punctuation\">.</span>Off<span class=\"token punctuation\">;</span>\n  material<span class=\"token punctuation\">.</span>renderQueueType <span class=\"token operator\">=</span> RenderQueueType<span class=\"token punctuation\">.</span>Transparent<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Set material shader data.</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> shaderData <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> material<span class=\"token punctuation\">;</span>\n  shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_threshold\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_edgeLength\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setTexture</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_rampTexture\"</span><span class=\"token punctuation\">,</span> rampTexture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setTexture</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_noiseTexture\"</span><span class=\"token punctuation\">,</span> noiseTexture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> material<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * Add data GUI.\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">addDataGUI</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">material<span class=\"token operator\">:</span> Material<span class=\"token punctuation\">,</span> animationScript<span class=\"token operator\">:</span> AnimateScript</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> shaderData <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> material<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> guiData <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    threshold<span class=\"token operator\">:</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>\n    edgeLength<span class=\"token operator\">:</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">reset</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      guiData<span class=\"token punctuation\">.</span>threshold <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n      guiData<span class=\"token punctuation\">.</span>edgeLength <span class=\"token operator\">=</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">;</span>\n      shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_threshold\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_edgeLength\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">pause</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      animationScript<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">resume</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      animationScript<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  gui\n    <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"threshold\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_threshold\"</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui\n    <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"edgeLength\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.001</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_edgeLength\"</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"reset\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"重置\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"pause\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"暂停动画\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"resume\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"继续动画\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> guiData<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">AnimateScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  guiData<span class=\"token operator\">:</span> any<span class=\"token punctuation\">;</span>\n  material<span class=\"token operator\">:</span> Material<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/**\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */</span>\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span>deltaTime<span class=\"token operator\">:</span> number<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> guiData <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> threshold <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">.</span>threshold <span class=\"token operator\">+</span> deltaTime <span class=\"token operator\">*</span> <span class=\"token number\">0.0003</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Update gui data.</span>\n    guiData<span class=\"token punctuation\">.</span>threshold <span class=\"token operator\">=</span> threshold<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Update material data.</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">.</span>shaderData<span class=\"token punctuation\">.</span><span class=\"token function\">setFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"u_threshold\"</span><span class=\"token punctuation\">,</span> threshold<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Custom shader</span>\n<span class=\"token keyword\">const</span> spriteVertShader <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  precision highp float;\n\n  uniform mat4 u_VPMat;\n\n  attribute vec3 POSITION;\n  attribute vec2 TEXCOORD_0;\n  attribute vec4 COLOR_0;\n\n  varying vec4 v_color;\n  varying vec2 v_uv;\n\n  void main()\n  {\n    gl_Position = u_VPMat * vec4(POSITION, 1.0);\n    v_color = COLOR_0;\n    v_uv = TEXCOORD_0;\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> spriteFragmentShader <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  precision mediump float;\n  precision mediump int;\n\n  uniform sampler2D u_spriteTexture;\n  uniform sampler2D u_noiseTexture;\n  uniform sampler2D u_rampTexture;\n  uniform float u_threshold;\n  uniform float u_edgeLength;\n\n  varying vec2 v_uv;\n  varying vec4 v_color;\n\n  vec4 lerp(vec4 a, vec4 b, float w) {\n    return a + w * (b - a);\n  }\n\n  void main() {\n    float r = texture2D(u_noiseTexture, v_uv).r;\n    float diff = r - u_threshold;\n    if (diff &lt;= 0.0) {\n      discard;\n    }\n\n    float degree = clamp(0.0, 1.0, diff / u_edgeLength);\n    vec4 edgeColor = texture2D(u_rampTexture, vec2(degree, degree));\n    vec4 color = texture2D(u_spriteTexture, v_uv);\n    vec4 finalColor = lerp(edgeColor, color, degree);\n    gl_FragColor = vec4(finalColor.rgb, color.a) * v_color;\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\nShader<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SpriteDissolve\"</span><span class=\"token punctuation\">,</span> spriteVertShader<span class=\"token punctuation\">,</span> spriteFragmentShader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  // Create engine object\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // Create camera\n\n  var cameraEntity = rootEntity.createChild(\"camera_entity\");\n  cameraEntity.transform.setPosition(0, 0, 50);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl); // Create sprite renderer\n\n  engine.resourceManager.load({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*ApFPTZSqcMkAAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }).then(function (texture) {\n    var _loop = function _loop(i) {\n      setTimeout(function () {\n        var spriteEntity = rootEntity.createChild(\"sprite_\" + i);\n        spriteEntity.transform.position = new _oasisEngine.Vector3(0, 0, 0);\n        var spriteRenderer = spriteEntity.addComponent(_oasisEngine.SpriteRenderer);\n        var sprite = new _oasisEngine.Sprite(engine, texture);\n        spriteRenderer.sprite = sprite; // spriteRenderer.flipX = true;\n        // spriteRenderer.flipY = true;\n\n        var rect = spriteRenderer.sprite.region;\n        var scaleX = 100.0 / rect.width;\n        var scaleY = 100.0 / rect.height;\n        spriteEntity.transform.setScale(scaleX, scaleY, 1);\n        spriteEntity.addComponent(SpriteController);\n      }, 2000 * i);\n    };\n\n    for (var i = 0; i < 10; ++i) {\n      _loop(i);\n    }\n  });\n  engine.run(); // Script for sprite\n\n  var SpriteController = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(SpriteController, _Script);\n\n    function SpriteController() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _Script.call.apply(_Script, [this].concat(args)) || this;\n      _this._radius = 1.5;\n      _this._curRadian = void 0;\n      _this._scale = void 0;\n      _this._scaleFlag = void 0;\n      return _this;\n    }\n\n    var _proto = SpriteController.prototype;\n\n    _proto.onAwake = function onAwake() {\n      this._curRadian = 0;\n      this._radius = 15;\n      this._scale = 0.5;\n      this._scaleFlag = true;\n    };\n\n    _proto.onUpdate = function onUpdate() {\n      // Update position.\n      this._curRadian += 0.005;\n      var _radius = this._radius,\n          _curRadian = this._curRadian,\n          entity = this.entity;\n      var transform = entity.transform;\n\n      var posX = Math.cos(_curRadian) * _radius;\n\n      var posY = Math.sin(_curRadian) * _radius;\n\n      transform.setPosition(posX, posY, 0); // Update scale.\n\n      this._scale += this._scaleFlag ? 0.005 : -0.005;\n      var _scale = this._scale;\n      transform.setScale(_scale, _scale, _scale);\n\n      if (this._scale >= 0.6) {\n        this._scaleFlag = false;\n      } else if (this._scale <= 0.4) {\n        this._scaleFlag = true;\n      } // Update rotation.\n\n\n      SpriteController._curRotation += 0.05;\n      var _curRotation = SpriteController._curRotation;\n      transform.setRotation(0, 0, _curRotation);\n    };\n\n    return SpriteController;\n  }(_oasisEngine.Script);\n\n  SpriteController._curRotation = 0;\n});"},"name":"sprite-renderer","title":"Sprite Renderer","category":"2D","id":"29e620be-ac2d-52af-9aaf-da989807f25f","sourceCode":"/**\n * @title Sprite Renderer\n * @category 2D\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport { AssetType, Camera, Script, Sprite, SpriteRenderer, Texture2D, Vector3, WebGLEngine } from \"oasis-engine\";\n\n// Create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// Create camera\nconst cameraEntity = rootEntity.createChild(\"camera_entity\");\ncameraEntity.transform.setPosition(0, 0, 50);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\n// Create sprite renderer\nengine.resourceManager\n  .load<Texture2D>({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*ApFPTZSqcMkAAAAAAAAAAAAAARQnAQ\",\n    type: AssetType.Texture2D\n  })\n  .then((texture) => {\n    for (let i = 0; i < 10; ++i) {\n      setTimeout(() => {\n        const spriteEntity = rootEntity.createChild(`sprite_${i}`);\n        spriteEntity.transform.position = new Vector3(0, 0, 0);\n        const spriteRenderer = spriteEntity.addComponent(SpriteRenderer);\n        const sprite = new Sprite(engine, texture);\n        spriteRenderer.sprite = sprite;\n        // spriteRenderer.flipX = true;\n        // spriteRenderer.flipY = true;\n        const rect = spriteRenderer.sprite.region;\n        const scaleX = 100.0 / rect.width;\n        const scaleY = 100.0 / rect.height;\n        spriteEntity.transform.setScale(scaleX, scaleY, 1);\n        spriteEntity.addComponent(SpriteController);\n      }, 2000 * i);\n    }\n  });\n\nengine.run();\n\n// Script for sprite\nclass SpriteController extends Script {\n  static _curRotation: number = 0;\n\n  private _radius: number = 1.5;\n  private _curRadian: number;\n  private _scale: number;\n  private _scaleFlag: boolean;\n\n  onAwake() {\n    this._curRadian = 0;\n    this._radius = 15;\n    this._scale = 0.5;\n    this._scaleFlag = true;\n  }\n\n  onUpdate() {\n    // Update position.\n    this._curRadian += 0.005;\n    const { _radius, _curRadian, entity } = this;\n    const { transform } = entity;\n    const posX = Math.cos(_curRadian) * _radius;\n    const posY = Math.sin(_curRadian) * _radius;\n    transform.setPosition(posX, posY, 0);\n\n    // Update scale.\n    this._scale += this._scaleFlag ? 0.005 : -0.005;\n    const { _scale } = this;\n    transform.setScale(_scale, _scale, _scale);\n    if (this._scale >= 0.6) {\n      this._scaleFlag = false;\n    } else if (this._scale <= 0.4) {\n      this._scaleFlag = true;\n    }\n\n    // Update rotation.\n    SpriteController._curRotation += 0.05;\n    const { _curRotation } = SpriteController;\n    transform.setRotation(0, 0, _curRotation);\n  }\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Sprite Renderer\n * @category 2D\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AssetType<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> Script<span class=\"token punctuation\">,</span> Sprite<span class=\"token punctuation\">,</span> SpriteRenderer<span class=\"token punctuation\">,</span> Texture2D<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"camera_entity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create sprite renderer</span>\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*ApFPTZSqcMkAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> spriteEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">sprite_</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>i<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        spriteEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> spriteRenderer <span class=\"token operator\">=</span> spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> sprite <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        spriteRenderer<span class=\"token punctuation\">.</span>sprite <span class=\"token operator\">=</span> sprite<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// spriteRenderer.flipX = true;</span>\n        <span class=\"token comment\">// spriteRenderer.flipY = true;</span>\n        <span class=\"token keyword\">const</span> rect <span class=\"token operator\">=</span> spriteRenderer<span class=\"token punctuation\">.</span>sprite<span class=\"token punctuation\">.</span>region<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> scaleX <span class=\"token operator\">=</span> <span class=\"token number\">100.0</span> <span class=\"token operator\">/</span> rect<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> scaleY <span class=\"token operator\">=</span> <span class=\"token number\">100.0</span> <span class=\"token operator\">/</span> rect<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n        spriteEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span>scaleX<span class=\"token punctuation\">,</span> scaleY<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpriteController<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Script for sprite</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SpriteController</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> _curRotation<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">private</span> _radius<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> _curRadian<span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> _scale<span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> _scaleFlag<span class=\"token operator\">:</span> boolean<span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">onAwake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_curRadian <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_radius <span class=\"token operator\">=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scale <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scaleFlag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Update position.</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_curRadian <span class=\"token operator\">+=</span> <span class=\"token number\">0.005</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> _radius<span class=\"token punctuation\">,</span> _curRadian<span class=\"token punctuation\">,</span> entity <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> transform <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> entity<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> posX <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>_curRadian<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> _radius<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> posY <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>_curRadian<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> _radius<span class=\"token punctuation\">;</span>\n    transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>posX<span class=\"token punctuation\">,</span> posY<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Update scale.</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scale <span class=\"token operator\">+=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scaleFlag <span class=\"token operator\">?</span> <span class=\"token number\">0.005</span> <span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">0.005</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> _scale <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    transform<span class=\"token punctuation\">.</span><span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span>_scale<span class=\"token punctuation\">,</span> _scale<span class=\"token punctuation\">,</span> _scale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scale <span class=\"token operator\">>=</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scaleFlag <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scale <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0.4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_scaleFlag <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Update rotation.</span>\n    SpriteController<span class=\"token punctuation\">.</span>_curRotation <span class=\"token operator\">+=</span> <span class=\"token number\">0.05</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> _curRotation <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> SpriteController<span class=\"token punctuation\">;</span>\n    transform<span class=\"token punctuation\">.</span><span class=\"token function\">setRotation</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> _curRotation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  init();\n\n  function init() {\n    // Create engine object\n    var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n    engine.canvas.resizeByClientSize(); // Load texture\n\n    engine.resourceManager.load({\n      url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Umw_RJGiZLYAAAAAAAAAAAAAARQnAQ\",\n      type: _oasisEngine.AssetType.Texture2D\n    }).then(function (texture) {\n      var scene = engine.sceneManager.activeScene;\n      var rootEntity = scene.createRootEntity(); // Create camera\n\n      var cameraEntity = rootEntity.createChild(\"Camera\");\n      cameraEntity.transform.position = new _oasisEngine.Vector3(0, 0, 20);\n      cameraEntity.addComponent(_oasisEngine.Camera);\n      cameraEntity.addComponent(_controls.OrbitControl); // Create plane\n\n      var entity = rootEntity.createChild();\n      var renderer = entity.addComponent(_oasisEngine.MeshRenderer);\n\n      var mesh = _oasisEngine.PrimitiveMesh.createPlane(engine, 10, 10);\n\n      var material = new _oasisEngine.UnlitMaterial(engine);\n      texture.anisoLevel = 16;\n      material.renderFace = _oasisEngine.RenderFace.Double;\n      material.baseTexture = texture;\n      renderer.mesh = mesh;\n      renderer.setMaterial(material); // Add animation script\n\n      var animationScript = rootEntity.addComponent(AnimateScript); // Add data GUI\n\n      var guiData = addDataGUI(material, animationScript);\n      animationScript.guiData = guiData;\n      animationScript.material = material; // Run engine\n\n      engine.run();\n    });\n  }\n  /**\n   * Add data GUI.\n   */\n\n\n  function addDataGUI(material, animationScript) {\n    var gui = new dat.GUI();\n    var guiData = {\n      tilingX: 1,\n      tilingY: 1,\n      offsetX: 0,\n      offsetY: 0,\n      reset: function reset() {\n        guiData.tilingX = 1;\n        guiData.tilingY = 1;\n        guiData.offsetX = 0;\n        guiData.offsetY = 0;\n        material.tilingOffset.setValue(1, 1, 0, 0);\n      },\n      pause: function pause() {\n        animationScript.enabled = false;\n      },\n      resume: function resume() {\n        animationScript.enabled = true;\n      }\n    };\n    gui.add(guiData, \"tilingX\", 0, 10).onChange(function (value) {\n      material.tilingOffset.x = value;\n    }).listen();\n    gui.add(guiData, \"tilingY\", 0, 10).onChange(function (value) {\n      material.tilingOffset.y = value;\n    }).listen();\n    gui.add(guiData, \"offsetX\", 0, 1).onChange(function (value) {\n      material.tilingOffset.z = value;\n    }).listen();\n    gui.add(guiData, \"offsetY\", 0, 1).onChange(function (value) {\n      material.tilingOffset.w = value;\n    }).listen();\n    gui.add(guiData, \"reset\").name(\"重置\");\n    gui.add(guiData, \"pause\").name(\"暂停动画\");\n    gui.add(guiData, \"resume\").name(\"继续动画\");\n    return guiData;\n  }\n  /**\n   * Animation script.\n   */\n\n\n  var AnimateScript = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(AnimateScript, _Script);\n\n    function AnimateScript() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _Script.call.apply(_Script, [this].concat(args)) || this;\n      _this.guiData = void 0;\n      return _this;\n    }\n\n    var _proto = AnimateScript.prototype;\n\n    /**\n     * The main loop, called frame by frame.\n     * @param deltaTime - The deltaTime when the script update.\n     */\n    _proto.onUpdate = function onUpdate(deltaTime) {\n      var material = this.material,\n          guiData = this.guiData;\n      material.tilingOffset.x = guiData.tilingX = (guiData.tilingX - 1 + deltaTime * 0.001) % 9 + 1;\n      material.tilingOffset.y = guiData.tilingY = (guiData.tilingY - 1 + deltaTime * 0.001) % 9 + 1;\n    };\n\n    return AnimateScript;\n  }(_oasisEngine.Script);\n});"},"name":"tiling-offset","title":"Tiling Offset","category":"Material","id":"386cf00e-6fc8-53d2-8e6a-89bf74c01330","sourceCode":"/**\n * @title Tiling Offset\n * @category Material\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\nimport {\n  AssetType,\n  Camera,\n  MeshRenderer,\n  PrimitiveMesh,\n  RenderFace,\n  Script,\n  Texture2D,\n  UnlitMaterial,\n  Vector3,\n  WebGLEngine\n} from \"oasis-engine\";\n\ninit();\n\nfunction init(): void {\n  // Create engine object\n  const engine = new WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n\n  // Load texture\n  engine.resourceManager\n    .load<Texture2D>({\n      url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Umw_RJGiZLYAAAAAAAAAAAAAARQnAQ\",\n      type: AssetType.Texture2D\n    })\n    .then((texture) => {\n      const scene = engine.sceneManager.activeScene;\n      const rootEntity = scene.createRootEntity();\n\n      // Create camera\n      const cameraEntity = rootEntity.createChild(\"Camera\");\n      cameraEntity.transform.position = new Vector3(0, 0, 20);\n      cameraEntity.addComponent(Camera);\n      cameraEntity.addComponent(OrbitControl);\n\n      // Create plane\n      const entity = rootEntity.createChild();\n      const renderer = entity.addComponent(MeshRenderer);\n      const mesh = PrimitiveMesh.createPlane(engine, 10, 10);\n      const material = new UnlitMaterial(engine);\n\n      texture.anisoLevel = 16;\n      material.renderFace = RenderFace.Double;\n      material.baseTexture = texture;\n\n      renderer.mesh = mesh;\n      renderer.setMaterial(material);\n\n      // Add animation script\n      const animationScript = rootEntity.addComponent(AnimateScript);\n\n      // Add data GUI\n      const guiData = addDataGUI(material, animationScript);\n      animationScript.guiData = guiData;\n      animationScript.material = material;\n\n      // Run engine\n      engine.run();\n    });\n}\n\n/**\n * Add data GUI.\n */\nfunction addDataGUI(material: UnlitMaterial, animationScript: AnimateScript): any {\n  const gui = new dat.GUI();\n  const guiData = {\n    tilingX: 1,\n    tilingY: 1,\n    offsetX: 0,\n    offsetY: 0,\n    reset: function () {\n      guiData.tilingX = 1;\n      guiData.tilingY = 1;\n      guiData.offsetX = 0;\n      guiData.offsetY = 0;\n      material.tilingOffset.setValue(1, 1, 0, 0);\n    },\n    pause: function () {\n      animationScript.enabled = false;\n    },\n    resume: function () {\n      animationScript.enabled = true;\n    }\n  };\n\n  gui\n    .add(guiData, \"tilingX\", 0, 10)\n    .onChange((value: number) => {\n      material.tilingOffset.x = value;\n    })\n    .listen();\n  gui\n    .add(guiData, \"tilingY\", 0, 10)\n    .onChange((value: number) => {\n      material.tilingOffset.y = value;\n    })\n    .listen();\n  gui\n    .add(guiData, \"offsetX\", 0, 1)\n    .onChange((value: number) => {\n      material.tilingOffset.z = value;\n    })\n    .listen();\n  gui\n    .add(guiData, \"offsetY\", 0, 1)\n    .onChange((value: number) => {\n      material.tilingOffset.w = value;\n    })\n    .listen();\n  gui.add(guiData, \"reset\").name(\"重置\");\n  gui.add(guiData, \"pause\").name(\"暂停动画\");\n  gui.add(guiData, \"resume\").name(\"继续动画\");\n\n  return guiData;\n}\n\n/**\n * Animation script.\n */\nclass AnimateScript extends Script {\n  guiData: any;\n\n  /**\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */\n  onUpdate(deltaTime: number): void {\n    const { material, guiData } = this;\n    material.tilingOffset.x = guiData.tilingX = ((guiData.tilingX - 1 + deltaTime * 0.001) % 9) + 1;\n    material.tilingOffset.y = guiData.tilingY = ((guiData.tilingY - 1 + deltaTime * 0.001) % 9) + 1;\n  }\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Tiling Offset\n * @category Material\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  RenderFace<span class=\"token punctuation\">,</span>\n  Script<span class=\"token punctuation\">,</span>\n  Texture2D<span class=\"token punctuation\">,</span>\n  UnlitMaterial<span class=\"token punctuation\">,</span>\n  Vector3<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Create engine object</span>\n  <span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  engine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Load texture</span>\n  engine<span class=\"token punctuation\">.</span>resourceManager\n    <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*Umw_RJGiZLYAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Create camera</span>\n      <span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      cameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Create plane</span>\n      <span class=\"token keyword\">const</span> entity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> renderer <span class=\"token operator\">=</span> entity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createPlane</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnlitMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      texture<span class=\"token punctuation\">.</span>anisoLevel <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span>\n      material<span class=\"token punctuation\">.</span>renderFace <span class=\"token operator\">=</span> RenderFace<span class=\"token punctuation\">.</span>Double<span class=\"token punctuation\">;</span>\n      material<span class=\"token punctuation\">.</span>baseTexture <span class=\"token operator\">=</span> texture<span class=\"token punctuation\">;</span>\n\n      renderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> mesh<span class=\"token punctuation\">;</span>\n      renderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Add animation script</span>\n      <span class=\"token keyword\">const</span> animationScript <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>AnimateScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Add data GUI</span>\n      <span class=\"token keyword\">const</span> guiData <span class=\"token operator\">=</span> <span class=\"token function\">addDataGUI</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">,</span> animationScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      animationScript<span class=\"token punctuation\">.</span>guiData <span class=\"token operator\">=</span> guiData<span class=\"token punctuation\">;</span>\n      animationScript<span class=\"token punctuation\">.</span>material <span class=\"token operator\">=</span> material<span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Run engine</span>\n      engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * Add data GUI.\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">addDataGUI</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">material<span class=\"token operator\">:</span> UnlitMaterial<span class=\"token punctuation\">,</span> animationScript<span class=\"token operator\">:</span> AnimateScript</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> any <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> guiData <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    tilingX<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    tilingY<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    offsetX<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    offsetY<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">reset</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      guiData<span class=\"token punctuation\">.</span>tilingX <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n      guiData<span class=\"token punctuation\">.</span>tilingY <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n      guiData<span class=\"token punctuation\">.</span>offsetX <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      guiData<span class=\"token punctuation\">.</span>offsetY <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      material<span class=\"token punctuation\">.</span>tilingOffset<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">pause</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      animationScript<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">resume</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      animationScript<span class=\"token punctuation\">.</span>enabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  gui\n    <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"tilingX\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      material<span class=\"token punctuation\">.</span>tilingOffset<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui\n    <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"tilingY\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      material<span class=\"token punctuation\">.</span>tilingOffset<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui\n    <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"offsetX\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      material<span class=\"token punctuation\">.</span>tilingOffset<span class=\"token punctuation\">.</span>z <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui\n    <span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"offsetY\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      material<span class=\"token punctuation\">.</span>tilingOffset<span class=\"token punctuation\">.</span>w <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"reset\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"重置\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"pause\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"暂停动画\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">,</span> <span class=\"token string\">\"resume\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"继续动画\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> guiData<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * Animation script.\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">AnimateScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  guiData<span class=\"token operator\">:</span> any<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/**\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */</span>\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span>deltaTime<span class=\"token operator\">:</span> number<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> material<span class=\"token punctuation\">,</span> guiData <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    material<span class=\"token punctuation\">.</span>tilingOffset<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> guiData<span class=\"token punctuation\">.</span>tilingX <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">.</span>tilingX <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> deltaTime <span class=\"token operator\">*</span> <span class=\"token number\">0.001</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    material<span class=\"token punctuation\">.</span>tilingOffset<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> guiData<span class=\"token punctuation\">.</span>tilingY <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>guiData<span class=\"token punctuation\">.</span>tilingY <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> deltaTime <span class=\"token operator\">*</span> <span class=\"token number\">0.001</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  init();\n\n  function init() {\n    // Create engine object.\n    var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n    engine.canvas.resizeByClientSize(); // Create rootEntity.\n\n    var rootEntity = engine.sceneManager.activeScene.createRootEntity(); // Create camera.\n\n    var cameraEntity = rootEntity.createChild(\"Camera\");\n    cameraEntity.transform.setPosition(0, 0, 15);\n    cameraEntity.addComponent(_oasisEngine.Camera);\n    cameraEntity.addComponent(_controls.OrbitControl); // Load texture and create sprite sheet animation.\n\n    engine.resourceManager.load({\n      url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*zcZVTKry5R4AAAAAAAAAAAAAARQnAQ\",\n      type: _oasisEngine.AssetType.Texture2D\n    }).then(function (texture) {\n      var spriteEntity = rootEntity.createChild(\"Sprite\");\n      spriteEntity.addComponent(_oasisEngine.SpriteRenderer).sprite = new _oasisEngine.Sprite(engine, texture);\n      spriteEntity.addComponent(FrameSpriteScript);\n    }); // Run engine.\n\n    engine.run();\n  }\n  /**\n   * Script for sprite sheet animation.\n   */\n\n\n  var FrameSpriteScript = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(FrameSpriteScript, _Script);\n\n    function FrameSpriteScript() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _Script.call.apply(_Script, [this].concat(args)) || this;\n      _this._regions = void 0;\n      _this._reciprocalSliceWidth = void 0;\n      _this._reciprocalSliceHeight = void 0;\n      _this._totalFrames = void 0;\n      _this._frameInterval = 100;\n      _this._sprite = void 0;\n      _this._curFrameIndex = void 0;\n      _this._cumulativeTime = 0;\n      return _this;\n    }\n\n    var _proto = FrameSpriteScript.prototype;\n\n    _proto.onAwake = function onAwake() {\n      // Sprite sheet animation pictures have 4 rows and 4 columns, if you modify the picture, please modify this.\n      var row = 4;\n      var col = 4;\n      var reciprocalSliceWidth = 1 / row;\n      var reciprocalSliceHeight = 1 / col;\n      var regions = new Array();\n\n      for (var i = 0; i < col; i++) {\n        var y = i * reciprocalSliceHeight;\n\n        for (var j = 0; j < row; j++) {\n          regions.push(new _oasisEngine.Vector2(j * reciprocalSliceWidth, y));\n        }\n      }\n\n      this._sprite = this.entity.getComponent(_oasisEngine.SpriteRenderer).sprite;\n      this._regions = regions;\n      this._reciprocalSliceWidth = reciprocalSliceWidth;\n      this._reciprocalSliceHeight = reciprocalSliceHeight;\n      this._totalFrames = row * col;\n\n      this._setFrameIndex(0);\n    };\n\n    _proto.onUpdate = function onUpdate(deltaTime) {\n      if (this._totalFrames <= 0) {\n        return;\n      }\n\n      var frameInterval = this._frameInterval;\n      this._cumulativeTime += deltaTime;\n\n      if (this._cumulativeTime >= frameInterval) {\n        // Need update frameIndex.\n        var addFrameCount = Math.floor(this._cumulativeTime / frameInterval);\n        this._cumulativeTime -= addFrameCount * frameInterval;\n\n        this._setFrameIndex((this._curFrameIndex + addFrameCount) % this._totalFrames);\n      }\n    };\n\n    _proto._setFrameIndex = function _setFrameIndex(frameIndex) {\n      if (this._curFrameIndex !== frameIndex) {\n        this._curFrameIndex = frameIndex;\n        var frameInfo = this._regions[frameIndex];\n        var region = this._sprite.region;\n        region.setValue(frameInfo.x, frameInfo.y, this._reciprocalSliceWidth, this._reciprocalSliceHeight);\n        this._sprite.region = region;\n      }\n    };\n\n    return FrameSpriteScript;\n  }(_oasisEngine.Script);\n});"},"name":"sprite-sheetAnimation","title":"Sprite SheetAnimation","category":"2D","id":"2b860370-8414-5413-b4bb-f3ef4888946d","sourceCode":"/**\n * @title Sprite SheetAnimation\n * @category 2D\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport { AssetType, Camera, Script, Sprite, SpriteRenderer, Texture2D, Vector2, WebGLEngine } from \"oasis-engine\";\n\ninit();\n\nfunction init(): void {\n  // Create engine object.\n  const engine = new WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n\n  // Create rootEntity.\n  const rootEntity = engine.sceneManager.activeScene.createRootEntity();\n\n  // Create camera.\n  const cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 0, 15);\n  cameraEntity.addComponent(Camera);\n  cameraEntity.addComponent(OrbitControl);\n\n  // Load texture and create sprite sheet animation.\n  engine.resourceManager\n    .load<Texture2D>({\n      url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*zcZVTKry5R4AAAAAAAAAAAAAARQnAQ\",\n      type: AssetType.Texture2D\n    })\n    .then((texture) => {\n      const spriteEntity = rootEntity.createChild(\"Sprite\");\n      spriteEntity.addComponent(SpriteRenderer).sprite = new Sprite(engine, texture);\n      spriteEntity.addComponent(FrameSpriteScript);\n    });\n\n  // Run engine.\n  engine.run();\n}\n\n/**\n * Script for sprite sheet animation.\n */\nclass FrameSpriteScript extends Script {\n  /** Offsets of sprite sheet animation. */\n  private _regions: Vector2[];\n  /** Reciprocal Of SliceWidth. */\n  private _reciprocalSliceWidth: number;\n  /** Reciprocal Of SliceHeight. */\n  private _reciprocalSliceHeight: number;\n  /** Total frames. */\n  private _totalFrames: number;\n  /** Frame interval time, the unit of time is ms. */\n  private _frameInterval: number = 100;\n\n  private _sprite: Sprite;\n  private _curFrameIndex: number;\n  private _cumulativeTime: number = 0;\n\n  onAwake(): void {\n    // Sprite sheet animation pictures have 4 rows and 4 columns, if you modify the picture, please modify this.\n    const row = 4;\n    const col = 4;\n    const reciprocalSliceWidth = 1 / row;\n    const reciprocalSliceHeight = 1 / col;\n    const regions = new Array<Vector2>();\n    for (let i = 0; i < col; i++) {\n      const y = i * reciprocalSliceHeight;\n      for (let j = 0; j < row; j++) {\n        regions.push(new Vector2(j * reciprocalSliceWidth, y));\n      }\n    }\n\n    this._sprite = this.entity.getComponent(SpriteRenderer).sprite;\n    this._regions = regions;\n    this._reciprocalSliceWidth = reciprocalSliceWidth;\n    this._reciprocalSliceHeight = reciprocalSliceHeight;\n    this._totalFrames = row * col;\n    this._setFrameIndex(0);\n  }\n\n  onUpdate(deltaTime: number): void {\n    if (this._totalFrames <= 0) {\n      return;\n    }\n    const frameInterval = this._frameInterval;\n    this._cumulativeTime += deltaTime;\n\n    if (this._cumulativeTime >= frameInterval) {\n      // Need update frameIndex.\n      const addFrameCount = Math.floor(this._cumulativeTime / frameInterval);\n      this._cumulativeTime -= addFrameCount * frameInterval;\n      this._setFrameIndex((this._curFrameIndex + addFrameCount) % this._totalFrames);\n    }\n  }\n\n  private _setFrameIndex(frameIndex: number): void {\n    if (this._curFrameIndex !== frameIndex) {\n      this._curFrameIndex = frameIndex;\n      const frameInfo = this._regions[frameIndex];\n      const region = this._sprite.region;\n      region.setValue(frameInfo.x, frameInfo.y, this._reciprocalSliceWidth, this._reciprocalSliceHeight);\n      this._sprite.region = region;\n    }\n  }\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Sprite SheetAnimation\n * @category 2D\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AssetType<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> Script<span class=\"token punctuation\">,</span> Sprite<span class=\"token punctuation\">,</span> SpriteRenderer<span class=\"token punctuation\">,</span> Texture2D<span class=\"token punctuation\">,</span> Vector2<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Create engine object.</span>\n  <span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  engine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create rootEntity.</span>\n  <span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create camera.</span>\n  <span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Load texture and create sprite sheet animation.</span>\n  engine<span class=\"token punctuation\">.</span>resourceManager\n    <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*zcZVTKry5R4AAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> spriteEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sprite\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>sprite <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Sprite</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      spriteEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>FrameSpriteScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Run engine.</span>\n  engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * Script for sprite sheet animation.\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">FrameSpriteScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/** Offsets of sprite sheet animation. */</span>\n  <span class=\"token keyword\">private</span> _regions<span class=\"token operator\">:</span> Vector2<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/** Reciprocal Of SliceWidth. */</span>\n  <span class=\"token keyword\">private</span> _reciprocalSliceWidth<span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/** Reciprocal Of SliceHeight. */</span>\n  <span class=\"token keyword\">private</span> _reciprocalSliceHeight<span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/** Total frames. */</span>\n  <span class=\"token keyword\">private</span> _totalFrames<span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/** Frame interval time, the unit of time is ms. */</span>\n  <span class=\"token keyword\">private</span> _frameInterval<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">private</span> _sprite<span class=\"token operator\">:</span> Sprite<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> _curFrameIndex<span class=\"token operator\">:</span> number<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> _cumulativeTime<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">onAwake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Sprite sheet animation pictures have 4 rows and 4 columns, if you modify the picture, please modify this.</span>\n    <span class=\"token keyword\">const</span> row <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> col <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> reciprocalSliceWidth <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">/</span> row<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> reciprocalSliceHeight <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">/</span> col<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> regions <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token operator\">&lt;</span>Vector2<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> col<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> y <span class=\"token operator\">=</span> i <span class=\"token operator\">*</span> reciprocalSliceHeight<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> row<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        regions<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector2</span><span class=\"token punctuation\">(</span>j <span class=\"token operator\">*</span> reciprocalSliceWidth<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_sprite <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>SpriteRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>sprite<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_regions <span class=\"token operator\">=</span> regions<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_reciprocalSliceWidth <span class=\"token operator\">=</span> reciprocalSliceWidth<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_reciprocalSliceHeight <span class=\"token operator\">=</span> reciprocalSliceHeight<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_totalFrames <span class=\"token operator\">=</span> row <span class=\"token operator\">*</span> col<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_setFrameIndex</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span>deltaTime<span class=\"token operator\">:</span> number<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_totalFrames <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">const</span> frameInterval <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_frameInterval<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_cumulativeTime <span class=\"token operator\">+=</span> deltaTime<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_cumulativeTime <span class=\"token operator\">>=</span> frameInterval<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Need update frameIndex.</span>\n      <span class=\"token keyword\">const</span> addFrameCount <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_cumulativeTime <span class=\"token operator\">/</span> frameInterval<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_cumulativeTime <span class=\"token operator\">-=</span> addFrameCount <span class=\"token operator\">*</span> frameInterval<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_setFrameIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_curFrameIndex <span class=\"token operator\">+</span> addFrameCount<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_totalFrames<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">private</span> <span class=\"token function\">_setFrameIndex</span><span class=\"token punctuation\">(</span>frameIndex<span class=\"token operator\">:</span> number<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_curFrameIndex <span class=\"token operator\">!==</span> frameIndex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_curFrameIndex <span class=\"token operator\">=</span> frameIndex<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> frameInfo <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_regions<span class=\"token punctuation\">[</span>frameIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> region <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_sprite<span class=\"token punctuation\">.</span>region<span class=\"token punctuation\">;</span>\n      region<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>frameInfo<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> frameInfo<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_reciprocalSliceWidth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_reciprocalSliceHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_sprite<span class=\"token punctuation\">.</span>region <span class=\"token operator\">=</span> region<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, _oasisEngine) {\n  \"use strict\";\n\n  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  init();\n  /**\n   * Init demo.\n   */\n\n  function init() {\n    // Create engine\n    var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n    engine.canvas.resizeByClientSize(); // Create yellow duck\n\n    engine.resourceManager.load(\"https://gw.alipayobjects.com/os/OasisHub/267000040/9994/%25E5%25BD%2592%25E6%25A1%25A3.gltf\").then(function (gltf) {\n      // Create root entity.\n      var rootEntity = engine.sceneManager.activeScene.createRootEntity(); // Create camera.\n\n      var cameraEntity = rootEntity.createChild(\"CameraEntity\");\n      cameraEntity.transform.setPosition(0, 3, 9);\n      cameraEntity.addComponent(_oasisEngine.Camera);\n      cameraEntity.addComponent(_controls.OrbitControl); // Create light.\n\n      var lightEntity = rootEntity.createChild(\"LightEntity\");\n      var directLight = lightEntity.addComponent(_oasisEngine.DirectLight);\n      directLight.color = new _oasisEngine.Color(0.8, 0.8, 0.8); // Create three duck modles, set rotation and position.\n\n      var duck0 = gltf.defaultSceneRoot;\n      duck0.transform.rotate(0, -45, 0);\n      var duck1 = duck0.clone();\n      var duck2 = duck0.clone();\n      duck1.transform.setPosition(-3, 0, 0);\n      duck2.transform.setPosition(3, 0, 0); // Create root entity and add transform script.\n\n      var script = rootEntity.addComponent(TransformScript);\n      script.duck0 = duck0;\n      script.duck1 = duck1;\n      script.duck2 = duck2; // Add ducks to scene.\n\n      rootEntity.addChild(duck0);\n      rootEntity.addChild(duck1);\n      rootEntity.addChild(duck2); //Run engine.\n\n      engine.run();\n    });\n  }\n  /**\n   * Script for updating ducks position, rotation, and scale.\n   */\n\n\n  var TransformScript = /*#__PURE__*/function (_Script) {\n    _inheritsLoose(TransformScript, _Script);\n\n    function TransformScript() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _Script.call.apply(_Script, [this].concat(args)) || this;\n      _this.duck0 = void 0;\n      _this.duck1 = void 0;\n      _this.duck2 = void 0;\n      _this._totalTime = 0;\n      return _this;\n    }\n\n    var _proto = TransformScript.prototype;\n\n    /**\n     * @override\n     * The main loop, called frame by frame.\n     * @param deltaTime - The deltaTime when the script update.\n     */\n    _proto.onUpdate = function onUpdate(deltaTime) {\n      this._totalTime += deltaTime;\n      var sinFactor = Math.sin(this._totalTime / 500); // Update duck0's position.\n\n      var positionFactor = Math.max(sinFactor, 0);\n      this.duck0.transform.setPosition(0, positionFactor, 0); // Update duck1's roatation.\n\n      var rotateFactor = this._totalTime * 0.1;\n      this.duck1.transform.setRotation(0, rotateFactor, 0); // Update duck2's scale.\n\n      var scaleFactor = (sinFactor + 1.0) * 0.01;\n      this.duck2.transform.setScale(scaleFactor, scaleFactor, scaleFactor);\n    };\n\n    return TransformScript;\n  }(_oasisEngine.Script);\n});"},"name":"transform-basic","title":"Transform Basic","category":"Basic","id":"2d0b24b5-59cb-5db5-ab3a-e9d022e9903d","sourceCode":"/**\n * @title Transform Basic\n * @category Basic\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport { Camera, Color, DirectLight, Entity, GLTFResource, Script, WebGLEngine } from \"oasis-engine\";\n\ninit();\n\n/**\n * Init demo.\n */\nfunction init(): void {\n  // Create engine\n  const engine = new WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n\n  // Create yellow duck\n  engine.resourceManager\n    .load<GLTFResource>(\"https://gw.alipayobjects.com/os/OasisHub/267000040/9994/%25E5%25BD%2592%25E6%25A1%25A3.gltf\")\n    .then((gltf) => {\n      // Create root entity.\n      const rootEntity = engine.sceneManager.activeScene.createRootEntity();\n\n      // Create camera.\n      const cameraEntity = rootEntity.createChild(\"CameraEntity\");\n      cameraEntity.transform.setPosition(0, 3, 9);\n      cameraEntity.addComponent(Camera);\n      cameraEntity.addComponent(OrbitControl);\n\n      // Create light.\n      const lightEntity = rootEntity.createChild(\"LightEntity\");\n      const directLight = lightEntity.addComponent(DirectLight);\n      directLight.color = new Color(0.8, 0.8, 0.8);\n\n      // Create three duck modles, set rotation and position.\n      const duck0 = gltf.defaultSceneRoot;\n      duck0.transform.rotate(0, -45, 0);\n\n      const duck1 = duck0.clone();\n      const duck2 = duck0.clone();\n      duck1.transform.setPosition(-3, 0, 0);\n      duck2.transform.setPosition(3, 0, 0);\n\n      // Create root entity and add transform script.\n      const script = rootEntity.addComponent(TransformScript);\n      script.duck0 = duck0;\n      script.duck1 = duck1;\n      script.duck2 = duck2;\n\n      // Add ducks to scene.\n      rootEntity.addChild(duck0);\n      rootEntity.addChild(duck1);\n      rootEntity.addChild(duck2);\n\n      //Run engine.\n      engine.run();\n    });\n}\n\n/**\n * Script for updating ducks position, rotation, and scale.\n */\nclass TransformScript extends Script {\n  /** Duck0. */\n  duck0: Entity;\n  /** Duck1. */\n  duck1: Entity;\n  /** Duck2. */\n  duck2: Entity;\n\n  private _totalTime: number = 0;\n\n  /**\n   * @override\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */\n  onUpdate(deltaTime: number): void {\n    this._totalTime += deltaTime;\n    const sinFactor = Math.sin(this._totalTime / 500);\n\n    // Update duck0's position.\n    const positionFactor = Math.max(sinFactor, 0);\n    this.duck0.transform.setPosition(0, positionFactor, 0);\n\n    // Update duck1's roatation.\n    const rotateFactor = this._totalTime * 0.1;\n    this.duck1.transform.setRotation(0, rotateFactor, 0);\n\n    // Update duck2's scale.\n    const scaleFactor = (sinFactor + 1.0) * 0.01;\n    this.duck2.transform.setScale(scaleFactor, scaleFactor, scaleFactor);\n  }\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Transform Basic\n * @category Basic\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Camera<span class=\"token punctuation\">,</span> Color<span class=\"token punctuation\">,</span> DirectLight<span class=\"token punctuation\">,</span> Entity<span class=\"token punctuation\">,</span> GLTFResource<span class=\"token punctuation\">,</span> Script<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Init demo.\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Create engine</span>\n  <span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  engine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create yellow duck</span>\n  engine<span class=\"token punctuation\">.</span>resourceManager\n    <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>GLTFResource<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://gw.alipayobjects.com/os/OasisHub/267000040/9994/%25E5%25BD%2592%25E6%25A1%25A3.gltf\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">gltf</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Create root entity.</span>\n      <span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Create camera.</span>\n      <span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CameraEntity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      cameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      cameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Create light.</span>\n      <span class=\"token keyword\">const</span> lightEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"LightEntity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> directLight <span class=\"token operator\">=</span> lightEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>DirectLight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      directLight<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Create three duck modles, set rotation and position.</span>\n      <span class=\"token keyword\">const</span> duck0 <span class=\"token operator\">=</span> gltf<span class=\"token punctuation\">.</span>defaultSceneRoot<span class=\"token punctuation\">;</span>\n      duck0<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">const</span> duck1 <span class=\"token operator\">=</span> duck0<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> duck2 <span class=\"token operator\">=</span> duck0<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      duck1<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      duck2<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Create root entity and add transform script.</span>\n      <span class=\"token keyword\">const</span> script <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>TransformScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      script<span class=\"token punctuation\">.</span>duck0 <span class=\"token operator\">=</span> duck0<span class=\"token punctuation\">;</span>\n      script<span class=\"token punctuation\">.</span>duck1 <span class=\"token operator\">=</span> duck1<span class=\"token punctuation\">;</span>\n      script<span class=\"token punctuation\">.</span>duck2 <span class=\"token operator\">=</span> duck2<span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Add ducks to scene.</span>\n      rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>duck0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>duck1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>duck2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">//Run engine.</span>\n      engine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * Script for updating ducks position, rotation, and scale.\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">TransformScript</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Script</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/** Duck0. */</span>\n  duck0<span class=\"token operator\">:</span> Entity<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/** Duck1. */</span>\n  duck1<span class=\"token operator\">:</span> Entity<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/** Duck2. */</span>\n  duck2<span class=\"token operator\">:</span> Entity<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">private</span> _totalTime<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/**\n   * @override\n   * The main loop, called frame by frame.\n   * @param deltaTime - The deltaTime when the script update.\n   */</span>\n  <span class=\"token function\">onUpdate</span><span class=\"token punctuation\">(</span>deltaTime<span class=\"token operator\">:</span> number<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_totalTime <span class=\"token operator\">+=</span> deltaTime<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> sinFactor <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_totalTime <span class=\"token operator\">/</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Update duck0's position.</span>\n    <span class=\"token keyword\">const</span> positionFactor <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>sinFactor<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>duck0<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> positionFactor<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Update duck1's roatation.</span>\n    <span class=\"token keyword\">const</span> rotateFactor <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>_totalTime <span class=\"token operator\">*</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>duck1<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setRotation</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> rotateFactor<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Update duck2's scale.</span>\n    <span class=\"token keyword\">const</span> scaleFactor <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>sinFactor <span class=\"token operator\">+</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>duck2<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span>scaleFactor<span class=\"token punctuation\">,</span> scaleFactor<span class=\"token punctuation\">,</span> scaleFactor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title Unlit Material\n   * @category Material\n   */\n  var gui = new dat.GUI(); // Create engine object\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // Create camera\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.position = new _oasisEngine.Vector3(0, 0, 5);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl);\n  engine.run();\n  engine.resourceManager.load(\"https://gw.alipayobjects.com/os/bmw-prod/8d36415b-5905-461f-9336-68a23d41518e.gltf\").then(function (gltf) {\n    var materials = gltf.materials,\n        animations = gltf.animations,\n        defaultSceneRoot = gltf.defaultSceneRoot;\n    rootEntity.addChild(defaultSceneRoot);\n    var animator = defaultSceneRoot.getComponent(_oasisEngine.Animation);\n    animator.playAnimationClip(animations[0].name);\n    addGUI(materials);\n  });\n\n  function addGUI(materials) {\n    var state = {\n      baseColor: [255, 255, 255]\n    };\n    gui.addColor(state, \"baseColor\").onChange(function (v) {\n      materials.forEach(function (material) {\n        material.baseColor.setValue(v[0] / 255, v[1] / 255, v[2] / 255, 1);\n      });\n    });\n  }\n});"},"name":"unlit-material","title":"Unlit Material","category":"Material","id":"40d2c376-1221-5f61-86b3-561c59624613","sourceCode":"/**\n * @title Unlit Material\n * @category Material\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\nimport { Animation, Camera, GLTFResource, UnlitMaterial, Vector3, WebGLEngine } from \"oasis-engine\";\nconst gui = new dat.GUI();\n\n// Create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// Create camera\nconst cameraEntity = rootEntity.createChild(\"Camera\");\ncameraEntity.transform.position = new Vector3(0, 0, 5);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\nengine.run();\n\nengine.resourceManager\n  .load<GLTFResource>(\"https://gw.alipayobjects.com/os/bmw-prod/8d36415b-5905-461f-9336-68a23d41518e.gltf\")\n  .then((gltf) => {\n    const { materials, animations, defaultSceneRoot } = gltf;\n    rootEntity.addChild(defaultSceneRoot);\n\n    const animator = defaultSceneRoot.getComponent(Animation);\n    animator.playAnimationClip(animations[0].name);\n    addGUI(materials as UnlitMaterial[]);\n  });\n\nfunction addGUI(materials: UnlitMaterial[]) {\n  const state = {\n    baseColor: [255, 255, 255]\n  };\n\n  gui.addColor(state, \"baseColor\").onChange((v) => {\n    materials.forEach((material) => {\n      material.baseColor.setValue(v[0] / 255, v[1] / 255, v[2] / 255, 1);\n    });\n  });\n}\n","formatedCode":"<span class=\"token comment\">/**\n * @title Unlit Material\n * @category Material\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Animation<span class=\"token punctuation\">,</span> Camera<span class=\"token punctuation\">,</span> GLTFResource<span class=\"token punctuation\">,</span> UnlitMaterial<span class=\"token punctuation\">,</span> Vector3<span class=\"token punctuation\">,</span> WebGLEngine <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>GLTFResource<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://gw.alipayobjects.com/os/bmw-prod/8d36415b-5905-461f-9336-68a23d41518e.gltf\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">gltf</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> materials<span class=\"token punctuation\">,</span> animations<span class=\"token punctuation\">,</span> defaultSceneRoot <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> gltf<span class=\"token punctuation\">;</span>\n    rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addChild</span><span class=\"token punctuation\">(</span>defaultSceneRoot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> animator <span class=\"token operator\">=</span> defaultSceneRoot<span class=\"token punctuation\">.</span><span class=\"token function\">getComponent</span><span class=\"token punctuation\">(</span>Animation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    animator<span class=\"token punctuation\">.</span><span class=\"token function\">playAnimationClip</span><span class=\"token punctuation\">(</span>animations<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addGUI</span><span class=\"token punctuation\">(</span>materials <span class=\"token keyword\">as</span> UnlitMaterial<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">addGUI</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">materials<span class=\"token operator\">:</span> UnlitMaterial<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    baseColor<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">addColor</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"baseColor\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    materials<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">material</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      material<span class=\"token punctuation\">.</span>baseColor<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n"},{"internal":{"content":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"@oasis-engine/controls\", \"dat.gui\", \"oasis-engine\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(require(\"@oasis-engine/controls\"), require(\"dat.gui\"), require(\"oasis-engine\"));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(global[\"@oasisEngine/controls\"], global.dat, global.oasisEngine);\n    global.index = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (_controls, dat, _oasisEngine) {\n  \"use strict\";\n\n  dat = _interopRequireWildcard(dat);\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  /**\n   * @title Wrap Mode\n   * @category Texture\n   */\n  var gui = new dat.GUI(); // Create engine object\n\n  var engine = new _oasisEngine.WebGLEngine(\"canvas\");\n  engine.canvas.resizeByClientSize();\n  var scene = engine.sceneManager.activeScene;\n  var rootEntity = scene.createRootEntity(); // Create camera\n\n  var cameraEntity = rootEntity.createChild(\"Camera\");\n  cameraEntity.transform.setPosition(0, 0, 5);\n  cameraEntity.addComponent(_oasisEngine.Camera);\n  cameraEntity.addComponent(_controls.OrbitControl); // Create Plane\n\n  var mesh = _oasisEngine.PrimitiveMesh.createPlane(engine, 2, 2);\n\n  var material = new _oasisEngine.UnlitMaterial(engine);\n  material.tilingOffset.x = 2;\n  material.tilingOffset.y = 2;\n  material.isTransparent = true;\n  material.renderState.rasterState.cullMode = _oasisEngine.CullMode.Off;\n  var planeEntity = rootEntity.createChild(\"plane\");\n  var planeRenderer = planeEntity.addComponent(_oasisEngine.MeshRenderer);\n  planeRenderer.mesh = mesh;\n  planeRenderer.setMaterial(material);\n  engine.resourceManager.load({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*rO8wTYuzpAIAAAAAAAAAAAAAARQnAQ\",\n    type: _oasisEngine.AssetType.Texture2D\n  }).then(function (texture) {\n    material.baseTexture = texture;\n    addGUI(texture);\n  });\n\n  function addGUI(texture) {\n    var _wrapModeMap;\n\n    var wrapModeMap = (_wrapModeMap = {}, _wrapModeMap[_oasisEngine.TextureWrapMode.Clamp] = \"Clamp\", _wrapModeMap[_oasisEngine.TextureWrapMode.Repeat] = \"Repeat\", _wrapModeMap[_oasisEngine.TextureWrapMode.Mirror] = \"Mirror\", _wrapModeMap);\n    var state = {\n      wrapMode: wrapModeMap[texture.wrapModeU]\n    };\n    gui.add(state, \"wrapMode\", Object.values(wrapModeMap)).onChange(function (v) {\n      for (var key in wrapModeMap) {\n        var value = wrapModeMap[key];\n\n        if (v === value) {\n          texture.wrapModeU = Number(key);\n          texture.wrapModeV = Number(key);\n        }\n      }\n    });\n  }\n\n  engine.run();\n});"},"name":"wrap-mode","title":"Wrap Mode","category":"Texture","id":"95e3fb65-74ca-587c-9800-dbf3f46d820b","sourceCode":"/**\n * @title Wrap Mode\n * @category Texture\n */\nimport { OrbitControl } from \"@oasis-engine/controls\";\nimport * as dat from \"dat.gui\";\nimport {\n  AssetType,\n  Camera,\n  CullMode,\n  MeshRenderer,\n  PrimitiveMesh,\n  Texture2D,\n  TextureFilterMode,\n  TextureWrapMode,\n  UnlitMaterial,\n  WebGLEngine\n} from \"oasis-engine\";\nconst gui = new dat.GUI();\n\n// Create engine object\nconst engine = new WebGLEngine(\"canvas\");\nengine.canvas.resizeByClientSize();\n\nconst scene = engine.sceneManager.activeScene;\nconst rootEntity = scene.createRootEntity();\n\n// Create camera\nconst cameraEntity = rootEntity.createChild(\"Camera\");\ncameraEntity.transform.setPosition(0, 0, 5);\ncameraEntity.addComponent(Camera);\ncameraEntity.addComponent(OrbitControl);\n\n// Create Plane\nconst mesh = PrimitiveMesh.createPlane(engine, 2, 2);\nconst material = new UnlitMaterial(engine);\nmaterial.tilingOffset.x = 2;\nmaterial.tilingOffset.y = 2;\nmaterial.isTransparent = true;\nmaterial.renderState.rasterState.cullMode = CullMode.Off;\nconst planeEntity = rootEntity.createChild(\"plane\");\nconst planeRenderer = planeEntity.addComponent(MeshRenderer);\nplaneRenderer.mesh = mesh;\nplaneRenderer.setMaterial(material);\n\nengine.resourceManager\n  .load<Texture2D>({\n    url: \"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*rO8wTYuzpAIAAAAAAAAAAAAAARQnAQ\",\n    type: AssetType.Texture2D\n  })\n  .then((texture) => {\n    material.baseTexture = texture;\n    addGUI(texture);\n  });\n\nfunction addGUI(texture: Texture2D) {\n  const wrapModeMap: Record<TextureFilterMode, string> = {\n    [TextureWrapMode.Clamp]: \"Clamp\",\n    [TextureWrapMode.Repeat]: \"Repeat\",\n    [TextureWrapMode.Mirror]: \"Mirror\"\n  };\n  const state = {\n    wrapMode: wrapModeMap[texture.wrapModeU]\n  };\n  gui.add(state, \"wrapMode\", Object.values(wrapModeMap)).onChange((v) => {\n    for (let key in wrapModeMap) {\n      const value = wrapModeMap[key];\n      if (v === value) {\n        texture.wrapModeU = Number(key);\n        texture.wrapModeV = Number(key);\n      }\n    }\n  });\n}\n\nengine.run();\n","formatedCode":"<span class=\"token comment\">/**\n * @title Wrap Mode\n * @category Texture\n */</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OrbitControl <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@oasis-engine/controls\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> dat <span class=\"token keyword\">from</span> <span class=\"token string\">\"dat.gui\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  AssetType<span class=\"token punctuation\">,</span>\n  Camera<span class=\"token punctuation\">,</span>\n  CullMode<span class=\"token punctuation\">,</span>\n  MeshRenderer<span class=\"token punctuation\">,</span>\n  PrimitiveMesh<span class=\"token punctuation\">,</span>\n  Texture2D<span class=\"token punctuation\">,</span>\n  TextureFilterMode<span class=\"token punctuation\">,</span>\n  TextureWrapMode<span class=\"token punctuation\">,</span>\n  UnlitMaterial<span class=\"token punctuation\">,</span>\n  WebGLEngine\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"oasis-engine\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> gui <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dat<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create engine object</span>\n<span class=\"token keyword\">const</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebGLEngine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nengine<span class=\"token punctuation\">.</span>canvas<span class=\"token punctuation\">.</span><span class=\"token function\">resizeByClientSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> scene <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span>sceneManager<span class=\"token punctuation\">.</span>activeScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rootEntity <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">createRootEntity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create camera</span>\n<span class=\"token keyword\">const</span> cameraEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Camera\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>Camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncameraEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>OrbitControl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Create Plane</span>\n<span class=\"token keyword\">const</span> mesh <span class=\"token operator\">=</span> PrimitiveMesh<span class=\"token punctuation\">.</span><span class=\"token function\">createPlane</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnlitMaterial</span><span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmaterial<span class=\"token punctuation\">.</span>tilingOffset<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\nmaterial<span class=\"token punctuation\">.</span>tilingOffset<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\nmaterial<span class=\"token punctuation\">.</span>isTransparent <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\nmaterial<span class=\"token punctuation\">.</span>renderState<span class=\"token punctuation\">.</span>rasterState<span class=\"token punctuation\">.</span>cullMode <span class=\"token operator\">=</span> CullMode<span class=\"token punctuation\">.</span>Off<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> planeEntity <span class=\"token operator\">=</span> rootEntity<span class=\"token punctuation\">.</span><span class=\"token function\">createChild</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"plane\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> planeRenderer <span class=\"token operator\">=</span> planeEntity<span class=\"token punctuation\">.</span><span class=\"token function\">addComponent</span><span class=\"token punctuation\">(</span>MeshRenderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nplaneRenderer<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> mesh<span class=\"token punctuation\">;</span>\nplaneRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">setMaterial</span><span class=\"token punctuation\">(</span>material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nengine<span class=\"token punctuation\">.</span>resourceManager\n  <span class=\"token punctuation\">.</span>load<span class=\"token operator\">&lt;</span>Texture2D<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    url<span class=\"token operator\">:</span> <span class=\"token string\">\"https://gw.alipayobjects.com/mdn/rms_7c464e/afts/img/A*rO8wTYuzpAIAAAAAAAAAAAAAARQnAQ\"</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> AssetType<span class=\"token punctuation\">.</span>Texture2D\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    material<span class=\"token punctuation\">.</span>baseTexture <span class=\"token operator\">=</span> texture<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">addGUI</span><span class=\"token punctuation\">(</span>texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">addGUI</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">texture<span class=\"token operator\">:</span> Texture2D</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> wrapModeMap<span class=\"token operator\">:</span> Record<span class=\"token operator\">&lt;</span>TextureFilterMode<span class=\"token punctuation\">,</span> string<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span>TextureWrapMode<span class=\"token punctuation\">.</span>Clamp<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Clamp\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span>TextureWrapMode<span class=\"token punctuation\">.</span>Repeat<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Repeat\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span>TextureWrapMode<span class=\"token punctuation\">.</span>Mirror<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Mirror\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    wrapMode<span class=\"token operator\">:</span> wrapModeMap<span class=\"token punctuation\">[</span>texture<span class=\"token punctuation\">.</span>wrapModeU<span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  gui<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token string\">\"wrapMode\"</span><span class=\"token punctuation\">,</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span>wrapModeMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> key <span class=\"token keyword\">in</span> wrapModeMap<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> wrapModeMap<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>v <span class=\"token operator\">===</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        texture<span class=\"token punctuation\">.</span>wrapModeU <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        texture<span class=\"token punctuation\">.</span>wrapModeV <span class=\"token operator\">=</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nengine<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n"}]}},"pageContext":{}},"staticQueryHashes":[]}